/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1VIEWBASE_HPP
#define SCREEN1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/RadioButton.hpp>
#include <touchgfx/widgets/RadioButtonGroup.hpp>

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
    virtual void setupScreen();
    virtual void handleKeyEvent(uint8_t key);

    /*
     * Virtual Action Handlers
     */
    virtual void Update_Luminosity(int value)
    {
        // Override and implement this function in Screen1
    }

    virtual void Update_Freq(int value)
    {
        // Override and implement this function in Screen1
    }

    virtual void Update_Duty(int value)
    {
        // Override and implement this function in Screen1
    }

    virtual void Update_Mode_Reading_ON()
    {
        // Override and implement this function in Screen1
    }

    virtual void Update_Mode_Reading_OFF()
    {
        // Override and implement this function in Screen1
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Image image1;
    touchgfx::Container container1;
    touchgfx::Slider slider_strength;
    touchgfx::TextAreaWithOneWildcard textArea_strength_low;
    touchgfx::TextAreaWithOneWildcard textArea_strength_height;
    touchgfx::TextArea textArea3;
    touchgfx::Image image2;
    touchgfx::Container container1_1;
    touchgfx::Slider slider_speed;
    touchgfx::TextAreaWithOneWildcard textArea_speed_low;
    touchgfx::TextAreaWithOneWildcard textArea_speed_height;
    touchgfx::TextArea textArea3_1;
    touchgfx::Image image2_1;
    touchgfx::Slider slider_luminosity;
    touchgfx::TextArea textArea4;
    touchgfx::RadioButton radioButton1;
    touchgfx::RadioButtonGroup<1> radioButtonGroup1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA_STRENGTH_LOW_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textArea_strength_lowBuffer[TEXTAREA_STRENGTH_LOW_SIZE];
    static const uint16_t TEXTAREA_STRENGTH_HEIGHT_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textArea_strength_heightBuffer[TEXTAREA_STRENGTH_HEIGHT_SIZE];
    static const uint16_t TEXTAREA_SPEED_LOW_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textArea_speed_lowBuffer[TEXTAREA_SPEED_LOW_SIZE];
    static const uint16_t TEXTAREA_SPEED_HEIGHT_SIZE = 3;
    touchgfx::Unicode::UnicodeChar textArea_speed_heightBuffer[TEXTAREA_SPEED_HEIGHT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen1ViewBase, const touchgfx::Slider&, int> sliderValueChangedCallback;
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractButton&> radioButtonSelectedCallback;
    touchgfx::Callback<Screen1ViewBase, const touchgfx::AbstractButton&> radioButtonDeselectedCallback;

    /*
     * Callback Handler Declarations
     */
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);
    void radioButtonSelectedCallbackHandler(const touchgfx::AbstractButton& src);
    void radioButtonDeselectedCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCREEN1VIEWBASE_HPP
