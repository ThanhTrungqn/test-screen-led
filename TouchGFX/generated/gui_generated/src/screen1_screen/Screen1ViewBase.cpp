/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

Screen1ViewBase::Screen1ViewBase() :
    sliderValueChangedCallback(this, &Screen1ViewBase::sliderValueChangedCallbackHandler)
{

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BG_IMAGE_ID));

    container1.setPosition(137, 83, 82, 148);

    slider_strength.setXY(0, 4);
    slider_strength.setBitmaps(touchgfx::Bitmap(BITMAP_CUSTOM_SLIDER_SPEED_BG_ID), touchgfx::Bitmap(BITMAP_SLIDER_SPEED_FRONT_ID), touchgfx::Bitmap(BITMAP_CUSTOM_SLIDER_SPEED_BUTTON_ID));
    slider_strength.setupVerticalSlider(2, 3, 5, 0, 142);
    slider_strength.setValueRange(0, 50);
    slider_strength.setValue(0);
    slider_strength.setNewValueCallback(sliderValueChangedCallback);
    container1.add(slider_strength);

    textArea_strength_low.setXY(29, 77);
    textArea_strength_low.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea_strength_low.setLinespacing(0);
    Unicode::snprintf(textArea_strength_lowBuffer, TEXTAREA_STRENGTH_LOW_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID13).getText());
    textArea_strength_low.setWildcard(textArea_strength_lowBuffer);
    textArea_strength_low.resizeToCurrentText();
    textArea_strength_low.setTypedText(touchgfx::TypedText(T_SINGLEUSEID6));
    container1.add(textArea_strength_low);

    textArea_strength_height.setXY(6, 67);
    textArea_strength_height.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea_strength_height.setLinespacing(0);
    Unicode::snprintf(textArea_strength_heightBuffer, TEXTAREA_STRENGTH_HEIGHT_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID12).getText());
    textArea_strength_height.setWildcard(textArea_strength_heightBuffer);
    textArea_strength_height.resizeToCurrentText();
    textArea_strength_height.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));
    container1.add(textArea_strength_height);

    textArea3.setXY(6, 45);
    textArea3.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea3.setLinespacing(0);
    textArea3.setAlpha(219);
    textArea3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID4));
    container1.add(textArea3);

    image2.setXY(6, 24);
    image2.setBitmap(touchgfx::Bitmap(BITMAP_PLAY_IC_ID));
    container1.add(image2);

    container1_1.setPosition(30, 83, 81, 148);

    slider_speed.setXY(0, 3);
    slider_speed.setBitmaps(touchgfx::Bitmap(BITMAP_CUSTOM_SLIDER_SPEED_BG_ID), touchgfx::Bitmap(BITMAP_CUSTOM_SLIDER_SPEED_FRONT_ID), touchgfx::Bitmap(BITMAP_CUSTOM_SLIDER_SPEED_BUTTON_ID));
    slider_speed.setupVerticalSlider(0, 3, 5, 0, 143);
    slider_speed.setValueRange(0, 50);
    slider_speed.setValue(0);
    slider_speed.setNewValueCallback(sliderValueChangedCallback);
    container1_1.add(slider_speed);

    textArea_speed_low.setXY(29, 77);
    textArea_speed_low.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea_speed_low.setLinespacing(0);
    Unicode::snprintf(textArea_speed_lowBuffer, TEXTAREA_SPEED_LOW_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID11).getText());
    textArea_speed_low.setWildcard(textArea_speed_lowBuffer);
    textArea_speed_low.resizeToCurrentText();
    textArea_speed_low.setTypedText(touchgfx::TypedText(T_SINGLEUSEID7));
    container1_1.add(textArea_speed_low);

    textArea_speed_height.setXY(6, 67);
    textArea_speed_height.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea_speed_height.setLinespacing(0);
    Unicode::snprintf(textArea_speed_heightBuffer, TEXTAREA_SPEED_HEIGHT_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID10).getText());
    textArea_speed_height.setWildcard(textArea_speed_heightBuffer);
    textArea_speed_height.resizeToCurrentText();
    textArea_speed_height.setTypedText(touchgfx::TypedText(T_SINGLEUSEID8));
    container1_1.add(textArea_speed_height);

    textArea3_1.setXY(6, 45);
    textArea3_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea3_1.setLinespacing(0);
    textArea3_1.setAlpha(219);
    textArea3_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID9));
    container1_1.add(textArea3_1);

    image2_1.setXY(6, 24);
    image2_1.setBitmap(touchgfx::Bitmap(BITMAP_PLAY_IC_ID));
    container1_1.add(image2_1);

    slider1.setXY(29, 261);
    slider1.setBitmaps(touchgfx::Bitmap(BITMAP_CUSTOM_SLIDER_LUX_BG_ID), touchgfx::Bitmap(BITMAP_CUSTOM_SLIDER_LUX_FRONT_ID), touchgfx::Bitmap(BITMAP_CUSTOM_SLIDER_LUX_BUTTON_ID));
    slider1.setupHorizontalSlider(3, 0, 0, 0, 151);
    slider1.setValueRange(0, 100);
    slider1.setValue(31);

    textArea4.setXY(77, 32);
    textArea4.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea4.setLinespacing(0);
    textArea4.setTypedText(touchgfx::TypedText(T_SINGLEUSEID14));

    toggleButton1.setXY(29, 27);
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_CHECK_BUTTONS_CHECK_ROUND_MARK_INACTIVE_ID), touchgfx::Bitmap(BITMAP_DARK_CHECK_BUTTONS_CHECK_ROUND_MARK_ACTIVE_ID));

    add(image1);
    add(container1);
    add(container1_1);
    add(slider1);
    add(textArea4);
    add(toggleButton1);
}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &slider_strength)
    {
        //Interaction2
        //When slider_strength value changed execute C++ code
        //Execute C++ code
        memset(&textArea_strength_heightBuffer,0,TEXTAREA_STRENGTH_HEIGHT_SIZE);
        Unicode::snprintf(textArea_strength_heightBuffer, TEXTAREA_STRENGTH_HEIGHT_SIZE, "%d", (value - (value%10))/10 );
        textArea_strength_height.invalidate();
        
        memset(&textArea_strength_lowBuffer,0,TEXTAREA_STRENGTH_LOW_SIZE);
        Unicode::snprintf(textArea_strength_lowBuffer, TEXTAREA_STRENGTH_LOW_SIZE, "%d", (value%10));
        textArea_strength_low.invalidate();
    }
    else if (&src == &slider_speed)
    {
        //Interaction1
        //When slider_speed value changed execute C++ code
        //Execute C++ code
        memset(&textArea_speed_heightBuffer,0,TEXTAREA_SPEED_HEIGHT_SIZE);
        Unicode::snprintf(textArea_speed_heightBuffer, TEXTAREA_SPEED_HEIGHT_SIZE, "%d", (value - (value%10))/10 );
        textArea_speed_height.invalidate();
        
        memset(&textArea_speed_lowBuffer,0,TEXTAREA_SPEED_LOW_SIZE);
        Unicode::snprintf(textArea_speed_lowBuffer, TEXTAREA_SPEED_LOW_SIZE, "%d", (value%10));
        textArea_speed_low.invalidate();
    }
}
