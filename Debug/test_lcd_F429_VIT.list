
test_lcd_F429_VIT.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001c018  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003b68  0801c1c8  0801c1c8  0002c1c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000207e  0801fd30  0801fd30  0002fd30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 ExtFlashSection 00071d78  08021db0  08021db0  00031db0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000080  08093b28  08093b28  000a3b28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000000  08093ba8  08093ba8  000d5900  2**0
                  CONTENTS
  7 .ARM          00000008  08093ba8  08093ba8  000a3ba8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .preinit_array 00000000  08093bb0  08093bb0  000d5900  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000014  08093bb0  08093bb0  000a3bb0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  08093bc4  08093bc4  000a3bc4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         00000100  20000000  08093bcc  000b0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_Framebuffer 00025800  20000100  08093ccc  000b0100  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00001b6c  20025900  080b94cc  000d5900  2**2
                  ALLOC
 14 ._user_heap_stack 00000604  2002746c  080b94cc  000d746c  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000d5900  2**0
                  CONTENTS, READONLY
 16 .debug_info   0003c822  00000000  00000000  000d5930  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_abbrev 0000ace0  00000000  00000000  00112152  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_aranges 000029e8  00000000  00000000  0011ce38  2**3
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_ranges 00002510  00000000  00000000  0011f820  2**3
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_macro  0000cb52  00000000  00000000  00121d30  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_line   0002844b  00000000  00000000  0012e882  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .debug_str    000ed0f9  00000000  00000000  00156ccd  2**0
                  CONTENTS, READONLY, DEBUGGING
 23 .comment      000000fa  00000000  00000000  00243dc6  2**0
                  CONTENTS, READONLY
 24 .debug_frame  0000b1e4  00000000  00000000  00243ec0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20025900 	.word	0x20025900
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801c1b0 	.word	0x0801c1b0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20025904 	.word	0x20025904
 80001ec:	0801c1b0 	.word	0x0801c1b0

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b972 	b.w	800058c <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9e08      	ldr	r6, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	4688      	mov	r8, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14b      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4615      	mov	r5, r2
 80002d2:	d967      	bls.n	80003a4 <__udivmoddi4+0xe4>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b14a      	cbz	r2, 80002ee <__udivmoddi4+0x2e>
 80002da:	f1c2 0720 	rsb	r7, r2, #32
 80002de:	fa01 f302 	lsl.w	r3, r1, r2
 80002e2:	fa20 f707 	lsr.w	r7, r0, r7
 80002e6:	4095      	lsls	r5, r2
 80002e8:	ea47 0803 	orr.w	r8, r7, r3
 80002ec:	4094      	lsls	r4, r2
 80002ee:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80002f2:	0c23      	lsrs	r3, r4, #16
 80002f4:	fbb8 f7fe 	udiv	r7, r8, lr
 80002f8:	fa1f fc85 	uxth.w	ip, r5
 80002fc:	fb0e 8817 	mls	r8, lr, r7, r8
 8000300:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000304:	fb07 f10c 	mul.w	r1, r7, ip
 8000308:	4299      	cmp	r1, r3
 800030a:	d909      	bls.n	8000320 <__udivmoddi4+0x60>
 800030c:	18eb      	adds	r3, r5, r3
 800030e:	f107 30ff 	add.w	r0, r7, #4294967295
 8000312:	f080 811b 	bcs.w	800054c <__udivmoddi4+0x28c>
 8000316:	4299      	cmp	r1, r3
 8000318:	f240 8118 	bls.w	800054c <__udivmoddi4+0x28c>
 800031c:	3f02      	subs	r7, #2
 800031e:	442b      	add	r3, r5
 8000320:	1a5b      	subs	r3, r3, r1
 8000322:	b2a4      	uxth	r4, r4
 8000324:	fbb3 f0fe 	udiv	r0, r3, lr
 8000328:	fb0e 3310 	mls	r3, lr, r0, r3
 800032c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000330:	fb00 fc0c 	mul.w	ip, r0, ip
 8000334:	45a4      	cmp	ip, r4
 8000336:	d909      	bls.n	800034c <__udivmoddi4+0x8c>
 8000338:	192c      	adds	r4, r5, r4
 800033a:	f100 33ff 	add.w	r3, r0, #4294967295
 800033e:	f080 8107 	bcs.w	8000550 <__udivmoddi4+0x290>
 8000342:	45a4      	cmp	ip, r4
 8000344:	f240 8104 	bls.w	8000550 <__udivmoddi4+0x290>
 8000348:	3802      	subs	r0, #2
 800034a:	442c      	add	r4, r5
 800034c:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000350:	eba4 040c 	sub.w	r4, r4, ip
 8000354:	2700      	movs	r7, #0
 8000356:	b11e      	cbz	r6, 8000360 <__udivmoddi4+0xa0>
 8000358:	40d4      	lsrs	r4, r2
 800035a:	2300      	movs	r3, #0
 800035c:	e9c6 4300 	strd	r4, r3, [r6]
 8000360:	4639      	mov	r1, r7
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d909      	bls.n	800037e <__udivmoddi4+0xbe>
 800036a:	2e00      	cmp	r6, #0
 800036c:	f000 80eb 	beq.w	8000546 <__udivmoddi4+0x286>
 8000370:	2700      	movs	r7, #0
 8000372:	e9c6 0100 	strd	r0, r1, [r6]
 8000376:	4638      	mov	r0, r7
 8000378:	4639      	mov	r1, r7
 800037a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037e:	fab3 f783 	clz	r7, r3
 8000382:	2f00      	cmp	r7, #0
 8000384:	d147      	bne.n	8000416 <__udivmoddi4+0x156>
 8000386:	428b      	cmp	r3, r1
 8000388:	d302      	bcc.n	8000390 <__udivmoddi4+0xd0>
 800038a:	4282      	cmp	r2, r0
 800038c:	f200 80fa 	bhi.w	8000584 <__udivmoddi4+0x2c4>
 8000390:	1a84      	subs	r4, r0, r2
 8000392:	eb61 0303 	sbc.w	r3, r1, r3
 8000396:	2001      	movs	r0, #1
 8000398:	4698      	mov	r8, r3
 800039a:	2e00      	cmp	r6, #0
 800039c:	d0e0      	beq.n	8000360 <__udivmoddi4+0xa0>
 800039e:	e9c6 4800 	strd	r4, r8, [r6]
 80003a2:	e7dd      	b.n	8000360 <__udivmoddi4+0xa0>
 80003a4:	b902      	cbnz	r2, 80003a8 <__udivmoddi4+0xe8>
 80003a6:	deff      	udf	#255	; 0xff
 80003a8:	fab2 f282 	clz	r2, r2
 80003ac:	2a00      	cmp	r2, #0
 80003ae:	f040 808f 	bne.w	80004d0 <__udivmoddi4+0x210>
 80003b2:	1b49      	subs	r1, r1, r5
 80003b4:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80003b8:	fa1f f885 	uxth.w	r8, r5
 80003bc:	2701      	movs	r7, #1
 80003be:	fbb1 fcfe 	udiv	ip, r1, lr
 80003c2:	0c23      	lsrs	r3, r4, #16
 80003c4:	fb0e 111c 	mls	r1, lr, ip, r1
 80003c8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80003cc:	fb08 f10c 	mul.w	r1, r8, ip
 80003d0:	4299      	cmp	r1, r3
 80003d2:	d907      	bls.n	80003e4 <__udivmoddi4+0x124>
 80003d4:	18eb      	adds	r3, r5, r3
 80003d6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x122>
 80003dc:	4299      	cmp	r1, r3
 80003de:	f200 80cd 	bhi.w	800057c <__udivmoddi4+0x2bc>
 80003e2:	4684      	mov	ip, r0
 80003e4:	1a59      	subs	r1, r3, r1
 80003e6:	b2a3      	uxth	r3, r4
 80003e8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003ec:	fb0e 1410 	mls	r4, lr, r0, r1
 80003f0:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 80003f4:	fb08 f800 	mul.w	r8, r8, r0
 80003f8:	45a0      	cmp	r8, r4
 80003fa:	d907      	bls.n	800040c <__udivmoddi4+0x14c>
 80003fc:	192c      	adds	r4, r5, r4
 80003fe:	f100 33ff 	add.w	r3, r0, #4294967295
 8000402:	d202      	bcs.n	800040a <__udivmoddi4+0x14a>
 8000404:	45a0      	cmp	r8, r4
 8000406:	f200 80b6 	bhi.w	8000576 <__udivmoddi4+0x2b6>
 800040a:	4618      	mov	r0, r3
 800040c:	eba4 0408 	sub.w	r4, r4, r8
 8000410:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000414:	e79f      	b.n	8000356 <__udivmoddi4+0x96>
 8000416:	f1c7 0c20 	rsb	ip, r7, #32
 800041a:	40bb      	lsls	r3, r7
 800041c:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000420:	ea4e 0e03 	orr.w	lr, lr, r3
 8000424:	fa01 f407 	lsl.w	r4, r1, r7
 8000428:	fa20 f50c 	lsr.w	r5, r0, ip
 800042c:	fa21 f30c 	lsr.w	r3, r1, ip
 8000430:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000434:	4325      	orrs	r5, r4
 8000436:	fbb3 f9f8 	udiv	r9, r3, r8
 800043a:	0c2c      	lsrs	r4, r5, #16
 800043c:	fb08 3319 	mls	r3, r8, r9, r3
 8000440:	fa1f fa8e 	uxth.w	sl, lr
 8000444:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000448:	fb09 f40a 	mul.w	r4, r9, sl
 800044c:	429c      	cmp	r4, r3
 800044e:	fa02 f207 	lsl.w	r2, r2, r7
 8000452:	fa00 f107 	lsl.w	r1, r0, r7
 8000456:	d90b      	bls.n	8000470 <__udivmoddi4+0x1b0>
 8000458:	eb1e 0303 	adds.w	r3, lr, r3
 800045c:	f109 30ff 	add.w	r0, r9, #4294967295
 8000460:	f080 8087 	bcs.w	8000572 <__udivmoddi4+0x2b2>
 8000464:	429c      	cmp	r4, r3
 8000466:	f240 8084 	bls.w	8000572 <__udivmoddi4+0x2b2>
 800046a:	f1a9 0902 	sub.w	r9, r9, #2
 800046e:	4473      	add	r3, lr
 8000470:	1b1b      	subs	r3, r3, r4
 8000472:	b2ad      	uxth	r5, r5
 8000474:	fbb3 f0f8 	udiv	r0, r3, r8
 8000478:	fb08 3310 	mls	r3, r8, r0, r3
 800047c:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000480:	fb00 fa0a 	mul.w	sl, r0, sl
 8000484:	45a2      	cmp	sl, r4
 8000486:	d908      	bls.n	800049a <__udivmoddi4+0x1da>
 8000488:	eb1e 0404 	adds.w	r4, lr, r4
 800048c:	f100 33ff 	add.w	r3, r0, #4294967295
 8000490:	d26b      	bcs.n	800056a <__udivmoddi4+0x2aa>
 8000492:	45a2      	cmp	sl, r4
 8000494:	d969      	bls.n	800056a <__udivmoddi4+0x2aa>
 8000496:	3802      	subs	r0, #2
 8000498:	4474      	add	r4, lr
 800049a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800049e:	fba0 8902 	umull	r8, r9, r0, r2
 80004a2:	eba4 040a 	sub.w	r4, r4, sl
 80004a6:	454c      	cmp	r4, r9
 80004a8:	46c2      	mov	sl, r8
 80004aa:	464b      	mov	r3, r9
 80004ac:	d354      	bcc.n	8000558 <__udivmoddi4+0x298>
 80004ae:	d051      	beq.n	8000554 <__udivmoddi4+0x294>
 80004b0:	2e00      	cmp	r6, #0
 80004b2:	d069      	beq.n	8000588 <__udivmoddi4+0x2c8>
 80004b4:	ebb1 050a 	subs.w	r5, r1, sl
 80004b8:	eb64 0403 	sbc.w	r4, r4, r3
 80004bc:	fa04 fc0c 	lsl.w	ip, r4, ip
 80004c0:	40fd      	lsrs	r5, r7
 80004c2:	40fc      	lsrs	r4, r7
 80004c4:	ea4c 0505 	orr.w	r5, ip, r5
 80004c8:	e9c6 5400 	strd	r5, r4, [r6]
 80004cc:	2700      	movs	r7, #0
 80004ce:	e747      	b.n	8000360 <__udivmoddi4+0xa0>
 80004d0:	f1c2 0320 	rsb	r3, r2, #32
 80004d4:	fa20 f703 	lsr.w	r7, r0, r3
 80004d8:	4095      	lsls	r5, r2
 80004da:	fa01 f002 	lsl.w	r0, r1, r2
 80004de:	fa21 f303 	lsr.w	r3, r1, r3
 80004e2:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80004e6:	4338      	orrs	r0, r7
 80004e8:	0c01      	lsrs	r1, r0, #16
 80004ea:	fbb3 f7fe 	udiv	r7, r3, lr
 80004ee:	fa1f f885 	uxth.w	r8, r5
 80004f2:	fb0e 3317 	mls	r3, lr, r7, r3
 80004f6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80004fa:	fb07 f308 	mul.w	r3, r7, r8
 80004fe:	428b      	cmp	r3, r1
 8000500:	fa04 f402 	lsl.w	r4, r4, r2
 8000504:	d907      	bls.n	8000516 <__udivmoddi4+0x256>
 8000506:	1869      	adds	r1, r5, r1
 8000508:	f107 3cff 	add.w	ip, r7, #4294967295
 800050c:	d22f      	bcs.n	800056e <__udivmoddi4+0x2ae>
 800050e:	428b      	cmp	r3, r1
 8000510:	d92d      	bls.n	800056e <__udivmoddi4+0x2ae>
 8000512:	3f02      	subs	r7, #2
 8000514:	4429      	add	r1, r5
 8000516:	1acb      	subs	r3, r1, r3
 8000518:	b281      	uxth	r1, r0
 800051a:	fbb3 f0fe 	udiv	r0, r3, lr
 800051e:	fb0e 3310 	mls	r3, lr, r0, r3
 8000522:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000526:	fb00 f308 	mul.w	r3, r0, r8
 800052a:	428b      	cmp	r3, r1
 800052c:	d907      	bls.n	800053e <__udivmoddi4+0x27e>
 800052e:	1869      	adds	r1, r5, r1
 8000530:	f100 3cff 	add.w	ip, r0, #4294967295
 8000534:	d217      	bcs.n	8000566 <__udivmoddi4+0x2a6>
 8000536:	428b      	cmp	r3, r1
 8000538:	d915      	bls.n	8000566 <__udivmoddi4+0x2a6>
 800053a:	3802      	subs	r0, #2
 800053c:	4429      	add	r1, r5
 800053e:	1ac9      	subs	r1, r1, r3
 8000540:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000544:	e73b      	b.n	80003be <__udivmoddi4+0xfe>
 8000546:	4637      	mov	r7, r6
 8000548:	4630      	mov	r0, r6
 800054a:	e709      	b.n	8000360 <__udivmoddi4+0xa0>
 800054c:	4607      	mov	r7, r0
 800054e:	e6e7      	b.n	8000320 <__udivmoddi4+0x60>
 8000550:	4618      	mov	r0, r3
 8000552:	e6fb      	b.n	800034c <__udivmoddi4+0x8c>
 8000554:	4541      	cmp	r1, r8
 8000556:	d2ab      	bcs.n	80004b0 <__udivmoddi4+0x1f0>
 8000558:	ebb8 0a02 	subs.w	sl, r8, r2
 800055c:	eb69 020e 	sbc.w	r2, r9, lr
 8000560:	3801      	subs	r0, #1
 8000562:	4613      	mov	r3, r2
 8000564:	e7a4      	b.n	80004b0 <__udivmoddi4+0x1f0>
 8000566:	4660      	mov	r0, ip
 8000568:	e7e9      	b.n	800053e <__udivmoddi4+0x27e>
 800056a:	4618      	mov	r0, r3
 800056c:	e795      	b.n	800049a <__udivmoddi4+0x1da>
 800056e:	4667      	mov	r7, ip
 8000570:	e7d1      	b.n	8000516 <__udivmoddi4+0x256>
 8000572:	4681      	mov	r9, r0
 8000574:	e77c      	b.n	8000470 <__udivmoddi4+0x1b0>
 8000576:	3802      	subs	r0, #2
 8000578:	442c      	add	r4, r5
 800057a:	e747      	b.n	800040c <__udivmoddi4+0x14c>
 800057c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000580:	442b      	add	r3, r5
 8000582:	e72f      	b.n	80003e4 <__udivmoddi4+0x124>
 8000584:	4638      	mov	r0, r7
 8000586:	e708      	b.n	800039a <__udivmoddi4+0xda>
 8000588:	4637      	mov	r7, r6
 800058a:	e6e9      	b.n	8000360 <__udivmoddi4+0xa0>

0800058c <__aeabi_idiv0>:
 800058c:	4770      	bx	lr
 800058e:	bf00      	nop

08000590 <HAL_GPIO_EXTI_Callback>:
uint16_t value_update = 0;
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void HAL_GPIO_EXTI_Callback (uint16_t GPIO_Pin){
 8000590:	b580      	push	{r7, lr}
 8000592:	b082      	sub	sp, #8
 8000594:	af00      	add	r7, sp, #0
 8000596:	4603      	mov	r3, r0
 8000598:	80fb      	strh	r3, [r7, #6]
	if ( GPIO_Pin == TP_INT_Pin){
 800059a:	88fb      	ldrh	r3, [r7, #6]
 800059c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80005a0:	d101      	bne.n	80005a6 <HAL_GPIO_EXTI_Callback+0x16>
		Ft6236_Read();	//Read Value From Touch Screen
 80005a2:	f001 fa11 	bl	80019c8 <Ft6236_Read>
	}
}
 80005a6:	bf00      	nop
 80005a8:	3708      	adds	r7, #8
 80005aa:	46bd      	mov	sp, r7
 80005ac:	bd80      	pop	{r7, pc}
	...

080005b0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80005b0:	b590      	push	{r4, r7, lr}
 80005b2:	b093      	sub	sp, #76	; 0x4c
 80005b4:	af12      	add	r7, sp, #72	; 0x48
  

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80005b6:	f001 fabf 	bl	8001b38 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80005ba:	f000 f853 	bl	8000664 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80005be:	f000 fc03 	bl	8000dc8 <MX_GPIO_Init>
  MX_DMA2D_Init();
 80005c2:	f000 f8eb 	bl	800079c <MX_DMA2D_Init>
  MX_LTDC_Init();
 80005c6:	f000 f95b 	bl	8000880 <MX_LTDC_Init>
  MX_SPI3_Init();
 80005ca:	f000 f9d9 	bl	8000980 <MX_SPI3_Init>
  MX_I2C3_Init();
 80005ce:	f000 f917 	bl	8000800 <MX_I2C3_Init>
  MX_TIM2_Init();
 80005d2:	f000 faf1 	bl	8000bb8 <MX_TIM2_Init>
  MX_TIM3_Init();
 80005d6:	f000 fb47 	bl	8000c68 <MX_TIM3_Init>
  MX_CRC_Init();
 80005da:	f000 f8cb 	bl	8000774 <MX_CRC_Init>
  MX_TIM4_Init();
 80005de:	f000 fb9b 	bl	8000d18 <MX_TIM4_Init>
  MX_TouchGFX_Init();
 80005e2:	f005 fbfd 	bl	8005de0 <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */
  //Lexi_Init_Data();								//Init Data LexiLight
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);		//Start PWM TIM2 Channel 1 -- LED LAMPE
 80005e6:	2100      	movs	r1, #0
 80005e8:	4819      	ldr	r0, [pc, #100]	; (8000650 <main+0xa0>)
 80005ea:	f004 febf 	bl	800536c <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);		//Start PWM TIM3 Channel 3 -- LED DRIVER
 80005ee:	2108      	movs	r1, #8
 80005f0:	4818      	ldr	r0, [pc, #96]	; (8000654 <main+0xa4>)
 80005f2:	f004 febb 	bl	800536c <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_4);		//Start PWM TIM4 Channel 1 -- LED BACKLIGHT
 80005f6:	210c      	movs	r1, #12
 80005f8:	4817      	ldr	r0, [pc, #92]	; (8000658 <main+0xa8>)
 80005fa:	f004 feb7 	bl	800536c <HAL_TIM_PWM_Start>

  __HAL_TIM_SET_COMPARE(&htim2 , TIM_CHANNEL_1,80);	//Set Duty = 0
 80005fe:	4b14      	ldr	r3, [pc, #80]	; (8000650 <main+0xa0>)
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	2250      	movs	r2, #80	; 0x50
 8000604:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_TIM_SET_COMPARE(&htim3 , TIM_CHANNEL_3,40);	//Set Duty = 0
 8000606:	4b13      	ldr	r3, [pc, #76]	; (8000654 <main+0xa4>)
 8000608:	681b      	ldr	r3, [r3, #0]
 800060a:	2228      	movs	r2, #40	; 0x28
 800060c:	63da      	str	r2, [r3, #60]	; 0x3c
  __HAL_TIM_SET_COMPARE(&htim4 , TIM_CHANNEL_4,100);	//Set Duty = 0
 800060e:	4b12      	ldr	r3, [pc, #72]	; (8000658 <main+0xa8>)
 8000610:	681b      	ldr	r3, [r3, #0]
 8000612:	2264      	movs	r2, #100	; 0x64
 8000614:	641a      	str	r2, [r3, #64]	; 0x40
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13,GPIO_PIN_SET);
 8000616:	2201      	movs	r2, #1
 8000618:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800061c:	480f      	ldr	r0, [pc, #60]	; (800065c <main+0xac>)
 800061e:	f002 f9bf 	bl	80029a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_1, GPIO_PIN_RESET);
 8000622:	2200      	movs	r2, #0
 8000624:	2102      	movs	r1, #2
 8000626:	480d      	ldr	r0, [pc, #52]	; (800065c <main+0xac>)
 8000628:	f002 f9ba 	bl	80029a0 <HAL_GPIO_WritePin>
  HAL_Delay(50);
  MX_TouchGFX_Process();
  HAL_Delay(50);
  MX_SPI3_Init();
  */
  Ft6236_Init(hi2c3);
 800062c:	4c0c      	ldr	r4, [pc, #48]	; (8000660 <main+0xb0>)
 800062e:	4668      	mov	r0, sp
 8000630:	f104 0310 	add.w	r3, r4, #16
 8000634:	2244      	movs	r2, #68	; 0x44
 8000636:	4619      	mov	r1, r3
 8000638:	f01a fe32 	bl	801b2a0 <memcpy>
 800063c:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000640:	f001 f98a 	bl	8001958 <Ft6236_Init>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  //Lexi_Task (htim2, htim3);
	  HAL_Delay(50);
 8000644:	2032      	movs	r0, #50	; 0x32
 8000646:	f001 fab9 	bl	8001bbc <HAL_Delay>
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 800064a:	f005 fbcf 	bl	8005dec <MX_TouchGFX_Process>
	  HAL_Delay(50);
 800064e:	e7f9      	b.n	8000644 <main+0x94>
 8000650:	20027388 	.word	0x20027388
 8000654:	20027208 	.word	0x20027208
 8000658:	200271c0 	.word	0x200271c0
 800065c:	40020c00 	.word	0x40020c00
 8000660:	2002716c 	.word	0x2002716c

08000664 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000664:	b580      	push	{r7, lr}
 8000666:	b0a0      	sub	sp, #128	; 0x80
 8000668:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800066a:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800066e:	2230      	movs	r2, #48	; 0x30
 8000670:	2100      	movs	r1, #0
 8000672:	4618      	mov	r0, r3
 8000674:	f01a fe1f 	bl	801b2b6 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000678:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800067c:	2200      	movs	r2, #0
 800067e:	601a      	str	r2, [r3, #0]
 8000680:	605a      	str	r2, [r3, #4]
 8000682:	609a      	str	r2, [r3, #8]
 8000684:	60da      	str	r2, [r3, #12]
 8000686:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000688:	f107 030c 	add.w	r3, r7, #12
 800068c:	2230      	movs	r2, #48	; 0x30
 800068e:	2100      	movs	r1, #0
 8000690:	4618      	mov	r0, r3
 8000692:	f01a fe10 	bl	801b2b6 <memset>

  /** Macro to configure the PLL multiplication factor 
  */
  __HAL_RCC_PLL_PLLM_CONFIG(8);
 8000696:	4b35      	ldr	r3, [pc, #212]	; (800076c <SystemClock_Config+0x108>)
 8000698:	685b      	ldr	r3, [r3, #4]
 800069a:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800069e:	4a33      	ldr	r2, [pc, #204]	; (800076c <SystemClock_Config+0x108>)
 80006a0:	f043 0308 	orr.w	r3, r3, #8
 80006a4:	6053      	str	r3, [r2, #4]
  /** Macro to configure the PLL clock source 
  */
  __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSI);
 80006a6:	4b31      	ldr	r3, [pc, #196]	; (800076c <SystemClock_Config+0x108>)
 80006a8:	685b      	ldr	r3, [r3, #4]
 80006aa:	4a30      	ldr	r2, [pc, #192]	; (800076c <SystemClock_Config+0x108>)
 80006ac:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 80006b0:	6053      	str	r3, [r2, #4]
  /** Configure the main internal regulator output voltage 
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80006b2:	2300      	movs	r3, #0
 80006b4:	60bb      	str	r3, [r7, #8]
 80006b6:	4b2d      	ldr	r3, [pc, #180]	; (800076c <SystemClock_Config+0x108>)
 80006b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80006ba:	4a2c      	ldr	r2, [pc, #176]	; (800076c <SystemClock_Config+0x108>)
 80006bc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80006c0:	6413      	str	r3, [r2, #64]	; 0x40
 80006c2:	4b2a      	ldr	r3, [pc, #168]	; (800076c <SystemClock_Config+0x108>)
 80006c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80006c6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80006ca:	60bb      	str	r3, [r7, #8]
 80006cc:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 80006ce:	2300      	movs	r3, #0
 80006d0:	607b      	str	r3, [r7, #4]
 80006d2:	4b27      	ldr	r3, [pc, #156]	; (8000770 <SystemClock_Config+0x10c>)
 80006d4:	681b      	ldr	r3, [r3, #0]
 80006d6:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80006da:	4a25      	ldr	r2, [pc, #148]	; (8000770 <SystemClock_Config+0x10c>)
 80006dc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80006e0:	6013      	str	r3, [r2, #0]
 80006e2:	4b23      	ldr	r3, [pc, #140]	; (8000770 <SystemClock_Config+0x10c>)
 80006e4:	681b      	ldr	r3, [r3, #0]
 80006e6:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80006ea:	607b      	str	r3, [r7, #4]
 80006ec:	687b      	ldr	r3, [r7, #4]
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80006ee:	2302      	movs	r3, #2
 80006f0:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80006f2:	2301      	movs	r3, #1
 80006f4:	65fb      	str	r3, [r7, #92]	; 0x5c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80006f6:	2310      	movs	r3, #16
 80006f8:	663b      	str	r3, [r7, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80006fa:	2300      	movs	r3, #0
 80006fc:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80006fe:	2300      	movs	r3, #0
 8000700:	66fb      	str	r3, [r7, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000702:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8000706:	4618      	mov	r0, r3
 8000708:	f003 fd3c 	bl	8004184 <HAL_RCC_OscConfig>
 800070c:	4603      	mov	r3, r0
 800070e:	2b00      	cmp	r3, #0
 8000710:	d001      	beq.n	8000716 <SystemClock_Config+0xb2>
  {
    Error_Handler();
 8000712:	f000 fc5b 	bl	8000fcc <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000716:	230f      	movs	r3, #15
 8000718:	63fb      	str	r3, [r7, #60]	; 0x3c
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 800071a:	2300      	movs	r3, #0
 800071c:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800071e:	2300      	movs	r3, #0
 8000720:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000722:	2300      	movs	r3, #0
 8000724:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000726:	2300      	movs	r3, #0
 8000728:	64fb      	str	r3, [r7, #76]	; 0x4c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 800072a:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800072e:	2100      	movs	r1, #0
 8000730:	4618      	mov	r0, r3
 8000732:	f003 ff97 	bl	8004664 <HAL_RCC_ClockConfig>
 8000736:	4603      	mov	r3, r0
 8000738:	2b00      	cmp	r3, #0
 800073a:	d001      	beq.n	8000740 <SystemClock_Config+0xdc>
  {
    Error_Handler();
 800073c:	f000 fc46 	bl	8000fcc <Error_Handler>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000740:	2308      	movs	r3, #8
 8000742:	60fb      	str	r3, [r7, #12]
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 60;
 8000744:	233c      	movs	r3, #60	; 0x3c
 8000746:	61fb      	str	r3, [r7, #28]
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
 8000748:	2305      	movs	r3, #5
 800074a:	627b      	str	r3, [r7, #36]	; 0x24
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 800074c:	2300      	movs	r3, #0
 800074e:	633b      	str	r3, [r7, #48]	; 0x30
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000750:	f107 030c 	add.w	r3, r7, #12
 8000754:	4618      	mov	r0, r3
 8000756:	f004 f983 	bl	8004a60 <HAL_RCCEx_PeriphCLKConfig>
 800075a:	4603      	mov	r3, r0
 800075c:	2b00      	cmp	r3, #0
 800075e:	d001      	beq.n	8000764 <SystemClock_Config+0x100>
  {
    Error_Handler();
 8000760:	f000 fc34 	bl	8000fcc <Error_Handler>
  }
}
 8000764:	bf00      	nop
 8000766:	3780      	adds	r7, #128	; 0x80
 8000768:	46bd      	mov	sp, r7
 800076a:	bd80      	pop	{r7, pc}
 800076c:	40023800 	.word	0x40023800
 8000770:	40007000 	.word	0x40007000

08000774 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8000774:	b580      	push	{r7, lr}
 8000776:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8000778:	4b06      	ldr	r3, [pc, #24]	; (8000794 <MX_CRC_Init+0x20>)
 800077a:	4a07      	ldr	r2, [pc, #28]	; (8000798 <MX_CRC_Init+0x24>)
 800077c:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800077e:	4805      	ldr	r0, [pc, #20]	; (8000794 <MX_CRC_Init+0x20>)
 8000780:	f001 fb50 	bl	8001e24 <HAL_CRC_Init>
 8000784:	4603      	mov	r3, r0
 8000786:	2b00      	cmp	r3, #0
 8000788:	d001      	beq.n	800078e <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 800078a:	f000 fc1f 	bl	8000fcc <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 800078e:	bf00      	nop
 8000790:	bd80      	pop	{r7, pc}
 8000792:	bf00      	nop
 8000794:	20027200 	.word	0x20027200
 8000798:	40023000 	.word	0x40023000

0800079c <MX_DMA2D_Init>:
  * @brief DMA2D Initialization Function
  * @param None
  * @retval None
  */
static void MX_DMA2D_Init(void)
{
 800079c:	b580      	push	{r7, lr}
 800079e:	af00      	add	r7, sp, #0
  /* USER CODE END DMA2D_Init 0 */

  /* USER CODE BEGIN DMA2D_Init 1 */

  /* USER CODE END DMA2D_Init 1 */
  hdma2d.Instance = DMA2D;
 80007a0:	4b15      	ldr	r3, [pc, #84]	; (80007f8 <MX_DMA2D_Init+0x5c>)
 80007a2:	4a16      	ldr	r2, [pc, #88]	; (80007fc <MX_DMA2D_Init+0x60>)
 80007a4:	601a      	str	r2, [r3, #0]
  hdma2d.Init.Mode = DMA2D_M2M;
 80007a6:	4b14      	ldr	r3, [pc, #80]	; (80007f8 <MX_DMA2D_Init+0x5c>)
 80007a8:	2200      	movs	r2, #0
 80007aa:	605a      	str	r2, [r3, #4]
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
 80007ac:	4b12      	ldr	r3, [pc, #72]	; (80007f8 <MX_DMA2D_Init+0x5c>)
 80007ae:	2202      	movs	r2, #2
 80007b0:	609a      	str	r2, [r3, #8]
  hdma2d.Init.OutputOffset = 0;
 80007b2:	4b11      	ldr	r3, [pc, #68]	; (80007f8 <MX_DMA2D_Init+0x5c>)
 80007b4:	2200      	movs	r2, #0
 80007b6:	60da      	str	r2, [r3, #12]
  hdma2d.LayerCfg[1].InputOffset = 0;
 80007b8:	4b0f      	ldr	r3, [pc, #60]	; (80007f8 <MX_DMA2D_Init+0x5c>)
 80007ba:	2200      	movs	r2, #0
 80007bc:	629a      	str	r2, [r3, #40]	; 0x28
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 80007be:	4b0e      	ldr	r3, [pc, #56]	; (80007f8 <MX_DMA2D_Init+0x5c>)
 80007c0:	2202      	movs	r2, #2
 80007c2:	62da      	str	r2, [r3, #44]	; 0x2c
  hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 80007c4:	4b0c      	ldr	r3, [pc, #48]	; (80007f8 <MX_DMA2D_Init+0x5c>)
 80007c6:	2200      	movs	r2, #0
 80007c8:	631a      	str	r2, [r3, #48]	; 0x30
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80007ca:	4b0b      	ldr	r3, [pc, #44]	; (80007f8 <MX_DMA2D_Init+0x5c>)
 80007cc:	2200      	movs	r2, #0
 80007ce:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80007d0:	4809      	ldr	r0, [pc, #36]	; (80007f8 <MX_DMA2D_Init+0x5c>)
 80007d2:	f001 fb43 	bl	8001e5c <HAL_DMA2D_Init>
 80007d6:	4603      	mov	r3, r0
 80007d8:	2b00      	cmp	r3, #0
 80007da:	d001      	beq.n	80007e0 <MX_DMA2D_Init+0x44>
  {
    Error_Handler();
 80007dc:	f000 fbf6 	bl	8000fcc <Error_Handler>
  }
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80007e0:	2101      	movs	r1, #1
 80007e2:	4805      	ldr	r0, [pc, #20]	; (80007f8 <MX_DMA2D_Init+0x5c>)
 80007e4:	f001 fe04 	bl	80023f0 <HAL_DMA2D_ConfigLayer>
 80007e8:	4603      	mov	r3, r0
 80007ea:	2b00      	cmp	r3, #0
 80007ec:	d001      	beq.n	80007f2 <MX_DMA2D_Init+0x56>
  {
    Error_Handler();
 80007ee:	f000 fbed 	bl	8000fcc <Error_Handler>
  }
  /* USER CODE BEGIN DMA2D_Init 2 */

  /* USER CODE END DMA2D_Init 2 */

}
 80007f2:	bf00      	nop
 80007f4:	bd80      	pop	{r7, pc}
 80007f6:	bf00      	nop
 80007f8:	20027348 	.word	0x20027348
 80007fc:	4002b000 	.word	0x4002b000

08000800 <MX_I2C3_Init>:
  * @brief I2C3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C3_Init(void)
{
 8000800:	b580      	push	{r7, lr}
 8000802:	af00      	add	r7, sp, #0
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 8000804:	4b1b      	ldr	r3, [pc, #108]	; (8000874 <MX_I2C3_Init+0x74>)
 8000806:	4a1c      	ldr	r2, [pc, #112]	; (8000878 <MX_I2C3_Init+0x78>)
 8000808:	601a      	str	r2, [r3, #0]
  hi2c3.Init.ClockSpeed = 100000;
 800080a:	4b1a      	ldr	r3, [pc, #104]	; (8000874 <MX_I2C3_Init+0x74>)
 800080c:	4a1b      	ldr	r2, [pc, #108]	; (800087c <MX_I2C3_Init+0x7c>)
 800080e:	605a      	str	r2, [r3, #4]
  hi2c3.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000810:	4b18      	ldr	r3, [pc, #96]	; (8000874 <MX_I2C3_Init+0x74>)
 8000812:	2200      	movs	r2, #0
 8000814:	609a      	str	r2, [r3, #8]
  hi2c3.Init.OwnAddress1 = 0;
 8000816:	4b17      	ldr	r3, [pc, #92]	; (8000874 <MX_I2C3_Init+0x74>)
 8000818:	2200      	movs	r2, #0
 800081a:	60da      	str	r2, [r3, #12]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800081c:	4b15      	ldr	r3, [pc, #84]	; (8000874 <MX_I2C3_Init+0x74>)
 800081e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000822:	611a      	str	r2, [r3, #16]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000824:	4b13      	ldr	r3, [pc, #76]	; (8000874 <MX_I2C3_Init+0x74>)
 8000826:	2200      	movs	r2, #0
 8000828:	615a      	str	r2, [r3, #20]
  hi2c3.Init.OwnAddress2 = 0;
 800082a:	4b12      	ldr	r3, [pc, #72]	; (8000874 <MX_I2C3_Init+0x74>)
 800082c:	2200      	movs	r2, #0
 800082e:	619a      	str	r2, [r3, #24]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000830:	4b10      	ldr	r3, [pc, #64]	; (8000874 <MX_I2C3_Init+0x74>)
 8000832:	2200      	movs	r2, #0
 8000834:	61da      	str	r2, [r3, #28]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000836:	4b0f      	ldr	r3, [pc, #60]	; (8000874 <MX_I2C3_Init+0x74>)
 8000838:	2200      	movs	r2, #0
 800083a:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800083c:	480d      	ldr	r0, [pc, #52]	; (8000874 <MX_I2C3_Init+0x74>)
 800083e:	f002 f8e1 	bl	8002a04 <HAL_I2C_Init>
 8000842:	4603      	mov	r3, r0
 8000844:	2b00      	cmp	r3, #0
 8000846:	d001      	beq.n	800084c <MX_I2C3_Init+0x4c>
  {
    Error_Handler();
 8000848:	f000 fbc0 	bl	8000fcc <Error_Handler>
  }
  /** Configure Analogue filter 
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 800084c:	2100      	movs	r1, #0
 800084e:	4809      	ldr	r0, [pc, #36]	; (8000874 <MX_I2C3_Init+0x74>)
 8000850:	f003 f887 	bl	8003962 <HAL_I2CEx_ConfigAnalogFilter>
 8000854:	4603      	mov	r3, r0
 8000856:	2b00      	cmp	r3, #0
 8000858:	d001      	beq.n	800085e <MX_I2C3_Init+0x5e>
  {
    Error_Handler();
 800085a:	f000 fbb7 	bl	8000fcc <Error_Handler>
  }
  /** Configure Digital filter 
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800085e:	2100      	movs	r1, #0
 8000860:	4804      	ldr	r0, [pc, #16]	; (8000874 <MX_I2C3_Init+0x74>)
 8000862:	f003 f8ba 	bl	80039da <HAL_I2CEx_ConfigDigitalFilter>
 8000866:	4603      	mov	r3, r0
 8000868:	2b00      	cmp	r3, #0
 800086a:	d001      	beq.n	8000870 <MX_I2C3_Init+0x70>
  {
    Error_Handler();
 800086c:	f000 fbae 	bl	8000fcc <Error_Handler>
  }
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 8000870:	bf00      	nop
 8000872:	bd80      	pop	{r7, pc}
 8000874:	2002716c 	.word	0x2002716c
 8000878:	40005c00 	.word	0x40005c00
 800087c:	000186a0 	.word	0x000186a0

08000880 <MX_LTDC_Init>:
  * @brief LTDC Initialization Function
  * @param None
  * @retval None
  */
static void MX_LTDC_Init(void)
{
 8000880:	b580      	push	{r7, lr}
 8000882:	b08e      	sub	sp, #56	; 0x38
 8000884:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN LTDC_Init 0 */

  /* USER CODE END LTDC_Init 0 */

  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000886:	1d3b      	adds	r3, r7, #4
 8000888:	2234      	movs	r2, #52	; 0x34
 800088a:	2100      	movs	r1, #0
 800088c:	4618      	mov	r0, r3
 800088e:	f01a fd12 	bl	801b2b6 <memset>

  /* USER CODE BEGIN LTDC_Init 1 */

  /* USER CODE END LTDC_Init 1 */
  hltdc.Instance = LTDC;
 8000892:	4b39      	ldr	r3, [pc, #228]	; (8000978 <MX_LTDC_Init+0xf8>)
 8000894:	4a39      	ldr	r2, [pc, #228]	; (800097c <MX_LTDC_Init+0xfc>)
 8000896:	601a      	str	r2, [r3, #0]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8000898:	4b37      	ldr	r3, [pc, #220]	; (8000978 <MX_LTDC_Init+0xf8>)
 800089a:	2200      	movs	r2, #0
 800089c:	605a      	str	r2, [r3, #4]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 800089e:	4b36      	ldr	r3, [pc, #216]	; (8000978 <MX_LTDC_Init+0xf8>)
 80008a0:	2200      	movs	r2, #0
 80008a2:	609a      	str	r2, [r3, #8]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80008a4:	4b34      	ldr	r3, [pc, #208]	; (8000978 <MX_LTDC_Init+0xf8>)
 80008a6:	2200      	movs	r2, #0
 80008a8:	60da      	str	r2, [r3, #12]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80008aa:	4b33      	ldr	r3, [pc, #204]	; (8000978 <MX_LTDC_Init+0xf8>)
 80008ac:	2200      	movs	r2, #0
 80008ae:	611a      	str	r2, [r3, #16]
  hltdc.Init.HorizontalSync = 9;
 80008b0:	4b31      	ldr	r3, [pc, #196]	; (8000978 <MX_LTDC_Init+0xf8>)
 80008b2:	2209      	movs	r2, #9
 80008b4:	615a      	str	r2, [r3, #20]
  hltdc.Init.VerticalSync = 1;
 80008b6:	4b30      	ldr	r3, [pc, #192]	; (8000978 <MX_LTDC_Init+0xf8>)
 80008b8:	2201      	movs	r2, #1
 80008ba:	619a      	str	r2, [r3, #24]
  hltdc.Init.AccumulatedHBP = 19;
 80008bc:	4b2e      	ldr	r3, [pc, #184]	; (8000978 <MX_LTDC_Init+0xf8>)
 80008be:	2213      	movs	r2, #19
 80008c0:	61da      	str	r2, [r3, #28]
  hltdc.Init.AccumulatedVBP = 3;
 80008c2:	4b2d      	ldr	r3, [pc, #180]	; (8000978 <MX_LTDC_Init+0xf8>)
 80008c4:	2203      	movs	r2, #3
 80008c6:	621a      	str	r2, [r3, #32]
  hltdc.Init.AccumulatedActiveW = 259;
 80008c8:	4b2b      	ldr	r3, [pc, #172]	; (8000978 <MX_LTDC_Init+0xf8>)
 80008ca:	f240 1203 	movw	r2, #259	; 0x103
 80008ce:	625a      	str	r2, [r3, #36]	; 0x24
  hltdc.Init.AccumulatedActiveH = 323;
 80008d0:	4b29      	ldr	r3, [pc, #164]	; (8000978 <MX_LTDC_Init+0xf8>)
 80008d2:	f240 1243 	movw	r2, #323	; 0x143
 80008d6:	629a      	str	r2, [r3, #40]	; 0x28
  hltdc.Init.TotalWidth = 279;
 80008d8:	4b27      	ldr	r3, [pc, #156]	; (8000978 <MX_LTDC_Init+0xf8>)
 80008da:	f240 1217 	movw	r2, #279	; 0x117
 80008de:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc.Init.TotalHeigh = 327;
 80008e0:	4b25      	ldr	r3, [pc, #148]	; (8000978 <MX_LTDC_Init+0xf8>)
 80008e2:	f240 1247 	movw	r2, #327	; 0x147
 80008e6:	631a      	str	r2, [r3, #48]	; 0x30
  hltdc.Init.Backcolor.Blue = 0;
 80008e8:	4b23      	ldr	r3, [pc, #140]	; (8000978 <MX_LTDC_Init+0xf8>)
 80008ea:	2200      	movs	r2, #0
 80008ec:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 80008f0:	4b21      	ldr	r3, [pc, #132]	; (8000978 <MX_LTDC_Init+0xf8>)
 80008f2:	2200      	movs	r2, #0
 80008f4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  hltdc.Init.Backcolor.Red = 0;
 80008f8:	4b1f      	ldr	r3, [pc, #124]	; (8000978 <MX_LTDC_Init+0xf8>)
 80008fa:	2200      	movs	r2, #0
 80008fc:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000900:	481d      	ldr	r0, [pc, #116]	; (8000978 <MX_LTDC_Init+0xf8>)
 8000902:	f003 f8a9 	bl	8003a58 <HAL_LTDC_Init>
 8000906:	4603      	mov	r3, r0
 8000908:	2b00      	cmp	r3, #0
 800090a:	d001      	beq.n	8000910 <MX_LTDC_Init+0x90>
  {
    Error_Handler();
 800090c:	f000 fb5e 	bl	8000fcc <Error_Handler>
  }
  pLayerCfg.WindowX0 = 0;
 8000910:	2300      	movs	r3, #0
 8000912:	607b      	str	r3, [r7, #4]
  pLayerCfg.WindowX1 = 240;
 8000914:	23f0      	movs	r3, #240	; 0xf0
 8000916:	60bb      	str	r3, [r7, #8]
  pLayerCfg.WindowY0 = 0;
 8000918:	2300      	movs	r3, #0
 800091a:	60fb      	str	r3, [r7, #12]
  pLayerCfg.WindowY1 = 320;
 800091c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8000920:	613b      	str	r3, [r7, #16]
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000922:	2302      	movs	r3, #2
 8000924:	617b      	str	r3, [r7, #20]
  pLayerCfg.Alpha = 255;
 8000926:	23ff      	movs	r3, #255	; 0xff
 8000928:	61bb      	str	r3, [r7, #24]
  pLayerCfg.Alpha0 = 255;
 800092a:	23ff      	movs	r3, #255	; 0xff
 800092c:	61fb      	str	r3, [r7, #28]
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 800092e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000932:	623b      	str	r3, [r7, #32]
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000934:	2305      	movs	r3, #5
 8000936:	627b      	str	r3, [r7, #36]	; 0x24
  pLayerCfg.FBStartAdress = 0x00000000;
 8000938:	2300      	movs	r3, #0
 800093a:	62bb      	str	r3, [r7, #40]	; 0x28
  pLayerCfg.ImageWidth = 240;
 800093c:	23f0      	movs	r3, #240	; 0xf0
 800093e:	62fb      	str	r3, [r7, #44]	; 0x2c
  pLayerCfg.ImageHeight = 320;
 8000940:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8000944:	633b      	str	r3, [r7, #48]	; 0x30
  pLayerCfg.Backcolor.Blue = 0;
 8000946:	2300      	movs	r3, #0
 8000948:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
  pLayerCfg.Backcolor.Green = 0;
 800094c:	2300      	movs	r3, #0
 800094e:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
  pLayerCfg.Backcolor.Red = 0;
 8000952:	2300      	movs	r3, #0
 8000954:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000958:	1d3b      	adds	r3, r7, #4
 800095a:	2200      	movs	r2, #0
 800095c:	4619      	mov	r1, r3
 800095e:	4806      	ldr	r0, [pc, #24]	; (8000978 <MX_LTDC_Init+0xf8>)
 8000960:	f003 fa02 	bl	8003d68 <HAL_LTDC_ConfigLayer>
 8000964:	4603      	mov	r3, r0
 8000966:	2b00      	cmp	r3, #0
 8000968:	d001      	beq.n	800096e <MX_LTDC_Init+0xee>
  {
    Error_Handler();
 800096a:	f000 fb2f 	bl	8000fcc <Error_Handler>
  }
  /* USER CODE BEGIN LTDC_Init 2 */

  /* USER CODE END LTDC_Init 2 */

}
 800096e:	bf00      	nop
 8000970:	3738      	adds	r7, #56	; 0x38
 8000972:	46bd      	mov	sp, r7
 8000974:	bd80      	pop	{r7, pc}
 8000976:	bf00      	nop
 8000978:	200272a0 	.word	0x200272a0
 800097c:	40016800 	.word	0x40016800

08000980 <MX_SPI3_Init>:
  * @brief SPI3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI3_Init(void)
{
 8000980:	b580      	push	{r7, lr}
 8000982:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI3_Init 1 */

  /* USER CODE END SPI3_Init 1 */
  /* SPI3 parameter configuration*/
  hspi3.Instance = SPI3;
 8000984:	4b8a      	ldr	r3, [pc, #552]	; (8000bb0 <MX_SPI3_Init+0x230>)
 8000986:	4a8b      	ldr	r2, [pc, #556]	; (8000bb4 <MX_SPI3_Init+0x234>)
 8000988:	601a      	str	r2, [r3, #0]
  hspi3.Init.Mode = SPI_MODE_MASTER;
 800098a:	4b89      	ldr	r3, [pc, #548]	; (8000bb0 <MX_SPI3_Init+0x230>)
 800098c:	f44f 7282 	mov.w	r2, #260	; 0x104
 8000990:	605a      	str	r2, [r3, #4]
  hspi3.Init.Direction = SPI_DIRECTION_1LINE;
 8000992:	4b87      	ldr	r3, [pc, #540]	; (8000bb0 <MX_SPI3_Init+0x230>)
 8000994:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8000998:	609a      	str	r2, [r3, #8]
  hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 800099a:	4b85      	ldr	r3, [pc, #532]	; (8000bb0 <MX_SPI3_Init+0x230>)
 800099c:	2200      	movs	r2, #0
 800099e:	60da      	str	r2, [r3, #12]
  hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 80009a0:	4b83      	ldr	r3, [pc, #524]	; (8000bb0 <MX_SPI3_Init+0x230>)
 80009a2:	2200      	movs	r2, #0
 80009a4:	611a      	str	r2, [r3, #16]
  hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 80009a6:	4b82      	ldr	r3, [pc, #520]	; (8000bb0 <MX_SPI3_Init+0x230>)
 80009a8:	2200      	movs	r2, #0
 80009aa:	615a      	str	r2, [r3, #20]
  hspi3.Init.NSS = SPI_NSS_SOFT;
 80009ac:	4b80      	ldr	r3, [pc, #512]	; (8000bb0 <MX_SPI3_Init+0x230>)
 80009ae:	f44f 7200 	mov.w	r2, #512	; 0x200
 80009b2:	619a      	str	r2, [r3, #24]
  hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80009b4:	4b7e      	ldr	r3, [pc, #504]	; (8000bb0 <MX_SPI3_Init+0x230>)
 80009b6:	2200      	movs	r2, #0
 80009b8:	61da      	str	r2, [r3, #28]
  hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80009ba:	4b7d      	ldr	r3, [pc, #500]	; (8000bb0 <MX_SPI3_Init+0x230>)
 80009bc:	2200      	movs	r2, #0
 80009be:	621a      	str	r2, [r3, #32]
  hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 80009c0:	4b7b      	ldr	r3, [pc, #492]	; (8000bb0 <MX_SPI3_Init+0x230>)
 80009c2:	2200      	movs	r2, #0
 80009c4:	625a      	str	r2, [r3, #36]	; 0x24
  hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80009c6:	4b7a      	ldr	r3, [pc, #488]	; (8000bb0 <MX_SPI3_Init+0x230>)
 80009c8:	2200      	movs	r2, #0
 80009ca:	629a      	str	r2, [r3, #40]	; 0x28
  hspi3.Init.CRCPolynomial = 10;
 80009cc:	4b78      	ldr	r3, [pc, #480]	; (8000bb0 <MX_SPI3_Init+0x230>)
 80009ce:	220a      	movs	r2, #10
 80009d0:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi3) != HAL_OK)
 80009d2:	4877      	ldr	r0, [pc, #476]	; (8000bb0 <MX_SPI3_Init+0x230>)
 80009d4:	f004 fa02 	bl	8004ddc <HAL_SPI_Init>
 80009d8:	4603      	mov	r3, r0
 80009da:	2b00      	cmp	r3, #0
 80009dc:	d001      	beq.n	80009e2 <MX_SPI3_Init+0x62>
  {
    Error_Handler();
 80009de:	f000 faf5 	bl	8000fcc <Error_Handler>
  }
  /* USER CODE BEGIN SPI3_Init 2 */


  writeReg(0x10); //Sleep IN
 80009e2:	2010      	movs	r0, #16
 80009e4:	f000 fa98 	bl	8000f18 <writeReg>
  HAL_Delay(200);
 80009e8:	20c8      	movs	r0, #200	; 0xc8
 80009ea:	f001 f8e7 	bl	8001bbc <HAL_Delay>
  writeReg(0x01); //SW Reset
 80009ee:	2001      	movs	r0, #1
 80009f0:	f000 fa92 	bl	8000f18 <writeReg>
  HAL_Delay(200);
 80009f4:	20c8      	movs	r0, #200	; 0xc8
 80009f6:	f001 f8e1 	bl	8001bbc <HAL_Delay>

  writeReg(0x11);//Sleep Out
 80009fa:	2011      	movs	r0, #17
 80009fc:	f000 fa8c 	bl	8000f18 <writeReg>
  HAL_Delay(200);
 8000a00:	20c8      	movs	r0, #200	; 0xc8
 8000a02:	f001 f8db 	bl	8001bbc <HAL_Delay>

  writeReg(0x29); //Display on
 8000a06:	2029      	movs	r0, #41	; 0x29
 8000a08:	f000 fa86 	bl	8000f18 <writeReg>


  writeReg(0x36);	//Memory Data Access Control
 8000a0c:	2036      	movs	r0, #54	; 0x36
 8000a0e:	f000 fa83 	bl	8000f18 <writeReg>
  writeData(0x08);
 8000a12:	2008      	movs	r0, #8
 8000a14:	f000 faa4 	bl	8000f60 <writeData>

  writeReg(0x3A);	// SPI 4 wire 16 bit color
 8000a18:	203a      	movs	r0, #58	; 0x3a
 8000a1a:	f000 fa7d 	bl	8000f18 <writeReg>
  writeData (0x05); //  #05
 8000a1e:	2005      	movs	r0, #5
 8000a20:	f000 fa9e 	bl	8000f60 <writeData>

  writeReg(0xB0);	//Ram Control
 8000a24:	20b0      	movs	r0, #176	; 0xb0
 8000a26:	f000 fa77 	bl	8000f18 <writeReg>
  writeData (0x11);//
 8000a2a:	2011      	movs	r0, #17
 8000a2c:	f000 fa98 	bl	8000f60 <writeData>
  writeData (0xC8);
 8000a30:	20c8      	movs	r0, #200	; 0xc8
 8000a32:	f000 fa95 	bl	8000f60 <writeData>

  writeReg(0xB1);
 8000a36:	20b1      	movs	r0, #177	; 0xb1
 8000a38:	f000 fa6e 	bl	8000f18 <writeReg>
  writeData (0xC2);//
 8000a3c:	20c2      	movs	r0, #194	; 0xc2
 8000a3e:	f000 fa8f 	bl	8000f60 <writeData>
  writeData (0xFF);
 8000a42:	20ff      	movs	r0, #255	; 0xff
 8000a44:	f000 fa8c 	bl	8000f60 <writeData>
  writeData (0xFF);
 8000a48:	20ff      	movs	r0, #255	; 0xff
 8000a4a:	f000 fa89 	bl	8000f60 <writeData>

  writeReg(0x0B);
 8000a4e:	200b      	movs	r0, #11
 8000a50:	f000 fa62 	bl	8000f18 <writeReg>
  writeData(0x00);
 8000a54:	2000      	movs	r0, #0
 8000a56:	f000 fa83 	bl	8000f60 <writeData>

  writeReg(0x20);	//Inversion Color OFF
 8000a5a:	2020      	movs	r0, #32
 8000a5c:	f000 fa5c 	bl	8000f18 <writeReg>
  writeReg(0x21);	//Inversion Color ON
 8000a60:	2021      	movs	r0, #33	; 0x21
 8000a62:	f000 fa59 	bl	8000f18 <writeReg>
  //--------------------------------ST7789V Frame rate setting----------------------------------//

  writeReg(0xB2);
 8000a66:	20b2      	movs	r0, #178	; 0xb2
 8000a68:	f000 fa56 	bl	8000f18 <writeReg>
  writeData (0x0C);
 8000a6c:	200c      	movs	r0, #12
 8000a6e:	f000 fa77 	bl	8000f60 <writeData>
  writeData (0x0C);
 8000a72:	200c      	movs	r0, #12
 8000a74:	f000 fa74 	bl	8000f60 <writeData>
  writeData (0x00);
 8000a78:	2000      	movs	r0, #0
 8000a7a:	f000 fa71 	bl	8000f60 <writeData>
  writeData (0x33);
 8000a7e:	2033      	movs	r0, #51	; 0x33
 8000a80:	f000 fa6e 	bl	8000f60 <writeData>
  writeData (0x33);
 8000a84:	2033      	movs	r0, #51	; 0x33
 8000a86:	f000 fa6b 	bl	8000f60 <writeData>

  writeReg(0xB7);
 8000a8a:	20b7      	movs	r0, #183	; 0xb7
 8000a8c:	f000 fa44 	bl	8000f18 <writeReg>
  writeData (0x35);
 8000a90:	2035      	movs	r0, #53	; 0x35
 8000a92:	f000 fa65 	bl	8000f60 <writeData>

  //---------------------------------ST7789V Power setting--------------------------------------//

  writeReg(0xBB);
 8000a96:	20bb      	movs	r0, #187	; 0xbb
 8000a98:	f000 fa3e 	bl	8000f18 <writeReg>
  writeData (0x2b);
 8000a9c:	202b      	movs	r0, #43	; 0x2b
 8000a9e:	f000 fa5f 	bl	8000f60 <writeData>

  writeReg(0xC0);
 8000aa2:	20c0      	movs	r0, #192	; 0xc0
 8000aa4:	f000 fa38 	bl	8000f18 <writeReg>
  writeData (0x2C);
 8000aa8:	202c      	movs	r0, #44	; 0x2c
 8000aaa:	f000 fa59 	bl	8000f60 <writeData>

  writeReg(0xC2);
 8000aae:	20c2      	movs	r0, #194	; 0xc2
 8000ab0:	f000 fa32 	bl	8000f18 <writeReg>
  writeData (0x01);
 8000ab4:	2001      	movs	r0, #1
 8000ab6:	f000 fa53 	bl	8000f60 <writeData>

  writeReg(0xC3);
 8000aba:	20c3      	movs	r0, #195	; 0xc3
 8000abc:	f000 fa2c 	bl	8000f18 <writeReg>
  writeData (0x17);
 8000ac0:	2017      	movs	r0, #23
 8000ac2:	f000 fa4d 	bl	8000f60 <writeData>

  writeReg(0xC4);
 8000ac6:	20c4      	movs	r0, #196	; 0xc4
 8000ac8:	f000 fa26 	bl	8000f18 <writeReg>
  writeData (0x20);
 8000acc:	2020      	movs	r0, #32
 8000ace:	f000 fa47 	bl	8000f60 <writeData>

  writeReg(0xC6);
 8000ad2:	20c6      	movs	r0, #198	; 0xc6
 8000ad4:	f000 fa20 	bl	8000f18 <writeReg>
  writeData (0x0A);
 8000ad8:	200a      	movs	r0, #10
 8000ada:	f000 fa41 	bl	8000f60 <writeData>

  writeReg(0xD0);
 8000ade:	20d0      	movs	r0, #208	; 0xd0
 8000ae0:	f000 fa1a 	bl	8000f18 <writeReg>
  writeData (0xA4);
 8000ae4:	20a4      	movs	r0, #164	; 0xa4
 8000ae6:	f000 fa3b 	bl	8000f60 <writeData>
  writeData (0xA1);
 8000aea:	20a1      	movs	r0, #161	; 0xa1
 8000aec:	f000 fa38 	bl	8000f60 <writeData>

  //--------------------------------ST7789S gamma setting---------------------------------------//

  writeReg(0xE0);
 8000af0:	20e0      	movs	r0, #224	; 0xe0
 8000af2:	f000 fa11 	bl	8000f18 <writeReg>
  writeData (0xD0);
 8000af6:	20d0      	movs	r0, #208	; 0xd0
 8000af8:	f000 fa32 	bl	8000f60 <writeData>
  writeData (0x0F);
 8000afc:	200f      	movs	r0, #15
 8000afe:	f000 fa2f 	bl	8000f60 <writeData>
  writeData (0x17);
 8000b02:	2017      	movs	r0, #23
 8000b04:	f000 fa2c 	bl	8000f60 <writeData>
  writeData (0x0D);
 8000b08:	200d      	movs	r0, #13
 8000b0a:	f000 fa29 	bl	8000f60 <writeData>
  writeData (0x0E);
 8000b0e:	200e      	movs	r0, #14
 8000b10:	f000 fa26 	bl	8000f60 <writeData>
  writeData (0x02);
 8000b14:	2002      	movs	r0, #2
 8000b16:	f000 fa23 	bl	8000f60 <writeData>
  writeData (0x3D);
 8000b1a:	203d      	movs	r0, #61	; 0x3d
 8000b1c:	f000 fa20 	bl	8000f60 <writeData>
  writeData (0x44);
 8000b20:	2044      	movs	r0, #68	; 0x44
 8000b22:	f000 fa1d 	bl	8000f60 <writeData>
  writeData (0x4E);
 8000b26:	204e      	movs	r0, #78	; 0x4e
 8000b28:	f000 fa1a 	bl	8000f60 <writeData>
  writeData (0x0C);
 8000b2c:	200c      	movs	r0, #12
 8000b2e:	f000 fa17 	bl	8000f60 <writeData>
  writeData (0x1B);
 8000b32:	201b      	movs	r0, #27
 8000b34:	f000 fa14 	bl	8000f60 <writeData>
  writeData (0x1B);
 8000b38:	201b      	movs	r0, #27
 8000b3a:	f000 fa11 	bl	8000f60 <writeData>
  writeData (0x1C);
 8000b3e:	201c      	movs	r0, #28
 8000b40:	f000 fa0e 	bl	8000f60 <writeData>
  writeData (0x1F);
 8000b44:	201f      	movs	r0, #31
 8000b46:	f000 fa0b 	bl	8000f60 <writeData>

  writeReg(0xE1);
 8000b4a:	20e1      	movs	r0, #225	; 0xe1
 8000b4c:	f000 f9e4 	bl	8000f18 <writeReg>
  writeData (0xD0);
 8000b50:	20d0      	movs	r0, #208	; 0xd0
 8000b52:	f000 fa05 	bl	8000f60 <writeData>
  writeData (0x0F);
 8000b56:	200f      	movs	r0, #15
 8000b58:	f000 fa02 	bl	8000f60 <writeData>
  writeData (0x17);
 8000b5c:	2017      	movs	r0, #23
 8000b5e:	f000 f9ff 	bl	8000f60 <writeData>
  writeData (0x0D);
 8000b62:	200d      	movs	r0, #13
 8000b64:	f000 f9fc 	bl	8000f60 <writeData>
  writeData (0x0E);
 8000b68:	200e      	movs	r0, #14
 8000b6a:	f000 f9f9 	bl	8000f60 <writeData>
  writeData (0x02);
 8000b6e:	2002      	movs	r0, #2
 8000b70:	f000 f9f6 	bl	8000f60 <writeData>
  writeData (0x3D);
 8000b74:	203d      	movs	r0, #61	; 0x3d
 8000b76:	f000 f9f3 	bl	8000f60 <writeData>
  writeData (0x44);
 8000b7a:	2044      	movs	r0, #68	; 0x44
 8000b7c:	f000 f9f0 	bl	8000f60 <writeData>
  writeData (0x4E);
 8000b80:	204e      	movs	r0, #78	; 0x4e
 8000b82:	f000 f9ed 	bl	8000f60 <writeData>
  writeData (0x0C);
 8000b86:	200c      	movs	r0, #12
 8000b88:	f000 f9ea 	bl	8000f60 <writeData>
  writeData (0x1B);
 8000b8c:	201b      	movs	r0, #27
 8000b8e:	f000 f9e7 	bl	8000f60 <writeData>
  writeData (0x1B);
 8000b92:	201b      	movs	r0, #27
 8000b94:	f000 f9e4 	bl	8000f60 <writeData>
  writeData (0x1C);
 8000b98:	201c      	movs	r0, #28
 8000b9a:	f000 f9e1 	bl	8000f60 <writeData>
  writeData (0x1F);
 8000b9e:	201f      	movs	r0, #31
 8000ba0:	f000 f9de 	bl	8000f60 <writeData>


  writeReg(0x29);
 8000ba4:	2029      	movs	r0, #41	; 0x29
 8000ba6:	f000 f9b7 	bl	8000f18 <writeReg>

  /* USER CODE END SPI3_Init 2 */

}
 8000baa:	bf00      	nop
 8000bac:	bd80      	pop	{r7, pc}
 8000bae:	bf00      	nop
 8000bb0:	20027248 	.word	0x20027248
 8000bb4:	40003c00 	.word	0x40003c00

08000bb8 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8000bb8:	b580      	push	{r7, lr}
 8000bba:	b08a      	sub	sp, #40	; 0x28
 8000bbc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000bbe:	f107 0320 	add.w	r3, r7, #32
 8000bc2:	2200      	movs	r2, #0
 8000bc4:	601a      	str	r2, [r3, #0]
 8000bc6:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000bc8:	1d3b      	adds	r3, r7, #4
 8000bca:	2200      	movs	r2, #0
 8000bcc:	601a      	str	r2, [r3, #0]
 8000bce:	605a      	str	r2, [r3, #4]
 8000bd0:	609a      	str	r2, [r3, #8]
 8000bd2:	60da      	str	r2, [r3, #12]
 8000bd4:	611a      	str	r2, [r3, #16]
 8000bd6:	615a      	str	r2, [r3, #20]
 8000bd8:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000bda:	4b22      	ldr	r3, [pc, #136]	; (8000c64 <MX_TIM2_Init+0xac>)
 8000bdc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000be0:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 119;
 8000be2:	4b20      	ldr	r3, [pc, #128]	; (8000c64 <MX_TIM2_Init+0xac>)
 8000be4:	2277      	movs	r2, #119	; 0x77
 8000be6:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000be8:	4b1e      	ldr	r3, [pc, #120]	; (8000c64 <MX_TIM2_Init+0xac>)
 8000bea:	2200      	movs	r2, #0
 8000bec:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 100;
 8000bee:	4b1d      	ldr	r3, [pc, #116]	; (8000c64 <MX_TIM2_Init+0xac>)
 8000bf0:	2264      	movs	r2, #100	; 0x64
 8000bf2:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000bf4:	4b1b      	ldr	r3, [pc, #108]	; (8000c64 <MX_TIM2_Init+0xac>)
 8000bf6:	2200      	movs	r2, #0
 8000bf8:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000bfa:	4b1a      	ldr	r3, [pc, #104]	; (8000c64 <MX_TIM2_Init+0xac>)
 8000bfc:	2200      	movs	r2, #0
 8000bfe:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8000c00:	4818      	ldr	r0, [pc, #96]	; (8000c64 <MX_TIM2_Init+0xac>)
 8000c02:	f004 fb88 	bl	8005316 <HAL_TIM_PWM_Init>
 8000c06:	4603      	mov	r3, r0
 8000c08:	2b00      	cmp	r3, #0
 8000c0a:	d001      	beq.n	8000c10 <MX_TIM2_Init+0x58>
  {
    Error_Handler();
 8000c0c:	f000 f9de 	bl	8000fcc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000c10:	2300      	movs	r3, #0
 8000c12:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000c14:	2300      	movs	r3, #0
 8000c16:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000c18:	f107 0320 	add.w	r3, r7, #32
 8000c1c:	4619      	mov	r1, r3
 8000c1e:	4811      	ldr	r0, [pc, #68]	; (8000c64 <MX_TIM2_Init+0xac>)
 8000c20:	f005 f84e 	bl	8005cc0 <HAL_TIMEx_MasterConfigSynchronization>
 8000c24:	4603      	mov	r3, r0
 8000c26:	2b00      	cmp	r3, #0
 8000c28:	d001      	beq.n	8000c2e <MX_TIM2_Init+0x76>
  {
    Error_Handler();
 8000c2a:	f000 f9cf 	bl	8000fcc <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000c2e:	2360      	movs	r3, #96	; 0x60
 8000c30:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 50;
 8000c32:	2332      	movs	r3, #50	; 0x32
 8000c34:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000c36:	2300      	movs	r3, #0
 8000c38:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000c3a:	2300      	movs	r3, #0
 8000c3c:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8000c3e:	1d3b      	adds	r3, r7, #4
 8000c40:	2200      	movs	r2, #0
 8000c42:	4619      	mov	r1, r3
 8000c44:	4807      	ldr	r0, [pc, #28]	; (8000c64 <MX_TIM2_Init+0xac>)
 8000c46:	f004 fcd7 	bl	80055f8 <HAL_TIM_PWM_ConfigChannel>
 8000c4a:	4603      	mov	r3, r0
 8000c4c:	2b00      	cmp	r3, #0
 8000c4e:	d001      	beq.n	8000c54 <MX_TIM2_Init+0x9c>
  {
    Error_Handler();
 8000c50:	f000 f9bc 	bl	8000fcc <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8000c54:	4803      	ldr	r0, [pc, #12]	; (8000c64 <MX_TIM2_Init+0xac>)
 8000c56:	f000 fc2f 	bl	80014b8 <HAL_TIM_MspPostInit>

}
 8000c5a:	bf00      	nop
 8000c5c:	3728      	adds	r7, #40	; 0x28
 8000c5e:	46bd      	mov	sp, r7
 8000c60:	bd80      	pop	{r7, pc}
 8000c62:	bf00      	nop
 8000c64:	20027388 	.word	0x20027388

08000c68 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8000c68:	b580      	push	{r7, lr}
 8000c6a:	b08a      	sub	sp, #40	; 0x28
 8000c6c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000c6e:	f107 0320 	add.w	r3, r7, #32
 8000c72:	2200      	movs	r2, #0
 8000c74:	601a      	str	r2, [r3, #0]
 8000c76:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000c78:	1d3b      	adds	r3, r7, #4
 8000c7a:	2200      	movs	r2, #0
 8000c7c:	601a      	str	r2, [r3, #0]
 8000c7e:	605a      	str	r2, [r3, #4]
 8000c80:	609a      	str	r2, [r3, #8]
 8000c82:	60da      	str	r2, [r3, #12]
 8000c84:	611a      	str	r2, [r3, #16]
 8000c86:	615a      	str	r2, [r3, #20]
 8000c88:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8000c8a:	4b21      	ldr	r3, [pc, #132]	; (8000d10 <MX_TIM3_Init+0xa8>)
 8000c8c:	4a21      	ldr	r2, [pc, #132]	; (8000d14 <MX_TIM3_Init+0xac>)
 8000c8e:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 119;
 8000c90:	4b1f      	ldr	r3, [pc, #124]	; (8000d10 <MX_TIM3_Init+0xa8>)
 8000c92:	2277      	movs	r2, #119	; 0x77
 8000c94:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000c96:	4b1e      	ldr	r3, [pc, #120]	; (8000d10 <MX_TIM3_Init+0xa8>)
 8000c98:	2200      	movs	r2, #0
 8000c9a:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 100;
 8000c9c:	4b1c      	ldr	r3, [pc, #112]	; (8000d10 <MX_TIM3_Init+0xa8>)
 8000c9e:	2264      	movs	r2, #100	; 0x64
 8000ca0:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000ca2:	4b1b      	ldr	r3, [pc, #108]	; (8000d10 <MX_TIM3_Init+0xa8>)
 8000ca4:	2200      	movs	r2, #0
 8000ca6:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000ca8:	4b19      	ldr	r3, [pc, #100]	; (8000d10 <MX_TIM3_Init+0xa8>)
 8000caa:	2200      	movs	r2, #0
 8000cac:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8000cae:	4818      	ldr	r0, [pc, #96]	; (8000d10 <MX_TIM3_Init+0xa8>)
 8000cb0:	f004 fb31 	bl	8005316 <HAL_TIM_PWM_Init>
 8000cb4:	4603      	mov	r3, r0
 8000cb6:	2b00      	cmp	r3, #0
 8000cb8:	d001      	beq.n	8000cbe <MX_TIM3_Init+0x56>
  {
    Error_Handler();
 8000cba:	f000 f987 	bl	8000fcc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000cbe:	2300      	movs	r3, #0
 8000cc0:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000cc2:	2300      	movs	r3, #0
 8000cc4:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000cc6:	f107 0320 	add.w	r3, r7, #32
 8000cca:	4619      	mov	r1, r3
 8000ccc:	4810      	ldr	r0, [pc, #64]	; (8000d10 <MX_TIM3_Init+0xa8>)
 8000cce:	f004 fff7 	bl	8005cc0 <HAL_TIMEx_MasterConfigSynchronization>
 8000cd2:	4603      	mov	r3, r0
 8000cd4:	2b00      	cmp	r3, #0
 8000cd6:	d001      	beq.n	8000cdc <MX_TIM3_Init+0x74>
  {
    Error_Handler();
 8000cd8:	f000 f978 	bl	8000fcc <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000cdc:	2360      	movs	r3, #96	; 0x60
 8000cde:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 50;
 8000ce0:	2332      	movs	r3, #50	; 0x32
 8000ce2:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000ce4:	2300      	movs	r3, #0
 8000ce6:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000ce8:	2300      	movs	r3, #0
 8000cea:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8000cec:	1d3b      	adds	r3, r7, #4
 8000cee:	2208      	movs	r2, #8
 8000cf0:	4619      	mov	r1, r3
 8000cf2:	4807      	ldr	r0, [pc, #28]	; (8000d10 <MX_TIM3_Init+0xa8>)
 8000cf4:	f004 fc80 	bl	80055f8 <HAL_TIM_PWM_ConfigChannel>
 8000cf8:	4603      	mov	r3, r0
 8000cfa:	2b00      	cmp	r3, #0
 8000cfc:	d001      	beq.n	8000d02 <MX_TIM3_Init+0x9a>
  {
    Error_Handler();
 8000cfe:	f000 f965 	bl	8000fcc <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8000d02:	4803      	ldr	r0, [pc, #12]	; (8000d10 <MX_TIM3_Init+0xa8>)
 8000d04:	f000 fbd8 	bl	80014b8 <HAL_TIM_MspPostInit>

}
 8000d08:	bf00      	nop
 8000d0a:	3728      	adds	r7, #40	; 0x28
 8000d0c:	46bd      	mov	sp, r7
 8000d0e:	bd80      	pop	{r7, pc}
 8000d10:	20027208 	.word	0x20027208
 8000d14:	40000400 	.word	0x40000400

08000d18 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8000d18:	b580      	push	{r7, lr}
 8000d1a:	b08a      	sub	sp, #40	; 0x28
 8000d1c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000d1e:	f107 0320 	add.w	r3, r7, #32
 8000d22:	2200      	movs	r2, #0
 8000d24:	601a      	str	r2, [r3, #0]
 8000d26:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000d28:	1d3b      	adds	r3, r7, #4
 8000d2a:	2200      	movs	r2, #0
 8000d2c:	601a      	str	r2, [r3, #0]
 8000d2e:	605a      	str	r2, [r3, #4]
 8000d30:	609a      	str	r2, [r3, #8]
 8000d32:	60da      	str	r2, [r3, #12]
 8000d34:	611a      	str	r2, [r3, #16]
 8000d36:	615a      	str	r2, [r3, #20]
 8000d38:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8000d3a:	4b21      	ldr	r3, [pc, #132]	; (8000dc0 <MX_TIM4_Init+0xa8>)
 8000d3c:	4a21      	ldr	r2, [pc, #132]	; (8000dc4 <MX_TIM4_Init+0xac>)
 8000d3e:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 119;
 8000d40:	4b1f      	ldr	r3, [pc, #124]	; (8000dc0 <MX_TIM4_Init+0xa8>)
 8000d42:	2277      	movs	r2, #119	; 0x77
 8000d44:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000d46:	4b1e      	ldr	r3, [pc, #120]	; (8000dc0 <MX_TIM4_Init+0xa8>)
 8000d48:	2200      	movs	r2, #0
 8000d4a:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 100;
 8000d4c:	4b1c      	ldr	r3, [pc, #112]	; (8000dc0 <MX_TIM4_Init+0xa8>)
 8000d4e:	2264      	movs	r2, #100	; 0x64
 8000d50:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000d52:	4b1b      	ldr	r3, [pc, #108]	; (8000dc0 <MX_TIM4_Init+0xa8>)
 8000d54:	2200      	movs	r2, #0
 8000d56:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000d58:	4b19      	ldr	r3, [pc, #100]	; (8000dc0 <MX_TIM4_Init+0xa8>)
 8000d5a:	2200      	movs	r2, #0
 8000d5c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8000d5e:	4818      	ldr	r0, [pc, #96]	; (8000dc0 <MX_TIM4_Init+0xa8>)
 8000d60:	f004 fad9 	bl	8005316 <HAL_TIM_PWM_Init>
 8000d64:	4603      	mov	r3, r0
 8000d66:	2b00      	cmp	r3, #0
 8000d68:	d001      	beq.n	8000d6e <MX_TIM4_Init+0x56>
  {
    Error_Handler();
 8000d6a:	f000 f92f 	bl	8000fcc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000d6e:	2300      	movs	r3, #0
 8000d70:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000d72:	2300      	movs	r3, #0
 8000d74:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8000d76:	f107 0320 	add.w	r3, r7, #32
 8000d7a:	4619      	mov	r1, r3
 8000d7c:	4810      	ldr	r0, [pc, #64]	; (8000dc0 <MX_TIM4_Init+0xa8>)
 8000d7e:	f004 ff9f 	bl	8005cc0 <HAL_TIMEx_MasterConfigSynchronization>
 8000d82:	4603      	mov	r3, r0
 8000d84:	2b00      	cmp	r3, #0
 8000d86:	d001      	beq.n	8000d8c <MX_TIM4_Init+0x74>
  {
    Error_Handler();
 8000d88:	f000 f920 	bl	8000fcc <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000d8c:	2360      	movs	r3, #96	; 0x60
 8000d8e:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8000d90:	2300      	movs	r3, #0
 8000d92:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000d94:	2300      	movs	r3, #0
 8000d96:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000d98:	2300      	movs	r3, #0
 8000d9a:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8000d9c:	1d3b      	adds	r3, r7, #4
 8000d9e:	220c      	movs	r2, #12
 8000da0:	4619      	mov	r1, r3
 8000da2:	4807      	ldr	r0, [pc, #28]	; (8000dc0 <MX_TIM4_Init+0xa8>)
 8000da4:	f004 fc28 	bl	80055f8 <HAL_TIM_PWM_ConfigChannel>
 8000da8:	4603      	mov	r3, r0
 8000daa:	2b00      	cmp	r3, #0
 8000dac:	d001      	beq.n	8000db2 <MX_TIM4_Init+0x9a>
  {
    Error_Handler();
 8000dae:	f000 f90d 	bl	8000fcc <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */
  HAL_TIM_MspPostInit(&htim4);
 8000db2:	4803      	ldr	r0, [pc, #12]	; (8000dc0 <MX_TIM4_Init+0xa8>)
 8000db4:	f000 fb80 	bl	80014b8 <HAL_TIM_MspPostInit>

}
 8000db8:	bf00      	nop
 8000dba:	3728      	adds	r7, #40	; 0x28
 8000dbc:	46bd      	mov	sp, r7
 8000dbe:	bd80      	pop	{r7, pc}
 8000dc0:	200271c0 	.word	0x200271c0
 8000dc4:	40000800 	.word	0x40000800

08000dc8 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000dc8:	b580      	push	{r7, lr}
 8000dca:	b08c      	sub	sp, #48	; 0x30
 8000dcc:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000dce:	f107 031c 	add.w	r3, r7, #28
 8000dd2:	2200      	movs	r2, #0
 8000dd4:	601a      	str	r2, [r3, #0]
 8000dd6:	605a      	str	r2, [r3, #4]
 8000dd8:	609a      	str	r2, [r3, #8]
 8000dda:	60da      	str	r2, [r3, #12]
 8000ddc:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000dde:	2300      	movs	r3, #0
 8000de0:	61bb      	str	r3, [r7, #24]
 8000de2:	4b49      	ldr	r3, [pc, #292]	; (8000f08 <MX_GPIO_Init+0x140>)
 8000de4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000de6:	4a48      	ldr	r2, [pc, #288]	; (8000f08 <MX_GPIO_Init+0x140>)
 8000de8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000dec:	6313      	str	r3, [r2, #48]	; 0x30
 8000dee:	4b46      	ldr	r3, [pc, #280]	; (8000f08 <MX_GPIO_Init+0x140>)
 8000df0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000df2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000df6:	61bb      	str	r3, [r7, #24]
 8000df8:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000dfa:	2300      	movs	r3, #0
 8000dfc:	617b      	str	r3, [r7, #20]
 8000dfe:	4b42      	ldr	r3, [pc, #264]	; (8000f08 <MX_GPIO_Init+0x140>)
 8000e00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e02:	4a41      	ldr	r2, [pc, #260]	; (8000f08 <MX_GPIO_Init+0x140>)
 8000e04:	f043 0301 	orr.w	r3, r3, #1
 8000e08:	6313      	str	r3, [r2, #48]	; 0x30
 8000e0a:	4b3f      	ldr	r3, [pc, #252]	; (8000f08 <MX_GPIO_Init+0x140>)
 8000e0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e0e:	f003 0301 	and.w	r3, r3, #1
 8000e12:	617b      	str	r3, [r7, #20]
 8000e14:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000e16:	2300      	movs	r3, #0
 8000e18:	613b      	str	r3, [r7, #16]
 8000e1a:	4b3b      	ldr	r3, [pc, #236]	; (8000f08 <MX_GPIO_Init+0x140>)
 8000e1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e1e:	4a3a      	ldr	r2, [pc, #232]	; (8000f08 <MX_GPIO_Init+0x140>)
 8000e20:	f043 0304 	orr.w	r3, r3, #4
 8000e24:	6313      	str	r3, [r2, #48]	; 0x30
 8000e26:	4b38      	ldr	r3, [pc, #224]	; (8000f08 <MX_GPIO_Init+0x140>)
 8000e28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e2a:	f003 0304 	and.w	r3, r3, #4
 8000e2e:	613b      	str	r3, [r7, #16]
 8000e30:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000e32:	2300      	movs	r3, #0
 8000e34:	60fb      	str	r3, [r7, #12]
 8000e36:	4b34      	ldr	r3, [pc, #208]	; (8000f08 <MX_GPIO_Init+0x140>)
 8000e38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e3a:	4a33      	ldr	r2, [pc, #204]	; (8000f08 <MX_GPIO_Init+0x140>)
 8000e3c:	f043 0302 	orr.w	r3, r3, #2
 8000e40:	6313      	str	r3, [r2, #48]	; 0x30
 8000e42:	4b31      	ldr	r3, [pc, #196]	; (8000f08 <MX_GPIO_Init+0x140>)
 8000e44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e46:	f003 0302 	and.w	r3, r3, #2
 8000e4a:	60fb      	str	r3, [r7, #12]
 8000e4c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000e4e:	2300      	movs	r3, #0
 8000e50:	60bb      	str	r3, [r7, #8]
 8000e52:	4b2d      	ldr	r3, [pc, #180]	; (8000f08 <MX_GPIO_Init+0x140>)
 8000e54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e56:	4a2c      	ldr	r2, [pc, #176]	; (8000f08 <MX_GPIO_Init+0x140>)
 8000e58:	f043 0310 	orr.w	r3, r3, #16
 8000e5c:	6313      	str	r3, [r2, #48]	; 0x30
 8000e5e:	4b2a      	ldr	r3, [pc, #168]	; (8000f08 <MX_GPIO_Init+0x140>)
 8000e60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e62:	f003 0310 	and.w	r3, r3, #16
 8000e66:	60bb      	str	r3, [r7, #8]
 8000e68:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000e6a:	2300      	movs	r3, #0
 8000e6c:	607b      	str	r3, [r7, #4]
 8000e6e:	4b26      	ldr	r3, [pc, #152]	; (8000f08 <MX_GPIO_Init+0x140>)
 8000e70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e72:	4a25      	ldr	r2, [pc, #148]	; (8000f08 <MX_GPIO_Init+0x140>)
 8000e74:	f043 0308 	orr.w	r3, r3, #8
 8000e78:	6313      	str	r3, [r2, #48]	; 0x30
 8000e7a:	4b23      	ldr	r3, [pc, #140]	; (8000f08 <MX_GPIO_Init+0x140>)
 8000e7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e7e:	f003 0308 	and.w	r3, r3, #8
 8000e82:	607b      	str	r3, [r7, #4]
 8000e84:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, GPIO_PIN_RESET);
 8000e86:	2200      	movs	r2, #0
 8000e88:	2120      	movs	r1, #32
 8000e8a:	4820      	ldr	r0, [pc, #128]	; (8000f0c <MX_GPIO_Init+0x144>)
 8000e8c:	f001 fd88 	bl	80029a0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, TP_RESET_Pin|GPIO_PIN_13|GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 8000e90:	2200      	movs	r2, #0
 8000e92:	f242 2103 	movw	r1, #8707	; 0x2203
 8000e96:	481e      	ldr	r0, [pc, #120]	; (8000f10 <MX_GPIO_Init+0x148>)
 8000e98:	f001 fd82 	bl	80029a0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PC5 */
  GPIO_InitStruct.Pin = GPIO_PIN_5;
 8000e9c:	2320      	movs	r3, #32
 8000e9e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ea0:	2301      	movs	r3, #1
 8000ea2:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ea4:	2300      	movs	r3, #0
 8000ea6:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ea8:	2300      	movs	r3, #0
 8000eaa:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000eac:	f107 031c 	add.w	r3, r7, #28
 8000eb0:	4619      	mov	r1, r3
 8000eb2:	4816      	ldr	r0, [pc, #88]	; (8000f0c <MX_GPIO_Init+0x144>)
 8000eb4:	f001 fbca 	bl	800264c <HAL_GPIO_Init>

  /*Configure GPIO pins : TP_RESET_Pin PD13 PD0 PD1 */
  GPIO_InitStruct.Pin = TP_RESET_Pin|GPIO_PIN_13|GPIO_PIN_0|GPIO_PIN_1;
 8000eb8:	f242 2303 	movw	r3, #8707	; 0x2203
 8000ebc:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ebe:	2301      	movs	r3, #1
 8000ec0:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ec2:	2300      	movs	r3, #0
 8000ec4:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ec6:	2300      	movs	r3, #0
 8000ec8:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000eca:	f107 031c 	add.w	r3, r7, #28
 8000ece:	4619      	mov	r1, r3
 8000ed0:	480f      	ldr	r0, [pc, #60]	; (8000f10 <MX_GPIO_Init+0x148>)
 8000ed2:	f001 fbbb 	bl	800264c <HAL_GPIO_Init>

  /*Configure GPIO pin : TP_INT_Pin */
  GPIO_InitStruct.Pin = TP_INT_Pin;
 8000ed6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000eda:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000edc:	4b0d      	ldr	r3, [pc, #52]	; (8000f14 <MX_GPIO_Init+0x14c>)
 8000ede:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ee0:	2300      	movs	r3, #0
 8000ee2:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(TP_INT_GPIO_Port, &GPIO_InitStruct);
 8000ee4:	f107 031c 	add.w	r3, r7, #28
 8000ee8:	4619      	mov	r1, r3
 8000eea:	4809      	ldr	r0, [pc, #36]	; (8000f10 <MX_GPIO_Init+0x148>)
 8000eec:	f001 fbae 	bl	800264c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8000ef0:	2200      	movs	r2, #0
 8000ef2:	2100      	movs	r1, #0
 8000ef4:	2028      	movs	r0, #40	; 0x28
 8000ef6:	f000 ff5d 	bl	8001db4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8000efa:	2028      	movs	r0, #40	; 0x28
 8000efc:	f000 ff76 	bl	8001dec <HAL_NVIC_EnableIRQ>

}
 8000f00:	bf00      	nop
 8000f02:	3730      	adds	r7, #48	; 0x30
 8000f04:	46bd      	mov	sp, r7
 8000f06:	bd80      	pop	{r7, pc}
 8000f08:	40023800 	.word	0x40023800
 8000f0c:	40020800 	.word	0x40020800
 8000f10:	40020c00 	.word	0x40020c00
 8000f14:	10110000 	.word	0x10110000

08000f18 <writeReg>:

/* USER CODE BEGIN 4 */
void writeReg(uint8_t reg)
{
 8000f18:	b580      	push	{r7, lr}
 8000f1a:	b082      	sub	sp, #8
 8000f1c:	af00      	add	r7, sp, #0
 8000f1e:	4603      	mov	r3, r0
 8000f20:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, GPIO_PIN_RESET);
 8000f22:	2200      	movs	r2, #0
 8000f24:	2120      	movs	r1, #32
 8000f26:	480b      	ldr	r0, [pc, #44]	; (8000f54 <writeReg+0x3c>)
 8000f28:	f001 fd3a 	bl	80029a0 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_0, GPIO_PIN_RESET);
 8000f2c:	2200      	movs	r2, #0
 8000f2e:	2101      	movs	r1, #1
 8000f30:	4809      	ldr	r0, [pc, #36]	; (8000f58 <writeReg+0x40>)
 8000f32:	f001 fd35 	bl	80029a0 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi3, &reg, 1, 10);
 8000f36:	1df9      	adds	r1, r7, #7
 8000f38:	230a      	movs	r3, #10
 8000f3a:	2201      	movs	r2, #1
 8000f3c:	4807      	ldr	r0, [pc, #28]	; (8000f5c <writeReg+0x44>)
 8000f3e:	f003 ffb1 	bl	8004ea4 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_0, GPIO_PIN_SET);
 8000f42:	2201      	movs	r2, #1
 8000f44:	2101      	movs	r1, #1
 8000f46:	4804      	ldr	r0, [pc, #16]	; (8000f58 <writeReg+0x40>)
 8000f48:	f001 fd2a 	bl	80029a0 <HAL_GPIO_WritePin>
}
 8000f4c:	bf00      	nop
 8000f4e:	3708      	adds	r7, #8
 8000f50:	46bd      	mov	sp, r7
 8000f52:	bd80      	pop	{r7, pc}
 8000f54:	40020800 	.word	0x40020800
 8000f58:	40020c00 	.word	0x40020c00
 8000f5c:	20027248 	.word	0x20027248

08000f60 <writeData>:

void writeData(uint8_t data)
{
 8000f60:	b580      	push	{r7, lr}
 8000f62:	b082      	sub	sp, #8
 8000f64:	af00      	add	r7, sp, #0
 8000f66:	4603      	mov	r3, r0
 8000f68:	71fb      	strb	r3, [r7, #7]
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_5, GPIO_PIN_SET);
 8000f6a:	2201      	movs	r2, #1
 8000f6c:	2120      	movs	r1, #32
 8000f6e:	480b      	ldr	r0, [pc, #44]	; (8000f9c <writeData+0x3c>)
 8000f70:	f001 fd16 	bl	80029a0 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_0, GPIO_PIN_RESET);
 8000f74:	2200      	movs	r2, #0
 8000f76:	2101      	movs	r1, #1
 8000f78:	4809      	ldr	r0, [pc, #36]	; (8000fa0 <writeData+0x40>)
 8000f7a:	f001 fd11 	bl	80029a0 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi3, &data, 1, 10);
 8000f7e:	1df9      	adds	r1, r7, #7
 8000f80:	230a      	movs	r3, #10
 8000f82:	2201      	movs	r2, #1
 8000f84:	4807      	ldr	r0, [pc, #28]	; (8000fa4 <writeData+0x44>)
 8000f86:	f003 ff8d 	bl	8004ea4 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(GPIOD, GPIO_PIN_0, GPIO_PIN_SET);
 8000f8a:	2201      	movs	r2, #1
 8000f8c:	2101      	movs	r1, #1
 8000f8e:	4804      	ldr	r0, [pc, #16]	; (8000fa0 <writeData+0x40>)
 8000f90:	f001 fd06 	bl	80029a0 <HAL_GPIO_WritePin>
}
 8000f94:	bf00      	nop
 8000f96:	3708      	adds	r7, #8
 8000f98:	46bd      	mov	sp, r7
 8000f9a:	bd80      	pop	{r7, pc}
 8000f9c:	40020800 	.word	0x40020800
 8000fa0:	40020c00 	.word	0x40020c00
 8000fa4:	20027248 	.word	0x20027248

08000fa8 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000fa8:	b580      	push	{r7, lr}
 8000faa:	b082      	sub	sp, #8
 8000fac:	af00      	add	r7, sp, #0
 8000fae:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM1) {
 8000fb0:	687b      	ldr	r3, [r7, #4]
 8000fb2:	681b      	ldr	r3, [r3, #0]
 8000fb4:	4a04      	ldr	r2, [pc, #16]	; (8000fc8 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8000fb6:	4293      	cmp	r3, r2
 8000fb8:	d101      	bne.n	8000fbe <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8000fba:	f000 fddf 	bl	8001b7c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8000fbe:	bf00      	nop
 8000fc0:	3708      	adds	r7, #8
 8000fc2:	46bd      	mov	sp, r7
 8000fc4:	bd80      	pop	{r7, pc}
 8000fc6:	bf00      	nop
 8000fc8:	40010000 	.word	0x40010000

08000fcc <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000fcc:	b480      	push	{r7}
 8000fce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8000fd0:	bf00      	nop
 8000fd2:	46bd      	mov	sp, r7
 8000fd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fd8:	4770      	bx	lr
	...

08000fdc <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                                            /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000fdc:	b480      	push	{r7}
 8000fde:	b083      	sub	sp, #12
 8000fe0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000fe2:	2300      	movs	r3, #0
 8000fe4:	607b      	str	r3, [r7, #4]
 8000fe6:	4b10      	ldr	r3, [pc, #64]	; (8001028 <HAL_MspInit+0x4c>)
 8000fe8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000fea:	4a0f      	ldr	r2, [pc, #60]	; (8001028 <HAL_MspInit+0x4c>)
 8000fec:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000ff0:	6453      	str	r3, [r2, #68]	; 0x44
 8000ff2:	4b0d      	ldr	r3, [pc, #52]	; (8001028 <HAL_MspInit+0x4c>)
 8000ff4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000ff6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000ffa:	607b      	str	r3, [r7, #4]
 8000ffc:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ffe:	2300      	movs	r3, #0
 8001000:	603b      	str	r3, [r7, #0]
 8001002:	4b09      	ldr	r3, [pc, #36]	; (8001028 <HAL_MspInit+0x4c>)
 8001004:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001006:	4a08      	ldr	r2, [pc, #32]	; (8001028 <HAL_MspInit+0x4c>)
 8001008:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800100c:	6413      	str	r3, [r2, #64]	; 0x40
 800100e:	4b06      	ldr	r3, [pc, #24]	; (8001028 <HAL_MspInit+0x4c>)
 8001010:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001012:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001016:	603b      	str	r3, [r7, #0]
 8001018:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800101a:	bf00      	nop
 800101c:	370c      	adds	r7, #12
 800101e:	46bd      	mov	sp, r7
 8001020:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001024:	4770      	bx	lr
 8001026:	bf00      	nop
 8001028:	40023800 	.word	0x40023800

0800102c <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 800102c:	b480      	push	{r7}
 800102e:	b085      	sub	sp, #20
 8001030:	af00      	add	r7, sp, #0
 8001032:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8001034:	687b      	ldr	r3, [r7, #4]
 8001036:	681b      	ldr	r3, [r3, #0]
 8001038:	4a0b      	ldr	r2, [pc, #44]	; (8001068 <HAL_CRC_MspInit+0x3c>)
 800103a:	4293      	cmp	r3, r2
 800103c:	d10d      	bne.n	800105a <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800103e:	2300      	movs	r3, #0
 8001040:	60fb      	str	r3, [r7, #12]
 8001042:	4b0a      	ldr	r3, [pc, #40]	; (800106c <HAL_CRC_MspInit+0x40>)
 8001044:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001046:	4a09      	ldr	r2, [pc, #36]	; (800106c <HAL_CRC_MspInit+0x40>)
 8001048:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800104c:	6313      	str	r3, [r2, #48]	; 0x30
 800104e:	4b07      	ldr	r3, [pc, #28]	; (800106c <HAL_CRC_MspInit+0x40>)
 8001050:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001052:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001056:	60fb      	str	r3, [r7, #12]
 8001058:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 800105a:	bf00      	nop
 800105c:	3714      	adds	r7, #20
 800105e:	46bd      	mov	sp, r7
 8001060:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001064:	4770      	bx	lr
 8001066:	bf00      	nop
 8001068:	40023000 	.word	0x40023000
 800106c:	40023800 	.word	0x40023800

08001070 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001070:	b580      	push	{r7, lr}
 8001072:	b084      	sub	sp, #16
 8001074:	af00      	add	r7, sp, #0
 8001076:	6078      	str	r0, [r7, #4]
  if(hdma2d->Instance==DMA2D)
 8001078:	687b      	ldr	r3, [r7, #4]
 800107a:	681b      	ldr	r3, [r3, #0]
 800107c:	4a0e      	ldr	r2, [pc, #56]	; (80010b8 <HAL_DMA2D_MspInit+0x48>)
 800107e:	4293      	cmp	r3, r2
 8001080:	d115      	bne.n	80010ae <HAL_DMA2D_MspInit+0x3e>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001082:	2300      	movs	r3, #0
 8001084:	60fb      	str	r3, [r7, #12]
 8001086:	4b0d      	ldr	r3, [pc, #52]	; (80010bc <HAL_DMA2D_MspInit+0x4c>)
 8001088:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800108a:	4a0c      	ldr	r2, [pc, #48]	; (80010bc <HAL_DMA2D_MspInit+0x4c>)
 800108c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001090:	6313      	str	r3, [r2, #48]	; 0x30
 8001092:	4b0a      	ldr	r3, [pc, #40]	; (80010bc <HAL_DMA2D_MspInit+0x4c>)
 8001094:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001096:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800109a:	60fb      	str	r3, [r7, #12]
 800109c:	68fb      	ldr	r3, [r7, #12]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 0, 0);
 800109e:	2200      	movs	r2, #0
 80010a0:	2100      	movs	r1, #0
 80010a2:	205a      	movs	r0, #90	; 0x5a
 80010a4:	f000 fe86 	bl	8001db4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80010a8:	205a      	movs	r0, #90	; 0x5a
 80010aa:	f000 fe9f 	bl	8001dec <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 80010ae:	bf00      	nop
 80010b0:	3710      	adds	r7, #16
 80010b2:	46bd      	mov	sp, r7
 80010b4:	bd80      	pop	{r7, pc}
 80010b6:	bf00      	nop
 80010b8:	4002b000 	.word	0x4002b000
 80010bc:	40023800 	.word	0x40023800

080010c0 <HAL_DMA2D_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
{
 80010c0:	b580      	push	{r7, lr}
 80010c2:	b082      	sub	sp, #8
 80010c4:	af00      	add	r7, sp, #0
 80010c6:	6078      	str	r0, [r7, #4]
  if(hdma2d->Instance==DMA2D)
 80010c8:	687b      	ldr	r3, [r7, #4]
 80010ca:	681b      	ldr	r3, [r3, #0]
 80010cc:	4a07      	ldr	r2, [pc, #28]	; (80010ec <HAL_DMA2D_MspDeInit+0x2c>)
 80010ce:	4293      	cmp	r3, r2
 80010d0:	d108      	bne.n	80010e4 <HAL_DMA2D_MspDeInit+0x24>
  {
  /* USER CODE BEGIN DMA2D_MspDeInit 0 */

  /* USER CODE END DMA2D_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_DMA2D_CLK_DISABLE();
 80010d2:	4b07      	ldr	r3, [pc, #28]	; (80010f0 <HAL_DMA2D_MspDeInit+0x30>)
 80010d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80010d6:	4a06      	ldr	r2, [pc, #24]	; (80010f0 <HAL_DMA2D_MspDeInit+0x30>)
 80010d8:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80010dc:	6313      	str	r3, [r2, #48]	; 0x30

    /* DMA2D interrupt DeInit */
    HAL_NVIC_DisableIRQ(DMA2D_IRQn);
 80010de:	205a      	movs	r0, #90	; 0x5a
 80010e0:	f000 fe92 	bl	8001e08 <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN DMA2D_MspDeInit 1 */

  /* USER CODE END DMA2D_MspDeInit 1 */
  }

}
 80010e4:	bf00      	nop
 80010e6:	3708      	adds	r7, #8
 80010e8:	46bd      	mov	sp, r7
 80010ea:	bd80      	pop	{r7, pc}
 80010ec:	4002b000 	.word	0x4002b000
 80010f0:	40023800 	.word	0x40023800

080010f4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80010f4:	b580      	push	{r7, lr}
 80010f6:	b08a      	sub	sp, #40	; 0x28
 80010f8:	af00      	add	r7, sp, #0
 80010fa:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80010fc:	f107 0314 	add.w	r3, r7, #20
 8001100:	2200      	movs	r2, #0
 8001102:	601a      	str	r2, [r3, #0]
 8001104:	605a      	str	r2, [r3, #4]
 8001106:	609a      	str	r2, [r3, #8]
 8001108:	60da      	str	r2, [r3, #12]
 800110a:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C3)
 800110c:	687b      	ldr	r3, [r7, #4]
 800110e:	681b      	ldr	r3, [r3, #0]
 8001110:	4a29      	ldr	r2, [pc, #164]	; (80011b8 <HAL_I2C_MspInit+0xc4>)
 8001112:	4293      	cmp	r3, r2
 8001114:	d14b      	bne.n	80011ae <HAL_I2C_MspInit+0xba>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */
  
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001116:	2300      	movs	r3, #0
 8001118:	613b      	str	r3, [r7, #16]
 800111a:	4b28      	ldr	r3, [pc, #160]	; (80011bc <HAL_I2C_MspInit+0xc8>)
 800111c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800111e:	4a27      	ldr	r2, [pc, #156]	; (80011bc <HAL_I2C_MspInit+0xc8>)
 8001120:	f043 0304 	orr.w	r3, r3, #4
 8001124:	6313      	str	r3, [r2, #48]	; 0x30
 8001126:	4b25      	ldr	r3, [pc, #148]	; (80011bc <HAL_I2C_MspInit+0xc8>)
 8001128:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800112a:	f003 0304 	and.w	r3, r3, #4
 800112e:	613b      	str	r3, [r7, #16]
 8001130:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001132:	2300      	movs	r3, #0
 8001134:	60fb      	str	r3, [r7, #12]
 8001136:	4b21      	ldr	r3, [pc, #132]	; (80011bc <HAL_I2C_MspInit+0xc8>)
 8001138:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800113a:	4a20      	ldr	r2, [pc, #128]	; (80011bc <HAL_I2C_MspInit+0xc8>)
 800113c:	f043 0301 	orr.w	r3, r3, #1
 8001140:	6313      	str	r3, [r2, #48]	; 0x30
 8001142:	4b1e      	ldr	r3, [pc, #120]	; (80011bc <HAL_I2C_MspInit+0xc8>)
 8001144:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001146:	f003 0301 	and.w	r3, r3, #1
 800114a:	60fb      	str	r3, [r7, #12]
 800114c:	68fb      	ldr	r3, [r7, #12]
    /**I2C3 GPIO Configuration    
    PC9     ------> I2C3_SDA
    PA8     ------> I2C3_SCL 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 800114e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001152:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001154:	2312      	movs	r3, #18
 8001156:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001158:	2301      	movs	r3, #1
 800115a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800115c:	2303      	movs	r3, #3
 800115e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001160:	2304      	movs	r3, #4
 8001162:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001164:	f107 0314 	add.w	r3, r7, #20
 8001168:	4619      	mov	r1, r3
 800116a:	4815      	ldr	r0, [pc, #84]	; (80011c0 <HAL_I2C_MspInit+0xcc>)
 800116c:	f001 fa6e 	bl	800264c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001170:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001174:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001176:	2312      	movs	r3, #18
 8001178:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 800117a:	2301      	movs	r3, #1
 800117c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800117e:	2303      	movs	r3, #3
 8001180:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001182:	2304      	movs	r3, #4
 8001184:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001186:	f107 0314 	add.w	r3, r7, #20
 800118a:	4619      	mov	r1, r3
 800118c:	480d      	ldr	r0, [pc, #52]	; (80011c4 <HAL_I2C_MspInit+0xd0>)
 800118e:	f001 fa5d 	bl	800264c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001192:	2300      	movs	r3, #0
 8001194:	60bb      	str	r3, [r7, #8]
 8001196:	4b09      	ldr	r3, [pc, #36]	; (80011bc <HAL_I2C_MspInit+0xc8>)
 8001198:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800119a:	4a08      	ldr	r2, [pc, #32]	; (80011bc <HAL_I2C_MspInit+0xc8>)
 800119c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80011a0:	6413      	str	r3, [r2, #64]	; 0x40
 80011a2:	4b06      	ldr	r3, [pc, #24]	; (80011bc <HAL_I2C_MspInit+0xc8>)
 80011a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011a6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80011aa:	60bb      	str	r3, [r7, #8]
 80011ac:	68bb      	ldr	r3, [r7, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }

}
 80011ae:	bf00      	nop
 80011b0:	3728      	adds	r7, #40	; 0x28
 80011b2:	46bd      	mov	sp, r7
 80011b4:	bd80      	pop	{r7, pc}
 80011b6:	bf00      	nop
 80011b8:	40005c00 	.word	0x40005c00
 80011bc:	40023800 	.word	0x40023800
 80011c0:	40020800 	.word	0x40020800
 80011c4:	40020000 	.word	0x40020000

080011c8 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 80011c8:	b580      	push	{r7, lr}
 80011ca:	b08e      	sub	sp, #56	; 0x38
 80011cc:	af00      	add	r7, sp, #0
 80011ce:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80011d0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80011d4:	2200      	movs	r2, #0
 80011d6:	601a      	str	r2, [r3, #0]
 80011d8:	605a      	str	r2, [r3, #4]
 80011da:	609a      	str	r2, [r3, #8]
 80011dc:	60da      	str	r2, [r3, #12]
 80011de:	611a      	str	r2, [r3, #16]
  if(hltdc->Instance==LTDC)
 80011e0:	687b      	ldr	r3, [r7, #4]
 80011e2:	681b      	ldr	r3, [r3, #0]
 80011e4:	4a63      	ldr	r2, [pc, #396]	; (8001374 <HAL_LTDC_MspInit+0x1ac>)
 80011e6:	4293      	cmp	r3, r2
 80011e8:	f040 80c0 	bne.w	800136c <HAL_LTDC_MspInit+0x1a4>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80011ec:	2300      	movs	r3, #0
 80011ee:	623b      	str	r3, [r7, #32]
 80011f0:	4b61      	ldr	r3, [pc, #388]	; (8001378 <HAL_LTDC_MspInit+0x1b0>)
 80011f2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80011f4:	4a60      	ldr	r2, [pc, #384]	; (8001378 <HAL_LTDC_MspInit+0x1b0>)
 80011f6:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80011fa:	6453      	str	r3, [r2, #68]	; 0x44
 80011fc:	4b5e      	ldr	r3, [pc, #376]	; (8001378 <HAL_LTDC_MspInit+0x1b0>)
 80011fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001200:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001204:	623b      	str	r3, [r7, #32]
 8001206:	6a3b      	ldr	r3, [r7, #32]
  
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001208:	2300      	movs	r3, #0
 800120a:	61fb      	str	r3, [r7, #28]
 800120c:	4b5a      	ldr	r3, [pc, #360]	; (8001378 <HAL_LTDC_MspInit+0x1b0>)
 800120e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001210:	4a59      	ldr	r2, [pc, #356]	; (8001378 <HAL_LTDC_MspInit+0x1b0>)
 8001212:	f043 0301 	orr.w	r3, r3, #1
 8001216:	6313      	str	r3, [r2, #48]	; 0x30
 8001218:	4b57      	ldr	r3, [pc, #348]	; (8001378 <HAL_LTDC_MspInit+0x1b0>)
 800121a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800121c:	f003 0301 	and.w	r3, r3, #1
 8001220:	61fb      	str	r3, [r7, #28]
 8001222:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001224:	2300      	movs	r3, #0
 8001226:	61bb      	str	r3, [r7, #24]
 8001228:	4b53      	ldr	r3, [pc, #332]	; (8001378 <HAL_LTDC_MspInit+0x1b0>)
 800122a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800122c:	4a52      	ldr	r2, [pc, #328]	; (8001378 <HAL_LTDC_MspInit+0x1b0>)
 800122e:	f043 0302 	orr.w	r3, r3, #2
 8001232:	6313      	str	r3, [r2, #48]	; 0x30
 8001234:	4b50      	ldr	r3, [pc, #320]	; (8001378 <HAL_LTDC_MspInit+0x1b0>)
 8001236:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001238:	f003 0302 	and.w	r3, r3, #2
 800123c:	61bb      	str	r3, [r7, #24]
 800123e:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8001240:	2300      	movs	r3, #0
 8001242:	617b      	str	r3, [r7, #20]
 8001244:	4b4c      	ldr	r3, [pc, #304]	; (8001378 <HAL_LTDC_MspInit+0x1b0>)
 8001246:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001248:	4a4b      	ldr	r2, [pc, #300]	; (8001378 <HAL_LTDC_MspInit+0x1b0>)
 800124a:	f043 0310 	orr.w	r3, r3, #16
 800124e:	6313      	str	r3, [r2, #48]	; 0x30
 8001250:	4b49      	ldr	r3, [pc, #292]	; (8001378 <HAL_LTDC_MspInit+0x1b0>)
 8001252:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001254:	f003 0310 	and.w	r3, r3, #16
 8001258:	617b      	str	r3, [r7, #20]
 800125a:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800125c:	2300      	movs	r3, #0
 800125e:	613b      	str	r3, [r7, #16]
 8001260:	4b45      	ldr	r3, [pc, #276]	; (8001378 <HAL_LTDC_MspInit+0x1b0>)
 8001262:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001264:	4a44      	ldr	r2, [pc, #272]	; (8001378 <HAL_LTDC_MspInit+0x1b0>)
 8001266:	f043 0308 	orr.w	r3, r3, #8
 800126a:	6313      	str	r3, [r2, #48]	; 0x30
 800126c:	4b42      	ldr	r3, [pc, #264]	; (8001378 <HAL_LTDC_MspInit+0x1b0>)
 800126e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001270:	f003 0308 	and.w	r3, r3, #8
 8001274:	613b      	str	r3, [r7, #16]
 8001276:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001278:	2300      	movs	r3, #0
 800127a:	60fb      	str	r3, [r7, #12]
 800127c:	4b3e      	ldr	r3, [pc, #248]	; (8001378 <HAL_LTDC_MspInit+0x1b0>)
 800127e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001280:	4a3d      	ldr	r2, [pc, #244]	; (8001378 <HAL_LTDC_MspInit+0x1b0>)
 8001282:	f043 0304 	orr.w	r3, r3, #4
 8001286:	6313      	str	r3, [r2, #48]	; 0x30
 8001288:	4b3b      	ldr	r3, [pc, #236]	; (8001378 <HAL_LTDC_MspInit+0x1b0>)
 800128a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800128c:	f003 0304 	and.w	r3, r3, #4
 8001290:	60fb      	str	r3, [r7, #12]
 8001292:	68fb      	ldr	r3, [r7, #12]
    PA12     ------> LTDC_R5
    PD3     ------> LTDC_G7
    PB8     ------> LTDC_B6
    PB9     ------> LTDC_B7 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11 
 8001294:	f641 0358 	movw	r3, #6232	; 0x1858
 8001298:	627b      	str	r3, [r7, #36]	; 0x24
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800129a:	2302      	movs	r3, #2
 800129c:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800129e:	2300      	movs	r3, #0
 80012a0:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80012a2:	2300      	movs	r3, #0
 80012a4:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80012a6:	230e      	movs	r3, #14
 80012a8:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80012aa:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80012ae:	4619      	mov	r1, r3
 80012b0:	4832      	ldr	r0, [pc, #200]	; (800137c <HAL_LTDC_MspInit+0x1b4>)
 80012b2:	f001 f9cb 	bl	800264c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80012b6:	2303      	movs	r3, #3
 80012b8:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012ba:	2302      	movs	r3, #2
 80012bc:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012be:	2300      	movs	r3, #0
 80012c0:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80012c2:	2300      	movs	r3, #0
 80012c4:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80012c6:	2309      	movs	r3, #9
 80012c8:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80012ca:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80012ce:	4619      	mov	r1, r3
 80012d0:	482b      	ldr	r0, [pc, #172]	; (8001380 <HAL_LTDC_MspInit+0x1b8>)
 80012d2:	f001 f9bb 	bl	800264c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
 80012d6:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 80012da:	627b      	str	r3, [r7, #36]	; 0x24
                          |GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012dc:	2302      	movs	r3, #2
 80012de:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012e0:	2300      	movs	r3, #0
 80012e2:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80012e4:	2300      	movs	r3, #0
 80012e6:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80012e8:	230e      	movs	r3, #14
 80012ea:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80012ec:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80012f0:	4619      	mov	r1, r3
 80012f2:	4824      	ldr	r0, [pc, #144]	; (8001384 <HAL_LTDC_MspInit+0x1bc>)
 80012f4:	f001 f9aa 	bl	800264c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80012f8:	f44f 6370 	mov.w	r3, #3840	; 0xf00
 80012fc:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012fe:	2302      	movs	r3, #2
 8001300:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001302:	2300      	movs	r3, #0
 8001304:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001306:	2300      	movs	r3, #0
 8001308:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800130a:	230e      	movs	r3, #14
 800130c:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800130e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001312:	4619      	mov	r1, r3
 8001314:	481a      	ldr	r0, [pc, #104]	; (8001380 <HAL_LTDC_MspInit+0x1b8>)
 8001316:	f001 f999 	bl	800264c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_3;
 800131a:	f44f 6381 	mov.w	r3, #1032	; 0x408
 800131e:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001320:	2302      	movs	r3, #2
 8001322:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001324:	2300      	movs	r3, #0
 8001326:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001328:	2300      	movs	r3, #0
 800132a:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800132c:	230e      	movs	r3, #14
 800132e:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001330:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001334:	4619      	mov	r1, r3
 8001336:	4814      	ldr	r0, [pc, #80]	; (8001388 <HAL_LTDC_MspInit+0x1c0>)
 8001338:	f001 f988 	bl	800264c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800133c:	23c0      	movs	r3, #192	; 0xc0
 800133e:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001340:	2302      	movs	r3, #2
 8001342:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001344:	2300      	movs	r3, #0
 8001346:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001348:	2300      	movs	r3, #0
 800134a:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800134c:	230e      	movs	r3, #14
 800134e:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001350:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001354:	4619      	mov	r1, r3
 8001356:	480d      	ldr	r0, [pc, #52]	; (800138c <HAL_LTDC_MspInit+0x1c4>)
 8001358:	f001 f978 	bl	800264c <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 0, 0);
 800135c:	2200      	movs	r2, #0
 800135e:	2100      	movs	r1, #0
 8001360:	2058      	movs	r0, #88	; 0x58
 8001362:	f000 fd27 	bl	8001db4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001366:	2058      	movs	r0, #88	; 0x58
 8001368:	f000 fd40 	bl	8001dec <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 800136c:	bf00      	nop
 800136e:	3738      	adds	r7, #56	; 0x38
 8001370:	46bd      	mov	sp, r7
 8001372:	bd80      	pop	{r7, pc}
 8001374:	40016800 	.word	0x40016800
 8001378:	40023800 	.word	0x40023800
 800137c:	40020000 	.word	0x40020000
 8001380:	40020400 	.word	0x40020400
 8001384:	40021000 	.word	0x40021000
 8001388:	40020c00 	.word	0x40020c00
 800138c:	40020800 	.word	0x40020800

08001390 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001390:	b580      	push	{r7, lr}
 8001392:	b08a      	sub	sp, #40	; 0x28
 8001394:	af00      	add	r7, sp, #0
 8001396:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001398:	f107 0314 	add.w	r3, r7, #20
 800139c:	2200      	movs	r2, #0
 800139e:	601a      	str	r2, [r3, #0]
 80013a0:	605a      	str	r2, [r3, #4]
 80013a2:	609a      	str	r2, [r3, #8]
 80013a4:	60da      	str	r2, [r3, #12]
 80013a6:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI3)
 80013a8:	687b      	ldr	r3, [r7, #4]
 80013aa:	681b      	ldr	r3, [r3, #0]
 80013ac:	4a19      	ldr	r2, [pc, #100]	; (8001414 <HAL_SPI_MspInit+0x84>)
 80013ae:	4293      	cmp	r3, r2
 80013b0:	d12c      	bne.n	800140c <HAL_SPI_MspInit+0x7c>
  {
  /* USER CODE BEGIN SPI3_MspInit 0 */

  /* USER CODE END SPI3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI3_CLK_ENABLE();
 80013b2:	2300      	movs	r3, #0
 80013b4:	613b      	str	r3, [r7, #16]
 80013b6:	4b18      	ldr	r3, [pc, #96]	; (8001418 <HAL_SPI_MspInit+0x88>)
 80013b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013ba:	4a17      	ldr	r2, [pc, #92]	; (8001418 <HAL_SPI_MspInit+0x88>)
 80013bc:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80013c0:	6413      	str	r3, [r2, #64]	; 0x40
 80013c2:	4b15      	ldr	r3, [pc, #84]	; (8001418 <HAL_SPI_MspInit+0x88>)
 80013c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013c6:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80013ca:	613b      	str	r3, [r7, #16]
 80013cc:	693b      	ldr	r3, [r7, #16]
  
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80013ce:	2300      	movs	r3, #0
 80013d0:	60fb      	str	r3, [r7, #12]
 80013d2:	4b11      	ldr	r3, [pc, #68]	; (8001418 <HAL_SPI_MspInit+0x88>)
 80013d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013d6:	4a10      	ldr	r2, [pc, #64]	; (8001418 <HAL_SPI_MspInit+0x88>)
 80013d8:	f043 0304 	orr.w	r3, r3, #4
 80013dc:	6313      	str	r3, [r2, #48]	; 0x30
 80013de:	4b0e      	ldr	r3, [pc, #56]	; (8001418 <HAL_SPI_MspInit+0x88>)
 80013e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013e2:	f003 0304 	and.w	r3, r3, #4
 80013e6:	60fb      	str	r3, [r7, #12]
 80013e8:	68fb      	ldr	r3, [r7, #12]
    /**SPI3 GPIO Configuration    
    PC10     ------> SPI3_SCK
    PC12     ------> SPI3_MOSI 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80013ea:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80013ee:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013f0:	2302      	movs	r3, #2
 80013f2:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013f4:	2300      	movs	r3, #0
 80013f6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80013f8:	2303      	movs	r3, #3
 80013fa:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 80013fc:	2306      	movs	r3, #6
 80013fe:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001400:	f107 0314 	add.w	r3, r7, #20
 8001404:	4619      	mov	r1, r3
 8001406:	4805      	ldr	r0, [pc, #20]	; (800141c <HAL_SPI_MspInit+0x8c>)
 8001408:	f001 f920 	bl	800264c <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI3_MspInit 1 */

  /* USER CODE END SPI3_MspInit 1 */
  }

}
 800140c:	bf00      	nop
 800140e:	3728      	adds	r7, #40	; 0x28
 8001410:	46bd      	mov	sp, r7
 8001412:	bd80      	pop	{r7, pc}
 8001414:	40003c00 	.word	0x40003c00
 8001418:	40023800 	.word	0x40023800
 800141c:	40020800 	.word	0x40020800

08001420 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8001420:	b480      	push	{r7}
 8001422:	b087      	sub	sp, #28
 8001424:	af00      	add	r7, sp, #0
 8001426:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM2)
 8001428:	687b      	ldr	r3, [r7, #4]
 800142a:	681b      	ldr	r3, [r3, #0]
 800142c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001430:	d10e      	bne.n	8001450 <HAL_TIM_PWM_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001432:	2300      	movs	r3, #0
 8001434:	617b      	str	r3, [r7, #20]
 8001436:	4b1d      	ldr	r3, [pc, #116]	; (80014ac <HAL_TIM_PWM_MspInit+0x8c>)
 8001438:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800143a:	4a1c      	ldr	r2, [pc, #112]	; (80014ac <HAL_TIM_PWM_MspInit+0x8c>)
 800143c:	f043 0301 	orr.w	r3, r3, #1
 8001440:	6413      	str	r3, [r2, #64]	; 0x40
 8001442:	4b1a      	ldr	r3, [pc, #104]	; (80014ac <HAL_TIM_PWM_MspInit+0x8c>)
 8001444:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001446:	f003 0301 	and.w	r3, r3, #1
 800144a:	617b      	str	r3, [r7, #20]
 800144c:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 800144e:	e026      	b.n	800149e <HAL_TIM_PWM_MspInit+0x7e>
  else if(htim_pwm->Instance==TIM3)
 8001450:	687b      	ldr	r3, [r7, #4]
 8001452:	681b      	ldr	r3, [r3, #0]
 8001454:	4a16      	ldr	r2, [pc, #88]	; (80014b0 <HAL_TIM_PWM_MspInit+0x90>)
 8001456:	4293      	cmp	r3, r2
 8001458:	d10e      	bne.n	8001478 <HAL_TIM_PWM_MspInit+0x58>
    __HAL_RCC_TIM3_CLK_ENABLE();
 800145a:	2300      	movs	r3, #0
 800145c:	613b      	str	r3, [r7, #16]
 800145e:	4b13      	ldr	r3, [pc, #76]	; (80014ac <HAL_TIM_PWM_MspInit+0x8c>)
 8001460:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001462:	4a12      	ldr	r2, [pc, #72]	; (80014ac <HAL_TIM_PWM_MspInit+0x8c>)
 8001464:	f043 0302 	orr.w	r3, r3, #2
 8001468:	6413      	str	r3, [r2, #64]	; 0x40
 800146a:	4b10      	ldr	r3, [pc, #64]	; (80014ac <HAL_TIM_PWM_MspInit+0x8c>)
 800146c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800146e:	f003 0302 	and.w	r3, r3, #2
 8001472:	613b      	str	r3, [r7, #16]
 8001474:	693b      	ldr	r3, [r7, #16]
}
 8001476:	e012      	b.n	800149e <HAL_TIM_PWM_MspInit+0x7e>
  else if(htim_pwm->Instance==TIM4)
 8001478:	687b      	ldr	r3, [r7, #4]
 800147a:	681b      	ldr	r3, [r3, #0]
 800147c:	4a0d      	ldr	r2, [pc, #52]	; (80014b4 <HAL_TIM_PWM_MspInit+0x94>)
 800147e:	4293      	cmp	r3, r2
 8001480:	d10d      	bne.n	800149e <HAL_TIM_PWM_MspInit+0x7e>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8001482:	2300      	movs	r3, #0
 8001484:	60fb      	str	r3, [r7, #12]
 8001486:	4b09      	ldr	r3, [pc, #36]	; (80014ac <HAL_TIM_PWM_MspInit+0x8c>)
 8001488:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800148a:	4a08      	ldr	r2, [pc, #32]	; (80014ac <HAL_TIM_PWM_MspInit+0x8c>)
 800148c:	f043 0304 	orr.w	r3, r3, #4
 8001490:	6413      	str	r3, [r2, #64]	; 0x40
 8001492:	4b06      	ldr	r3, [pc, #24]	; (80014ac <HAL_TIM_PWM_MspInit+0x8c>)
 8001494:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001496:	f003 0304 	and.w	r3, r3, #4
 800149a:	60fb      	str	r3, [r7, #12]
 800149c:	68fb      	ldr	r3, [r7, #12]
}
 800149e:	bf00      	nop
 80014a0:	371c      	adds	r7, #28
 80014a2:	46bd      	mov	sp, r7
 80014a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014a8:	4770      	bx	lr
 80014aa:	bf00      	nop
 80014ac:	40023800 	.word	0x40023800
 80014b0:	40000400 	.word	0x40000400
 80014b4:	40000800 	.word	0x40000800

080014b8 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80014b8:	b580      	push	{r7, lr}
 80014ba:	b08a      	sub	sp, #40	; 0x28
 80014bc:	af00      	add	r7, sp, #0
 80014be:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014c0:	f107 0314 	add.w	r3, r7, #20
 80014c4:	2200      	movs	r2, #0
 80014c6:	601a      	str	r2, [r3, #0]
 80014c8:	605a      	str	r2, [r3, #4]
 80014ca:	609a      	str	r2, [r3, #8]
 80014cc:	60da      	str	r2, [r3, #12]
 80014ce:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM2)
 80014d0:	687b      	ldr	r3, [r7, #4]
 80014d2:	681b      	ldr	r3, [r3, #0]
 80014d4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80014d8:	d11e      	bne.n	8001518 <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80014da:	2300      	movs	r3, #0
 80014dc:	613b      	str	r3, [r7, #16]
 80014de:	4b35      	ldr	r3, [pc, #212]	; (80015b4 <HAL_TIM_MspPostInit+0xfc>)
 80014e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014e2:	4a34      	ldr	r2, [pc, #208]	; (80015b4 <HAL_TIM_MspPostInit+0xfc>)
 80014e4:	f043 0301 	orr.w	r3, r3, #1
 80014e8:	6313      	str	r3, [r2, #48]	; 0x30
 80014ea:	4b32      	ldr	r3, [pc, #200]	; (80015b4 <HAL_TIM_MspPostInit+0xfc>)
 80014ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014ee:	f003 0301 	and.w	r3, r3, #1
 80014f2:	613b      	str	r3, [r7, #16]
 80014f4:	693b      	ldr	r3, [r7, #16]
    /**TIM2 GPIO Configuration    
    PA0/WKUP     ------> TIM2_CH1 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 80014f6:	2301      	movs	r3, #1
 80014f8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80014fa:	2302      	movs	r3, #2
 80014fc:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014fe:	2300      	movs	r3, #0
 8001500:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001502:	2300      	movs	r3, #0
 8001504:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001506:	2301      	movs	r3, #1
 8001508:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800150a:	f107 0314 	add.w	r3, r7, #20
 800150e:	4619      	mov	r1, r3
 8001510:	4829      	ldr	r0, [pc, #164]	; (80015b8 <HAL_TIM_MspPostInit+0x100>)
 8001512:	f001 f89b 	bl	800264c <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspPostInit 1 */

  /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 8001516:	e048      	b.n	80015aa <HAL_TIM_MspPostInit+0xf2>
  else if(htim->Instance==TIM3)
 8001518:	687b      	ldr	r3, [r7, #4]
 800151a:	681b      	ldr	r3, [r3, #0]
 800151c:	4a27      	ldr	r2, [pc, #156]	; (80015bc <HAL_TIM_MspPostInit+0x104>)
 800151e:	4293      	cmp	r3, r2
 8001520:	d11f      	bne.n	8001562 <HAL_TIM_MspPostInit+0xaa>
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001522:	2300      	movs	r3, #0
 8001524:	60fb      	str	r3, [r7, #12]
 8001526:	4b23      	ldr	r3, [pc, #140]	; (80015b4 <HAL_TIM_MspPostInit+0xfc>)
 8001528:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800152a:	4a22      	ldr	r2, [pc, #136]	; (80015b4 <HAL_TIM_MspPostInit+0xfc>)
 800152c:	f043 0304 	orr.w	r3, r3, #4
 8001530:	6313      	str	r3, [r2, #48]	; 0x30
 8001532:	4b20      	ldr	r3, [pc, #128]	; (80015b4 <HAL_TIM_MspPostInit+0xfc>)
 8001534:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001536:	f003 0304 	and.w	r3, r3, #4
 800153a:	60fb      	str	r3, [r7, #12]
 800153c:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 800153e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001542:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001544:	2302      	movs	r3, #2
 8001546:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001548:	2300      	movs	r3, #0
 800154a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800154c:	2300      	movs	r3, #0
 800154e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8001550:	2302      	movs	r3, #2
 8001552:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001554:	f107 0314 	add.w	r3, r7, #20
 8001558:	4619      	mov	r1, r3
 800155a:	4819      	ldr	r0, [pc, #100]	; (80015c0 <HAL_TIM_MspPostInit+0x108>)
 800155c:	f001 f876 	bl	800264c <HAL_GPIO_Init>
}
 8001560:	e023      	b.n	80015aa <HAL_TIM_MspPostInit+0xf2>
  else if(htim->Instance==TIM4)
 8001562:	687b      	ldr	r3, [r7, #4]
 8001564:	681b      	ldr	r3, [r3, #0]
 8001566:	4a17      	ldr	r2, [pc, #92]	; (80015c4 <HAL_TIM_MspPostInit+0x10c>)
 8001568:	4293      	cmp	r3, r2
 800156a:	d11e      	bne.n	80015aa <HAL_TIM_MspPostInit+0xf2>
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800156c:	2300      	movs	r3, #0
 800156e:	60bb      	str	r3, [r7, #8]
 8001570:	4b10      	ldr	r3, [pc, #64]	; (80015b4 <HAL_TIM_MspPostInit+0xfc>)
 8001572:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001574:	4a0f      	ldr	r2, [pc, #60]	; (80015b4 <HAL_TIM_MspPostInit+0xfc>)
 8001576:	f043 0308 	orr.w	r3, r3, #8
 800157a:	6313      	str	r3, [r2, #48]	; 0x30
 800157c:	4b0d      	ldr	r3, [pc, #52]	; (80015b4 <HAL_TIM_MspPostInit+0xfc>)
 800157e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001580:	f003 0308 	and.w	r3, r3, #8
 8001584:	60bb      	str	r3, [r7, #8]
 8001586:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001588:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800158c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800158e:	2302      	movs	r3, #2
 8001590:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001592:	2300      	movs	r3, #0
 8001594:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001596:	2300      	movs	r3, #0
 8001598:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 800159a:	2302      	movs	r3, #2
 800159c:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800159e:	f107 0314 	add.w	r3, r7, #20
 80015a2:	4619      	mov	r1, r3
 80015a4:	4808      	ldr	r0, [pc, #32]	; (80015c8 <HAL_TIM_MspPostInit+0x110>)
 80015a6:	f001 f851 	bl	800264c <HAL_GPIO_Init>
}
 80015aa:	bf00      	nop
 80015ac:	3728      	adds	r7, #40	; 0x28
 80015ae:	46bd      	mov	sp, r7
 80015b0:	bd80      	pop	{r7, pc}
 80015b2:	bf00      	nop
 80015b4:	40023800 	.word	0x40023800
 80015b8:	40020000 	.word	0x40020000
 80015bc:	40000400 	.word	0x40000400
 80015c0:	40020800 	.word	0x40020800
 80015c4:	40000800 	.word	0x40000800
 80015c8:	40020c00 	.word	0x40020c00

080015cc <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80015cc:	b580      	push	{r7, lr}
 80015ce:	b08c      	sub	sp, #48	; 0x30
 80015d0:	af00      	add	r7, sp, #0
 80015d2:	6078      	str	r0, [r7, #4]
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
 80015d4:	2300      	movs	r3, #0
 80015d6:	62fb      	str	r3, [r7, #44]	; 0x2c
  uint32_t              uwPrescalerValue = 0;
 80015d8:	2300      	movs	r3, #0
 80015da:	62bb      	str	r3, [r7, #40]	; 0x28
  uint32_t              pFLatency;
  
  /*Configure the TIM1 IRQ priority */
  HAL_NVIC_SetPriority(TIM1_UP_TIM10_IRQn, TickPriority ,0); 
 80015dc:	2200      	movs	r2, #0
 80015de:	6879      	ldr	r1, [r7, #4]
 80015e0:	2019      	movs	r0, #25
 80015e2:	f000 fbe7 	bl	8001db4 <HAL_NVIC_SetPriority>
  
  /* Enable the TIM1 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn); 
 80015e6:	2019      	movs	r0, #25
 80015e8:	f000 fc00 	bl	8001dec <HAL_NVIC_EnableIRQ>
  
  /* Enable TIM1 clock */
  __HAL_RCC_TIM1_CLK_ENABLE();
 80015ec:	2300      	movs	r3, #0
 80015ee:	60fb      	str	r3, [r7, #12]
 80015f0:	4b1e      	ldr	r3, [pc, #120]	; (800166c <HAL_InitTick+0xa0>)
 80015f2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80015f4:	4a1d      	ldr	r2, [pc, #116]	; (800166c <HAL_InitTick+0xa0>)
 80015f6:	f043 0301 	orr.w	r3, r3, #1
 80015fa:	6453      	str	r3, [r2, #68]	; 0x44
 80015fc:	4b1b      	ldr	r3, [pc, #108]	; (800166c <HAL_InitTick+0xa0>)
 80015fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001600:	f003 0301 	and.w	r3, r3, #1
 8001604:	60fb      	str	r3, [r7, #12]
 8001606:	68fb      	ldr	r3, [r7, #12]
  
  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001608:	f107 0210 	add.w	r2, r7, #16
 800160c:	f107 0314 	add.w	r3, r7, #20
 8001610:	4611      	mov	r1, r2
 8001612:	4618      	mov	r0, r3
 8001614:	f003 f9f2 	bl	80049fc <HAL_RCC_GetClockConfig>
  
  /* Compute TIM1 clock */
  uwTimclock = HAL_RCC_GetPCLK2Freq();
 8001618:	f003 f9dc 	bl	80049d4 <HAL_RCC_GetPCLK2Freq>
 800161c:	62f8      	str	r0, [r7, #44]	; 0x2c
   
  /* Compute the prescaler value to have TIM1 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 800161e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001620:	4a13      	ldr	r2, [pc, #76]	; (8001670 <HAL_InitTick+0xa4>)
 8001622:	fba2 2303 	umull	r2, r3, r2, r3
 8001626:	0c9b      	lsrs	r3, r3, #18
 8001628:	3b01      	subs	r3, #1
 800162a:	62bb      	str	r3, [r7, #40]	; 0x28
  
  /* Initialize TIM1 */
  htim1.Instance = TIM1;
 800162c:	4b11      	ldr	r3, [pc, #68]	; (8001674 <HAL_InitTick+0xa8>)
 800162e:	4a12      	ldr	r2, [pc, #72]	; (8001678 <HAL_InitTick+0xac>)
 8001630:	601a      	str	r2, [r3, #0]
  + Period = [(TIM1CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim1.Init.Period = (1000000 / 1000) - 1;
 8001632:	4b10      	ldr	r3, [pc, #64]	; (8001674 <HAL_InitTick+0xa8>)
 8001634:	f240 32e7 	movw	r2, #999	; 0x3e7
 8001638:	60da      	str	r2, [r3, #12]
  htim1.Init.Prescaler = uwPrescalerValue;
 800163a:	4a0e      	ldr	r2, [pc, #56]	; (8001674 <HAL_InitTick+0xa8>)
 800163c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800163e:	6053      	str	r3, [r2, #4]
  htim1.Init.ClockDivision = 0;
 8001640:	4b0c      	ldr	r3, [pc, #48]	; (8001674 <HAL_InitTick+0xa8>)
 8001642:	2200      	movs	r2, #0
 8001644:	611a      	str	r2, [r3, #16]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001646:	4b0b      	ldr	r3, [pc, #44]	; (8001674 <HAL_InitTick+0xa8>)
 8001648:	2200      	movs	r2, #0
 800164a:	609a      	str	r2, [r3, #8]
  if(HAL_TIM_Base_Init(&htim1) == HAL_OK)
 800164c:	4809      	ldr	r0, [pc, #36]	; (8001674 <HAL_InitTick+0xa8>)
 800164e:	f003 fe09 	bl	8005264 <HAL_TIM_Base_Init>
 8001652:	4603      	mov	r3, r0
 8001654:	2b00      	cmp	r3, #0
 8001656:	d104      	bne.n	8001662 <HAL_InitTick+0x96>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim1);
 8001658:	4806      	ldr	r0, [pc, #24]	; (8001674 <HAL_InitTick+0xa8>)
 800165a:	f003 fe38 	bl	80052ce <HAL_TIM_Base_Start_IT>
 800165e:	4603      	mov	r3, r0
 8001660:	e000      	b.n	8001664 <HAL_InitTick+0x98>
  }
  
  /* Return function status */
  return HAL_ERROR;
 8001662:	2301      	movs	r3, #1
}
 8001664:	4618      	mov	r0, r3
 8001666:	3730      	adds	r7, #48	; 0x30
 8001668:	46bd      	mov	sp, r7
 800166a:	bd80      	pop	{r7, pc}
 800166c:	40023800 	.word	0x40023800
 8001670:	431bde83 	.word	0x431bde83
 8001674:	200273c8 	.word	0x200273c8
 8001678:	40010000 	.word	0x40010000

0800167c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800167c:	b480      	push	{r7}
 800167e:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001680:	bf00      	nop
 8001682:	46bd      	mov	sp, r7
 8001684:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001688:	4770      	bx	lr

0800168a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800168a:	b480      	push	{r7}
 800168c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800168e:	e7fe      	b.n	800168e <HardFault_Handler+0x4>

08001690 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001690:	b480      	push	{r7}
 8001692:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001694:	e7fe      	b.n	8001694 <MemManage_Handler+0x4>

08001696 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001696:	b480      	push	{r7}
 8001698:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800169a:	e7fe      	b.n	800169a <BusFault_Handler+0x4>

0800169c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800169c:	b480      	push	{r7}
 800169e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80016a0:	e7fe      	b.n	80016a0 <UsageFault_Handler+0x4>

080016a2 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80016a2:	b480      	push	{r7}
 80016a4:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80016a6:	bf00      	nop
 80016a8:	46bd      	mov	sp, r7
 80016aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016ae:	4770      	bx	lr

080016b0 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80016b0:	b480      	push	{r7}
 80016b2:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80016b4:	bf00      	nop
 80016b6:	46bd      	mov	sp, r7
 80016b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016bc:	4770      	bx	lr

080016be <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80016be:	b480      	push	{r7}
 80016c0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80016c2:	bf00      	nop
 80016c4:	46bd      	mov	sp, r7
 80016c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016ca:	4770      	bx	lr

080016cc <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80016cc:	b480      	push	{r7}
 80016ce:	af00      	add	r7, sp, #0

  /* USER CODE END SysTick_IRQn 0 */
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80016d0:	bf00      	nop
 80016d2:	46bd      	mov	sp, r7
 80016d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016d8:	4770      	bx	lr
	...

080016dc <TIM1_UP_TIM10_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
  */
void TIM1_UP_TIM10_IRQHandler(void)
{
 80016dc:	b580      	push	{r7, lr}
 80016de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 80016e0:	4802      	ldr	r0, [pc, #8]	; (80016ec <TIM1_UP_TIM10_IRQHandler+0x10>)
 80016e2:	f003 fe81 	bl	80053e8 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
}
 80016e6:	bf00      	nop
 80016e8:	bd80      	pop	{r7, pc}
 80016ea:	bf00      	nop
 80016ec:	200273c8 	.word	0x200273c8

080016f0 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 80016f0:	b580      	push	{r7, lr}
 80016f2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_11);
 80016f4:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80016f8:	f001 f96c 	bl	80029d4 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 80016fc:	bf00      	nop
 80016fe:	bd80      	pop	{r7, pc}

08001700 <LTDC_IRQHandler>:

/**
  * @brief This function handles LTDC global interrupt.
  */
void LTDC_IRQHandler(void)
{
 8001700:	b580      	push	{r7, lr}
 8001702:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001704:	4802      	ldr	r0, [pc, #8]	; (8001710 <LTDC_IRQHandler+0x10>)
 8001706:	f002 fa77 	bl	8003bf8 <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_IRQn 1 */

  /* USER CODE END LTDC_IRQn 1 */
}
 800170a:	bf00      	nop
 800170c:	bd80      	pop	{r7, pc}
 800170e:	bf00      	nop
 8001710:	200272a0 	.word	0x200272a0

08001714 <DMA2D_IRQHandler>:

/**
  * @brief This function handles DMA2D global interrupt.
  */
void DMA2D_IRQHandler(void)
{
 8001714:	b580      	push	{r7, lr}
 8001716:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001718:	4802      	ldr	r0, [pc, #8]	; (8001724 <DMA2D_IRQHandler+0x10>)
 800171a:	f000 fd58 	bl	80021ce <HAL_DMA2D_IRQHandler>
  /* USER CODE BEGIN DMA2D_IRQn 1 */

  /* USER CODE END DMA2D_IRQn 1 */
}
 800171e:	bf00      	nop
 8001720:	bd80      	pop	{r7, pc}
 8001722:	bf00      	nop
 8001724:	20027348 	.word	0x20027348

08001728 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001728:	b480      	push	{r7}
 800172a:	af00      	add	r7, sp, #0
	return 1;
 800172c:	2301      	movs	r3, #1
}
 800172e:	4618      	mov	r0, r3
 8001730:	46bd      	mov	sp, r7
 8001732:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001736:	4770      	bx	lr

08001738 <_kill>:

int _kill(int pid, int sig)
{
 8001738:	b580      	push	{r7, lr}
 800173a:	b082      	sub	sp, #8
 800173c:	af00      	add	r7, sp, #0
 800173e:	6078      	str	r0, [r7, #4]
 8001740:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8001742:	f019 fd61 	bl	801b208 <__errno>
 8001746:	4602      	mov	r2, r0
 8001748:	2316      	movs	r3, #22
 800174a:	6013      	str	r3, [r2, #0]
	return -1;
 800174c:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001750:	4618      	mov	r0, r3
 8001752:	3708      	adds	r7, #8
 8001754:	46bd      	mov	sp, r7
 8001756:	bd80      	pop	{r7, pc}

08001758 <_exit>:

void _exit (int status)
{
 8001758:	b580      	push	{r7, lr}
 800175a:	b082      	sub	sp, #8
 800175c:	af00      	add	r7, sp, #0
 800175e:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8001760:	f04f 31ff 	mov.w	r1, #4294967295
 8001764:	6878      	ldr	r0, [r7, #4]
 8001766:	f7ff ffe7 	bl	8001738 <_kill>
	while (1) {}		/* Make sure we hang here */
 800176a:	e7fe      	b.n	800176a <_exit+0x12>

0800176c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800176c:	b580      	push	{r7, lr}
 800176e:	b086      	sub	sp, #24
 8001770:	af00      	add	r7, sp, #0
 8001772:	60f8      	str	r0, [r7, #12]
 8001774:	60b9      	str	r1, [r7, #8]
 8001776:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001778:	2300      	movs	r3, #0
 800177a:	617b      	str	r3, [r7, #20]
 800177c:	e00a      	b.n	8001794 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800177e:	f3af 8000 	nop.w
 8001782:	4601      	mov	r1, r0
 8001784:	68bb      	ldr	r3, [r7, #8]
 8001786:	1c5a      	adds	r2, r3, #1
 8001788:	60ba      	str	r2, [r7, #8]
 800178a:	b2ca      	uxtb	r2, r1
 800178c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800178e:	697b      	ldr	r3, [r7, #20]
 8001790:	3301      	adds	r3, #1
 8001792:	617b      	str	r3, [r7, #20]
 8001794:	697a      	ldr	r2, [r7, #20]
 8001796:	687b      	ldr	r3, [r7, #4]
 8001798:	429a      	cmp	r2, r3
 800179a:	dbf0      	blt.n	800177e <_read+0x12>
	}

return len;
 800179c:	687b      	ldr	r3, [r7, #4]
}
 800179e:	4618      	mov	r0, r3
 80017a0:	3718      	adds	r7, #24
 80017a2:	46bd      	mov	sp, r7
 80017a4:	bd80      	pop	{r7, pc}

080017a6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80017a6:	b580      	push	{r7, lr}
 80017a8:	b086      	sub	sp, #24
 80017aa:	af00      	add	r7, sp, #0
 80017ac:	60f8      	str	r0, [r7, #12]
 80017ae:	60b9      	str	r1, [r7, #8]
 80017b0:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80017b2:	2300      	movs	r3, #0
 80017b4:	617b      	str	r3, [r7, #20]
 80017b6:	e009      	b.n	80017cc <_write+0x26>
	{
		__io_putchar(*ptr++);
 80017b8:	68bb      	ldr	r3, [r7, #8]
 80017ba:	1c5a      	adds	r2, r3, #1
 80017bc:	60ba      	str	r2, [r7, #8]
 80017be:	781b      	ldrb	r3, [r3, #0]
 80017c0:	4618      	mov	r0, r3
 80017c2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80017c6:	697b      	ldr	r3, [r7, #20]
 80017c8:	3301      	adds	r3, #1
 80017ca:	617b      	str	r3, [r7, #20]
 80017cc:	697a      	ldr	r2, [r7, #20]
 80017ce:	687b      	ldr	r3, [r7, #4]
 80017d0:	429a      	cmp	r2, r3
 80017d2:	dbf1      	blt.n	80017b8 <_write+0x12>
	}
	return len;
 80017d4:	687b      	ldr	r3, [r7, #4]
}
 80017d6:	4618      	mov	r0, r3
 80017d8:	3718      	adds	r7, #24
 80017da:	46bd      	mov	sp, r7
 80017dc:	bd80      	pop	{r7, pc}

080017de <_close>:

int _close(int file)
{
 80017de:	b480      	push	{r7}
 80017e0:	b083      	sub	sp, #12
 80017e2:	af00      	add	r7, sp, #0
 80017e4:	6078      	str	r0, [r7, #4]
	return -1;
 80017e6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80017ea:	4618      	mov	r0, r3
 80017ec:	370c      	adds	r7, #12
 80017ee:	46bd      	mov	sp, r7
 80017f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017f4:	4770      	bx	lr

080017f6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80017f6:	b480      	push	{r7}
 80017f8:	b083      	sub	sp, #12
 80017fa:	af00      	add	r7, sp, #0
 80017fc:	6078      	str	r0, [r7, #4]
 80017fe:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8001800:	683b      	ldr	r3, [r7, #0]
 8001802:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001806:	605a      	str	r2, [r3, #4]
	return 0;
 8001808:	2300      	movs	r3, #0
}
 800180a:	4618      	mov	r0, r3
 800180c:	370c      	adds	r7, #12
 800180e:	46bd      	mov	sp, r7
 8001810:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001814:	4770      	bx	lr

08001816 <_isatty>:

int _isatty(int file)
{
 8001816:	b480      	push	{r7}
 8001818:	b083      	sub	sp, #12
 800181a:	af00      	add	r7, sp, #0
 800181c:	6078      	str	r0, [r7, #4]
	return 1;
 800181e:	2301      	movs	r3, #1
}
 8001820:	4618      	mov	r0, r3
 8001822:	370c      	adds	r7, #12
 8001824:	46bd      	mov	sp, r7
 8001826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800182a:	4770      	bx	lr

0800182c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800182c:	b480      	push	{r7}
 800182e:	b085      	sub	sp, #20
 8001830:	af00      	add	r7, sp, #0
 8001832:	60f8      	str	r0, [r7, #12]
 8001834:	60b9      	str	r1, [r7, #8]
 8001836:	607a      	str	r2, [r7, #4]
	return 0;
 8001838:	2300      	movs	r3, #0
}
 800183a:	4618      	mov	r0, r3
 800183c:	3714      	adds	r7, #20
 800183e:	46bd      	mov	sp, r7
 8001840:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001844:	4770      	bx	lr
	...

08001848 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8001848:	b580      	push	{r7, lr}
 800184a:	b084      	sub	sp, #16
 800184c:	af00      	add	r7, sp, #0
 800184e:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001850:	4b11      	ldr	r3, [pc, #68]	; (8001898 <_sbrk+0x50>)
 8001852:	681b      	ldr	r3, [r3, #0]
 8001854:	2b00      	cmp	r3, #0
 8001856:	d102      	bne.n	800185e <_sbrk+0x16>
		heap_end = &end;
 8001858:	4b0f      	ldr	r3, [pc, #60]	; (8001898 <_sbrk+0x50>)
 800185a:	4a10      	ldr	r2, [pc, #64]	; (800189c <_sbrk+0x54>)
 800185c:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 800185e:	4b0e      	ldr	r3, [pc, #56]	; (8001898 <_sbrk+0x50>)
 8001860:	681b      	ldr	r3, [r3, #0]
 8001862:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8001864:	4b0c      	ldr	r3, [pc, #48]	; (8001898 <_sbrk+0x50>)
 8001866:	681a      	ldr	r2, [r3, #0]
 8001868:	687b      	ldr	r3, [r7, #4]
 800186a:	4413      	add	r3, r2
 800186c:	466a      	mov	r2, sp
 800186e:	4293      	cmp	r3, r2
 8001870:	d907      	bls.n	8001882 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 8001872:	f019 fcc9 	bl	801b208 <__errno>
 8001876:	4602      	mov	r2, r0
 8001878:	230c      	movs	r3, #12
 800187a:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 800187c:	f04f 33ff 	mov.w	r3, #4294967295
 8001880:	e006      	b.n	8001890 <_sbrk+0x48>
	}

	heap_end += incr;
 8001882:	4b05      	ldr	r3, [pc, #20]	; (8001898 <_sbrk+0x50>)
 8001884:	681a      	ldr	r2, [r3, #0]
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	4413      	add	r3, r2
 800188a:	4a03      	ldr	r2, [pc, #12]	; (8001898 <_sbrk+0x50>)
 800188c:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800188e:	68fb      	ldr	r3, [r7, #12]
}
 8001890:	4618      	mov	r0, r3
 8001892:	3710      	adds	r7, #16
 8001894:	46bd      	mov	sp, r7
 8001896:	bd80      	pop	{r7, pc}
 8001898:	20025920 	.word	0x20025920
 800189c:	20027470 	.word	0x20027470

080018a0 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80018a0:	b480      	push	{r7}
 80018a2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80018a4:	4b08      	ldr	r3, [pc, #32]	; (80018c8 <SystemInit+0x28>)
 80018a6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80018aa:	4a07      	ldr	r2, [pc, #28]	; (80018c8 <SystemInit+0x28>)
 80018ac:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80018b0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80018b4:	4b04      	ldr	r3, [pc, #16]	; (80018c8 <SystemInit+0x28>)
 80018b6:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80018ba:	609a      	str	r2, [r3, #8]
#endif
}
 80018bc:	bf00      	nop
 80018be:	46bd      	mov	sp, r7
 80018c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018c4:	4770      	bx	lr
 80018c6:	bf00      	nop
 80018c8:	e000ed00 	.word	0xe000ed00

080018cc <Ft6236_Read_Register>:
FT6236_DATA FT6236;



void Ft6236_Read_Register(uint8_t register_pointer, uint8_t* receive_buffer , uint8_t buffer_size)
{
 80018cc:	b580      	push	{r7, lr}
 80018ce:	b088      	sub	sp, #32
 80018d0:	af04      	add	r7, sp, #16
 80018d2:	4603      	mov	r3, r0
 80018d4:	6039      	str	r1, [r7, #0]
 80018d6:	71fb      	strb	r3, [r7, #7]
 80018d8:	4613      	mov	r3, r2
 80018da:	71bb      	strb	r3, [r7, #6]
	HAL_StatusTypeDef status = HAL_OK;
 80018dc:	2300      	movs	r3, #0
 80018de:	73fb      	strb	r3, [r7, #15]

	status = HAL_I2C_Mem_Read(&FT6236.FT6236_I2C, FT6236.FT6236_I2C_Address, (uint16_t)register_pointer, I2C_MEMADD_SIZE_8BIT, receive_buffer, buffer_size, 100);
 80018e0:	4b0b      	ldr	r3, [pc, #44]	; (8001910 <Ft6236_Read_Register+0x44>)
 80018e2:	f8b3 1054 	ldrh.w	r1, [r3, #84]	; 0x54
 80018e6:	79fb      	ldrb	r3, [r7, #7]
 80018e8:	b298      	uxth	r0, r3
 80018ea:	79bb      	ldrb	r3, [r7, #6]
 80018ec:	b29b      	uxth	r3, r3
 80018ee:	2264      	movs	r2, #100	; 0x64
 80018f0:	9202      	str	r2, [sp, #8]
 80018f2:	9301      	str	r3, [sp, #4]
 80018f4:	683b      	ldr	r3, [r7, #0]
 80018f6:	9300      	str	r3, [sp, #0]
 80018f8:	2301      	movs	r3, #1
 80018fa:	4602      	mov	r2, r0
 80018fc:	4804      	ldr	r0, [pc, #16]	; (8001910 <Ft6236_Read_Register+0x44>)
 80018fe:	f001 fab3 	bl	8002e68 <HAL_I2C_Mem_Read>
 8001902:	4603      	mov	r3, r0
 8001904:	73fb      	strb	r3, [r7, #15]
	if(status != HAL_OK)
	{
	    /* Re-Initialize the BUS */
		//Init
	}
}
 8001906:	bf00      	nop
 8001908:	3710      	adds	r7, #16
 800190a:	46bd      	mov	sp, r7
 800190c:	bd80      	pop	{r7, pc}
 800190e:	bf00      	nop
 8001910:	20027408 	.word	0x20027408

08001914 <Ft6236_Write_Register>:

void Ft6236_Write_Register(uint8_t register_pointer, uint8_t register_value)
{
 8001914:	b580      	push	{r7, lr}
 8001916:	b088      	sub	sp, #32
 8001918:	af04      	add	r7, sp, #16
 800191a:	4603      	mov	r3, r0
 800191c:	460a      	mov	r2, r1
 800191e:	71fb      	strb	r3, [r7, #7]
 8001920:	4613      	mov	r3, r2
 8001922:	71bb      	strb	r3, [r7, #6]
	HAL_StatusTypeDef status = HAL_OK;
 8001924:	2300      	movs	r3, #0
 8001926:	73fb      	strb	r3, [r7, #15]

	status = HAL_I2C_Mem_Write(&FT6236.FT6236_I2C, FT6236.FT6236_I2C_Address, (uint16_t)register_pointer, I2C_MEMADD_SIZE_8BIT, &register_value, 1, 100);
 8001928:	4b0a      	ldr	r3, [pc, #40]	; (8001954 <Ft6236_Write_Register+0x40>)
 800192a:	f8b3 1054 	ldrh.w	r1, [r3, #84]	; 0x54
 800192e:	79fb      	ldrb	r3, [r7, #7]
 8001930:	b29a      	uxth	r2, r3
 8001932:	2364      	movs	r3, #100	; 0x64
 8001934:	9302      	str	r3, [sp, #8]
 8001936:	2301      	movs	r3, #1
 8001938:	9301      	str	r3, [sp, #4]
 800193a:	1dbb      	adds	r3, r7, #6
 800193c:	9300      	str	r3, [sp, #0]
 800193e:	2301      	movs	r3, #1
 8001940:	4804      	ldr	r0, [pc, #16]	; (8001954 <Ft6236_Write_Register+0x40>)
 8001942:	f001 f997 	bl	8002c74 <HAL_I2C_Mem_Write>
 8001946:	4603      	mov	r3, r0
 8001948:	73fb      	strb	r3, [r7, #15]
	{
		/* Re-Initialize the BUS */
		//Init
	}

}
 800194a:	bf00      	nop
 800194c:	3710      	adds	r7, #16
 800194e:	46bd      	mov	sp, r7
 8001950:	bd80      	pop	{r7, pc}
 8001952:	bf00      	nop
 8001954:	20027408 	.word	0x20027408

08001958 <Ft6236_Init>:


void Ft6236_Init(I2C_HandleTypeDef i2c_handle){
 8001958:	b084      	sub	sp, #16
 800195a:	b580      	push	{r7, lr}
 800195c:	af00      	add	r7, sp, #0
 800195e:	f107 0c08 	add.w	ip, r7, #8
 8001962:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
	HAL_GPIO_WritePin(TP_RESET_GPIO_Port , TP_RESET_Pin , GPIO_PIN_SET);
 8001966:	2201      	movs	r2, #1
 8001968:	f44f 7100 	mov.w	r1, #512	; 0x200
 800196c:	4814      	ldr	r0, [pc, #80]	; (80019c0 <Ft6236_Init+0x68>)
 800196e:	f001 f817 	bl	80029a0 <HAL_GPIO_WritePin>
	FT6236.FT6236_I2C_Address = FT6236_ADDRESS;
 8001972:	4b14      	ldr	r3, [pc, #80]	; (80019c4 <Ft6236_Init+0x6c>)
 8001974:	2270      	movs	r2, #112	; 0x70
 8001976:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
	FT6236.FT6236_I2C = i2c_handle;
 800197a:	4b12      	ldr	r3, [pc, #72]	; (80019c4 <Ft6236_Init+0x6c>)
 800197c:	4618      	mov	r0, r3
 800197e:	f107 0108 	add.w	r1, r7, #8
 8001982:	2354      	movs	r3, #84	; 0x54
 8001984:	461a      	mov	r2, r3
 8001986:	f019 fc8b 	bl	801b2a0 <memcpy>
	FT6236.FT6236_Contact_Detected =  FALSE;
 800198a:	4b0e      	ldr	r3, [pc, #56]	; (80019c4 <Ft6236_Init+0x6c>)
 800198c:	2200      	movs	r2, #0
 800198e:	f883 2057 	strb.w	r2, [r3, #87]	; 0x57
	FT6236.PosX = 0;
 8001992:	4b0c      	ldr	r3, [pc, #48]	; (80019c4 <Ft6236_Init+0x6c>)
 8001994:	2200      	movs	r2, #0
 8001996:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
	FT6236.PosY = 0;
 800199a:	4b0a      	ldr	r3, [pc, #40]	; (80019c4 <Ft6236_Init+0x6c>)
 800199c:	2200      	movs	r2, #0
 800199e:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
	Ft6236_Write_Register (0x00 , 0x00);
 80019a2:	2100      	movs	r1, #0
 80019a4:	2000      	movs	r0, #0
 80019a6:	f7ff ffb5 	bl	8001914 <Ft6236_Write_Register>
	Ft6236_Write_Register (0xA4 , 0x00);
 80019aa:	2100      	movs	r1, #0
 80019ac:	20a4      	movs	r0, #164	; 0xa4
 80019ae:	f7ff ffb1 	bl	8001914 <Ft6236_Write_Register>
}
 80019b2:	bf00      	nop
 80019b4:	46bd      	mov	sp, r7
 80019b6:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80019ba:	b004      	add	sp, #16
 80019bc:	4770      	bx	lr
 80019be:	bf00      	nop
 80019c0:	40020c00 	.word	0x40020c00
 80019c4:	20027408 	.word	0x20027408

080019c8 <Ft6236_Read>:

void Ft6236_Read(void){
 80019c8:	b580      	push	{r7, lr}
 80019ca:	b082      	sub	sp, #8
 80019cc:	af00      	add	r7, sp, #0
	uint8_t data[3] = {0};
 80019ce:	1d3b      	adds	r3, r7, #4
 80019d0:	2100      	movs	r1, #0
 80019d2:	460a      	mov	r2, r1
 80019d4:	801a      	strh	r2, [r3, #0]
 80019d6:	460a      	mov	r2, r1
 80019d8:	709a      	strb	r2, [r3, #2]
	uint8_t Event_Flag = 0;
 80019da:	2300      	movs	r3, #0
 80019dc:	71fb      	strb	r3, [r7, #7]

	Ft6236_Read_Register( 0x03, data , 2);
 80019de:	1d3b      	adds	r3, r7, #4
 80019e0:	2202      	movs	r2, #2
 80019e2:	4619      	mov	r1, r3
 80019e4:	2003      	movs	r0, #3
 80019e6:	f7ff ff71 	bl	80018cc <Ft6236_Read_Register>

	Event_Flag = (data[0] & 0xC0) >> 6;
 80019ea:	793b      	ldrb	r3, [r7, #4]
 80019ec:	099b      	lsrs	r3, r3, #6
 80019ee:	71fb      	strb	r3, [r7, #7]
	if (Event_Flag == 2){	//Detect a contact
 80019f0:	79fb      	ldrb	r3, [r7, #7]
 80019f2:	2b02      	cmp	r3, #2
 80019f4:	d12d      	bne.n	8001a52 <Ft6236_Read+0x8a>
		//Do Something
		FT6236.FT6236_Contact_Detected =  true;
 80019f6:	4b1b      	ldr	r3, [pc, #108]	; (8001a64 <Ft6236_Read+0x9c>)
 80019f8:	2201      	movs	r2, #1
 80019fa:	f883 2057 	strb.w	r2, [r3, #87]	; 0x57

		//Read PosX
		data[0] &= 0x07;
 80019fe:	793b      	ldrb	r3, [r7, #4]
 8001a00:	f003 0307 	and.w	r3, r3, #7
 8001a04:	b2db      	uxtb	r3, r3
 8001a06:	713b      	strb	r3, [r7, #4]
		FT6236.PosX = data[0]<<8 | data[1];
 8001a08:	793b      	ldrb	r3, [r7, #4]
 8001a0a:	021b      	lsls	r3, r3, #8
 8001a0c:	b21a      	sxth	r2, r3
 8001a0e:	797b      	ldrb	r3, [r7, #5]
 8001a10:	b21b      	sxth	r3, r3
 8001a12:	4313      	orrs	r3, r2
 8001a14:	b21b      	sxth	r3, r3
 8001a16:	b29a      	uxth	r2, r3
 8001a18:	4b12      	ldr	r3, [pc, #72]	; (8001a64 <Ft6236_Read+0x9c>)
 8001a1a:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
		//Read PosY
		Ft6236_Read_Register( 0x05, data , 2);
 8001a1e:	1d3b      	adds	r3, r7, #4
 8001a20:	2202      	movs	r2, #2
 8001a22:	4619      	mov	r1, r3
 8001a24:	2005      	movs	r0, #5
 8001a26:	f7ff ff51 	bl	80018cc <Ft6236_Read_Register>
		data[0] &= 0x7;
 8001a2a:	793b      	ldrb	r3, [r7, #4]
 8001a2c:	f003 0307 	and.w	r3, r3, #7
 8001a30:	b2db      	uxtb	r3, r3
 8001a32:	713b      	strb	r3, [r7, #4]
		FT6236.PosY = (data[0] & 0x07)<<8 | data[1];
 8001a34:	793b      	ldrb	r3, [r7, #4]
 8001a36:	021b      	lsls	r3, r3, #8
 8001a38:	b21b      	sxth	r3, r3
 8001a3a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8001a3e:	b21a      	sxth	r2, r3
 8001a40:	797b      	ldrb	r3, [r7, #5]
 8001a42:	b21b      	sxth	r3, r3
 8001a44:	4313      	orrs	r3, r2
 8001a46:	b21b      	sxth	r3, r3
 8001a48:	b29a      	uxth	r2, r3
 8001a4a:	4b06      	ldr	r3, [pc, #24]	; (8001a64 <Ft6236_Read+0x9c>)
 8001a4c:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
	}
	else {
		//Do Something
		FT6236.FT6236_Contact_Detected =  false;
	}
}
 8001a50:	e003      	b.n	8001a5a <Ft6236_Read+0x92>
		FT6236.FT6236_Contact_Detected =  false;
 8001a52:	4b04      	ldr	r3, [pc, #16]	; (8001a64 <Ft6236_Read+0x9c>)
 8001a54:	2200      	movs	r2, #0
 8001a56:	f883 2057 	strb.w	r2, [r3, #87]	; 0x57
}
 8001a5a:	bf00      	nop
 8001a5c:	3708      	adds	r7, #8
 8001a5e:	46bd      	mov	sp, r7
 8001a60:	bd80      	pop	{r7, pc}
 8001a62:	bf00      	nop
 8001a64:	20027408 	.word	0x20027408

08001a68 <Ft6236_TS_DetectTouch>:

bool Ft6236_TS_DetectTouch(){
 8001a68:	b480      	push	{r7}
 8001a6a:	af00      	add	r7, sp, #0
	return FT6236.FT6236_Contact_Detected;
 8001a6c:	4b03      	ldr	r3, [pc, #12]	; (8001a7c <Ft6236_TS_DetectTouch+0x14>)
 8001a6e:	f893 3057 	ldrb.w	r3, [r3, #87]	; 0x57
}
 8001a72:	4618      	mov	r0, r3
 8001a74:	46bd      	mov	sp, r7
 8001a76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a7a:	4770      	bx	lr
 8001a7c:	20027408 	.word	0x20027408

08001a80 <Ft6236_TS_GetX>:

uint16_t Ft6236_TS_GetX(){
 8001a80:	b480      	push	{r7}
 8001a82:	af00      	add	r7, sp, #0
	return FT6236.PosX;
 8001a84:	4b03      	ldr	r3, [pc, #12]	; (8001a94 <Ft6236_TS_GetX+0x14>)
 8001a86:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
}
 8001a8a:	4618      	mov	r0, r3
 8001a8c:	46bd      	mov	sp, r7
 8001a8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a92:	4770      	bx	lr
 8001a94:	20027408 	.word	0x20027408

08001a98 <Ft6236_TS_GetY>:

uint16_t Ft6236_TS_GetY(){
 8001a98:	b480      	push	{r7}
 8001a9a:	af00      	add	r7, sp, #0
	return FT6236.PosY;
 8001a9c:	4b03      	ldr	r3, [pc, #12]	; (8001aac <Ft6236_TS_GetY+0x14>)
 8001a9e:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
}
 8001aa2:	4618      	mov	r0, r3
 8001aa4:	46bd      	mov	sp, r7
 8001aa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001aaa:	4770      	bx	lr
 8001aac:	20027408 	.word	0x20027408

08001ab0 <BSP_TS_GetState>:

void BSP_TS_GetState(TS_StateTypeDef* TsState){
 8001ab0:	b580      	push	{r7, lr}
 8001ab2:	b082      	sub	sp, #8
 8001ab4:	af00      	add	r7, sp, #0
 8001ab6:	6078      	str	r0, [r7, #4]
	TsState->TouchDetected = Ft6236_TS_DetectTouch();
 8001ab8:	f7ff ffd6 	bl	8001a68 <Ft6236_TS_DetectTouch>
 8001abc:	4603      	mov	r3, r0
 8001abe:	b29a      	uxth	r2, r3
 8001ac0:	687b      	ldr	r3, [r7, #4]
 8001ac2:	801a      	strh	r2, [r3, #0]
	TsState->X = Ft6236_TS_GetX();
 8001ac4:	f7ff ffdc 	bl	8001a80 <Ft6236_TS_GetX>
 8001ac8:	4603      	mov	r3, r0
 8001aca:	461a      	mov	r2, r3
 8001acc:	687b      	ldr	r3, [r7, #4]
 8001ace:	805a      	strh	r2, [r3, #2]
	TsState->Y = Ft6236_TS_GetY();
 8001ad0:	f7ff ffe2 	bl	8001a98 <Ft6236_TS_GetY>
 8001ad4:	4603      	mov	r3, r0
 8001ad6:	461a      	mov	r2, r3
 8001ad8:	687b      	ldr	r3, [r7, #4]
 8001ada:	809a      	strh	r2, [r3, #4]
}
 8001adc:	bf00      	nop
 8001ade:	3708      	adds	r7, #8
 8001ae0:	46bd      	mov	sp, r7
 8001ae2:	bd80      	pop	{r7, pc}

08001ae4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8001ae4:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001b1c <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8001ae8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8001aea:	e003      	b.n	8001af4 <LoopCopyDataInit>

08001aec <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8001aec:	4b0c      	ldr	r3, [pc, #48]	; (8001b20 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8001aee:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8001af0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8001af2:	3104      	adds	r1, #4

08001af4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8001af4:	480b      	ldr	r0, [pc, #44]	; (8001b24 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8001af6:	4b0c      	ldr	r3, [pc, #48]	; (8001b28 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8001af8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8001afa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8001afc:	d3f6      	bcc.n	8001aec <CopyDataInit>
  ldr  r2, =_sbss
 8001afe:	4a0b      	ldr	r2, [pc, #44]	; (8001b2c <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8001b00:	e002      	b.n	8001b08 <LoopFillZerobss>

08001b02 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8001b02:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8001b04:	f842 3b04 	str.w	r3, [r2], #4

08001b08 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8001b08:	4b09      	ldr	r3, [pc, #36]	; (8001b30 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8001b0a:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8001b0c:	d3f9      	bcc.n	8001b02 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8001b0e:	f7ff fec7 	bl	80018a0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8001b12:	f019 fb91 	bl	801b238 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001b16:	f7fe fd4b 	bl	80005b0 <main>
  bx  lr    
 8001b1a:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8001b1c:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8001b20:	08093bcc 	.word	0x08093bcc
  ldr  r0, =_sdata
 8001b24:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8001b28:	20000100 	.word	0x20000100
  ldr  r2, =_sbss
 8001b2c:	20025900 	.word	0x20025900
  ldr  r3, = _ebss
 8001b30:	2002746c 	.word	0x2002746c

08001b34 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001b34:	e7fe      	b.n	8001b34 <ADC_IRQHandler>
	...

08001b38 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8001b38:	b580      	push	{r7, lr}
 8001b3a:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8001b3c:	4b0e      	ldr	r3, [pc, #56]	; (8001b78 <HAL_Init+0x40>)
 8001b3e:	681b      	ldr	r3, [r3, #0]
 8001b40:	4a0d      	ldr	r2, [pc, #52]	; (8001b78 <HAL_Init+0x40>)
 8001b42:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001b46:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8001b48:	4b0b      	ldr	r3, [pc, #44]	; (8001b78 <HAL_Init+0x40>)
 8001b4a:	681b      	ldr	r3, [r3, #0]
 8001b4c:	4a0a      	ldr	r2, [pc, #40]	; (8001b78 <HAL_Init+0x40>)
 8001b4e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001b52:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001b54:	4b08      	ldr	r3, [pc, #32]	; (8001b78 <HAL_Init+0x40>)
 8001b56:	681b      	ldr	r3, [r3, #0]
 8001b58:	4a07      	ldr	r2, [pc, #28]	; (8001b78 <HAL_Init+0x40>)
 8001b5a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001b5e:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001b60:	2003      	movs	r0, #3
 8001b62:	f000 f91c 	bl	8001d9e <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8001b66:	2000      	movs	r0, #0
 8001b68:	f7ff fd30 	bl	80015cc <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8001b6c:	f7ff fa36 	bl	8000fdc <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8001b70:	2300      	movs	r3, #0
}
 8001b72:	4618      	mov	r0, r3
 8001b74:	bd80      	pop	{r7, pc}
 8001b76:	bf00      	nop
 8001b78:	40023c00 	.word	0x40023c00

08001b7c <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001b7c:	b480      	push	{r7}
 8001b7e:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8001b80:	4b06      	ldr	r3, [pc, #24]	; (8001b9c <HAL_IncTick+0x20>)
 8001b82:	781b      	ldrb	r3, [r3, #0]
 8001b84:	461a      	mov	r2, r3
 8001b86:	4b06      	ldr	r3, [pc, #24]	; (8001ba0 <HAL_IncTick+0x24>)
 8001b88:	681b      	ldr	r3, [r3, #0]
 8001b8a:	4413      	add	r3, r2
 8001b8c:	4a04      	ldr	r2, [pc, #16]	; (8001ba0 <HAL_IncTick+0x24>)
 8001b8e:	6013      	str	r3, [r2, #0]
}
 8001b90:	bf00      	nop
 8001b92:	46bd      	mov	sp, r7
 8001b94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b98:	4770      	bx	lr
 8001b9a:	bf00      	nop
 8001b9c:	2000000c 	.word	0x2000000c
 8001ba0:	20027464 	.word	0x20027464

08001ba4 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8001ba4:	b480      	push	{r7}
 8001ba6:	af00      	add	r7, sp, #0
  return uwTick;
 8001ba8:	4b03      	ldr	r3, [pc, #12]	; (8001bb8 <HAL_GetTick+0x14>)
 8001baa:	681b      	ldr	r3, [r3, #0]
}
 8001bac:	4618      	mov	r0, r3
 8001bae:	46bd      	mov	sp, r7
 8001bb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bb4:	4770      	bx	lr
 8001bb6:	bf00      	nop
 8001bb8:	20027464 	.word	0x20027464

08001bbc <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8001bbc:	b580      	push	{r7, lr}
 8001bbe:	b084      	sub	sp, #16
 8001bc0:	af00      	add	r7, sp, #0
 8001bc2:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8001bc4:	f7ff ffee 	bl	8001ba4 <HAL_GetTick>
 8001bc8:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8001bca:	687b      	ldr	r3, [r7, #4]
 8001bcc:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8001bce:	68fb      	ldr	r3, [r7, #12]
 8001bd0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001bd4:	d005      	beq.n	8001be2 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8001bd6:	4b09      	ldr	r3, [pc, #36]	; (8001bfc <HAL_Delay+0x40>)
 8001bd8:	781b      	ldrb	r3, [r3, #0]
 8001bda:	461a      	mov	r2, r3
 8001bdc:	68fb      	ldr	r3, [r7, #12]
 8001bde:	4413      	add	r3, r2
 8001be0:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8001be2:	bf00      	nop
 8001be4:	f7ff ffde 	bl	8001ba4 <HAL_GetTick>
 8001be8:	4602      	mov	r2, r0
 8001bea:	68bb      	ldr	r3, [r7, #8]
 8001bec:	1ad3      	subs	r3, r2, r3
 8001bee:	68fa      	ldr	r2, [r7, #12]
 8001bf0:	429a      	cmp	r2, r3
 8001bf2:	d8f7      	bhi.n	8001be4 <HAL_Delay+0x28>
  {
  }
}
 8001bf4:	bf00      	nop
 8001bf6:	3710      	adds	r7, #16
 8001bf8:	46bd      	mov	sp, r7
 8001bfa:	bd80      	pop	{r7, pc}
 8001bfc:	2000000c 	.word	0x2000000c

08001c00 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001c00:	b480      	push	{r7}
 8001c02:	b085      	sub	sp, #20
 8001c04:	af00      	add	r7, sp, #0
 8001c06:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8001c08:	687b      	ldr	r3, [r7, #4]
 8001c0a:	f003 0307 	and.w	r3, r3, #7
 8001c0e:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8001c10:	4b0c      	ldr	r3, [pc, #48]	; (8001c44 <__NVIC_SetPriorityGrouping+0x44>)
 8001c12:	68db      	ldr	r3, [r3, #12]
 8001c14:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8001c16:	68ba      	ldr	r2, [r7, #8]
 8001c18:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001c1c:	4013      	ands	r3, r2
 8001c1e:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8001c20:	68fb      	ldr	r3, [r7, #12]
 8001c22:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001c24:	68bb      	ldr	r3, [r7, #8]
 8001c26:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8001c28:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001c2c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001c30:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8001c32:	4a04      	ldr	r2, [pc, #16]	; (8001c44 <__NVIC_SetPriorityGrouping+0x44>)
 8001c34:	68bb      	ldr	r3, [r7, #8]
 8001c36:	60d3      	str	r3, [r2, #12]
}
 8001c38:	bf00      	nop
 8001c3a:	3714      	adds	r7, #20
 8001c3c:	46bd      	mov	sp, r7
 8001c3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c42:	4770      	bx	lr
 8001c44:	e000ed00 	.word	0xe000ed00

08001c48 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8001c48:	b480      	push	{r7}
 8001c4a:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001c4c:	4b04      	ldr	r3, [pc, #16]	; (8001c60 <__NVIC_GetPriorityGrouping+0x18>)
 8001c4e:	68db      	ldr	r3, [r3, #12]
 8001c50:	0a1b      	lsrs	r3, r3, #8
 8001c52:	f003 0307 	and.w	r3, r3, #7
}
 8001c56:	4618      	mov	r0, r3
 8001c58:	46bd      	mov	sp, r7
 8001c5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c5e:	4770      	bx	lr
 8001c60:	e000ed00 	.word	0xe000ed00

08001c64 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001c64:	b480      	push	{r7}
 8001c66:	b083      	sub	sp, #12
 8001c68:	af00      	add	r7, sp, #0
 8001c6a:	4603      	mov	r3, r0
 8001c6c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001c6e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c72:	2b00      	cmp	r3, #0
 8001c74:	db0b      	blt.n	8001c8e <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001c76:	79fb      	ldrb	r3, [r7, #7]
 8001c78:	f003 021f 	and.w	r2, r3, #31
 8001c7c:	4907      	ldr	r1, [pc, #28]	; (8001c9c <__NVIC_EnableIRQ+0x38>)
 8001c7e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c82:	095b      	lsrs	r3, r3, #5
 8001c84:	2001      	movs	r0, #1
 8001c86:	fa00 f202 	lsl.w	r2, r0, r2
 8001c8a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8001c8e:	bf00      	nop
 8001c90:	370c      	adds	r7, #12
 8001c92:	46bd      	mov	sp, r7
 8001c94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c98:	4770      	bx	lr
 8001c9a:	bf00      	nop
 8001c9c:	e000e100 	.word	0xe000e100

08001ca0 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8001ca0:	b480      	push	{r7}
 8001ca2:	b083      	sub	sp, #12
 8001ca4:	af00      	add	r7, sp, #0
 8001ca6:	4603      	mov	r3, r0
 8001ca8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001caa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001cae:	2b00      	cmp	r3, #0
 8001cb0:	db10      	blt.n	8001cd4 <__NVIC_DisableIRQ+0x34>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001cb2:	79fb      	ldrb	r3, [r7, #7]
 8001cb4:	f003 021f 	and.w	r2, r3, #31
 8001cb8:	4909      	ldr	r1, [pc, #36]	; (8001ce0 <__NVIC_DisableIRQ+0x40>)
 8001cba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001cbe:	095b      	lsrs	r3, r3, #5
 8001cc0:	2001      	movs	r0, #1
 8001cc2:	fa00 f202 	lsl.w	r2, r0, r2
 8001cc6:	3320      	adds	r3, #32
 8001cc8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001ccc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001cd0:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
  }
}
 8001cd4:	bf00      	nop
 8001cd6:	370c      	adds	r7, #12
 8001cd8:	46bd      	mov	sp, r7
 8001cda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cde:	4770      	bx	lr
 8001ce0:	e000e100 	.word	0xe000e100

08001ce4 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001ce4:	b480      	push	{r7}
 8001ce6:	b083      	sub	sp, #12
 8001ce8:	af00      	add	r7, sp, #0
 8001cea:	4603      	mov	r3, r0
 8001cec:	6039      	str	r1, [r7, #0]
 8001cee:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001cf0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001cf4:	2b00      	cmp	r3, #0
 8001cf6:	db0a      	blt.n	8001d0e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001cf8:	683b      	ldr	r3, [r7, #0]
 8001cfa:	b2da      	uxtb	r2, r3
 8001cfc:	490c      	ldr	r1, [pc, #48]	; (8001d30 <__NVIC_SetPriority+0x4c>)
 8001cfe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001d02:	0112      	lsls	r2, r2, #4
 8001d04:	b2d2      	uxtb	r2, r2
 8001d06:	440b      	add	r3, r1
 8001d08:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8001d0c:	e00a      	b.n	8001d24 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001d0e:	683b      	ldr	r3, [r7, #0]
 8001d10:	b2da      	uxtb	r2, r3
 8001d12:	4908      	ldr	r1, [pc, #32]	; (8001d34 <__NVIC_SetPriority+0x50>)
 8001d14:	79fb      	ldrb	r3, [r7, #7]
 8001d16:	f003 030f 	and.w	r3, r3, #15
 8001d1a:	3b04      	subs	r3, #4
 8001d1c:	0112      	lsls	r2, r2, #4
 8001d1e:	b2d2      	uxtb	r2, r2
 8001d20:	440b      	add	r3, r1
 8001d22:	761a      	strb	r2, [r3, #24]
}
 8001d24:	bf00      	nop
 8001d26:	370c      	adds	r7, #12
 8001d28:	46bd      	mov	sp, r7
 8001d2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d2e:	4770      	bx	lr
 8001d30:	e000e100 	.word	0xe000e100
 8001d34:	e000ed00 	.word	0xe000ed00

08001d38 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001d38:	b480      	push	{r7}
 8001d3a:	b089      	sub	sp, #36	; 0x24
 8001d3c:	af00      	add	r7, sp, #0
 8001d3e:	60f8      	str	r0, [r7, #12]
 8001d40:	60b9      	str	r1, [r7, #8]
 8001d42:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8001d44:	68fb      	ldr	r3, [r7, #12]
 8001d46:	f003 0307 	and.w	r3, r3, #7
 8001d4a:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001d4c:	69fb      	ldr	r3, [r7, #28]
 8001d4e:	f1c3 0307 	rsb	r3, r3, #7
 8001d52:	2b04      	cmp	r3, #4
 8001d54:	bf28      	it	cs
 8001d56:	2304      	movcs	r3, #4
 8001d58:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001d5a:	69fb      	ldr	r3, [r7, #28]
 8001d5c:	3304      	adds	r3, #4
 8001d5e:	2b06      	cmp	r3, #6
 8001d60:	d902      	bls.n	8001d68 <NVIC_EncodePriority+0x30>
 8001d62:	69fb      	ldr	r3, [r7, #28]
 8001d64:	3b03      	subs	r3, #3
 8001d66:	e000      	b.n	8001d6a <NVIC_EncodePriority+0x32>
 8001d68:	2300      	movs	r3, #0
 8001d6a:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001d6c:	f04f 32ff 	mov.w	r2, #4294967295
 8001d70:	69bb      	ldr	r3, [r7, #24]
 8001d72:	fa02 f303 	lsl.w	r3, r2, r3
 8001d76:	43da      	mvns	r2, r3
 8001d78:	68bb      	ldr	r3, [r7, #8]
 8001d7a:	401a      	ands	r2, r3
 8001d7c:	697b      	ldr	r3, [r7, #20]
 8001d7e:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001d80:	f04f 31ff 	mov.w	r1, #4294967295
 8001d84:	697b      	ldr	r3, [r7, #20]
 8001d86:	fa01 f303 	lsl.w	r3, r1, r3
 8001d8a:	43d9      	mvns	r1, r3
 8001d8c:	687b      	ldr	r3, [r7, #4]
 8001d8e:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001d90:	4313      	orrs	r3, r2
         );
}
 8001d92:	4618      	mov	r0, r3
 8001d94:	3724      	adds	r7, #36	; 0x24
 8001d96:	46bd      	mov	sp, r7
 8001d98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d9c:	4770      	bx	lr

08001d9e <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001d9e:	b580      	push	{r7, lr}
 8001da0:	b082      	sub	sp, #8
 8001da2:	af00      	add	r7, sp, #0
 8001da4:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8001da6:	6878      	ldr	r0, [r7, #4]
 8001da8:	f7ff ff2a 	bl	8001c00 <__NVIC_SetPriorityGrouping>
}
 8001dac:	bf00      	nop
 8001dae:	3708      	adds	r7, #8
 8001db0:	46bd      	mov	sp, r7
 8001db2:	bd80      	pop	{r7, pc}

08001db4 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8001db4:	b580      	push	{r7, lr}
 8001db6:	b086      	sub	sp, #24
 8001db8:	af00      	add	r7, sp, #0
 8001dba:	4603      	mov	r3, r0
 8001dbc:	60b9      	str	r1, [r7, #8]
 8001dbe:	607a      	str	r2, [r7, #4]
 8001dc0:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8001dc2:	2300      	movs	r3, #0
 8001dc4:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8001dc6:	f7ff ff3f 	bl	8001c48 <__NVIC_GetPriorityGrouping>
 8001dca:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8001dcc:	687a      	ldr	r2, [r7, #4]
 8001dce:	68b9      	ldr	r1, [r7, #8]
 8001dd0:	6978      	ldr	r0, [r7, #20]
 8001dd2:	f7ff ffb1 	bl	8001d38 <NVIC_EncodePriority>
 8001dd6:	4602      	mov	r2, r0
 8001dd8:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001ddc:	4611      	mov	r1, r2
 8001dde:	4618      	mov	r0, r3
 8001de0:	f7ff ff80 	bl	8001ce4 <__NVIC_SetPriority>
}
 8001de4:	bf00      	nop
 8001de6:	3718      	adds	r7, #24
 8001de8:	46bd      	mov	sp, r7
 8001dea:	bd80      	pop	{r7, pc}

08001dec <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001dec:	b580      	push	{r7, lr}
 8001dee:	b082      	sub	sp, #8
 8001df0:	af00      	add	r7, sp, #0
 8001df2:	4603      	mov	r3, r0
 8001df4:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8001df6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001dfa:	4618      	mov	r0, r3
 8001dfc:	f7ff ff32 	bl	8001c64 <__NVIC_EnableIRQ>
}
 8001e00:	bf00      	nop
 8001e02:	3708      	adds	r7, #8
 8001e04:	46bd      	mov	sp, r7
 8001e06:	bd80      	pop	{r7, pc}

08001e08 <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8001e08:	b580      	push	{r7, lr}
 8001e0a:	b082      	sub	sp, #8
 8001e0c:	af00      	add	r7, sp, #0
 8001e0e:	4603      	mov	r3, r0
 8001e10:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 8001e12:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001e16:	4618      	mov	r0, r3
 8001e18:	f7ff ff42 	bl	8001ca0 <__NVIC_DisableIRQ>
}
 8001e1c:	bf00      	nop
 8001e1e:	3708      	adds	r7, #8
 8001e20:	46bd      	mov	sp, r7
 8001e22:	bd80      	pop	{r7, pc}

08001e24 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8001e24:	b580      	push	{r7, lr}
 8001e26:	b082      	sub	sp, #8
 8001e28:	af00      	add	r7, sp, #0
 8001e2a:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8001e2c:	687b      	ldr	r3, [r7, #4]
 8001e2e:	2b00      	cmp	r3, #0
 8001e30:	d101      	bne.n	8001e36 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8001e32:	2301      	movs	r3, #1
 8001e34:	e00e      	b.n	8001e54 <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8001e36:	687b      	ldr	r3, [r7, #4]
 8001e38:	795b      	ldrb	r3, [r3, #5]
 8001e3a:	b2db      	uxtb	r3, r3
 8001e3c:	2b00      	cmp	r3, #0
 8001e3e:	d105      	bne.n	8001e4c <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8001e40:	687b      	ldr	r3, [r7, #4]
 8001e42:	2200      	movs	r2, #0
 8001e44:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8001e46:	6878      	ldr	r0, [r7, #4]
 8001e48:	f7ff f8f0 	bl	800102c <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8001e4c:	687b      	ldr	r3, [r7, #4]
 8001e4e:	2201      	movs	r2, #1
 8001e50:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 8001e52:	2300      	movs	r3, #0
}
 8001e54:	4618      	mov	r0, r3
 8001e56:	3708      	adds	r7, #8
 8001e58:	46bd      	mov	sp, r7
 8001e5a:	bd80      	pop	{r7, pc}

08001e5c <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8001e5c:	b580      	push	{r7, lr}
 8001e5e:	b082      	sub	sp, #8
 8001e60:	af00      	add	r7, sp, #0
 8001e62:	6078      	str	r0, [r7, #4]
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8001e64:	687b      	ldr	r3, [r7, #4]
 8001e66:	2b00      	cmp	r3, #0
 8001e68:	d101      	bne.n	8001e6e <HAL_DMA2D_Init+0x12>
  {
     return HAL_ERROR;
 8001e6a:	2301      	movs	r3, #1
 8001e6c:	e03b      	b.n	8001ee6 <HAL_DMA2D_Init+0x8a>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8001e6e:	687b      	ldr	r3, [r7, #4]
 8001e70:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8001e74:	b2db      	uxtb	r3, r3
 8001e76:	2b00      	cmp	r3, #0
 8001e78:	d106      	bne.n	8001e88 <HAL_DMA2D_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8001e7a:	687b      	ldr	r3, [r7, #4]
 8001e7c:	2200      	movs	r2, #0
 8001e7e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8001e82:	6878      	ldr	r0, [r7, #4]
 8001e84:	f7ff f8f4 	bl	8001070 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8001e88:	687b      	ldr	r3, [r7, #4]
 8001e8a:	2202      	movs	r2, #2
 8001e8c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8001e90:	687b      	ldr	r3, [r7, #4]
 8001e92:	681b      	ldr	r3, [r3, #0]
 8001e94:	681b      	ldr	r3, [r3, #0]
 8001e96:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 8001e9a:	687b      	ldr	r3, [r7, #4]
 8001e9c:	685a      	ldr	r2, [r3, #4]
 8001e9e:	687b      	ldr	r3, [r7, #4]
 8001ea0:	681b      	ldr	r3, [r3, #0]
 8001ea2:	430a      	orrs	r2, r1
 8001ea4:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8001ea6:	687b      	ldr	r3, [r7, #4]
 8001ea8:	681b      	ldr	r3, [r3, #0]
 8001eaa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001eac:	f023 0107 	bic.w	r1, r3, #7
 8001eb0:	687b      	ldr	r3, [r7, #4]
 8001eb2:	689a      	ldr	r2, [r3, #8]
 8001eb4:	687b      	ldr	r3, [r7, #4]
 8001eb6:	681b      	ldr	r3, [r3, #0]
 8001eb8:	430a      	orrs	r2, r1
 8001eba:	635a      	str	r2, [r3, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8001ebc:	687b      	ldr	r3, [r7, #4]
 8001ebe:	681b      	ldr	r3, [r3, #0]
 8001ec0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001ec2:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8001ec6:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8001eca:	687a      	ldr	r2, [r7, #4]
 8001ecc:	68d1      	ldr	r1, [r2, #12]
 8001ece:	687a      	ldr	r2, [r7, #4]
 8001ed0:	6812      	ldr	r2, [r2, #0]
 8001ed2:	430b      	orrs	r3, r1
 8001ed4:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8001ed6:	687b      	ldr	r3, [r7, #4]
 8001ed8:	2200      	movs	r2, #0
 8001eda:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8001edc:	687b      	ldr	r3, [r7, #4]
 8001ede:	2201      	movs	r2, #1
 8001ee0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  return HAL_OK;
 8001ee4:	2300      	movs	r3, #0
}
 8001ee6:	4618      	mov	r0, r3
 8001ee8:	3708      	adds	r7, #8
 8001eea:	46bd      	mov	sp, r7
 8001eec:	bd80      	pop	{r7, pc}
	...

08001ef0 <HAL_DMA2D_DeInit>:
  *                 the configuration information for the DMA2D.
  * @retval None
  */

HAL_StatusTypeDef HAL_DMA2D_DeInit(DMA2D_HandleTypeDef *hdma2d)
{
 8001ef0:	b580      	push	{r7, lr}
 8001ef2:	b082      	sub	sp, #8
 8001ef4:	af00      	add	r7, sp, #0
 8001ef6:	6078      	str	r0, [r7, #4]

  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8001ef8:	687b      	ldr	r3, [r7, #4]
 8001efa:	2b00      	cmp	r3, #0
 8001efc:	d101      	bne.n	8001f02 <HAL_DMA2D_DeInit+0x12>
  {
     return HAL_ERROR;
 8001efe:	2301      	movs	r3, #1
 8001f00:	e05f      	b.n	8001fc2 <HAL_DMA2D_DeInit+0xd2>
  }

  /* Before aborting any DMA2D transfer or CLUT loading, check
     first whether or not DMA2D clock is enabled */
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 8001f02:	4b32      	ldr	r3, [pc, #200]	; (8001fcc <HAL_DMA2D_DeInit+0xdc>)
 8001f04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f06:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001f0a:	2b00      	cmp	r3, #0
 8001f0c:	d02e      	beq.n	8001f6c <HAL_DMA2D_DeInit+0x7c>
  {
    /* Abort DMA2D transfer if any */
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 8001f0e:	687b      	ldr	r3, [r7, #4]
 8001f10:	681b      	ldr	r3, [r3, #0]
 8001f12:	681b      	ldr	r3, [r3, #0]
 8001f14:	f003 0301 	and.w	r3, r3, #1
 8001f18:	2b01      	cmp	r3, #1
 8001f1a:	d107      	bne.n	8001f2c <HAL_DMA2D_DeInit+0x3c>
    {
      if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 8001f1c:	6878      	ldr	r0, [r7, #4]
 8001f1e:	f000 f8c1 	bl	80020a4 <HAL_DMA2D_Abort>
 8001f22:	4603      	mov	r3, r0
 8001f24:	2b00      	cmp	r3, #0
 8001f26:	d021      	beq.n	8001f6c <HAL_DMA2D_DeInit+0x7c>
      {
        /* Issue when aborting DMA2D transfer */
        return HAL_ERROR;
 8001f28:	2301      	movs	r3, #1
 8001f2a:	e04a      	b.n	8001fc2 <HAL_DMA2D_DeInit+0xd2>
      }
    }
    else
    {
      /* Abort background CLUT loading if any */
      if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 8001f2c:	687b      	ldr	r3, [r7, #4]
 8001f2e:	681b      	ldr	r3, [r3, #0]
 8001f30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001f32:	f003 0320 	and.w	r3, r3, #32
 8001f36:	2b20      	cmp	r3, #32
 8001f38:	d108      	bne.n	8001f4c <HAL_DMA2D_DeInit+0x5c>
      {
        if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 0U) != HAL_OK)
 8001f3a:	2100      	movs	r1, #0
 8001f3c:	6878      	ldr	r0, [r7, #4]
 8001f3e:	f000 f8f7 	bl	8002130 <HAL_DMA2D_CLUTLoading_Abort>
 8001f42:	4603      	mov	r3, r0
 8001f44:	2b00      	cmp	r3, #0
 8001f46:	d011      	beq.n	8001f6c <HAL_DMA2D_DeInit+0x7c>
        {
          /* Issue when aborting background CLUT loading */
          return HAL_ERROR;
 8001f48:	2301      	movs	r3, #1
 8001f4a:	e03a      	b.n	8001fc2 <HAL_DMA2D_DeInit+0xd2>
        }
      }
      else
      {
        /* Abort foreground CLUT loading if any */
        if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 8001f4c:	687b      	ldr	r3, [r7, #4]
 8001f4e:	681b      	ldr	r3, [r3, #0]
 8001f50:	69db      	ldr	r3, [r3, #28]
 8001f52:	f003 0320 	and.w	r3, r3, #32
 8001f56:	2b20      	cmp	r3, #32
 8001f58:	d108      	bne.n	8001f6c <HAL_DMA2D_DeInit+0x7c>
        {
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 8001f5a:	2101      	movs	r1, #1
 8001f5c:	6878      	ldr	r0, [r7, #4]
 8001f5e:	f000 f8e7 	bl	8002130 <HAL_DMA2D_CLUTLoading_Abort>
 8001f62:	4603      	mov	r3, r0
 8001f64:	2b00      	cmp	r3, #0
 8001f66:	d001      	beq.n	8001f6c <HAL_DMA2D_DeInit+0x7c>
          {
            /* Issue when aborting foreground CLUT loading */
            return HAL_ERROR;
 8001f68:	2301      	movs	r3, #1
 8001f6a:	e02a      	b.n	8001fc2 <HAL_DMA2D_DeInit+0xd2>
      }
    }
  }

  /* Reset DMA2D control registers*/
  hdma2d->Instance->CR       =    0U;
 8001f6c:	687b      	ldr	r3, [r7, #4]
 8001f6e:	681b      	ldr	r3, [r3, #0]
 8001f70:	2200      	movs	r2, #0
 8001f72:	601a      	str	r2, [r3, #0]
  hdma2d->Instance->IFCR     = 0x3FU;
 8001f74:	687b      	ldr	r3, [r7, #4]
 8001f76:	681b      	ldr	r3, [r3, #0]
 8001f78:	223f      	movs	r2, #63	; 0x3f
 8001f7a:	609a      	str	r2, [r3, #8]
  hdma2d->Instance->FGOR     =    0U;
 8001f7c:	687b      	ldr	r3, [r7, #4]
 8001f7e:	681b      	ldr	r3, [r3, #0]
 8001f80:	2200      	movs	r2, #0
 8001f82:	611a      	str	r2, [r3, #16]
  hdma2d->Instance->BGOR     =    0U;
 8001f84:	687b      	ldr	r3, [r7, #4]
 8001f86:	681b      	ldr	r3, [r3, #0]
 8001f88:	2200      	movs	r2, #0
 8001f8a:	619a      	str	r2, [r3, #24]
  hdma2d->Instance->FGPFCCR  =    0U;
 8001f8c:	687b      	ldr	r3, [r7, #4]
 8001f8e:	681b      	ldr	r3, [r3, #0]
 8001f90:	2200      	movs	r2, #0
 8001f92:	61da      	str	r2, [r3, #28]
  hdma2d->Instance->BGPFCCR  =    0U;
 8001f94:	687b      	ldr	r3, [r7, #4]
 8001f96:	681b      	ldr	r3, [r3, #0]
 8001f98:	2200      	movs	r2, #0
 8001f9a:	625a      	str	r2, [r3, #36]	; 0x24
  hdma2d->Instance->OPFCCR   =    0U;
 8001f9c:	687b      	ldr	r3, [r7, #4]
 8001f9e:	681b      	ldr	r3, [r3, #0]
 8001fa0:	2200      	movs	r2, #0
 8001fa2:	635a      	str	r2, [r3, #52]	; 0x34
    /* DeInit the low level hardware */
    hdma2d->MspDeInitCallback(hdma2d);

#else
  /* Carry on with de-initialization of low level hardware */
  HAL_DMA2D_MspDeInit(hdma2d);
 8001fa4:	6878      	ldr	r0, [r7, #4]
 8001fa6:	f7ff f88b 	bl	80010c0 <HAL_DMA2D_MspDeInit>
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8001faa:	687b      	ldr	r3, [r7, #4]
 8001fac:	2200      	movs	r2, #0
 8001fae:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_RESET;
 8001fb0:	687b      	ldr	r3, [r7, #4]
 8001fb2:	2200      	movs	r2, #0
 8001fb4:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Release Lock */
  __HAL_UNLOCK(hdma2d);
 8001fb8:	687b      	ldr	r3, [r7, #4]
 8001fba:	2200      	movs	r2, #0
 8001fbc:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8001fc0:	2300      	movs	r3, #0
}
 8001fc2:	4618      	mov	r0, r3
 8001fc4:	3708      	adds	r7, #8
 8001fc6:	46bd      	mov	sp, r7
 8001fc8:	bd80      	pop	{r7, pc}
 8001fca:	bf00      	nop
 8001fcc:	40023800 	.word	0x40023800

08001fd0 <HAL_DMA2D_Start_IT>:
  * @param  Width      The width of data to be transferred from source to destination (expressed in number of pixels per line).
  * @param  Height     The height of data to be transferred from source to destination (expressed in number of lines).
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Start_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width,  uint32_t Height)
{
 8001fd0:	b580      	push	{r7, lr}
 8001fd2:	b086      	sub	sp, #24
 8001fd4:	af02      	add	r7, sp, #8
 8001fd6:	60f8      	str	r0, [r7, #12]
 8001fd8:	60b9      	str	r1, [r7, #8]
 8001fda:	607a      	str	r2, [r7, #4]
 8001fdc:	603b      	str	r3, [r7, #0]
  /* Check the parameters */
  assert_param(IS_DMA2D_LINE(Height));
  assert_param(IS_DMA2D_PIXEL(Width));

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8001fde:	68fb      	ldr	r3, [r7, #12]
 8001fe0:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8001fe4:	2b01      	cmp	r3, #1
 8001fe6:	d101      	bne.n	8001fec <HAL_DMA2D_Start_IT+0x1c>
 8001fe8:	2302      	movs	r3, #2
 8001fea:	e020      	b.n	800202e <HAL_DMA2D_Start_IT+0x5e>
 8001fec:	68fb      	ldr	r3, [r7, #12]
 8001fee:	2201      	movs	r2, #1
 8001ff0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8001ff4:	68fb      	ldr	r3, [r7, #12]
 8001ff6:	2202      	movs	r2, #2
 8001ff8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Configure the source, destination address and the data size */
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 8001ffc:	69bb      	ldr	r3, [r7, #24]
 8001ffe:	9300      	str	r3, [sp, #0]
 8002000:	683b      	ldr	r3, [r7, #0]
 8002002:	687a      	ldr	r2, [r7, #4]
 8002004:	68b9      	ldr	r1, [r7, #8]
 8002006:	68f8      	ldr	r0, [r7, #12]
 8002008:	f000 fa84 	bl	8002514 <DMA2D_SetConfig>

  /* Enable the transfer complete, transfer error and configuration error interrupts */
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 800200c:	68fb      	ldr	r3, [r7, #12]
 800200e:	681b      	ldr	r3, [r3, #0]
 8002010:	681a      	ldr	r2, [r3, #0]
 8002012:	68fb      	ldr	r3, [r7, #12]
 8002014:	681b      	ldr	r3, [r3, #0]
 8002016:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 800201a:	601a      	str	r2, [r3, #0]

  /* Enable the Peripheral */
  __HAL_DMA2D_ENABLE(hdma2d);
 800201c:	68fb      	ldr	r3, [r7, #12]
 800201e:	681b      	ldr	r3, [r3, #0]
 8002020:	681a      	ldr	r2, [r3, #0]
 8002022:	68fb      	ldr	r3, [r7, #12]
 8002024:	681b      	ldr	r3, [r3, #0]
 8002026:	f042 0201 	orr.w	r2, r2, #1
 800202a:	601a      	str	r2, [r3, #0]

  return HAL_OK;
 800202c:	2300      	movs	r3, #0
}
 800202e:	4618      	mov	r0, r3
 8002030:	3710      	adds	r7, #16
 8002032:	46bd      	mov	sp, r7
 8002034:	bd80      	pop	{r7, pc}

08002036 <HAL_DMA2D_BlendingStart_IT>:
  * @param  Width       The width of data to be transferred from source to destination (expressed in number of pixels per line).
  * @param  Height      The height of data to be transferred from source to destination (expressed in number of lines).
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_BlendingStart_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t SrcAddress1, uint32_t  SrcAddress2, uint32_t DstAddress, uint32_t Width,  uint32_t Height)
{
 8002036:	b580      	push	{r7, lr}
 8002038:	b086      	sub	sp, #24
 800203a:	af02      	add	r7, sp, #8
 800203c:	60f8      	str	r0, [r7, #12]
 800203e:	60b9      	str	r1, [r7, #8]
 8002040:	607a      	str	r2, [r7, #4]
 8002042:	603b      	str	r3, [r7, #0]
  /* Check the parameters */
  assert_param(IS_DMA2D_LINE(Height));
  assert_param(IS_DMA2D_PIXEL(Width));

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8002044:	68fb      	ldr	r3, [r7, #12]
 8002046:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800204a:	2b01      	cmp	r3, #1
 800204c:	d101      	bne.n	8002052 <HAL_DMA2D_BlendingStart_IT+0x1c>
 800204e:	2302      	movs	r3, #2
 8002050:	e024      	b.n	800209c <HAL_DMA2D_BlendingStart_IT+0x66>
 8002052:	68fb      	ldr	r3, [r7, #12]
 8002054:	2201      	movs	r2, #1
 8002056:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800205a:	68fb      	ldr	r3, [r7, #12]
 800205c:	2202      	movs	r2, #2
 800205e:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Configure DMA2D Stream source2 address */
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 8002062:	68fb      	ldr	r3, [r7, #12]
 8002064:	681b      	ldr	r3, [r3, #0]
 8002066:	687a      	ldr	r2, [r7, #4]
 8002068:	615a      	str	r2, [r3, #20]

  /* Configure the source, destination address and the data size */
  DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 800206a:	69fb      	ldr	r3, [r7, #28]
 800206c:	9300      	str	r3, [sp, #0]
 800206e:	69bb      	ldr	r3, [r7, #24]
 8002070:	683a      	ldr	r2, [r7, #0]
 8002072:	68b9      	ldr	r1, [r7, #8]
 8002074:	68f8      	ldr	r0, [r7, #12]
 8002076:	f000 fa4d 	bl	8002514 <DMA2D_SetConfig>

  /* Enable the transfer complete, transfer error and configuration error interrupts */
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 800207a:	68fb      	ldr	r3, [r7, #12]
 800207c:	681b      	ldr	r3, [r3, #0]
 800207e:	681a      	ldr	r2, [r3, #0]
 8002080:	68fb      	ldr	r3, [r7, #12]
 8002082:	681b      	ldr	r3, [r3, #0]
 8002084:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 8002088:	601a      	str	r2, [r3, #0]

  /* Enable the Peripheral */
  __HAL_DMA2D_ENABLE(hdma2d);
 800208a:	68fb      	ldr	r3, [r7, #12]
 800208c:	681b      	ldr	r3, [r3, #0]
 800208e:	681a      	ldr	r2, [r3, #0]
 8002090:	68fb      	ldr	r3, [r7, #12]
 8002092:	681b      	ldr	r3, [r3, #0]
 8002094:	f042 0201 	orr.w	r2, r2, #1
 8002098:	601a      	str	r2, [r3, #0]

  return HAL_OK;
 800209a:	2300      	movs	r3, #0
}
 800209c:	4618      	mov	r0, r3
 800209e:	3710      	adds	r7, #16
 80020a0:	46bd      	mov	sp, r7
 80020a2:	bd80      	pop	{r7, pc}

080020a4 <HAL_DMA2D_Abort>:
  * @param  hdma2d  pointer to a DMA2D_HandleTypeDef structure that contains
  *                  the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Abort(DMA2D_HandleTypeDef *hdma2d)
{
 80020a4:	b580      	push	{r7, lr}
 80020a6:	b084      	sub	sp, #16
 80020a8:	af00      	add	r7, sp, #0
 80020aa:	6078      	str	r0, [r7, #4]

  /* Abort the DMA2D transfer */
  /* START bit is reset to make sure not to set it again, in the event the HW clears it
     between the register read and the register write by the CPU (writing 0 has no
     effect on START bitvalue) */
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 80020ac:	687b      	ldr	r3, [r7, #4]
 80020ae:	681b      	ldr	r3, [r3, #0]
 80020b0:	681b      	ldr	r3, [r3, #0]
 80020b2:	f023 0205 	bic.w	r2, r3, #5
 80020b6:	687b      	ldr	r3, [r7, #4]
 80020b8:	681b      	ldr	r3, [r3, #0]
 80020ba:	f042 0204 	orr.w	r2, r2, #4
 80020be:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80020c0:	f7ff fd70 	bl	8001ba4 <HAL_GetTick>
 80020c4:	60f8      	str	r0, [r7, #12]

  /* Check if the DMA2D is effectively disabled */
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 80020c6:	e017      	b.n	80020f8 <HAL_DMA2D_Abort+0x54>
  {
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 80020c8:	f7ff fd6c 	bl	8001ba4 <HAL_GetTick>
 80020cc:	4602      	mov	r2, r0
 80020ce:	68fb      	ldr	r3, [r7, #12]
 80020d0:	1ad3      	subs	r3, r2, r3
 80020d2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80020d6:	d90f      	bls.n	80020f8 <HAL_DMA2D_Abort+0x54>
    {
      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 80020d8:	687b      	ldr	r3, [r7, #4]
 80020da:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80020dc:	f043 0220 	orr.w	r2, r3, #32
 80020e0:	687b      	ldr	r3, [r7, #4]
 80020e2:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change the DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 80020e4:	687b      	ldr	r3, [r7, #4]
 80020e6:	2203      	movs	r2, #3
 80020e8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80020ec:	687b      	ldr	r3, [r7, #4]
 80020ee:	2200      	movs	r2, #0
 80020f0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      return HAL_TIMEOUT;
 80020f4:	2303      	movs	r3, #3
 80020f6:	e017      	b.n	8002128 <HAL_DMA2D_Abort+0x84>
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 80020f8:	687b      	ldr	r3, [r7, #4]
 80020fa:	681b      	ldr	r3, [r3, #0]
 80020fc:	681b      	ldr	r3, [r3, #0]
 80020fe:	f003 0301 	and.w	r3, r3, #1
 8002102:	2b00      	cmp	r3, #0
 8002104:	d1e0      	bne.n	80020c8 <HAL_DMA2D_Abort+0x24>
    }
  }

  /* Disable the Transfer Complete, Transfer Error and Configuration Error interrupts */
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8002106:	687b      	ldr	r3, [r7, #4]
 8002108:	681b      	ldr	r3, [r3, #0]
 800210a:	681a      	ldr	r2, [r3, #0]
 800210c:	687b      	ldr	r3, [r7, #4]
 800210e:	681b      	ldr	r3, [r3, #0]
 8002110:	f422 520c 	bic.w	r2, r2, #8960	; 0x2300
 8002114:	601a      	str	r2, [r3, #0]

  /* Change the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8002116:	687b      	ldr	r3, [r7, #4]
 8002118:	2201      	movs	r2, #1
 800211a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process Unlocked */
  __HAL_UNLOCK(hdma2d);
 800211e:	687b      	ldr	r3, [r7, #4]
 8002120:	2200      	movs	r2, #0
 8002122:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8002126:	2300      	movs	r3, #0
}
 8002128:	4618      	mov	r0, r3
 800212a:	3710      	adds	r7, #16
 800212c:	46bd      	mov	sp, r7
 800212e:	bd80      	pop	{r7, pc}

08002130 <HAL_DMA2D_CLUTLoading_Abort>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Abort(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8002130:	b580      	push	{r7, lr}
 8002132:	b084      	sub	sp, #16
 8002134:	af00      	add	r7, sp, #0
 8002136:	6078      	str	r0, [r7, #4]
 8002138:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 800213a:	687b      	ldr	r3, [r7, #4]
 800213c:	681b      	ldr	r3, [r3, #0]
 800213e:	3324      	adds	r3, #36	; 0x24
 8002140:	60fb      	str	r3, [r7, #12]

  /* Abort the CLUT loading */
  SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 8002142:	687b      	ldr	r3, [r7, #4]
 8002144:	681b      	ldr	r3, [r3, #0]
 8002146:	681a      	ldr	r2, [r3, #0]
 8002148:	687b      	ldr	r3, [r7, #4]
 800214a:	681b      	ldr	r3, [r3, #0]
 800214c:	f042 0204 	orr.w	r2, r2, #4
 8002150:	601a      	str	r2, [r3, #0]

  /* If foreground CLUT loading is considered, update local variables */
  if(LayerIdx == DMA2D_FOREGROUND_LAYER)
 8002152:	683b      	ldr	r3, [r7, #0]
 8002154:	2b01      	cmp	r3, #1
 8002156:	d103      	bne.n	8002160 <HAL_DMA2D_CLUTLoading_Abort+0x30>
  {
    reg  = &(hdma2d->Instance->FGPFCCR);
 8002158:	687b      	ldr	r3, [r7, #4]
 800215a:	681b      	ldr	r3, [r3, #0]
 800215c:	331c      	adds	r3, #28
 800215e:	60fb      	str	r3, [r7, #12]
  }


  /* Get tick */
  tickstart = HAL_GetTick();
 8002160:	f7ff fd20 	bl	8001ba4 <HAL_GetTick>
 8002164:	60b8      	str	r0, [r7, #8]

  /* Check if the CLUT loading is aborted */
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 8002166:	e017      	b.n	8002198 <HAL_DMA2D_CLUTLoading_Abort+0x68>
  {
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8002168:	f7ff fd1c 	bl	8001ba4 <HAL_GetTick>
 800216c:	4602      	mov	r2, r0
 800216e:	68bb      	ldr	r3, [r7, #8]
 8002170:	1ad3      	subs	r3, r2, r3
 8002172:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002176:	d90f      	bls.n	8002198 <HAL_DMA2D_CLUTLoading_Abort+0x68>
    {
      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8002178:	687b      	ldr	r3, [r7, #4]
 800217a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800217c:	f043 0220 	orr.w	r2, r3, #32
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change the DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8002184:	687b      	ldr	r3, [r7, #4]
 8002186:	2203      	movs	r2, #3
 8002188:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800218c:	687b      	ldr	r3, [r7, #4]
 800218e:	2200      	movs	r2, #0
 8002190:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      return HAL_TIMEOUT;
 8002194:	2303      	movs	r3, #3
 8002196:	e016      	b.n	80021c6 <HAL_DMA2D_CLUTLoading_Abort+0x96>
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 8002198:	68fb      	ldr	r3, [r7, #12]
 800219a:	681b      	ldr	r3, [r3, #0]
 800219c:	f003 0320 	and.w	r3, r3, #32
 80021a0:	2b00      	cmp	r3, #0
 80021a2:	d1e1      	bne.n	8002168 <HAL_DMA2D_CLUTLoading_Abort+0x38>
    }
  }

  /* Disable the CLUT Transfer Complete, Transfer Error, Configuration Error and CLUT Access Error interrupts */
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
 80021a4:	687b      	ldr	r3, [r7, #4]
 80021a6:	681b      	ldr	r3, [r3, #0]
 80021a8:	681a      	ldr	r2, [r3, #0]
 80021aa:	687b      	ldr	r3, [r7, #4]
 80021ac:	681b      	ldr	r3, [r3, #0]
 80021ae:	f422 5264 	bic.w	r2, r2, #14592	; 0x3900
 80021b2:	601a      	str	r2, [r3, #0]

  /* Change the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80021b4:	687b      	ldr	r3, [r7, #4]
 80021b6:	2201      	movs	r2, #1
 80021b8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process Unlocked */
  __HAL_UNLOCK(hdma2d);
 80021bc:	687b      	ldr	r3, [r7, #4]
 80021be:	2200      	movs	r2, #0
 80021c0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 80021c4:	2300      	movs	r3, #0
}
 80021c6:	4618      	mov	r0, r3
 80021c8:	3710      	adds	r7, #16
 80021ca:	46bd      	mov	sp, r7
 80021cc:	bd80      	pop	{r7, pc}

080021ce <HAL_DMA2D_IRQHandler>:
  * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
 80021ce:	b580      	push	{r7, lr}
 80021d0:	b084      	sub	sp, #16
 80021d2:	af00      	add	r7, sp, #0
 80021d4:	6078      	str	r0, [r7, #4]
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80021d6:	687b      	ldr	r3, [r7, #4]
 80021d8:	681b      	ldr	r3, [r3, #0]
 80021da:	685b      	ldr	r3, [r3, #4]
 80021dc:	60fb      	str	r3, [r7, #12]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80021de:	687b      	ldr	r3, [r7, #4]
 80021e0:	681b      	ldr	r3, [r3, #0]
 80021e2:	681b      	ldr	r3, [r3, #0]
 80021e4:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80021e6:	68fb      	ldr	r3, [r7, #12]
 80021e8:	f003 0301 	and.w	r3, r3, #1
 80021ec:	2b00      	cmp	r3, #0
 80021ee:	d026      	beq.n	800223e <HAL_DMA2D_IRQHandler+0x70>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 80021f0:	68bb      	ldr	r3, [r7, #8]
 80021f2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80021f6:	2b00      	cmp	r3, #0
 80021f8:	d021      	beq.n	800223e <HAL_DMA2D_IRQHandler+0x70>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80021fa:	687b      	ldr	r3, [r7, #4]
 80021fc:	681b      	ldr	r3, [r3, #0]
 80021fe:	681a      	ldr	r2, [r3, #0]
 8002200:	687b      	ldr	r3, [r7, #4]
 8002202:	681b      	ldr	r3, [r3, #0]
 8002204:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8002208:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800220a:	687b      	ldr	r3, [r7, #4]
 800220c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800220e:	f043 0201 	orr.w	r2, r3, #1
 8002212:	687b      	ldr	r3, [r7, #4]
 8002214:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8002216:	687b      	ldr	r3, [r7, #4]
 8002218:	681b      	ldr	r3, [r3, #0]
 800221a:	2201      	movs	r2, #1
 800221c:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800221e:	687b      	ldr	r3, [r7, #4]
 8002220:	2204      	movs	r2, #4
 8002222:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8002226:	687b      	ldr	r3, [r7, #4]
 8002228:	2200      	movs	r2, #0
 800222a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800222e:	687b      	ldr	r3, [r7, #4]
 8002230:	695b      	ldr	r3, [r3, #20]
 8002232:	2b00      	cmp	r3, #0
 8002234:	d003      	beq.n	800223e <HAL_DMA2D_IRQHandler+0x70>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8002236:	687b      	ldr	r3, [r7, #4]
 8002238:	695b      	ldr	r3, [r3, #20]
 800223a:	6878      	ldr	r0, [r7, #4]
 800223c:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800223e:	68fb      	ldr	r3, [r7, #12]
 8002240:	f003 0320 	and.w	r3, r3, #32
 8002244:	2b00      	cmp	r3, #0
 8002246:	d026      	beq.n	8002296 <HAL_DMA2D_IRQHandler+0xc8>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8002248:	68bb      	ldr	r3, [r7, #8]
 800224a:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800224e:	2b00      	cmp	r3, #0
 8002250:	d021      	beq.n	8002296 <HAL_DMA2D_IRQHandler+0xc8>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8002252:	687b      	ldr	r3, [r7, #4]
 8002254:	681b      	ldr	r3, [r3, #0]
 8002256:	681a      	ldr	r2, [r3, #0]
 8002258:	687b      	ldr	r3, [r7, #4]
 800225a:	681b      	ldr	r3, [r3, #0]
 800225c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8002260:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8002262:	687b      	ldr	r3, [r7, #4]
 8002264:	681b      	ldr	r3, [r3, #0]
 8002266:	2220      	movs	r2, #32
 8002268:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800226a:	687b      	ldr	r3, [r7, #4]
 800226c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800226e:	f043 0202 	orr.w	r2, r3, #2
 8002272:	687b      	ldr	r3, [r7, #4]
 8002274:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8002276:	687b      	ldr	r3, [r7, #4]
 8002278:	2204      	movs	r2, #4
 800227a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	2200      	movs	r2, #0
 8002282:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8002286:	687b      	ldr	r3, [r7, #4]
 8002288:	695b      	ldr	r3, [r3, #20]
 800228a:	2b00      	cmp	r3, #0
 800228c:	d003      	beq.n	8002296 <HAL_DMA2D_IRQHandler+0xc8>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800228e:	687b      	ldr	r3, [r7, #4]
 8002290:	695b      	ldr	r3, [r3, #20]
 8002292:	6878      	ldr	r0, [r7, #4]
 8002294:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8002296:	68fb      	ldr	r3, [r7, #12]
 8002298:	f003 0308 	and.w	r3, r3, #8
 800229c:	2b00      	cmp	r3, #0
 800229e:	d026      	beq.n	80022ee <HAL_DMA2D_IRQHandler+0x120>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80022a0:	68bb      	ldr	r3, [r7, #8]
 80022a2:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80022a6:	2b00      	cmp	r3, #0
 80022a8:	d021      	beq.n	80022ee <HAL_DMA2D_IRQHandler+0x120>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80022aa:	687b      	ldr	r3, [r7, #4]
 80022ac:	681b      	ldr	r3, [r3, #0]
 80022ae:	681a      	ldr	r2, [r3, #0]
 80022b0:	687b      	ldr	r3, [r7, #4]
 80022b2:	681b      	ldr	r3, [r3, #0]
 80022b4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80022b8:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80022ba:	687b      	ldr	r3, [r7, #4]
 80022bc:	681b      	ldr	r3, [r3, #0]
 80022be:	2208      	movs	r2, #8
 80022c0:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 80022c2:	687b      	ldr	r3, [r7, #4]
 80022c4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80022c6:	f043 0204 	orr.w	r2, r3, #4
 80022ca:	687b      	ldr	r3, [r7, #4]
 80022cc:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80022ce:	687b      	ldr	r3, [r7, #4]
 80022d0:	2204      	movs	r2, #4
 80022d2:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80022d6:	687b      	ldr	r3, [r7, #4]
 80022d8:	2200      	movs	r2, #0
 80022da:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80022de:	687b      	ldr	r3, [r7, #4]
 80022e0:	695b      	ldr	r3, [r3, #20]
 80022e2:	2b00      	cmp	r3, #0
 80022e4:	d003      	beq.n	80022ee <HAL_DMA2D_IRQHandler+0x120>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80022e6:	687b      	ldr	r3, [r7, #4]
 80022e8:	695b      	ldr	r3, [r3, #20]
 80022ea:	6878      	ldr	r0, [r7, #4]
 80022ec:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 80022ee:	68fb      	ldr	r3, [r7, #12]
 80022f0:	f003 0304 	and.w	r3, r3, #4
 80022f4:	2b00      	cmp	r3, #0
 80022f6:	d013      	beq.n	8002320 <HAL_DMA2D_IRQHandler+0x152>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 80022f8:	68bb      	ldr	r3, [r7, #8]
 80022fa:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80022fe:	2b00      	cmp	r3, #0
 8002300:	d00e      	beq.n	8002320 <HAL_DMA2D_IRQHandler+0x152>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8002302:	687b      	ldr	r3, [r7, #4]
 8002304:	681b      	ldr	r3, [r3, #0]
 8002306:	681a      	ldr	r2, [r3, #0]
 8002308:	687b      	ldr	r3, [r7, #4]
 800230a:	681b      	ldr	r3, [r3, #0]
 800230c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002310:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8002312:	687b      	ldr	r3, [r7, #4]
 8002314:	681b      	ldr	r3, [r3, #0]
 8002316:	2204      	movs	r2, #4
 8002318:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800231a:	6878      	ldr	r0, [r7, #4]
 800231c:	f000 f853 	bl	80023c6 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8002320:	68fb      	ldr	r3, [r7, #12]
 8002322:	f003 0302 	and.w	r3, r3, #2
 8002326:	2b00      	cmp	r3, #0
 8002328:	d024      	beq.n	8002374 <HAL_DMA2D_IRQHandler+0x1a6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 800232a:	68bb      	ldr	r3, [r7, #8]
 800232c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002330:	2b00      	cmp	r3, #0
 8002332:	d01f      	beq.n	8002374 <HAL_DMA2D_IRQHandler+0x1a6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8002334:	687b      	ldr	r3, [r7, #4]
 8002336:	681b      	ldr	r3, [r3, #0]
 8002338:	681a      	ldr	r2, [r3, #0]
 800233a:	687b      	ldr	r3, [r7, #4]
 800233c:	681b      	ldr	r3, [r3, #0]
 800233e:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8002342:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8002344:	687b      	ldr	r3, [r7, #4]
 8002346:	681b      	ldr	r3, [r3, #0]
 8002348:	2202      	movs	r2, #2
 800234a:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800234c:	687b      	ldr	r3, [r7, #4]
 800234e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8002350:	687b      	ldr	r3, [r7, #4]
 8002352:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	2201      	movs	r2, #1
 8002358:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800235c:	687b      	ldr	r3, [r7, #4]
 800235e:	2200      	movs	r2, #0
 8002360:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8002364:	687b      	ldr	r3, [r7, #4]
 8002366:	691b      	ldr	r3, [r3, #16]
 8002368:	2b00      	cmp	r3, #0
 800236a:	d003      	beq.n	8002374 <HAL_DMA2D_IRQHandler+0x1a6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 800236c:	687b      	ldr	r3, [r7, #4]
 800236e:	691b      	ldr	r3, [r3, #16]
 8002370:	6878      	ldr	r0, [r7, #4]
 8002372:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8002374:	68fb      	ldr	r3, [r7, #12]
 8002376:	f003 0310 	and.w	r3, r3, #16
 800237a:	2b00      	cmp	r3, #0
 800237c:	d01f      	beq.n	80023be <HAL_DMA2D_IRQHandler+0x1f0>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800237e:	68bb      	ldr	r3, [r7, #8]
 8002380:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002384:	2b00      	cmp	r3, #0
 8002386:	d01a      	beq.n	80023be <HAL_DMA2D_IRQHandler+0x1f0>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8002388:	687b      	ldr	r3, [r7, #4]
 800238a:	681b      	ldr	r3, [r3, #0]
 800238c:	681a      	ldr	r2, [r3, #0]
 800238e:	687b      	ldr	r3, [r7, #4]
 8002390:	681b      	ldr	r3, [r3, #0]
 8002392:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8002396:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8002398:	687b      	ldr	r3, [r7, #4]
 800239a:	681b      	ldr	r3, [r3, #0]
 800239c:	2210      	movs	r2, #16
 800239e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80023a4:	687b      	ldr	r3, [r7, #4]
 80023a6:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80023a8:	687b      	ldr	r3, [r7, #4]
 80023aa:	2201      	movs	r2, #1
 80023ac:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80023b0:	687b      	ldr	r3, [r7, #4]
 80023b2:	2200      	movs	r2, #0
 80023b4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80023b8:	6878      	ldr	r0, [r7, #4]
 80023ba:	f000 f80e 	bl	80023da <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 80023be:	bf00      	nop
 80023c0:	3710      	adds	r7, #16
 80023c2:	46bd      	mov	sp, r7
 80023c4:	bd80      	pop	{r7, pc}

080023c6 <HAL_DMA2D_LineEventCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
{
 80023c6:	b480      	push	{r7}
 80023c8:	b083      	sub	sp, #12
 80023ca:	af00      	add	r7, sp, #0
 80023cc:	6078      	str	r0, [r7, #4]
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_LineEventCallback can be implemented in the user file.
   */
}
 80023ce:	bf00      	nop
 80023d0:	370c      	adds	r7, #12
 80023d2:	46bd      	mov	sp, r7
 80023d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023d8:	4770      	bx	lr

080023da <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
{
 80023da:	b480      	push	{r7}
 80023dc:	b083      	sub	sp, #12
 80023de:	af00      	add	r7, sp, #0
 80023e0:	6078      	str	r0, [r7, #4]
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_CLUTLoadingCpltCallback can be implemented in the user file.
   */
}
 80023e2:	bf00      	nop
 80023e4:	370c      	adds	r7, #12
 80023e6:	46bd      	mov	sp, r7
 80023e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023ec:	4770      	bx	lr
	...

080023f0 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80023f0:	b480      	push	{r7}
 80023f2:	b087      	sub	sp, #28
 80023f4:	af00      	add	r7, sp, #0
 80023f6:	6078      	str	r0, [r7, #4]
 80023f8:	6039      	str	r1, [r7, #0]
  uint32_t regMask, regValue;

  /* Check the parameters */
  assert_param(IS_DMA2D_LAYER(LayerIdx));
  assert_param(IS_DMA2D_OFFSET(hdma2d->LayerCfg[LayerIdx].InputOffset));
  if(hdma2d->Init.Mode != DMA2D_R2M)
 80023fa:	687b      	ldr	r3, [r7, #4]
 80023fc:	685b      	ldr	r3, [r3, #4]
 80023fe:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8002402:	687b      	ldr	r3, [r7, #4]
 8002404:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8002408:	2b01      	cmp	r3, #1
 800240a:	d101      	bne.n	8002410 <HAL_DMA2D_ConfigLayer+0x20>
 800240c:	2302      	movs	r3, #2
 800240e:	e079      	b.n	8002504 <HAL_DMA2D_ConfigLayer+0x114>
 8002410:	687b      	ldr	r3, [r7, #4]
 8002412:	2201      	movs	r2, #1
 8002414:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8002418:	687b      	ldr	r3, [r7, #4]
 800241a:	2202      	movs	r2, #2
 800241c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];
 8002420:	683b      	ldr	r3, [r7, #0]
 8002422:	011b      	lsls	r3, r3, #4
 8002424:	3318      	adds	r3, #24
 8002426:	687a      	ldr	r2, [r7, #4]
 8002428:	4413      	add	r3, r2
 800242a:	613b      	str	r3, [r7, #16]

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800242c:	693b      	ldr	r3, [r7, #16]
 800242e:	685a      	ldr	r2, [r3, #4]
 8002430:	693b      	ldr	r3, [r7, #16]
 8002432:	689b      	ldr	r3, [r3, #8]
 8002434:	041b      	lsls	r3, r3, #16
 8002436:	4313      	orrs	r3, r2
 8002438:	617b      	str	r3, [r7, #20]
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
 800243a:	4b35      	ldr	r3, [pc, #212]	; (8002510 <HAL_DMA2D_ConfigLayer+0x120>)
 800243c:	60fb      	str	r3, [r7, #12]


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800243e:	693b      	ldr	r3, [r7, #16]
 8002440:	685b      	ldr	r3, [r3, #4]
 8002442:	2b0a      	cmp	r3, #10
 8002444:	d003      	beq.n	800244e <HAL_DMA2D_ConfigLayer+0x5e>
 8002446:	693b      	ldr	r3, [r7, #16]
 8002448:	685b      	ldr	r3, [r3, #4]
 800244a:	2b09      	cmp	r3, #9
 800244c:	d107      	bne.n	800245e <HAL_DMA2D_ConfigLayer+0x6e>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800244e:	693b      	ldr	r3, [r7, #16]
 8002450:	68db      	ldr	r3, [r3, #12]
 8002452:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002456:	697a      	ldr	r2, [r7, #20]
 8002458:	4313      	orrs	r3, r2
 800245a:	617b      	str	r3, [r7, #20]
 800245c:	e005      	b.n	800246a <HAL_DMA2D_ConfigLayer+0x7a>
  }
  else
  {
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800245e:	693b      	ldr	r3, [r7, #16]
 8002460:	68db      	ldr	r3, [r3, #12]
 8002462:	061b      	lsls	r3, r3, #24
 8002464:	697a      	ldr	r2, [r7, #20]
 8002466:	4313      	orrs	r3, r2
 8002468:	617b      	str	r3, [r7, #20]
  }

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 800246a:	683b      	ldr	r3, [r7, #0]
 800246c:	2b00      	cmp	r3, #0
 800246e:	d120      	bne.n	80024b2 <HAL_DMA2D_ConfigLayer+0xc2>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8002470:	687b      	ldr	r3, [r7, #4]
 8002472:	681b      	ldr	r3, [r3, #0]
 8002474:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002476:	68fb      	ldr	r3, [r7, #12]
 8002478:	43db      	mvns	r3, r3
 800247a:	ea02 0103 	and.w	r1, r2, r3
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	681b      	ldr	r3, [r3, #0]
 8002482:	697a      	ldr	r2, [r7, #20]
 8002484:	430a      	orrs	r2, r1
 8002486:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8002488:	687b      	ldr	r3, [r7, #4]
 800248a:	681b      	ldr	r3, [r3, #0]
 800248c:	693a      	ldr	r2, [r7, #16]
 800248e:	6812      	ldr	r2, [r2, #0]
 8002490:	619a      	str	r2, [r3, #24]

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8002492:	693b      	ldr	r3, [r7, #16]
 8002494:	685b      	ldr	r3, [r3, #4]
 8002496:	2b0a      	cmp	r3, #10
 8002498:	d003      	beq.n	80024a2 <HAL_DMA2D_ConfigLayer+0xb2>
 800249a:	693b      	ldr	r3, [r7, #16]
 800249c:	685b      	ldr	r3, [r3, #4]
 800249e:	2b09      	cmp	r3, #9
 80024a0:	d127      	bne.n	80024f2 <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 80024a2:	693b      	ldr	r3, [r7, #16]
 80024a4:	68da      	ldr	r2, [r3, #12]
 80024a6:	687b      	ldr	r3, [r7, #4]
 80024a8:	681b      	ldr	r3, [r3, #0]
 80024aa:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80024ae:	629a      	str	r2, [r3, #40]	; 0x28
 80024b0:	e01f      	b.n	80024f2 <HAL_DMA2D_ConfigLayer+0x102>
  else
  {


     /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80024b2:	687b      	ldr	r3, [r7, #4]
 80024b4:	681b      	ldr	r3, [r3, #0]
 80024b6:	69da      	ldr	r2, [r3, #28]
 80024b8:	68fb      	ldr	r3, [r7, #12]
 80024ba:	43db      	mvns	r3, r3
 80024bc:	ea02 0103 	and.w	r1, r2, r3
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	681b      	ldr	r3, [r3, #0]
 80024c4:	697a      	ldr	r2, [r7, #20]
 80024c6:	430a      	orrs	r2, r1
 80024c8:	61da      	str	r2, [r3, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80024ca:	687b      	ldr	r3, [r7, #4]
 80024cc:	681b      	ldr	r3, [r3, #0]
 80024ce:	693a      	ldr	r2, [r7, #16]
 80024d0:	6812      	ldr	r2, [r2, #0]
 80024d2:	611a      	str	r2, [r3, #16]

    /* DMA2D FGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80024d4:	693b      	ldr	r3, [r7, #16]
 80024d6:	685b      	ldr	r3, [r3, #4]
 80024d8:	2b0a      	cmp	r3, #10
 80024da:	d003      	beq.n	80024e4 <HAL_DMA2D_ConfigLayer+0xf4>
 80024dc:	693b      	ldr	r3, [r7, #16]
 80024de:	685b      	ldr	r3, [r3, #4]
 80024e0:	2b09      	cmp	r3, #9
 80024e2:	d106      	bne.n	80024f2 <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 80024e4:	693b      	ldr	r3, [r7, #16]
 80024e6:	68da      	ldr	r2, [r3, #12]
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	681b      	ldr	r3, [r3, #0]
 80024ec:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80024f0:	621a      	str	r2, [r3, #32]
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	2201      	movs	r2, #1
 80024f6:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 80024fa:	687b      	ldr	r3, [r7, #4]
 80024fc:	2200      	movs	r2, #0
 80024fe:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8002502:	2300      	movs	r3, #0
}
 8002504:	4618      	mov	r0, r3
 8002506:	371c      	adds	r7, #28
 8002508:	46bd      	mov	sp, r7
 800250a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800250e:	4770      	bx	lr
 8002510:	ff03000f 	.word	0xff03000f

08002514 <DMA2D_SetConfig>:
  * @param  Width      The width of data to be transferred from source to destination.
  * @param  Height     The height of data to be transferred from source to destination.
  * @retval HAL status
  */
static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width, uint32_t Height)
{
 8002514:	b480      	push	{r7}
 8002516:	b08b      	sub	sp, #44	; 0x2c
 8002518:	af00      	add	r7, sp, #0
 800251a:	60f8      	str	r0, [r7, #12]
 800251c:	60b9      	str	r1, [r7, #8]
 800251e:	607a      	str	r2, [r7, #4]
 8002520:	603b      	str	r3, [r7, #0]
  uint32_t tmp2;
  uint32_t tmp3;
  uint32_t tmp4;

  /* Configure DMA2D data size */
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos)));
 8002522:	68fb      	ldr	r3, [r7, #12]
 8002524:	681b      	ldr	r3, [r3, #0]
 8002526:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002528:	f003 4140 	and.w	r1, r3, #3221225472	; 0xc0000000
 800252c:	683b      	ldr	r3, [r7, #0]
 800252e:	041a      	lsls	r2, r3, #16
 8002530:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002532:	431a      	orrs	r2, r3
 8002534:	68fb      	ldr	r3, [r7, #12]
 8002536:	681b      	ldr	r3, [r3, #0]
 8002538:	430a      	orrs	r2, r1
 800253a:	645a      	str	r2, [r3, #68]	; 0x44

  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 800253c:	68fb      	ldr	r3, [r7, #12]
 800253e:	681b      	ldr	r3, [r3, #0]
 8002540:	687a      	ldr	r2, [r7, #4]
 8002542:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8002544:	68fb      	ldr	r3, [r7, #12]
 8002546:	685b      	ldr	r3, [r3, #4]
 8002548:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 800254c:	d174      	bne.n	8002638 <DMA2D_SetConfig+0x124>
  {
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 800254e:	68bb      	ldr	r3, [r7, #8]
 8002550:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002554:	623b      	str	r3, [r7, #32]
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
 8002556:	68bb      	ldr	r3, [r7, #8]
 8002558:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 800255c:	61fb      	str	r3, [r7, #28]
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 800255e:	68bb      	ldr	r3, [r7, #8]
 8002560:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8002564:	61bb      	str	r3, [r7, #24]
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 8002566:	68bb      	ldr	r3, [r7, #8]
 8002568:	b2db      	uxtb	r3, r3
 800256a:	617b      	str	r3, [r7, #20]

    /* Prepare the value to be written to the OCOLR register according to the color mode */
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 800256c:	68fb      	ldr	r3, [r7, #12]
 800256e:	689b      	ldr	r3, [r3, #8]
 8002570:	2b00      	cmp	r3, #0
 8002572:	d108      	bne.n	8002586 <DMA2D_SetConfig+0x72>
    {
      tmp = (tmp3 | tmp2 | tmp1| tmp4);
 8002574:	69ba      	ldr	r2, [r7, #24]
 8002576:	69fb      	ldr	r3, [r7, #28]
 8002578:	431a      	orrs	r2, r3
 800257a:	6a3b      	ldr	r3, [r7, #32]
 800257c:	4313      	orrs	r3, r2
 800257e:	697a      	ldr	r2, [r7, #20]
 8002580:	4313      	orrs	r3, r2
 8002582:	627b      	str	r3, [r7, #36]	; 0x24
 8002584:	e053      	b.n	800262e <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 8002586:	68fb      	ldr	r3, [r7, #12]
 8002588:	689b      	ldr	r3, [r3, #8]
 800258a:	2b01      	cmp	r3, #1
 800258c:	d106      	bne.n	800259c <DMA2D_SetConfig+0x88>
    {
      tmp = (tmp3 | tmp2 | tmp4);
 800258e:	69ba      	ldr	r2, [r7, #24]
 8002590:	69fb      	ldr	r3, [r7, #28]
 8002592:	4313      	orrs	r3, r2
 8002594:	697a      	ldr	r2, [r7, #20]
 8002596:	4313      	orrs	r3, r2
 8002598:	627b      	str	r3, [r7, #36]	; 0x24
 800259a:	e048      	b.n	800262e <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 800259c:	68fb      	ldr	r3, [r7, #12]
 800259e:	689b      	ldr	r3, [r3, #8]
 80025a0:	2b02      	cmp	r3, #2
 80025a2:	d111      	bne.n	80025c8 <DMA2D_SetConfig+0xb4>
    {
      tmp2 = (tmp2 >> 19U);
 80025a4:	69fb      	ldr	r3, [r7, #28]
 80025a6:	0cdb      	lsrs	r3, r3, #19
 80025a8:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 10U);
 80025aa:	69bb      	ldr	r3, [r7, #24]
 80025ac:	0a9b      	lsrs	r3, r3, #10
 80025ae:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 3U );
 80025b0:	697b      	ldr	r3, [r7, #20]
 80025b2:	08db      	lsrs	r3, r3, #3
 80025b4:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
 80025b6:	69bb      	ldr	r3, [r7, #24]
 80025b8:	015a      	lsls	r2, r3, #5
 80025ba:	69fb      	ldr	r3, [r7, #28]
 80025bc:	02db      	lsls	r3, r3, #11
 80025be:	4313      	orrs	r3, r2
 80025c0:	697a      	ldr	r2, [r7, #20]
 80025c2:	4313      	orrs	r3, r2
 80025c4:	627b      	str	r3, [r7, #36]	; 0x24
 80025c6:	e032      	b.n	800262e <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 80025c8:	68fb      	ldr	r3, [r7, #12]
 80025ca:	689b      	ldr	r3, [r3, #8]
 80025cc:	2b03      	cmp	r3, #3
 80025ce:	d117      	bne.n	8002600 <DMA2D_SetConfig+0xec>
    {
      tmp1 = (tmp1 >> 31U);
 80025d0:	6a3b      	ldr	r3, [r7, #32]
 80025d2:	0fdb      	lsrs	r3, r3, #31
 80025d4:	623b      	str	r3, [r7, #32]
      tmp2 = (tmp2 >> 19U);
 80025d6:	69fb      	ldr	r3, [r7, #28]
 80025d8:	0cdb      	lsrs	r3, r3, #19
 80025da:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 11U);
 80025dc:	69bb      	ldr	r3, [r7, #24]
 80025de:	0adb      	lsrs	r3, r3, #11
 80025e0:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 3U );
 80025e2:	697b      	ldr	r3, [r7, #20]
 80025e4:	08db      	lsrs	r3, r3, #3
 80025e6:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 80025e8:	69bb      	ldr	r3, [r7, #24]
 80025ea:	015a      	lsls	r2, r3, #5
 80025ec:	69fb      	ldr	r3, [r7, #28]
 80025ee:	029b      	lsls	r3, r3, #10
 80025f0:	431a      	orrs	r2, r3
 80025f2:	6a3b      	ldr	r3, [r7, #32]
 80025f4:	03db      	lsls	r3, r3, #15
 80025f6:	4313      	orrs	r3, r2
 80025f8:	697a      	ldr	r2, [r7, #20]
 80025fa:	4313      	orrs	r3, r2
 80025fc:	627b      	str	r3, [r7, #36]	; 0x24
 80025fe:	e016      	b.n	800262e <DMA2D_SetConfig+0x11a>
    }
    else /* Dhdma2d->Init.ColorMode = DMA2D_OUTPUT_ARGB4444 */
    {
      tmp1 = (tmp1 >> 28U);
 8002600:	6a3b      	ldr	r3, [r7, #32]
 8002602:	0f1b      	lsrs	r3, r3, #28
 8002604:	623b      	str	r3, [r7, #32]
      tmp2 = (tmp2 >> 20U);
 8002606:	69fb      	ldr	r3, [r7, #28]
 8002608:	0d1b      	lsrs	r3, r3, #20
 800260a:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 12U);
 800260c:	69bb      	ldr	r3, [r7, #24]
 800260e:	0b1b      	lsrs	r3, r3, #12
 8002610:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 4U );
 8002612:	697b      	ldr	r3, [r7, #20]
 8002614:	091b      	lsrs	r3, r3, #4
 8002616:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 8002618:	69bb      	ldr	r3, [r7, #24]
 800261a:	011a      	lsls	r2, r3, #4
 800261c:	69fb      	ldr	r3, [r7, #28]
 800261e:	021b      	lsls	r3, r3, #8
 8002620:	431a      	orrs	r2, r3
 8002622:	6a3b      	ldr	r3, [r7, #32]
 8002624:	031b      	lsls	r3, r3, #12
 8002626:	4313      	orrs	r3, r2
 8002628:	697a      	ldr	r2, [r7, #20]
 800262a:	4313      	orrs	r3, r2
 800262c:	627b      	str	r3, [r7, #36]	; 0x24
    }
    /* Write to DMA2D OCOLR register */
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
 800262e:	68fb      	ldr	r3, [r7, #12]
 8002630:	681b      	ldr	r3, [r3, #0]
 8002632:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002634:	639a      	str	r2, [r3, #56]	; 0x38
  else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  }
}
 8002636:	e003      	b.n	8002640 <DMA2D_SetConfig+0x12c>
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 8002638:	68fb      	ldr	r3, [r7, #12]
 800263a:	681b      	ldr	r3, [r3, #0]
 800263c:	68ba      	ldr	r2, [r7, #8]
 800263e:	60da      	str	r2, [r3, #12]
}
 8002640:	bf00      	nop
 8002642:	372c      	adds	r7, #44	; 0x2c
 8002644:	46bd      	mov	sp, r7
 8002646:	f85d 7b04 	ldr.w	r7, [sp], #4
 800264a:	4770      	bx	lr

0800264c <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800264c:	b480      	push	{r7}
 800264e:	b089      	sub	sp, #36	; 0x24
 8002650:	af00      	add	r7, sp, #0
 8002652:	6078      	str	r0, [r7, #4]
 8002654:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8002656:	2300      	movs	r3, #0
 8002658:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 800265a:	2300      	movs	r3, #0
 800265c:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 800265e:	2300      	movs	r3, #0
 8002660:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8002662:	2300      	movs	r3, #0
 8002664:	61fb      	str	r3, [r7, #28]
 8002666:	e177      	b.n	8002958 <HAL_GPIO_Init+0x30c>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8002668:	2201      	movs	r2, #1
 800266a:	69fb      	ldr	r3, [r7, #28]
 800266c:	fa02 f303 	lsl.w	r3, r2, r3
 8002670:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8002672:	683b      	ldr	r3, [r7, #0]
 8002674:	681b      	ldr	r3, [r3, #0]
 8002676:	697a      	ldr	r2, [r7, #20]
 8002678:	4013      	ands	r3, r2
 800267a:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 800267c:	693a      	ldr	r2, [r7, #16]
 800267e:	697b      	ldr	r3, [r7, #20]
 8002680:	429a      	cmp	r2, r3
 8002682:	f040 8166 	bne.w	8002952 <HAL_GPIO_Init+0x306>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8002686:	683b      	ldr	r3, [r7, #0]
 8002688:	685b      	ldr	r3, [r3, #4]
 800268a:	2b01      	cmp	r3, #1
 800268c:	d00b      	beq.n	80026a6 <HAL_GPIO_Init+0x5a>
 800268e:	683b      	ldr	r3, [r7, #0]
 8002690:	685b      	ldr	r3, [r3, #4]
 8002692:	2b02      	cmp	r3, #2
 8002694:	d007      	beq.n	80026a6 <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8002696:	683b      	ldr	r3, [r7, #0]
 8002698:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800269a:	2b11      	cmp	r3, #17
 800269c:	d003      	beq.n	80026a6 <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800269e:	683b      	ldr	r3, [r7, #0]
 80026a0:	685b      	ldr	r3, [r3, #4]
 80026a2:	2b12      	cmp	r3, #18
 80026a4:	d130      	bne.n	8002708 <HAL_GPIO_Init+0xbc>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 80026a6:	687b      	ldr	r3, [r7, #4]
 80026a8:	689b      	ldr	r3, [r3, #8]
 80026aa:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80026ac:	69fb      	ldr	r3, [r7, #28]
 80026ae:	005b      	lsls	r3, r3, #1
 80026b0:	2203      	movs	r2, #3
 80026b2:	fa02 f303 	lsl.w	r3, r2, r3
 80026b6:	43db      	mvns	r3, r3
 80026b8:	69ba      	ldr	r2, [r7, #24]
 80026ba:	4013      	ands	r3, r2
 80026bc:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 80026be:	683b      	ldr	r3, [r7, #0]
 80026c0:	68da      	ldr	r2, [r3, #12]
 80026c2:	69fb      	ldr	r3, [r7, #28]
 80026c4:	005b      	lsls	r3, r3, #1
 80026c6:	fa02 f303 	lsl.w	r3, r2, r3
 80026ca:	69ba      	ldr	r2, [r7, #24]
 80026cc:	4313      	orrs	r3, r2
 80026ce:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 80026d0:	687b      	ldr	r3, [r7, #4]
 80026d2:	69ba      	ldr	r2, [r7, #24]
 80026d4:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 80026d6:	687b      	ldr	r3, [r7, #4]
 80026d8:	685b      	ldr	r3, [r3, #4]
 80026da:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80026dc:	2201      	movs	r2, #1
 80026de:	69fb      	ldr	r3, [r7, #28]
 80026e0:	fa02 f303 	lsl.w	r3, r2, r3
 80026e4:	43db      	mvns	r3, r3
 80026e6:	69ba      	ldr	r2, [r7, #24]
 80026e8:	4013      	ands	r3, r2
 80026ea:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 80026ec:	683b      	ldr	r3, [r7, #0]
 80026ee:	685b      	ldr	r3, [r3, #4]
 80026f0:	091b      	lsrs	r3, r3, #4
 80026f2:	f003 0201 	and.w	r2, r3, #1
 80026f6:	69fb      	ldr	r3, [r7, #28]
 80026f8:	fa02 f303 	lsl.w	r3, r2, r3
 80026fc:	69ba      	ldr	r2, [r7, #24]
 80026fe:	4313      	orrs	r3, r2
 8002700:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8002702:	687b      	ldr	r3, [r7, #4]
 8002704:	69ba      	ldr	r2, [r7, #24]
 8002706:	605a      	str	r2, [r3, #4]
       }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	68db      	ldr	r3, [r3, #12]
 800270c:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800270e:	69fb      	ldr	r3, [r7, #28]
 8002710:	005b      	lsls	r3, r3, #1
 8002712:	2203      	movs	r2, #3
 8002714:	fa02 f303 	lsl.w	r3, r2, r3
 8002718:	43db      	mvns	r3, r3
 800271a:	69ba      	ldr	r2, [r7, #24]
 800271c:	4013      	ands	r3, r2
 800271e:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8002720:	683b      	ldr	r3, [r7, #0]
 8002722:	689a      	ldr	r2, [r3, #8]
 8002724:	69fb      	ldr	r3, [r7, #28]
 8002726:	005b      	lsls	r3, r3, #1
 8002728:	fa02 f303 	lsl.w	r3, r2, r3
 800272c:	69ba      	ldr	r2, [r7, #24]
 800272e:	4313      	orrs	r3, r2
 8002730:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 8002732:	687b      	ldr	r3, [r7, #4]
 8002734:	69ba      	ldr	r2, [r7, #24]
 8002736:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8002738:	683b      	ldr	r3, [r7, #0]
 800273a:	685b      	ldr	r3, [r3, #4]
 800273c:	2b02      	cmp	r3, #2
 800273e:	d003      	beq.n	8002748 <HAL_GPIO_Init+0xfc>
 8002740:	683b      	ldr	r3, [r7, #0]
 8002742:	685b      	ldr	r3, [r3, #4]
 8002744:	2b12      	cmp	r3, #18
 8002746:	d123      	bne.n	8002790 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8002748:	69fb      	ldr	r3, [r7, #28]
 800274a:	08da      	lsrs	r2, r3, #3
 800274c:	687b      	ldr	r3, [r7, #4]
 800274e:	3208      	adds	r2, #8
 8002750:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002754:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8002756:	69fb      	ldr	r3, [r7, #28]
 8002758:	f003 0307 	and.w	r3, r3, #7
 800275c:	009b      	lsls	r3, r3, #2
 800275e:	220f      	movs	r2, #15
 8002760:	fa02 f303 	lsl.w	r3, r2, r3
 8002764:	43db      	mvns	r3, r3
 8002766:	69ba      	ldr	r2, [r7, #24]
 8002768:	4013      	ands	r3, r2
 800276a:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800276c:	683b      	ldr	r3, [r7, #0]
 800276e:	691a      	ldr	r2, [r3, #16]
 8002770:	69fb      	ldr	r3, [r7, #28]
 8002772:	f003 0307 	and.w	r3, r3, #7
 8002776:	009b      	lsls	r3, r3, #2
 8002778:	fa02 f303 	lsl.w	r3, r2, r3
 800277c:	69ba      	ldr	r2, [r7, #24]
 800277e:	4313      	orrs	r3, r2
 8002780:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8002782:	69fb      	ldr	r3, [r7, #28]
 8002784:	08da      	lsrs	r2, r3, #3
 8002786:	687b      	ldr	r3, [r7, #4]
 8002788:	3208      	adds	r2, #8
 800278a:	69b9      	ldr	r1, [r7, #24]
 800278c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	681b      	ldr	r3, [r3, #0]
 8002794:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8002796:	69fb      	ldr	r3, [r7, #28]
 8002798:	005b      	lsls	r3, r3, #1
 800279a:	2203      	movs	r2, #3
 800279c:	fa02 f303 	lsl.w	r3, r2, r3
 80027a0:	43db      	mvns	r3, r3
 80027a2:	69ba      	ldr	r2, [r7, #24]
 80027a4:	4013      	ands	r3, r2
 80027a6:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80027a8:	683b      	ldr	r3, [r7, #0]
 80027aa:	685b      	ldr	r3, [r3, #4]
 80027ac:	f003 0203 	and.w	r2, r3, #3
 80027b0:	69fb      	ldr	r3, [r7, #28]
 80027b2:	005b      	lsls	r3, r3, #1
 80027b4:	fa02 f303 	lsl.w	r3, r2, r3
 80027b8:	69ba      	ldr	r2, [r7, #24]
 80027ba:	4313      	orrs	r3, r2
 80027bc:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 80027be:	687b      	ldr	r3, [r7, #4]
 80027c0:	69ba      	ldr	r2, [r7, #24]
 80027c2:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80027c4:	683b      	ldr	r3, [r7, #0]
 80027c6:	685b      	ldr	r3, [r3, #4]
 80027c8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80027cc:	2b00      	cmp	r3, #0
 80027ce:	f000 80c0 	beq.w	8002952 <HAL_GPIO_Init+0x306>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80027d2:	2300      	movs	r3, #0
 80027d4:	60fb      	str	r3, [r7, #12]
 80027d6:	4b65      	ldr	r3, [pc, #404]	; (800296c <HAL_GPIO_Init+0x320>)
 80027d8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80027da:	4a64      	ldr	r2, [pc, #400]	; (800296c <HAL_GPIO_Init+0x320>)
 80027dc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80027e0:	6453      	str	r3, [r2, #68]	; 0x44
 80027e2:	4b62      	ldr	r3, [pc, #392]	; (800296c <HAL_GPIO_Init+0x320>)
 80027e4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80027e6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80027ea:	60fb      	str	r3, [r7, #12]
 80027ec:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 80027ee:	4a60      	ldr	r2, [pc, #384]	; (8002970 <HAL_GPIO_Init+0x324>)
 80027f0:	69fb      	ldr	r3, [r7, #28]
 80027f2:	089b      	lsrs	r3, r3, #2
 80027f4:	3302      	adds	r3, #2
 80027f6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80027fa:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80027fc:	69fb      	ldr	r3, [r7, #28]
 80027fe:	f003 0303 	and.w	r3, r3, #3
 8002802:	009b      	lsls	r3, r3, #2
 8002804:	220f      	movs	r2, #15
 8002806:	fa02 f303 	lsl.w	r3, r2, r3
 800280a:	43db      	mvns	r3, r3
 800280c:	69ba      	ldr	r2, [r7, #24]
 800280e:	4013      	ands	r3, r2
 8002810:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8002812:	687b      	ldr	r3, [r7, #4]
 8002814:	4a57      	ldr	r2, [pc, #348]	; (8002974 <HAL_GPIO_Init+0x328>)
 8002816:	4293      	cmp	r3, r2
 8002818:	d037      	beq.n	800288a <HAL_GPIO_Init+0x23e>
 800281a:	687b      	ldr	r3, [r7, #4]
 800281c:	4a56      	ldr	r2, [pc, #344]	; (8002978 <HAL_GPIO_Init+0x32c>)
 800281e:	4293      	cmp	r3, r2
 8002820:	d031      	beq.n	8002886 <HAL_GPIO_Init+0x23a>
 8002822:	687b      	ldr	r3, [r7, #4]
 8002824:	4a55      	ldr	r2, [pc, #340]	; (800297c <HAL_GPIO_Init+0x330>)
 8002826:	4293      	cmp	r3, r2
 8002828:	d02b      	beq.n	8002882 <HAL_GPIO_Init+0x236>
 800282a:	687b      	ldr	r3, [r7, #4]
 800282c:	4a54      	ldr	r2, [pc, #336]	; (8002980 <HAL_GPIO_Init+0x334>)
 800282e:	4293      	cmp	r3, r2
 8002830:	d025      	beq.n	800287e <HAL_GPIO_Init+0x232>
 8002832:	687b      	ldr	r3, [r7, #4]
 8002834:	4a53      	ldr	r2, [pc, #332]	; (8002984 <HAL_GPIO_Init+0x338>)
 8002836:	4293      	cmp	r3, r2
 8002838:	d01f      	beq.n	800287a <HAL_GPIO_Init+0x22e>
 800283a:	687b      	ldr	r3, [r7, #4]
 800283c:	4a52      	ldr	r2, [pc, #328]	; (8002988 <HAL_GPIO_Init+0x33c>)
 800283e:	4293      	cmp	r3, r2
 8002840:	d019      	beq.n	8002876 <HAL_GPIO_Init+0x22a>
 8002842:	687b      	ldr	r3, [r7, #4]
 8002844:	4a51      	ldr	r2, [pc, #324]	; (800298c <HAL_GPIO_Init+0x340>)
 8002846:	4293      	cmp	r3, r2
 8002848:	d013      	beq.n	8002872 <HAL_GPIO_Init+0x226>
 800284a:	687b      	ldr	r3, [r7, #4]
 800284c:	4a50      	ldr	r2, [pc, #320]	; (8002990 <HAL_GPIO_Init+0x344>)
 800284e:	4293      	cmp	r3, r2
 8002850:	d00d      	beq.n	800286e <HAL_GPIO_Init+0x222>
 8002852:	687b      	ldr	r3, [r7, #4]
 8002854:	4a4f      	ldr	r2, [pc, #316]	; (8002994 <HAL_GPIO_Init+0x348>)
 8002856:	4293      	cmp	r3, r2
 8002858:	d007      	beq.n	800286a <HAL_GPIO_Init+0x21e>
 800285a:	687b      	ldr	r3, [r7, #4]
 800285c:	4a4e      	ldr	r2, [pc, #312]	; (8002998 <HAL_GPIO_Init+0x34c>)
 800285e:	4293      	cmp	r3, r2
 8002860:	d101      	bne.n	8002866 <HAL_GPIO_Init+0x21a>
 8002862:	2309      	movs	r3, #9
 8002864:	e012      	b.n	800288c <HAL_GPIO_Init+0x240>
 8002866:	230a      	movs	r3, #10
 8002868:	e010      	b.n	800288c <HAL_GPIO_Init+0x240>
 800286a:	2308      	movs	r3, #8
 800286c:	e00e      	b.n	800288c <HAL_GPIO_Init+0x240>
 800286e:	2307      	movs	r3, #7
 8002870:	e00c      	b.n	800288c <HAL_GPIO_Init+0x240>
 8002872:	2306      	movs	r3, #6
 8002874:	e00a      	b.n	800288c <HAL_GPIO_Init+0x240>
 8002876:	2305      	movs	r3, #5
 8002878:	e008      	b.n	800288c <HAL_GPIO_Init+0x240>
 800287a:	2304      	movs	r3, #4
 800287c:	e006      	b.n	800288c <HAL_GPIO_Init+0x240>
 800287e:	2303      	movs	r3, #3
 8002880:	e004      	b.n	800288c <HAL_GPIO_Init+0x240>
 8002882:	2302      	movs	r3, #2
 8002884:	e002      	b.n	800288c <HAL_GPIO_Init+0x240>
 8002886:	2301      	movs	r3, #1
 8002888:	e000      	b.n	800288c <HAL_GPIO_Init+0x240>
 800288a:	2300      	movs	r3, #0
 800288c:	69fa      	ldr	r2, [r7, #28]
 800288e:	f002 0203 	and.w	r2, r2, #3
 8002892:	0092      	lsls	r2, r2, #2
 8002894:	4093      	lsls	r3, r2
 8002896:	69ba      	ldr	r2, [r7, #24]
 8002898:	4313      	orrs	r3, r2
 800289a:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 800289c:	4934      	ldr	r1, [pc, #208]	; (8002970 <HAL_GPIO_Init+0x324>)
 800289e:	69fb      	ldr	r3, [r7, #28]
 80028a0:	089b      	lsrs	r3, r3, #2
 80028a2:	3302      	adds	r3, #2
 80028a4:	69ba      	ldr	r2, [r7, #24]
 80028a6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80028aa:	4b3c      	ldr	r3, [pc, #240]	; (800299c <HAL_GPIO_Init+0x350>)
 80028ac:	681b      	ldr	r3, [r3, #0]
 80028ae:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80028b0:	693b      	ldr	r3, [r7, #16]
 80028b2:	43db      	mvns	r3, r3
 80028b4:	69ba      	ldr	r2, [r7, #24]
 80028b6:	4013      	ands	r3, r2
 80028b8:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80028ba:	683b      	ldr	r3, [r7, #0]
 80028bc:	685b      	ldr	r3, [r3, #4]
 80028be:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80028c2:	2b00      	cmp	r3, #0
 80028c4:	d003      	beq.n	80028ce <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 80028c6:	69ba      	ldr	r2, [r7, #24]
 80028c8:	693b      	ldr	r3, [r7, #16]
 80028ca:	4313      	orrs	r3, r2
 80028cc:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 80028ce:	4a33      	ldr	r2, [pc, #204]	; (800299c <HAL_GPIO_Init+0x350>)
 80028d0:	69bb      	ldr	r3, [r7, #24]
 80028d2:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 80028d4:	4b31      	ldr	r3, [pc, #196]	; (800299c <HAL_GPIO_Init+0x350>)
 80028d6:	685b      	ldr	r3, [r3, #4]
 80028d8:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80028da:	693b      	ldr	r3, [r7, #16]
 80028dc:	43db      	mvns	r3, r3
 80028de:	69ba      	ldr	r2, [r7, #24]
 80028e0:	4013      	ands	r3, r2
 80028e2:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80028e4:	683b      	ldr	r3, [r7, #0]
 80028e6:	685b      	ldr	r3, [r3, #4]
 80028e8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80028ec:	2b00      	cmp	r3, #0
 80028ee:	d003      	beq.n	80028f8 <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 80028f0:	69ba      	ldr	r2, [r7, #24]
 80028f2:	693b      	ldr	r3, [r7, #16]
 80028f4:	4313      	orrs	r3, r2
 80028f6:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 80028f8:	4a28      	ldr	r2, [pc, #160]	; (800299c <HAL_GPIO_Init+0x350>)
 80028fa:	69bb      	ldr	r3, [r7, #24]
 80028fc:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80028fe:	4b27      	ldr	r3, [pc, #156]	; (800299c <HAL_GPIO_Init+0x350>)
 8002900:	689b      	ldr	r3, [r3, #8]
 8002902:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8002904:	693b      	ldr	r3, [r7, #16]
 8002906:	43db      	mvns	r3, r3
 8002908:	69ba      	ldr	r2, [r7, #24]
 800290a:	4013      	ands	r3, r2
 800290c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 800290e:	683b      	ldr	r3, [r7, #0]
 8002910:	685b      	ldr	r3, [r3, #4]
 8002912:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002916:	2b00      	cmp	r3, #0
 8002918:	d003      	beq.n	8002922 <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
 800291a:	69ba      	ldr	r2, [r7, #24]
 800291c:	693b      	ldr	r3, [r7, #16]
 800291e:	4313      	orrs	r3, r2
 8002920:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8002922:	4a1e      	ldr	r2, [pc, #120]	; (800299c <HAL_GPIO_Init+0x350>)
 8002924:	69bb      	ldr	r3, [r7, #24]
 8002926:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8002928:	4b1c      	ldr	r3, [pc, #112]	; (800299c <HAL_GPIO_Init+0x350>)
 800292a:	68db      	ldr	r3, [r3, #12]
 800292c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800292e:	693b      	ldr	r3, [r7, #16]
 8002930:	43db      	mvns	r3, r3
 8002932:	69ba      	ldr	r2, [r7, #24]
 8002934:	4013      	ands	r3, r2
 8002936:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8002938:	683b      	ldr	r3, [r7, #0]
 800293a:	685b      	ldr	r3, [r3, #4]
 800293c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002940:	2b00      	cmp	r3, #0
 8002942:	d003      	beq.n	800294c <HAL_GPIO_Init+0x300>
        {
          temp |= iocurrent;
 8002944:	69ba      	ldr	r2, [r7, #24]
 8002946:	693b      	ldr	r3, [r7, #16]
 8002948:	4313      	orrs	r3, r2
 800294a:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 800294c:	4a13      	ldr	r2, [pc, #76]	; (800299c <HAL_GPIO_Init+0x350>)
 800294e:	69bb      	ldr	r3, [r7, #24]
 8002950:	60d3      	str	r3, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8002952:	69fb      	ldr	r3, [r7, #28]
 8002954:	3301      	adds	r3, #1
 8002956:	61fb      	str	r3, [r7, #28]
 8002958:	69fb      	ldr	r3, [r7, #28]
 800295a:	2b0f      	cmp	r3, #15
 800295c:	f67f ae84 	bls.w	8002668 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8002960:	bf00      	nop
 8002962:	3724      	adds	r7, #36	; 0x24
 8002964:	46bd      	mov	sp, r7
 8002966:	f85d 7b04 	ldr.w	r7, [sp], #4
 800296a:	4770      	bx	lr
 800296c:	40023800 	.word	0x40023800
 8002970:	40013800 	.word	0x40013800
 8002974:	40020000 	.word	0x40020000
 8002978:	40020400 	.word	0x40020400
 800297c:	40020800 	.word	0x40020800
 8002980:	40020c00 	.word	0x40020c00
 8002984:	40021000 	.word	0x40021000
 8002988:	40021400 	.word	0x40021400
 800298c:	40021800 	.word	0x40021800
 8002990:	40021c00 	.word	0x40021c00
 8002994:	40022000 	.word	0x40022000
 8002998:	40022400 	.word	0x40022400
 800299c:	40013c00 	.word	0x40013c00

080029a0 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80029a0:	b480      	push	{r7}
 80029a2:	b083      	sub	sp, #12
 80029a4:	af00      	add	r7, sp, #0
 80029a6:	6078      	str	r0, [r7, #4]
 80029a8:	460b      	mov	r3, r1
 80029aa:	807b      	strh	r3, [r7, #2]
 80029ac:	4613      	mov	r3, r2
 80029ae:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80029b0:	787b      	ldrb	r3, [r7, #1]
 80029b2:	2b00      	cmp	r3, #0
 80029b4:	d003      	beq.n	80029be <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 80029b6:	887a      	ldrh	r2, [r7, #2]
 80029b8:	687b      	ldr	r3, [r7, #4]
 80029ba:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 80029bc:	e003      	b.n	80029c6 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80029be:	887b      	ldrh	r3, [r7, #2]
 80029c0:	041a      	lsls	r2, r3, #16
 80029c2:	687b      	ldr	r3, [r7, #4]
 80029c4:	619a      	str	r2, [r3, #24]
}
 80029c6:	bf00      	nop
 80029c8:	370c      	adds	r7, #12
 80029ca:	46bd      	mov	sp, r7
 80029cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029d0:	4770      	bx	lr
	...

080029d4 <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 80029d4:	b580      	push	{r7, lr}
 80029d6:	b082      	sub	sp, #8
 80029d8:	af00      	add	r7, sp, #0
 80029da:	4603      	mov	r3, r0
 80029dc:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 80029de:	4b08      	ldr	r3, [pc, #32]	; (8002a00 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80029e0:	695a      	ldr	r2, [r3, #20]
 80029e2:	88fb      	ldrh	r3, [r7, #6]
 80029e4:	4013      	ands	r3, r2
 80029e6:	2b00      	cmp	r3, #0
 80029e8:	d006      	beq.n	80029f8 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 80029ea:	4a05      	ldr	r2, [pc, #20]	; (8002a00 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80029ec:	88fb      	ldrh	r3, [r7, #6]
 80029ee:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 80029f0:	88fb      	ldrh	r3, [r7, #6]
 80029f2:	4618      	mov	r0, r3
 80029f4:	f7fd fdcc 	bl	8000590 <HAL_GPIO_EXTI_Callback>
  }
}
 80029f8:	bf00      	nop
 80029fa:	3708      	adds	r7, #8
 80029fc:	46bd      	mov	sp, r7
 80029fe:	bd80      	pop	{r7, pc}
 8002a00:	40013c00 	.word	0x40013c00

08002a04 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8002a04:	b580      	push	{r7, lr}
 8002a06:	b084      	sub	sp, #16
 8002a08:	af00      	add	r7, sp, #0
 8002a0a:	6078      	str	r0, [r7, #4]
  uint32_t freqrange;
  uint32_t pclk1;

  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8002a0c:	687b      	ldr	r3, [r7, #4]
 8002a0e:	2b00      	cmp	r3, #0
 8002a10:	d101      	bne.n	8002a16 <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 8002a12:	2301      	movs	r3, #1
 8002a14:	e11f      	b.n	8002c56 <HAL_I2C_Init+0x252>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 8002a16:	687b      	ldr	r3, [r7, #4]
 8002a18:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002a1c:	b2db      	uxtb	r3, r3
 8002a1e:	2b00      	cmp	r3, #0
 8002a20:	d106      	bne.n	8002a30 <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 8002a22:	687b      	ldr	r3, [r7, #4]
 8002a24:	2200      	movs	r2, #0
 8002a26:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 8002a2a:	6878      	ldr	r0, [r7, #4]
 8002a2c:	f7fe fb62 	bl	80010f4 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 8002a30:	687b      	ldr	r3, [r7, #4]
 8002a32:	2224      	movs	r2, #36	; 0x24
 8002a34:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8002a38:	687b      	ldr	r3, [r7, #4]
 8002a3a:	681b      	ldr	r3, [r3, #0]
 8002a3c:	681a      	ldr	r2, [r3, #0]
 8002a3e:	687b      	ldr	r3, [r7, #4]
 8002a40:	681b      	ldr	r3, [r3, #0]
 8002a42:	f022 0201 	bic.w	r2, r2, #1
 8002a46:	601a      	str	r2, [r3, #0]

  /*Reset I2C*/
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	681b      	ldr	r3, [r3, #0]
 8002a4c:	681a      	ldr	r2, [r3, #0]
 8002a4e:	687b      	ldr	r3, [r7, #4]
 8002a50:	681b      	ldr	r3, [r3, #0]
 8002a52:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8002a56:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8002a58:	687b      	ldr	r3, [r7, #4]
 8002a5a:	681b      	ldr	r3, [r3, #0]
 8002a5c:	681a      	ldr	r2, [r3, #0]
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	681b      	ldr	r3, [r3, #0]
 8002a62:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8002a66:	601a      	str	r2, [r3, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8002a68:	f001 ffa0 	bl	80049ac <HAL_RCC_GetPCLK1Freq>
 8002a6c:	60f8      	str	r0, [r7, #12]

  /* Check the minimum allowed PCLK1 frequency */
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	685b      	ldr	r3, [r3, #4]
 8002a72:	4a7b      	ldr	r2, [pc, #492]	; (8002c60 <HAL_I2C_Init+0x25c>)
 8002a74:	4293      	cmp	r3, r2
 8002a76:	d807      	bhi.n	8002a88 <HAL_I2C_Init+0x84>
 8002a78:	68fb      	ldr	r3, [r7, #12]
 8002a7a:	4a7a      	ldr	r2, [pc, #488]	; (8002c64 <HAL_I2C_Init+0x260>)
 8002a7c:	4293      	cmp	r3, r2
 8002a7e:	bf94      	ite	ls
 8002a80:	2301      	movls	r3, #1
 8002a82:	2300      	movhi	r3, #0
 8002a84:	b2db      	uxtb	r3, r3
 8002a86:	e006      	b.n	8002a96 <HAL_I2C_Init+0x92>
 8002a88:	68fb      	ldr	r3, [r7, #12]
 8002a8a:	4a77      	ldr	r2, [pc, #476]	; (8002c68 <HAL_I2C_Init+0x264>)
 8002a8c:	4293      	cmp	r3, r2
 8002a8e:	bf94      	ite	ls
 8002a90:	2301      	movls	r3, #1
 8002a92:	2300      	movhi	r3, #0
 8002a94:	b2db      	uxtb	r3, r3
 8002a96:	2b00      	cmp	r3, #0
 8002a98:	d001      	beq.n	8002a9e <HAL_I2C_Init+0x9a>
  {
    return HAL_ERROR;
 8002a9a:	2301      	movs	r3, #1
 8002a9c:	e0db      	b.n	8002c56 <HAL_I2C_Init+0x252>
  }

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 8002a9e:	68fb      	ldr	r3, [r7, #12]
 8002aa0:	4a72      	ldr	r2, [pc, #456]	; (8002c6c <HAL_I2C_Init+0x268>)
 8002aa2:	fba2 2303 	umull	r2, r3, r2, r3
 8002aa6:	0c9b      	lsrs	r3, r3, #18
 8002aa8:	60bb      	str	r3, [r7, #8]

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8002aaa:	687b      	ldr	r3, [r7, #4]
 8002aac:	681b      	ldr	r3, [r3, #0]
 8002aae:	685b      	ldr	r3, [r3, #4]
 8002ab0:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8002ab4:	687b      	ldr	r3, [r7, #4]
 8002ab6:	681b      	ldr	r3, [r3, #0]
 8002ab8:	68ba      	ldr	r2, [r7, #8]
 8002aba:	430a      	orrs	r2, r1
 8002abc:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8002abe:	687b      	ldr	r3, [r7, #4]
 8002ac0:	681b      	ldr	r3, [r3, #0]
 8002ac2:	6a1b      	ldr	r3, [r3, #32]
 8002ac4:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	685b      	ldr	r3, [r3, #4]
 8002acc:	4a64      	ldr	r2, [pc, #400]	; (8002c60 <HAL_I2C_Init+0x25c>)
 8002ace:	4293      	cmp	r3, r2
 8002ad0:	d802      	bhi.n	8002ad8 <HAL_I2C_Init+0xd4>
 8002ad2:	68bb      	ldr	r3, [r7, #8]
 8002ad4:	3301      	adds	r3, #1
 8002ad6:	e009      	b.n	8002aec <HAL_I2C_Init+0xe8>
 8002ad8:	68bb      	ldr	r3, [r7, #8]
 8002ada:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8002ade:	fb02 f303 	mul.w	r3, r2, r3
 8002ae2:	4a63      	ldr	r2, [pc, #396]	; (8002c70 <HAL_I2C_Init+0x26c>)
 8002ae4:	fba2 2303 	umull	r2, r3, r2, r3
 8002ae8:	099b      	lsrs	r3, r3, #6
 8002aea:	3301      	adds	r3, #1
 8002aec:	687a      	ldr	r2, [r7, #4]
 8002aee:	6812      	ldr	r2, [r2, #0]
 8002af0:	430b      	orrs	r3, r1
 8002af2:	6213      	str	r3, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8002af4:	687b      	ldr	r3, [r7, #4]
 8002af6:	681b      	ldr	r3, [r3, #0]
 8002af8:	69db      	ldr	r3, [r3, #28]
 8002afa:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8002afe:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8002b02:	687b      	ldr	r3, [r7, #4]
 8002b04:	685b      	ldr	r3, [r3, #4]
 8002b06:	4956      	ldr	r1, [pc, #344]	; (8002c60 <HAL_I2C_Init+0x25c>)
 8002b08:	428b      	cmp	r3, r1
 8002b0a:	d80d      	bhi.n	8002b28 <HAL_I2C_Init+0x124>
 8002b0c:	68fb      	ldr	r3, [r7, #12]
 8002b0e:	1e59      	subs	r1, r3, #1
 8002b10:	687b      	ldr	r3, [r7, #4]
 8002b12:	685b      	ldr	r3, [r3, #4]
 8002b14:	005b      	lsls	r3, r3, #1
 8002b16:	fbb1 f3f3 	udiv	r3, r1, r3
 8002b1a:	3301      	adds	r3, #1
 8002b1c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002b20:	2b04      	cmp	r3, #4
 8002b22:	bf38      	it	cc
 8002b24:	2304      	movcc	r3, #4
 8002b26:	e04f      	b.n	8002bc8 <HAL_I2C_Init+0x1c4>
 8002b28:	687b      	ldr	r3, [r7, #4]
 8002b2a:	689b      	ldr	r3, [r3, #8]
 8002b2c:	2b00      	cmp	r3, #0
 8002b2e:	d111      	bne.n	8002b54 <HAL_I2C_Init+0x150>
 8002b30:	68fb      	ldr	r3, [r7, #12]
 8002b32:	1e58      	subs	r0, r3, #1
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	6859      	ldr	r1, [r3, #4]
 8002b38:	460b      	mov	r3, r1
 8002b3a:	005b      	lsls	r3, r3, #1
 8002b3c:	440b      	add	r3, r1
 8002b3e:	fbb0 f3f3 	udiv	r3, r0, r3
 8002b42:	3301      	adds	r3, #1
 8002b44:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002b48:	2b00      	cmp	r3, #0
 8002b4a:	bf0c      	ite	eq
 8002b4c:	2301      	moveq	r3, #1
 8002b4e:	2300      	movne	r3, #0
 8002b50:	b2db      	uxtb	r3, r3
 8002b52:	e012      	b.n	8002b7a <HAL_I2C_Init+0x176>
 8002b54:	68fb      	ldr	r3, [r7, #12]
 8002b56:	1e58      	subs	r0, r3, #1
 8002b58:	687b      	ldr	r3, [r7, #4]
 8002b5a:	6859      	ldr	r1, [r3, #4]
 8002b5c:	460b      	mov	r3, r1
 8002b5e:	009b      	lsls	r3, r3, #2
 8002b60:	440b      	add	r3, r1
 8002b62:	0099      	lsls	r1, r3, #2
 8002b64:	440b      	add	r3, r1
 8002b66:	fbb0 f3f3 	udiv	r3, r0, r3
 8002b6a:	3301      	adds	r3, #1
 8002b6c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002b70:	2b00      	cmp	r3, #0
 8002b72:	bf0c      	ite	eq
 8002b74:	2301      	moveq	r3, #1
 8002b76:	2300      	movne	r3, #0
 8002b78:	b2db      	uxtb	r3, r3
 8002b7a:	2b00      	cmp	r3, #0
 8002b7c:	d001      	beq.n	8002b82 <HAL_I2C_Init+0x17e>
 8002b7e:	2301      	movs	r3, #1
 8002b80:	e022      	b.n	8002bc8 <HAL_I2C_Init+0x1c4>
 8002b82:	687b      	ldr	r3, [r7, #4]
 8002b84:	689b      	ldr	r3, [r3, #8]
 8002b86:	2b00      	cmp	r3, #0
 8002b88:	d10e      	bne.n	8002ba8 <HAL_I2C_Init+0x1a4>
 8002b8a:	68fb      	ldr	r3, [r7, #12]
 8002b8c:	1e58      	subs	r0, r3, #1
 8002b8e:	687b      	ldr	r3, [r7, #4]
 8002b90:	6859      	ldr	r1, [r3, #4]
 8002b92:	460b      	mov	r3, r1
 8002b94:	005b      	lsls	r3, r3, #1
 8002b96:	440b      	add	r3, r1
 8002b98:	fbb0 f3f3 	udiv	r3, r0, r3
 8002b9c:	3301      	adds	r3, #1
 8002b9e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002ba2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8002ba6:	e00f      	b.n	8002bc8 <HAL_I2C_Init+0x1c4>
 8002ba8:	68fb      	ldr	r3, [r7, #12]
 8002baa:	1e58      	subs	r0, r3, #1
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	6859      	ldr	r1, [r3, #4]
 8002bb0:	460b      	mov	r3, r1
 8002bb2:	009b      	lsls	r3, r3, #2
 8002bb4:	440b      	add	r3, r1
 8002bb6:	0099      	lsls	r1, r3, #2
 8002bb8:	440b      	add	r3, r1
 8002bba:	fbb0 f3f3 	udiv	r3, r0, r3
 8002bbe:	3301      	adds	r3, #1
 8002bc0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002bc4:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8002bc8:	6879      	ldr	r1, [r7, #4]
 8002bca:	6809      	ldr	r1, [r1, #0]
 8002bcc:	4313      	orrs	r3, r2
 8002bce:	61cb      	str	r3, [r1, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8002bd0:	687b      	ldr	r3, [r7, #4]
 8002bd2:	681b      	ldr	r3, [r3, #0]
 8002bd4:	681b      	ldr	r3, [r3, #0]
 8002bd6:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8002bda:	687b      	ldr	r3, [r7, #4]
 8002bdc:	69da      	ldr	r2, [r3, #28]
 8002bde:	687b      	ldr	r3, [r7, #4]
 8002be0:	6a1b      	ldr	r3, [r3, #32]
 8002be2:	431a      	orrs	r2, r3
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	681b      	ldr	r3, [r3, #0]
 8002be8:	430a      	orrs	r2, r1
 8002bea:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8002bec:	687b      	ldr	r3, [r7, #4]
 8002bee:	681b      	ldr	r3, [r3, #0]
 8002bf0:	689b      	ldr	r3, [r3, #8]
 8002bf2:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8002bf6:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8002bfa:	687a      	ldr	r2, [r7, #4]
 8002bfc:	6911      	ldr	r1, [r2, #16]
 8002bfe:	687a      	ldr	r2, [r7, #4]
 8002c00:	68d2      	ldr	r2, [r2, #12]
 8002c02:	4311      	orrs	r1, r2
 8002c04:	687a      	ldr	r2, [r7, #4]
 8002c06:	6812      	ldr	r2, [r2, #0]
 8002c08:	430b      	orrs	r3, r1
 8002c0a:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8002c0c:	687b      	ldr	r3, [r7, #4]
 8002c0e:	681b      	ldr	r3, [r3, #0]
 8002c10:	68db      	ldr	r3, [r3, #12]
 8002c12:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8002c16:	687b      	ldr	r3, [r7, #4]
 8002c18:	695a      	ldr	r2, [r3, #20]
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	699b      	ldr	r3, [r3, #24]
 8002c1e:	431a      	orrs	r2, r3
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	681b      	ldr	r3, [r3, #0]
 8002c24:	430a      	orrs	r2, r1
 8002c26:	60da      	str	r2, [r3, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 8002c28:	687b      	ldr	r3, [r7, #4]
 8002c2a:	681b      	ldr	r3, [r3, #0]
 8002c2c:	681a      	ldr	r2, [r3, #0]
 8002c2e:	687b      	ldr	r3, [r7, #4]
 8002c30:	681b      	ldr	r3, [r3, #0]
 8002c32:	f042 0201 	orr.w	r2, r2, #1
 8002c36:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8002c38:	687b      	ldr	r3, [r7, #4]
 8002c3a:	2200      	movs	r2, #0
 8002c3c:	641a      	str	r2, [r3, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8002c3e:	687b      	ldr	r3, [r7, #4]
 8002c40:	2220      	movs	r2, #32
 8002c42:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8002c46:	687b      	ldr	r3, [r7, #4]
 8002c48:	2200      	movs	r2, #0
 8002c4a:	631a      	str	r2, [r3, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8002c4c:	687b      	ldr	r3, [r7, #4]
 8002c4e:	2200      	movs	r2, #0
 8002c50:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

  return HAL_OK;
 8002c54:	2300      	movs	r3, #0
}
 8002c56:	4618      	mov	r0, r3
 8002c58:	3710      	adds	r7, #16
 8002c5a:	46bd      	mov	sp, r7
 8002c5c:	bd80      	pop	{r7, pc}
 8002c5e:	bf00      	nop
 8002c60:	000186a0 	.word	0x000186a0
 8002c64:	001e847f 	.word	0x001e847f
 8002c68:	003d08ff 	.word	0x003d08ff
 8002c6c:	431bde83 	.word	0x431bde83
 8002c70:	10624dd3 	.word	0x10624dd3

08002c74 <HAL_I2C_Mem_Write>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8002c74:	b580      	push	{r7, lr}
 8002c76:	b088      	sub	sp, #32
 8002c78:	af02      	add	r7, sp, #8
 8002c7a:	60f8      	str	r0, [r7, #12]
 8002c7c:	4608      	mov	r0, r1
 8002c7e:	4611      	mov	r1, r2
 8002c80:	461a      	mov	r2, r3
 8002c82:	4603      	mov	r3, r0
 8002c84:	817b      	strh	r3, [r7, #10]
 8002c86:	460b      	mov	r3, r1
 8002c88:	813b      	strh	r3, [r7, #8]
 8002c8a:	4613      	mov	r3, r2
 8002c8c:	80fb      	strh	r3, [r7, #6]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8002c8e:	f7fe ff89 	bl	8001ba4 <HAL_GetTick>
 8002c92:	6178      	str	r0, [r7, #20]

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8002c94:	68fb      	ldr	r3, [r7, #12]
 8002c96:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002c9a:	b2db      	uxtb	r3, r3
 8002c9c:	2b20      	cmp	r3, #32
 8002c9e:	f040 80d9 	bne.w	8002e54 <HAL_I2C_Mem_Write+0x1e0>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8002ca2:	697b      	ldr	r3, [r7, #20]
 8002ca4:	9300      	str	r3, [sp, #0]
 8002ca6:	2319      	movs	r3, #25
 8002ca8:	2201      	movs	r2, #1
 8002caa:	496d      	ldr	r1, [pc, #436]	; (8002e60 <HAL_I2C_Mem_Write+0x1ec>)
 8002cac:	68f8      	ldr	r0, [r7, #12]
 8002cae:	f000 fc7b 	bl	80035a8 <I2C_WaitOnFlagUntilTimeout>
 8002cb2:	4603      	mov	r3, r0
 8002cb4:	2b00      	cmp	r3, #0
 8002cb6:	d001      	beq.n	8002cbc <HAL_I2C_Mem_Write+0x48>
    {
      return HAL_BUSY;
 8002cb8:	2302      	movs	r3, #2
 8002cba:	e0cc      	b.n	8002e56 <HAL_I2C_Mem_Write+0x1e2>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8002cbc:	68fb      	ldr	r3, [r7, #12]
 8002cbe:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002cc2:	2b01      	cmp	r3, #1
 8002cc4:	d101      	bne.n	8002cca <HAL_I2C_Mem_Write+0x56>
 8002cc6:	2302      	movs	r3, #2
 8002cc8:	e0c5      	b.n	8002e56 <HAL_I2C_Mem_Write+0x1e2>
 8002cca:	68fb      	ldr	r3, [r7, #12]
 8002ccc:	2201      	movs	r2, #1
 8002cce:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8002cd2:	68fb      	ldr	r3, [r7, #12]
 8002cd4:	681b      	ldr	r3, [r3, #0]
 8002cd6:	681b      	ldr	r3, [r3, #0]
 8002cd8:	f003 0301 	and.w	r3, r3, #1
 8002cdc:	2b01      	cmp	r3, #1
 8002cde:	d007      	beq.n	8002cf0 <HAL_I2C_Mem_Write+0x7c>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8002ce0:	68fb      	ldr	r3, [r7, #12]
 8002ce2:	681b      	ldr	r3, [r3, #0]
 8002ce4:	681a      	ldr	r2, [r3, #0]
 8002ce6:	68fb      	ldr	r3, [r7, #12]
 8002ce8:	681b      	ldr	r3, [r3, #0]
 8002cea:	f042 0201 	orr.w	r2, r2, #1
 8002cee:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8002cf0:	68fb      	ldr	r3, [r7, #12]
 8002cf2:	681b      	ldr	r3, [r3, #0]
 8002cf4:	681a      	ldr	r2, [r3, #0]
 8002cf6:	68fb      	ldr	r3, [r7, #12]
 8002cf8:	681b      	ldr	r3, [r3, #0]
 8002cfa:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002cfe:	601a      	str	r2, [r3, #0]

    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8002d00:	68fb      	ldr	r3, [r7, #12]
 8002d02:	2221      	movs	r2, #33	; 0x21
 8002d04:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8002d08:	68fb      	ldr	r3, [r7, #12]
 8002d0a:	2240      	movs	r2, #64	; 0x40
 8002d0c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8002d10:	68fb      	ldr	r3, [r7, #12]
 8002d12:	2200      	movs	r2, #0
 8002d14:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 8002d16:	68fb      	ldr	r3, [r7, #12]
 8002d18:	6a3a      	ldr	r2, [r7, #32]
 8002d1a:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 8002d1c:	68fb      	ldr	r3, [r7, #12]
 8002d1e:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8002d20:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8002d22:	68fb      	ldr	r3, [r7, #12]
 8002d24:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002d26:	b29a      	uxth	r2, r3
 8002d28:	68fb      	ldr	r3, [r7, #12]
 8002d2a:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8002d2c:	68fb      	ldr	r3, [r7, #12]
 8002d2e:	4a4d      	ldr	r2, [pc, #308]	; (8002e64 <HAL_I2C_Mem_Write+0x1f0>)
 8002d30:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8002d32:	88f8      	ldrh	r0, [r7, #6]
 8002d34:	893a      	ldrh	r2, [r7, #8]
 8002d36:	8979      	ldrh	r1, [r7, #10]
 8002d38:	697b      	ldr	r3, [r7, #20]
 8002d3a:	9301      	str	r3, [sp, #4]
 8002d3c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002d3e:	9300      	str	r3, [sp, #0]
 8002d40:	4603      	mov	r3, r0
 8002d42:	68f8      	ldr	r0, [r7, #12]
 8002d44:	f000 fab6 	bl	80032b4 <I2C_RequestMemoryWrite>
 8002d48:	4603      	mov	r3, r0
 8002d4a:	2b00      	cmp	r3, #0
 8002d4c:	d052      	beq.n	8002df4 <HAL_I2C_Mem_Write+0x180>
    {
      return HAL_ERROR;
 8002d4e:	2301      	movs	r3, #1
 8002d50:	e081      	b.n	8002e56 <HAL_I2C_Mem_Write+0x1e2>
    }

    while (hi2c->XferSize > 0U)
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8002d52:	697a      	ldr	r2, [r7, #20]
 8002d54:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8002d56:	68f8      	ldr	r0, [r7, #12]
 8002d58:	f000 fcfc 	bl	8003754 <I2C_WaitOnTXEFlagUntilTimeout>
 8002d5c:	4603      	mov	r3, r0
 8002d5e:	2b00      	cmp	r3, #0
 8002d60:	d00d      	beq.n	8002d7e <HAL_I2C_Mem_Write+0x10a>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8002d62:	68fb      	ldr	r3, [r7, #12]
 8002d64:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d66:	2b04      	cmp	r3, #4
 8002d68:	d107      	bne.n	8002d7a <HAL_I2C_Mem_Write+0x106>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8002d6a:	68fb      	ldr	r3, [r7, #12]
 8002d6c:	681b      	ldr	r3, [r3, #0]
 8002d6e:	681a      	ldr	r2, [r3, #0]
 8002d70:	68fb      	ldr	r3, [r7, #12]
 8002d72:	681b      	ldr	r3, [r3, #0]
 8002d74:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002d78:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 8002d7a:	2301      	movs	r3, #1
 8002d7c:	e06b      	b.n	8002e56 <HAL_I2C_Mem_Write+0x1e2>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8002d7e:	68fb      	ldr	r3, [r7, #12]
 8002d80:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d82:	781a      	ldrb	r2, [r3, #0]
 8002d84:	68fb      	ldr	r3, [r7, #12]
 8002d86:	681b      	ldr	r3, [r3, #0]
 8002d88:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8002d8a:	68fb      	ldr	r3, [r7, #12]
 8002d8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d8e:	1c5a      	adds	r2, r3, #1
 8002d90:	68fb      	ldr	r3, [r7, #12]
 8002d92:	625a      	str	r2, [r3, #36]	; 0x24

      /* Update counter */
      hi2c->XferSize--;
 8002d94:	68fb      	ldr	r3, [r7, #12]
 8002d96:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002d98:	3b01      	subs	r3, #1
 8002d9a:	b29a      	uxth	r2, r3
 8002d9c:	68fb      	ldr	r3, [r7, #12]
 8002d9e:	851a      	strh	r2, [r3, #40]	; 0x28
      hi2c->XferCount--;
 8002da0:	68fb      	ldr	r3, [r7, #12]
 8002da2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002da4:	b29b      	uxth	r3, r3
 8002da6:	3b01      	subs	r3, #1
 8002da8:	b29a      	uxth	r2, r3
 8002daa:	68fb      	ldr	r3, [r7, #12]
 8002dac:	855a      	strh	r2, [r3, #42]	; 0x2a

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8002dae:	68fb      	ldr	r3, [r7, #12]
 8002db0:	681b      	ldr	r3, [r3, #0]
 8002db2:	695b      	ldr	r3, [r3, #20]
 8002db4:	f003 0304 	and.w	r3, r3, #4
 8002db8:	2b04      	cmp	r3, #4
 8002dba:	d11b      	bne.n	8002df4 <HAL_I2C_Mem_Write+0x180>
 8002dbc:	68fb      	ldr	r3, [r7, #12]
 8002dbe:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002dc0:	2b00      	cmp	r3, #0
 8002dc2:	d017      	beq.n	8002df4 <HAL_I2C_Mem_Write+0x180>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8002dc4:	68fb      	ldr	r3, [r7, #12]
 8002dc6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002dc8:	781a      	ldrb	r2, [r3, #0]
 8002dca:	68fb      	ldr	r3, [r7, #12]
 8002dcc:	681b      	ldr	r3, [r3, #0]
 8002dce:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8002dd0:	68fb      	ldr	r3, [r7, #12]
 8002dd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002dd4:	1c5a      	adds	r2, r3, #1
 8002dd6:	68fb      	ldr	r3, [r7, #12]
 8002dd8:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferSize--;
 8002dda:	68fb      	ldr	r3, [r7, #12]
 8002ddc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002dde:	3b01      	subs	r3, #1
 8002de0:	b29a      	uxth	r2, r3
 8002de2:	68fb      	ldr	r3, [r7, #12]
 8002de4:	851a      	strh	r2, [r3, #40]	; 0x28
        hi2c->XferCount--;
 8002de6:	68fb      	ldr	r3, [r7, #12]
 8002de8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002dea:	b29b      	uxth	r3, r3
 8002dec:	3b01      	subs	r3, #1
 8002dee:	b29a      	uxth	r2, r3
 8002df0:	68fb      	ldr	r3, [r7, #12]
 8002df2:	855a      	strh	r2, [r3, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8002df4:	68fb      	ldr	r3, [r7, #12]
 8002df6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002df8:	2b00      	cmp	r3, #0
 8002dfa:	d1aa      	bne.n	8002d52 <HAL_I2C_Mem_Write+0xde>
      }
    }

    /* Wait until BTF flag is set */
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8002dfc:	697a      	ldr	r2, [r7, #20]
 8002dfe:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8002e00:	68f8      	ldr	r0, [r7, #12]
 8002e02:	f000 fce8 	bl	80037d6 <I2C_WaitOnBTFFlagUntilTimeout>
 8002e06:	4603      	mov	r3, r0
 8002e08:	2b00      	cmp	r3, #0
 8002e0a:	d00d      	beq.n	8002e28 <HAL_I2C_Mem_Write+0x1b4>
    {
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8002e0c:	68fb      	ldr	r3, [r7, #12]
 8002e0e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e10:	2b04      	cmp	r3, #4
 8002e12:	d107      	bne.n	8002e24 <HAL_I2C_Mem_Write+0x1b0>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8002e14:	68fb      	ldr	r3, [r7, #12]
 8002e16:	681b      	ldr	r3, [r3, #0]
 8002e18:	681a      	ldr	r2, [r3, #0]
 8002e1a:	68fb      	ldr	r3, [r7, #12]
 8002e1c:	681b      	ldr	r3, [r3, #0]
 8002e1e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002e22:	601a      	str	r2, [r3, #0]
      }
      return HAL_ERROR;
 8002e24:	2301      	movs	r3, #1
 8002e26:	e016      	b.n	8002e56 <HAL_I2C_Mem_Write+0x1e2>
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8002e28:	68fb      	ldr	r3, [r7, #12]
 8002e2a:	681b      	ldr	r3, [r3, #0]
 8002e2c:	681a      	ldr	r2, [r3, #0]
 8002e2e:	68fb      	ldr	r3, [r7, #12]
 8002e30:	681b      	ldr	r3, [r3, #0]
 8002e32:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002e36:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8002e38:	68fb      	ldr	r3, [r7, #12]
 8002e3a:	2220      	movs	r2, #32
 8002e3c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8002e40:	68fb      	ldr	r3, [r7, #12]
 8002e42:	2200      	movs	r2, #0
 8002e44:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8002e48:	68fb      	ldr	r3, [r7, #12]
 8002e4a:	2200      	movs	r2, #0
 8002e4c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 8002e50:	2300      	movs	r3, #0
 8002e52:	e000      	b.n	8002e56 <HAL_I2C_Mem_Write+0x1e2>
  }
  else
  {
    return HAL_BUSY;
 8002e54:	2302      	movs	r3, #2
  }
}
 8002e56:	4618      	mov	r0, r3
 8002e58:	3718      	adds	r7, #24
 8002e5a:	46bd      	mov	sp, r7
 8002e5c:	bd80      	pop	{r7, pc}
 8002e5e:	bf00      	nop
 8002e60:	00100002 	.word	0x00100002
 8002e64:	ffff0000 	.word	0xffff0000

08002e68 <HAL_I2C_Mem_Read>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8002e68:	b580      	push	{r7, lr}
 8002e6a:	b08c      	sub	sp, #48	; 0x30
 8002e6c:	af02      	add	r7, sp, #8
 8002e6e:	60f8      	str	r0, [r7, #12]
 8002e70:	4608      	mov	r0, r1
 8002e72:	4611      	mov	r1, r2
 8002e74:	461a      	mov	r2, r3
 8002e76:	4603      	mov	r3, r0
 8002e78:	817b      	strh	r3, [r7, #10]
 8002e7a:	460b      	mov	r3, r1
 8002e7c:	813b      	strh	r3, [r7, #8]
 8002e7e:	4613      	mov	r3, r2
 8002e80:	80fb      	strh	r3, [r7, #6]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8002e82:	f7fe fe8f 	bl	8001ba4 <HAL_GetTick>
 8002e86:	6278      	str	r0, [r7, #36]	; 0x24

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8002e88:	68fb      	ldr	r3, [r7, #12]
 8002e8a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002e8e:	b2db      	uxtb	r3, r3
 8002e90:	2b20      	cmp	r3, #32
 8002e92:	f040 8208 	bne.w	80032a6 <HAL_I2C_Mem_Read+0x43e>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8002e96:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002e98:	9300      	str	r3, [sp, #0]
 8002e9a:	2319      	movs	r3, #25
 8002e9c:	2201      	movs	r2, #1
 8002e9e:	497b      	ldr	r1, [pc, #492]	; (800308c <HAL_I2C_Mem_Read+0x224>)
 8002ea0:	68f8      	ldr	r0, [r7, #12]
 8002ea2:	f000 fb81 	bl	80035a8 <I2C_WaitOnFlagUntilTimeout>
 8002ea6:	4603      	mov	r3, r0
 8002ea8:	2b00      	cmp	r3, #0
 8002eaa:	d001      	beq.n	8002eb0 <HAL_I2C_Mem_Read+0x48>
    {
      return HAL_BUSY;
 8002eac:	2302      	movs	r3, #2
 8002eae:	e1fb      	b.n	80032a8 <HAL_I2C_Mem_Read+0x440>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8002eb0:	68fb      	ldr	r3, [r7, #12]
 8002eb2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002eb6:	2b01      	cmp	r3, #1
 8002eb8:	d101      	bne.n	8002ebe <HAL_I2C_Mem_Read+0x56>
 8002eba:	2302      	movs	r3, #2
 8002ebc:	e1f4      	b.n	80032a8 <HAL_I2C_Mem_Read+0x440>
 8002ebe:	68fb      	ldr	r3, [r7, #12]
 8002ec0:	2201      	movs	r2, #1
 8002ec2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8002ec6:	68fb      	ldr	r3, [r7, #12]
 8002ec8:	681b      	ldr	r3, [r3, #0]
 8002eca:	681b      	ldr	r3, [r3, #0]
 8002ecc:	f003 0301 	and.w	r3, r3, #1
 8002ed0:	2b01      	cmp	r3, #1
 8002ed2:	d007      	beq.n	8002ee4 <HAL_I2C_Mem_Read+0x7c>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8002ed4:	68fb      	ldr	r3, [r7, #12]
 8002ed6:	681b      	ldr	r3, [r3, #0]
 8002ed8:	681a      	ldr	r2, [r3, #0]
 8002eda:	68fb      	ldr	r3, [r7, #12]
 8002edc:	681b      	ldr	r3, [r3, #0]
 8002ede:	f042 0201 	orr.w	r2, r2, #1
 8002ee2:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8002ee4:	68fb      	ldr	r3, [r7, #12]
 8002ee6:	681b      	ldr	r3, [r3, #0]
 8002ee8:	681a      	ldr	r2, [r3, #0]
 8002eea:	68fb      	ldr	r3, [r7, #12]
 8002eec:	681b      	ldr	r3, [r3, #0]
 8002eee:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002ef2:	601a      	str	r2, [r3, #0]

    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8002ef4:	68fb      	ldr	r3, [r7, #12]
 8002ef6:	2222      	movs	r2, #34	; 0x22
 8002ef8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8002efc:	68fb      	ldr	r3, [r7, #12]
 8002efe:	2240      	movs	r2, #64	; 0x40
 8002f00:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8002f04:	68fb      	ldr	r3, [r7, #12]
 8002f06:	2200      	movs	r2, #0
 8002f08:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 8002f0a:	68fb      	ldr	r3, [r7, #12]
 8002f0c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002f0e:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 8002f10:	68fb      	ldr	r3, [r7, #12]
 8002f12:	8eba      	ldrh	r2, [r7, #52]	; 0x34
 8002f14:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8002f16:	68fb      	ldr	r3, [r7, #12]
 8002f18:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002f1a:	b29a      	uxth	r2, r3
 8002f1c:	68fb      	ldr	r3, [r7, #12]
 8002f1e:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8002f20:	68fb      	ldr	r3, [r7, #12]
 8002f22:	4a5b      	ldr	r2, [pc, #364]	; (8003090 <HAL_I2C_Mem_Read+0x228>)
 8002f24:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8002f26:	88f8      	ldrh	r0, [r7, #6]
 8002f28:	893a      	ldrh	r2, [r7, #8]
 8002f2a:	8979      	ldrh	r1, [r7, #10]
 8002f2c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002f2e:	9301      	str	r3, [sp, #4]
 8002f30:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002f32:	9300      	str	r3, [sp, #0]
 8002f34:	4603      	mov	r3, r0
 8002f36:	68f8      	ldr	r0, [r7, #12]
 8002f38:	f000 fa50 	bl	80033dc <I2C_RequestMemoryRead>
 8002f3c:	4603      	mov	r3, r0
 8002f3e:	2b00      	cmp	r3, #0
 8002f40:	d001      	beq.n	8002f46 <HAL_I2C_Mem_Read+0xde>
    {
      return HAL_ERROR;
 8002f42:	2301      	movs	r3, #1
 8002f44:	e1b0      	b.n	80032a8 <HAL_I2C_Mem_Read+0x440>
    }

    if (hi2c->XferSize == 0U)
 8002f46:	68fb      	ldr	r3, [r7, #12]
 8002f48:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002f4a:	2b00      	cmp	r3, #0
 8002f4c:	d113      	bne.n	8002f76 <HAL_I2C_Mem_Read+0x10e>
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8002f4e:	2300      	movs	r3, #0
 8002f50:	623b      	str	r3, [r7, #32]
 8002f52:	68fb      	ldr	r3, [r7, #12]
 8002f54:	681b      	ldr	r3, [r3, #0]
 8002f56:	695b      	ldr	r3, [r3, #20]
 8002f58:	623b      	str	r3, [r7, #32]
 8002f5a:	68fb      	ldr	r3, [r7, #12]
 8002f5c:	681b      	ldr	r3, [r3, #0]
 8002f5e:	699b      	ldr	r3, [r3, #24]
 8002f60:	623b      	str	r3, [r7, #32]
 8002f62:	6a3b      	ldr	r3, [r7, #32]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8002f64:	68fb      	ldr	r3, [r7, #12]
 8002f66:	681b      	ldr	r3, [r3, #0]
 8002f68:	681a      	ldr	r2, [r3, #0]
 8002f6a:	68fb      	ldr	r3, [r7, #12]
 8002f6c:	681b      	ldr	r3, [r3, #0]
 8002f6e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002f72:	601a      	str	r2, [r3, #0]
 8002f74:	e184      	b.n	8003280 <HAL_I2C_Mem_Read+0x418>
    }
    else if (hi2c->XferSize == 1U)
 8002f76:	68fb      	ldr	r3, [r7, #12]
 8002f78:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002f7a:	2b01      	cmp	r3, #1
 8002f7c:	d11b      	bne.n	8002fb6 <HAL_I2C_Mem_Read+0x14e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8002f7e:	68fb      	ldr	r3, [r7, #12]
 8002f80:	681b      	ldr	r3, [r3, #0]
 8002f82:	681a      	ldr	r2, [r3, #0]
 8002f84:	68fb      	ldr	r3, [r7, #12]
 8002f86:	681b      	ldr	r3, [r3, #0]
 8002f88:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002f8c:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8002f8e:	2300      	movs	r3, #0
 8002f90:	61fb      	str	r3, [r7, #28]
 8002f92:	68fb      	ldr	r3, [r7, #12]
 8002f94:	681b      	ldr	r3, [r3, #0]
 8002f96:	695b      	ldr	r3, [r3, #20]
 8002f98:	61fb      	str	r3, [r7, #28]
 8002f9a:	68fb      	ldr	r3, [r7, #12]
 8002f9c:	681b      	ldr	r3, [r3, #0]
 8002f9e:	699b      	ldr	r3, [r3, #24]
 8002fa0:	61fb      	str	r3, [r7, #28]
 8002fa2:	69fb      	ldr	r3, [r7, #28]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8002fa4:	68fb      	ldr	r3, [r7, #12]
 8002fa6:	681b      	ldr	r3, [r3, #0]
 8002fa8:	681a      	ldr	r2, [r3, #0]
 8002faa:	68fb      	ldr	r3, [r7, #12]
 8002fac:	681b      	ldr	r3, [r3, #0]
 8002fae:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002fb2:	601a      	str	r2, [r3, #0]
 8002fb4:	e164      	b.n	8003280 <HAL_I2C_Mem_Read+0x418>
    }
    else if (hi2c->XferSize == 2U)
 8002fb6:	68fb      	ldr	r3, [r7, #12]
 8002fb8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002fba:	2b02      	cmp	r3, #2
 8002fbc:	d11b      	bne.n	8002ff6 <HAL_I2C_Mem_Read+0x18e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8002fbe:	68fb      	ldr	r3, [r7, #12]
 8002fc0:	681b      	ldr	r3, [r3, #0]
 8002fc2:	681a      	ldr	r2, [r3, #0]
 8002fc4:	68fb      	ldr	r3, [r7, #12]
 8002fc6:	681b      	ldr	r3, [r3, #0]
 8002fc8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002fcc:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8002fce:	68fb      	ldr	r3, [r7, #12]
 8002fd0:	681b      	ldr	r3, [r3, #0]
 8002fd2:	681a      	ldr	r2, [r3, #0]
 8002fd4:	68fb      	ldr	r3, [r7, #12]
 8002fd6:	681b      	ldr	r3, [r3, #0]
 8002fd8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002fdc:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8002fde:	2300      	movs	r3, #0
 8002fe0:	61bb      	str	r3, [r7, #24]
 8002fe2:	68fb      	ldr	r3, [r7, #12]
 8002fe4:	681b      	ldr	r3, [r3, #0]
 8002fe6:	695b      	ldr	r3, [r3, #20]
 8002fe8:	61bb      	str	r3, [r7, #24]
 8002fea:	68fb      	ldr	r3, [r7, #12]
 8002fec:	681b      	ldr	r3, [r3, #0]
 8002fee:	699b      	ldr	r3, [r3, #24]
 8002ff0:	61bb      	str	r3, [r7, #24]
 8002ff2:	69bb      	ldr	r3, [r7, #24]
 8002ff4:	e144      	b.n	8003280 <HAL_I2C_Mem_Read+0x418>
    }
    else
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8002ff6:	2300      	movs	r3, #0
 8002ff8:	617b      	str	r3, [r7, #20]
 8002ffa:	68fb      	ldr	r3, [r7, #12]
 8002ffc:	681b      	ldr	r3, [r3, #0]
 8002ffe:	695b      	ldr	r3, [r3, #20]
 8003000:	617b      	str	r3, [r7, #20]
 8003002:	68fb      	ldr	r3, [r7, #12]
 8003004:	681b      	ldr	r3, [r3, #0]
 8003006:	699b      	ldr	r3, [r3, #24]
 8003008:	617b      	str	r3, [r7, #20]
 800300a:	697b      	ldr	r3, [r7, #20]
    }

    while (hi2c->XferSize > 0U)
 800300c:	e138      	b.n	8003280 <HAL_I2C_Mem_Read+0x418>
    {
      if (hi2c->XferSize <= 3U)
 800300e:	68fb      	ldr	r3, [r7, #12]
 8003010:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003012:	2b03      	cmp	r3, #3
 8003014:	f200 80f1 	bhi.w	80031fa <HAL_I2C_Mem_Read+0x392>
      {
        /* One byte */
        if (hi2c->XferSize == 1U)
 8003018:	68fb      	ldr	r3, [r7, #12]
 800301a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800301c:	2b01      	cmp	r3, #1
 800301e:	d123      	bne.n	8003068 <HAL_I2C_Mem_Read+0x200>
        {
          /* Wait until RXNE flag is set */
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003020:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003022:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8003024:	68f8      	ldr	r0, [r7, #12]
 8003026:	f000 fc17 	bl	8003858 <I2C_WaitOnRXNEFlagUntilTimeout>
 800302a:	4603      	mov	r3, r0
 800302c:	2b00      	cmp	r3, #0
 800302e:	d001      	beq.n	8003034 <HAL_I2C_Mem_Read+0x1cc>
          {
            return HAL_ERROR;
 8003030:	2301      	movs	r3, #1
 8003032:	e139      	b.n	80032a8 <HAL_I2C_Mem_Read+0x440>
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003034:	68fb      	ldr	r3, [r7, #12]
 8003036:	681b      	ldr	r3, [r3, #0]
 8003038:	691a      	ldr	r2, [r3, #16]
 800303a:	68fb      	ldr	r3, [r7, #12]
 800303c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800303e:	b2d2      	uxtb	r2, r2
 8003040:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003042:	68fb      	ldr	r3, [r7, #12]
 8003044:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003046:	1c5a      	adds	r2, r3, #1
 8003048:	68fb      	ldr	r3, [r7, #12]
 800304a:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 800304c:	68fb      	ldr	r3, [r7, #12]
 800304e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003050:	3b01      	subs	r3, #1
 8003052:	b29a      	uxth	r2, r3
 8003054:	68fb      	ldr	r3, [r7, #12]
 8003056:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8003058:	68fb      	ldr	r3, [r7, #12]
 800305a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800305c:	b29b      	uxth	r3, r3
 800305e:	3b01      	subs	r3, #1
 8003060:	b29a      	uxth	r2, r3
 8003062:	68fb      	ldr	r3, [r7, #12]
 8003064:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003066:	e10b      	b.n	8003280 <HAL_I2C_Mem_Read+0x418>
        }
        /* Two bytes */
        else if (hi2c->XferSize == 2U)
 8003068:	68fb      	ldr	r3, [r7, #12]
 800306a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800306c:	2b02      	cmp	r3, #2
 800306e:	d14e      	bne.n	800310e <HAL_I2C_Mem_Read+0x2a6>
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8003070:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003072:	9300      	str	r3, [sp, #0]
 8003074:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003076:	2200      	movs	r2, #0
 8003078:	4906      	ldr	r1, [pc, #24]	; (8003094 <HAL_I2C_Mem_Read+0x22c>)
 800307a:	68f8      	ldr	r0, [r7, #12]
 800307c:	f000 fa94 	bl	80035a8 <I2C_WaitOnFlagUntilTimeout>
 8003080:	4603      	mov	r3, r0
 8003082:	2b00      	cmp	r3, #0
 8003084:	d008      	beq.n	8003098 <HAL_I2C_Mem_Read+0x230>
          {
            return HAL_ERROR;
 8003086:	2301      	movs	r3, #1
 8003088:	e10e      	b.n	80032a8 <HAL_I2C_Mem_Read+0x440>
 800308a:	bf00      	nop
 800308c:	00100002 	.word	0x00100002
 8003090:	ffff0000 	.word	0xffff0000
 8003094:	00010004 	.word	0x00010004
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003098:	68fb      	ldr	r3, [r7, #12]
 800309a:	681b      	ldr	r3, [r3, #0]
 800309c:	681a      	ldr	r2, [r3, #0]
 800309e:	68fb      	ldr	r3, [r7, #12]
 80030a0:	681b      	ldr	r3, [r3, #0]
 80030a2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80030a6:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80030a8:	68fb      	ldr	r3, [r7, #12]
 80030aa:	681b      	ldr	r3, [r3, #0]
 80030ac:	691a      	ldr	r2, [r3, #16]
 80030ae:	68fb      	ldr	r3, [r7, #12]
 80030b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030b2:	b2d2      	uxtb	r2, r2
 80030b4:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80030b6:	68fb      	ldr	r3, [r7, #12]
 80030b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030ba:	1c5a      	adds	r2, r3, #1
 80030bc:	68fb      	ldr	r3, [r7, #12]
 80030be:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 80030c0:	68fb      	ldr	r3, [r7, #12]
 80030c2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80030c4:	3b01      	subs	r3, #1
 80030c6:	b29a      	uxth	r2, r3
 80030c8:	68fb      	ldr	r3, [r7, #12]
 80030ca:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 80030cc:	68fb      	ldr	r3, [r7, #12]
 80030ce:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80030d0:	b29b      	uxth	r3, r3
 80030d2:	3b01      	subs	r3, #1
 80030d4:	b29a      	uxth	r2, r3
 80030d6:	68fb      	ldr	r3, [r7, #12]
 80030d8:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80030da:	68fb      	ldr	r3, [r7, #12]
 80030dc:	681b      	ldr	r3, [r3, #0]
 80030de:	691a      	ldr	r2, [r3, #16]
 80030e0:	68fb      	ldr	r3, [r7, #12]
 80030e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030e4:	b2d2      	uxtb	r2, r2
 80030e6:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80030e8:	68fb      	ldr	r3, [r7, #12]
 80030ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80030ec:	1c5a      	adds	r2, r3, #1
 80030ee:	68fb      	ldr	r3, [r7, #12]
 80030f0:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 80030f2:	68fb      	ldr	r3, [r7, #12]
 80030f4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80030f6:	3b01      	subs	r3, #1
 80030f8:	b29a      	uxth	r2, r3
 80030fa:	68fb      	ldr	r3, [r7, #12]
 80030fc:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 80030fe:	68fb      	ldr	r3, [r7, #12]
 8003100:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003102:	b29b      	uxth	r3, r3
 8003104:	3b01      	subs	r3, #1
 8003106:	b29a      	uxth	r2, r3
 8003108:	68fb      	ldr	r3, [r7, #12]
 800310a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800310c:	e0b8      	b.n	8003280 <HAL_I2C_Mem_Read+0x418>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800310e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003110:	9300      	str	r3, [sp, #0]
 8003112:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003114:	2200      	movs	r2, #0
 8003116:	4966      	ldr	r1, [pc, #408]	; (80032b0 <HAL_I2C_Mem_Read+0x448>)
 8003118:	68f8      	ldr	r0, [r7, #12]
 800311a:	f000 fa45 	bl	80035a8 <I2C_WaitOnFlagUntilTimeout>
 800311e:	4603      	mov	r3, r0
 8003120:	2b00      	cmp	r3, #0
 8003122:	d001      	beq.n	8003128 <HAL_I2C_Mem_Read+0x2c0>
          {
            return HAL_ERROR;
 8003124:	2301      	movs	r3, #1
 8003126:	e0bf      	b.n	80032a8 <HAL_I2C_Mem_Read+0x440>
          }

          /* Disable Acknowledge */
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8003128:	68fb      	ldr	r3, [r7, #12]
 800312a:	681b      	ldr	r3, [r3, #0]
 800312c:	681a      	ldr	r2, [r3, #0]
 800312e:	68fb      	ldr	r3, [r7, #12]
 8003130:	681b      	ldr	r3, [r3, #0]
 8003132:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003136:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003138:	68fb      	ldr	r3, [r7, #12]
 800313a:	681b      	ldr	r3, [r3, #0]
 800313c:	691a      	ldr	r2, [r3, #16]
 800313e:	68fb      	ldr	r3, [r7, #12]
 8003140:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003142:	b2d2      	uxtb	r2, r2
 8003144:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8003146:	68fb      	ldr	r3, [r7, #12]
 8003148:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800314a:	1c5a      	adds	r2, r3, #1
 800314c:	68fb      	ldr	r3, [r7, #12]
 800314e:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003150:	68fb      	ldr	r3, [r7, #12]
 8003152:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003154:	3b01      	subs	r3, #1
 8003156:	b29a      	uxth	r2, r3
 8003158:	68fb      	ldr	r3, [r7, #12]
 800315a:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 800315c:	68fb      	ldr	r3, [r7, #12]
 800315e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003160:	b29b      	uxth	r3, r3
 8003162:	3b01      	subs	r3, #1
 8003164:	b29a      	uxth	r2, r3
 8003166:	68fb      	ldr	r3, [r7, #12]
 8003168:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800316a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800316c:	9300      	str	r3, [sp, #0]
 800316e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003170:	2200      	movs	r2, #0
 8003172:	494f      	ldr	r1, [pc, #316]	; (80032b0 <HAL_I2C_Mem_Read+0x448>)
 8003174:	68f8      	ldr	r0, [r7, #12]
 8003176:	f000 fa17 	bl	80035a8 <I2C_WaitOnFlagUntilTimeout>
 800317a:	4603      	mov	r3, r0
 800317c:	2b00      	cmp	r3, #0
 800317e:	d001      	beq.n	8003184 <HAL_I2C_Mem_Read+0x31c>
          {
            return HAL_ERROR;
 8003180:	2301      	movs	r3, #1
 8003182:	e091      	b.n	80032a8 <HAL_I2C_Mem_Read+0x440>
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003184:	68fb      	ldr	r3, [r7, #12]
 8003186:	681b      	ldr	r3, [r3, #0]
 8003188:	681a      	ldr	r2, [r3, #0]
 800318a:	68fb      	ldr	r3, [r7, #12]
 800318c:	681b      	ldr	r3, [r3, #0]
 800318e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003192:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8003194:	68fb      	ldr	r3, [r7, #12]
 8003196:	681b      	ldr	r3, [r3, #0]
 8003198:	691a      	ldr	r2, [r3, #16]
 800319a:	68fb      	ldr	r3, [r7, #12]
 800319c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800319e:	b2d2      	uxtb	r2, r2
 80031a0:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80031a2:	68fb      	ldr	r3, [r7, #12]
 80031a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80031a6:	1c5a      	adds	r2, r3, #1
 80031a8:	68fb      	ldr	r3, [r7, #12]
 80031aa:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 80031ac:	68fb      	ldr	r3, [r7, #12]
 80031ae:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80031b0:	3b01      	subs	r3, #1
 80031b2:	b29a      	uxth	r2, r3
 80031b4:	68fb      	ldr	r3, [r7, #12]
 80031b6:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 80031b8:	68fb      	ldr	r3, [r7, #12]
 80031ba:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80031bc:	b29b      	uxth	r3, r3
 80031be:	3b01      	subs	r3, #1
 80031c0:	b29a      	uxth	r2, r3
 80031c2:	68fb      	ldr	r3, [r7, #12]
 80031c4:	855a      	strh	r2, [r3, #42]	; 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80031c6:	68fb      	ldr	r3, [r7, #12]
 80031c8:	681b      	ldr	r3, [r3, #0]
 80031ca:	691a      	ldr	r2, [r3, #16]
 80031cc:	68fb      	ldr	r3, [r7, #12]
 80031ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80031d0:	b2d2      	uxtb	r2, r2
 80031d2:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80031d4:	68fb      	ldr	r3, [r7, #12]
 80031d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80031d8:	1c5a      	adds	r2, r3, #1
 80031da:	68fb      	ldr	r3, [r7, #12]
 80031dc:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 80031de:	68fb      	ldr	r3, [r7, #12]
 80031e0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80031e2:	3b01      	subs	r3, #1
 80031e4:	b29a      	uxth	r2, r3
 80031e6:	68fb      	ldr	r3, [r7, #12]
 80031e8:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 80031ea:	68fb      	ldr	r3, [r7, #12]
 80031ec:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80031ee:	b29b      	uxth	r3, r3
 80031f0:	3b01      	subs	r3, #1
 80031f2:	b29a      	uxth	r2, r3
 80031f4:	68fb      	ldr	r3, [r7, #12]
 80031f6:	855a      	strh	r2, [r3, #42]	; 0x2a
 80031f8:	e042      	b.n	8003280 <HAL_I2C_Mem_Read+0x418>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80031fa:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80031fc:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 80031fe:	68f8      	ldr	r0, [r7, #12]
 8003200:	f000 fb2a 	bl	8003858 <I2C_WaitOnRXNEFlagUntilTimeout>
 8003204:	4603      	mov	r3, r0
 8003206:	2b00      	cmp	r3, #0
 8003208:	d001      	beq.n	800320e <HAL_I2C_Mem_Read+0x3a6>
        {
          return HAL_ERROR;
 800320a:	2301      	movs	r3, #1
 800320c:	e04c      	b.n	80032a8 <HAL_I2C_Mem_Read+0x440>
        }

        /* Read data from DR */
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800320e:	68fb      	ldr	r3, [r7, #12]
 8003210:	681b      	ldr	r3, [r3, #0]
 8003212:	691a      	ldr	r2, [r3, #16]
 8003214:	68fb      	ldr	r3, [r7, #12]
 8003216:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003218:	b2d2      	uxtb	r2, r2
 800321a:	701a      	strb	r2, [r3, #0]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 800321c:	68fb      	ldr	r3, [r7, #12]
 800321e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003220:	1c5a      	adds	r2, r3, #1
 8003222:	68fb      	ldr	r3, [r7, #12]
 8003224:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferSize--;
 8003226:	68fb      	ldr	r3, [r7, #12]
 8003228:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800322a:	3b01      	subs	r3, #1
 800322c:	b29a      	uxth	r2, r3
 800322e:	68fb      	ldr	r3, [r7, #12]
 8003230:	851a      	strh	r2, [r3, #40]	; 0x28
        hi2c->XferCount--;
 8003232:	68fb      	ldr	r3, [r7, #12]
 8003234:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003236:	b29b      	uxth	r3, r3
 8003238:	3b01      	subs	r3, #1
 800323a:	b29a      	uxth	r2, r3
 800323c:	68fb      	ldr	r3, [r7, #12]
 800323e:	855a      	strh	r2, [r3, #42]	; 0x2a

        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8003240:	68fb      	ldr	r3, [r7, #12]
 8003242:	681b      	ldr	r3, [r3, #0]
 8003244:	695b      	ldr	r3, [r3, #20]
 8003246:	f003 0304 	and.w	r3, r3, #4
 800324a:	2b04      	cmp	r3, #4
 800324c:	d118      	bne.n	8003280 <HAL_I2C_Mem_Read+0x418>
        {
          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800324e:	68fb      	ldr	r3, [r7, #12]
 8003250:	681b      	ldr	r3, [r3, #0]
 8003252:	691a      	ldr	r2, [r3, #16]
 8003254:	68fb      	ldr	r3, [r7, #12]
 8003256:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003258:	b2d2      	uxtb	r2, r2
 800325a:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800325c:	68fb      	ldr	r3, [r7, #12]
 800325e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003260:	1c5a      	adds	r2, r3, #1
 8003262:	68fb      	ldr	r3, [r7, #12]
 8003264:	625a      	str	r2, [r3, #36]	; 0x24

          /* Update counter */
          hi2c->XferSize--;
 8003266:	68fb      	ldr	r3, [r7, #12]
 8003268:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800326a:	3b01      	subs	r3, #1
 800326c:	b29a      	uxth	r2, r3
 800326e:	68fb      	ldr	r3, [r7, #12]
 8003270:	851a      	strh	r2, [r3, #40]	; 0x28
          hi2c->XferCount--;
 8003272:	68fb      	ldr	r3, [r7, #12]
 8003274:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003276:	b29b      	uxth	r3, r3
 8003278:	3b01      	subs	r3, #1
 800327a:	b29a      	uxth	r2, r3
 800327c:	68fb      	ldr	r3, [r7, #12]
 800327e:	855a      	strh	r2, [r3, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8003280:	68fb      	ldr	r3, [r7, #12]
 8003282:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003284:	2b00      	cmp	r3, #0
 8003286:	f47f aec2 	bne.w	800300e <HAL_I2C_Mem_Read+0x1a6>
        }
      }
    }

    hi2c->State = HAL_I2C_STATE_READY;
 800328a:	68fb      	ldr	r3, [r7, #12]
 800328c:	2220      	movs	r2, #32
 800328e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8003292:	68fb      	ldr	r3, [r7, #12]
 8003294:	2200      	movs	r2, #0
 8003296:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800329a:	68fb      	ldr	r3, [r7, #12]
 800329c:	2200      	movs	r2, #0
 800329e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 80032a2:	2300      	movs	r3, #0
 80032a4:	e000      	b.n	80032a8 <HAL_I2C_Mem_Read+0x440>
  }
  else
  {
    return HAL_BUSY;
 80032a6:	2302      	movs	r3, #2
  }
}
 80032a8:	4618      	mov	r0, r3
 80032aa:	3728      	adds	r7, #40	; 0x28
 80032ac:	46bd      	mov	sp, r7
 80032ae:	bd80      	pop	{r7, pc}
 80032b0:	00010004 	.word	0x00010004

080032b4 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 80032b4:	b580      	push	{r7, lr}
 80032b6:	b088      	sub	sp, #32
 80032b8:	af02      	add	r7, sp, #8
 80032ba:	60f8      	str	r0, [r7, #12]
 80032bc:	4608      	mov	r0, r1
 80032be:	4611      	mov	r1, r2
 80032c0:	461a      	mov	r2, r3
 80032c2:	4603      	mov	r3, r0
 80032c4:	817b      	strh	r3, [r7, #10]
 80032c6:	460b      	mov	r3, r1
 80032c8:	813b      	strh	r3, [r7, #8]
 80032ca:	4613      	mov	r3, r2
 80032cc:	80fb      	strh	r3, [r7, #6]
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80032ce:	68fb      	ldr	r3, [r7, #12]
 80032d0:	681b      	ldr	r3, [r3, #0]
 80032d2:	681a      	ldr	r2, [r3, #0]
 80032d4:	68fb      	ldr	r3, [r7, #12]
 80032d6:	681b      	ldr	r3, [r3, #0]
 80032d8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80032dc:	601a      	str	r2, [r3, #0]

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80032de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80032e0:	9300      	str	r3, [sp, #0]
 80032e2:	6a3b      	ldr	r3, [r7, #32]
 80032e4:	2200      	movs	r2, #0
 80032e6:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80032ea:	68f8      	ldr	r0, [r7, #12]
 80032ec:	f000 f95c 	bl	80035a8 <I2C_WaitOnFlagUntilTimeout>
 80032f0:	4603      	mov	r3, r0
 80032f2:	2b00      	cmp	r3, #0
 80032f4:	d00c      	beq.n	8003310 <I2C_RequestMemoryWrite+0x5c>
  {
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80032f6:	68fb      	ldr	r3, [r7, #12]
 80032f8:	681b      	ldr	r3, [r3, #0]
 80032fa:	681b      	ldr	r3, [r3, #0]
 80032fc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003300:	2b00      	cmp	r3, #0
 8003302:	d003      	beq.n	800330c <I2C_RequestMemoryWrite+0x58>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8003304:	68fb      	ldr	r3, [r7, #12]
 8003306:	f44f 7200 	mov.w	r2, #512	; 0x200
 800330a:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 800330c:	2303      	movs	r3, #3
 800330e:	e05f      	b.n	80033d0 <I2C_RequestMemoryWrite+0x11c>
  }

  /* Send slave address */
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8003310:	897b      	ldrh	r3, [r7, #10]
 8003312:	b2db      	uxtb	r3, r3
 8003314:	461a      	mov	r2, r3
 8003316:	68fb      	ldr	r3, [r7, #12]
 8003318:	681b      	ldr	r3, [r3, #0]
 800331a:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800331e:	611a      	str	r2, [r3, #16]

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003320:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003322:	6a3a      	ldr	r2, [r7, #32]
 8003324:	492c      	ldr	r1, [pc, #176]	; (80033d8 <I2C_RequestMemoryWrite+0x124>)
 8003326:	68f8      	ldr	r0, [r7, #12]
 8003328:	f000 f995 	bl	8003656 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800332c:	4603      	mov	r3, r0
 800332e:	2b00      	cmp	r3, #0
 8003330:	d001      	beq.n	8003336 <I2C_RequestMemoryWrite+0x82>
  {
    return HAL_ERROR;
 8003332:	2301      	movs	r3, #1
 8003334:	e04c      	b.n	80033d0 <I2C_RequestMemoryWrite+0x11c>
  }

  /* Clear ADDR flag */
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8003336:	2300      	movs	r3, #0
 8003338:	617b      	str	r3, [r7, #20]
 800333a:	68fb      	ldr	r3, [r7, #12]
 800333c:	681b      	ldr	r3, [r3, #0]
 800333e:	695b      	ldr	r3, [r3, #20]
 8003340:	617b      	str	r3, [r7, #20]
 8003342:	68fb      	ldr	r3, [r7, #12]
 8003344:	681b      	ldr	r3, [r3, #0]
 8003346:	699b      	ldr	r3, [r3, #24]
 8003348:	617b      	str	r3, [r7, #20]
 800334a:	697b      	ldr	r3, [r7, #20]

  /* Wait until TXE flag is set */
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800334c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800334e:	6a39      	ldr	r1, [r7, #32]
 8003350:	68f8      	ldr	r0, [r7, #12]
 8003352:	f000 f9ff 	bl	8003754 <I2C_WaitOnTXEFlagUntilTimeout>
 8003356:	4603      	mov	r3, r0
 8003358:	2b00      	cmp	r3, #0
 800335a:	d00d      	beq.n	8003378 <I2C_RequestMemoryWrite+0xc4>
  {
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800335c:	68fb      	ldr	r3, [r7, #12]
 800335e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003360:	2b04      	cmp	r3, #4
 8003362:	d107      	bne.n	8003374 <I2C_RequestMemoryWrite+0xc0>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003364:	68fb      	ldr	r3, [r7, #12]
 8003366:	681b      	ldr	r3, [r3, #0]
 8003368:	681a      	ldr	r2, [r3, #0]
 800336a:	68fb      	ldr	r3, [r7, #12]
 800336c:	681b      	ldr	r3, [r3, #0]
 800336e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003372:	601a      	str	r2, [r3, #0]
    }
    return HAL_ERROR;
 8003374:	2301      	movs	r3, #1
 8003376:	e02b      	b.n	80033d0 <I2C_RequestMemoryWrite+0x11c>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003378:	88fb      	ldrh	r3, [r7, #6]
 800337a:	2b01      	cmp	r3, #1
 800337c:	d105      	bne.n	800338a <I2C_RequestMemoryWrite+0xd6>
  {
    /* Send Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800337e:	893b      	ldrh	r3, [r7, #8]
 8003380:	b2da      	uxtb	r2, r3
 8003382:	68fb      	ldr	r3, [r7, #12]
 8003384:	681b      	ldr	r3, [r3, #0]
 8003386:	611a      	str	r2, [r3, #16]
 8003388:	e021      	b.n	80033ce <I2C_RequestMemoryWrite+0x11a>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800338a:	893b      	ldrh	r3, [r7, #8]
 800338c:	0a1b      	lsrs	r3, r3, #8
 800338e:	b29b      	uxth	r3, r3
 8003390:	b2da      	uxtb	r2, r3
 8003392:	68fb      	ldr	r3, [r7, #12]
 8003394:	681b      	ldr	r3, [r3, #0]
 8003396:	611a      	str	r2, [r3, #16]

    /* Wait until TXE flag is set */
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003398:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800339a:	6a39      	ldr	r1, [r7, #32]
 800339c:	68f8      	ldr	r0, [r7, #12]
 800339e:	f000 f9d9 	bl	8003754 <I2C_WaitOnTXEFlagUntilTimeout>
 80033a2:	4603      	mov	r3, r0
 80033a4:	2b00      	cmp	r3, #0
 80033a6:	d00d      	beq.n	80033c4 <I2C_RequestMemoryWrite+0x110>
    {
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80033a8:	68fb      	ldr	r3, [r7, #12]
 80033aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80033ac:	2b04      	cmp	r3, #4
 80033ae:	d107      	bne.n	80033c0 <I2C_RequestMemoryWrite+0x10c>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80033b0:	68fb      	ldr	r3, [r7, #12]
 80033b2:	681b      	ldr	r3, [r3, #0]
 80033b4:	681a      	ldr	r2, [r3, #0]
 80033b6:	68fb      	ldr	r3, [r7, #12]
 80033b8:	681b      	ldr	r3, [r3, #0]
 80033ba:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80033be:	601a      	str	r2, [r3, #0]
      }
      return HAL_ERROR;
 80033c0:	2301      	movs	r3, #1
 80033c2:	e005      	b.n	80033d0 <I2C_RequestMemoryWrite+0x11c>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80033c4:	893b      	ldrh	r3, [r7, #8]
 80033c6:	b2da      	uxtb	r2, r3
 80033c8:	68fb      	ldr	r3, [r7, #12]
 80033ca:	681b      	ldr	r3, [r3, #0]
 80033cc:	611a      	str	r2, [r3, #16]
  }

  return HAL_OK;
 80033ce:	2300      	movs	r3, #0
}
 80033d0:	4618      	mov	r0, r3
 80033d2:	3718      	adds	r7, #24
 80033d4:	46bd      	mov	sp, r7
 80033d6:	bd80      	pop	{r7, pc}
 80033d8:	00010002 	.word	0x00010002

080033dc <I2C_RequestMemoryRead>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 80033dc:	b580      	push	{r7, lr}
 80033de:	b088      	sub	sp, #32
 80033e0:	af02      	add	r7, sp, #8
 80033e2:	60f8      	str	r0, [r7, #12]
 80033e4:	4608      	mov	r0, r1
 80033e6:	4611      	mov	r1, r2
 80033e8:	461a      	mov	r2, r3
 80033ea:	4603      	mov	r3, r0
 80033ec:	817b      	strh	r3, [r7, #10]
 80033ee:	460b      	mov	r3, r1
 80033f0:	813b      	strh	r3, [r7, #8]
 80033f2:	4613      	mov	r3, r2
 80033f4:	80fb      	strh	r3, [r7, #6]
  /* Enable Acknowledge */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80033f6:	68fb      	ldr	r3, [r7, #12]
 80033f8:	681b      	ldr	r3, [r3, #0]
 80033fa:	681a      	ldr	r2, [r3, #0]
 80033fc:	68fb      	ldr	r3, [r7, #12]
 80033fe:	681b      	ldr	r3, [r3, #0]
 8003400:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003404:	601a      	str	r2, [r3, #0]

  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003406:	68fb      	ldr	r3, [r7, #12]
 8003408:	681b      	ldr	r3, [r3, #0]
 800340a:	681a      	ldr	r2, [r3, #0]
 800340c:	68fb      	ldr	r3, [r7, #12]
 800340e:	681b      	ldr	r3, [r3, #0]
 8003410:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003414:	601a      	str	r2, [r3, #0]

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003416:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003418:	9300      	str	r3, [sp, #0]
 800341a:	6a3b      	ldr	r3, [r7, #32]
 800341c:	2200      	movs	r2, #0
 800341e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8003422:	68f8      	ldr	r0, [r7, #12]
 8003424:	f000 f8c0 	bl	80035a8 <I2C_WaitOnFlagUntilTimeout>
 8003428:	4603      	mov	r3, r0
 800342a:	2b00      	cmp	r3, #0
 800342c:	d00c      	beq.n	8003448 <I2C_RequestMemoryRead+0x6c>
  {
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 800342e:	68fb      	ldr	r3, [r7, #12]
 8003430:	681b      	ldr	r3, [r3, #0]
 8003432:	681b      	ldr	r3, [r3, #0]
 8003434:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003438:	2b00      	cmp	r3, #0
 800343a:	d003      	beq.n	8003444 <I2C_RequestMemoryRead+0x68>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800343c:	68fb      	ldr	r3, [r7, #12]
 800343e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003442:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8003444:	2303      	movs	r3, #3
 8003446:	e0a9      	b.n	800359c <I2C_RequestMemoryRead+0x1c0>
  }

  /* Send slave address */
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8003448:	897b      	ldrh	r3, [r7, #10]
 800344a:	b2db      	uxtb	r3, r3
 800344c:	461a      	mov	r2, r3
 800344e:	68fb      	ldr	r3, [r7, #12]
 8003450:	681b      	ldr	r3, [r3, #0]
 8003452:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8003456:	611a      	str	r2, [r3, #16]

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003458:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800345a:	6a3a      	ldr	r2, [r7, #32]
 800345c:	4951      	ldr	r1, [pc, #324]	; (80035a4 <I2C_RequestMemoryRead+0x1c8>)
 800345e:	68f8      	ldr	r0, [r7, #12]
 8003460:	f000 f8f9 	bl	8003656 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003464:	4603      	mov	r3, r0
 8003466:	2b00      	cmp	r3, #0
 8003468:	d001      	beq.n	800346e <I2C_RequestMemoryRead+0x92>
  {
    return HAL_ERROR;
 800346a:	2301      	movs	r3, #1
 800346c:	e096      	b.n	800359c <I2C_RequestMemoryRead+0x1c0>
  }

  /* Clear ADDR flag */
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800346e:	2300      	movs	r3, #0
 8003470:	617b      	str	r3, [r7, #20]
 8003472:	68fb      	ldr	r3, [r7, #12]
 8003474:	681b      	ldr	r3, [r3, #0]
 8003476:	695b      	ldr	r3, [r3, #20]
 8003478:	617b      	str	r3, [r7, #20]
 800347a:	68fb      	ldr	r3, [r7, #12]
 800347c:	681b      	ldr	r3, [r3, #0]
 800347e:	699b      	ldr	r3, [r3, #24]
 8003480:	617b      	str	r3, [r7, #20]
 8003482:	697b      	ldr	r3, [r7, #20]

  /* Wait until TXE flag is set */
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003484:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003486:	6a39      	ldr	r1, [r7, #32]
 8003488:	68f8      	ldr	r0, [r7, #12]
 800348a:	f000 f963 	bl	8003754 <I2C_WaitOnTXEFlagUntilTimeout>
 800348e:	4603      	mov	r3, r0
 8003490:	2b00      	cmp	r3, #0
 8003492:	d00d      	beq.n	80034b0 <I2C_RequestMemoryRead+0xd4>
  {
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003494:	68fb      	ldr	r3, [r7, #12]
 8003496:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003498:	2b04      	cmp	r3, #4
 800349a:	d107      	bne.n	80034ac <I2C_RequestMemoryRead+0xd0>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800349c:	68fb      	ldr	r3, [r7, #12]
 800349e:	681b      	ldr	r3, [r3, #0]
 80034a0:	681a      	ldr	r2, [r3, #0]
 80034a2:	68fb      	ldr	r3, [r7, #12]
 80034a4:	681b      	ldr	r3, [r3, #0]
 80034a6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80034aa:	601a      	str	r2, [r3, #0]
    }
    return HAL_ERROR;
 80034ac:	2301      	movs	r3, #1
 80034ae:	e075      	b.n	800359c <I2C_RequestMemoryRead+0x1c0>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80034b0:	88fb      	ldrh	r3, [r7, #6]
 80034b2:	2b01      	cmp	r3, #1
 80034b4:	d105      	bne.n	80034c2 <I2C_RequestMemoryRead+0xe6>
  {
    /* Send Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80034b6:	893b      	ldrh	r3, [r7, #8]
 80034b8:	b2da      	uxtb	r2, r3
 80034ba:	68fb      	ldr	r3, [r7, #12]
 80034bc:	681b      	ldr	r3, [r3, #0]
 80034be:	611a      	str	r2, [r3, #16]
 80034c0:	e021      	b.n	8003506 <I2C_RequestMemoryRead+0x12a>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80034c2:	893b      	ldrh	r3, [r7, #8]
 80034c4:	0a1b      	lsrs	r3, r3, #8
 80034c6:	b29b      	uxth	r3, r3
 80034c8:	b2da      	uxtb	r2, r3
 80034ca:	68fb      	ldr	r3, [r7, #12]
 80034cc:	681b      	ldr	r3, [r3, #0]
 80034ce:	611a      	str	r2, [r3, #16]

    /* Wait until TXE flag is set */
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80034d0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80034d2:	6a39      	ldr	r1, [r7, #32]
 80034d4:	68f8      	ldr	r0, [r7, #12]
 80034d6:	f000 f93d 	bl	8003754 <I2C_WaitOnTXEFlagUntilTimeout>
 80034da:	4603      	mov	r3, r0
 80034dc:	2b00      	cmp	r3, #0
 80034de:	d00d      	beq.n	80034fc <I2C_RequestMemoryRead+0x120>
    {
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80034e0:	68fb      	ldr	r3, [r7, #12]
 80034e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80034e4:	2b04      	cmp	r3, #4
 80034e6:	d107      	bne.n	80034f8 <I2C_RequestMemoryRead+0x11c>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80034e8:	68fb      	ldr	r3, [r7, #12]
 80034ea:	681b      	ldr	r3, [r3, #0]
 80034ec:	681a      	ldr	r2, [r3, #0]
 80034ee:	68fb      	ldr	r3, [r7, #12]
 80034f0:	681b      	ldr	r3, [r3, #0]
 80034f2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80034f6:	601a      	str	r2, [r3, #0]
      }
      return HAL_ERROR;
 80034f8:	2301      	movs	r3, #1
 80034fa:	e04f      	b.n	800359c <I2C_RequestMemoryRead+0x1c0>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80034fc:	893b      	ldrh	r3, [r7, #8]
 80034fe:	b2da      	uxtb	r2, r3
 8003500:	68fb      	ldr	r3, [r7, #12]
 8003502:	681b      	ldr	r3, [r3, #0]
 8003504:	611a      	str	r2, [r3, #16]
  }

  /* Wait until TXE flag is set */
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003506:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003508:	6a39      	ldr	r1, [r7, #32]
 800350a:	68f8      	ldr	r0, [r7, #12]
 800350c:	f000 f922 	bl	8003754 <I2C_WaitOnTXEFlagUntilTimeout>
 8003510:	4603      	mov	r3, r0
 8003512:	2b00      	cmp	r3, #0
 8003514:	d00d      	beq.n	8003532 <I2C_RequestMemoryRead+0x156>
  {
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8003516:	68fb      	ldr	r3, [r7, #12]
 8003518:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800351a:	2b04      	cmp	r3, #4
 800351c:	d107      	bne.n	800352e <I2C_RequestMemoryRead+0x152>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800351e:	68fb      	ldr	r3, [r7, #12]
 8003520:	681b      	ldr	r3, [r3, #0]
 8003522:	681a      	ldr	r2, [r3, #0]
 8003524:	68fb      	ldr	r3, [r7, #12]
 8003526:	681b      	ldr	r3, [r3, #0]
 8003528:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800352c:	601a      	str	r2, [r3, #0]
    }
    return HAL_ERROR;
 800352e:	2301      	movs	r3, #1
 8003530:	e034      	b.n	800359c <I2C_RequestMemoryRead+0x1c0>
  }

  /* Generate Restart */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8003532:	68fb      	ldr	r3, [r7, #12]
 8003534:	681b      	ldr	r3, [r3, #0]
 8003536:	681a      	ldr	r2, [r3, #0]
 8003538:	68fb      	ldr	r3, [r7, #12]
 800353a:	681b      	ldr	r3, [r3, #0]
 800353c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003540:	601a      	str	r2, [r3, #0]

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8003542:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003544:	9300      	str	r3, [sp, #0]
 8003546:	6a3b      	ldr	r3, [r7, #32]
 8003548:	2200      	movs	r2, #0
 800354a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800354e:	68f8      	ldr	r0, [r7, #12]
 8003550:	f000 f82a 	bl	80035a8 <I2C_WaitOnFlagUntilTimeout>
 8003554:	4603      	mov	r3, r0
 8003556:	2b00      	cmp	r3, #0
 8003558:	d00c      	beq.n	8003574 <I2C_RequestMemoryRead+0x198>
  {
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 800355a:	68fb      	ldr	r3, [r7, #12]
 800355c:	681b      	ldr	r3, [r3, #0]
 800355e:	681b      	ldr	r3, [r3, #0]
 8003560:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003564:	2b00      	cmp	r3, #0
 8003566:	d003      	beq.n	8003570 <I2C_RequestMemoryRead+0x194>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8003568:	68fb      	ldr	r3, [r7, #12]
 800356a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800356e:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 8003570:	2303      	movs	r3, #3
 8003572:	e013      	b.n	800359c <I2C_RequestMemoryRead+0x1c0>
  }

  /* Send slave address */
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8003574:	897b      	ldrh	r3, [r7, #10]
 8003576:	b2db      	uxtb	r3, r3
 8003578:	f043 0301 	orr.w	r3, r3, #1
 800357c:	b2da      	uxtb	r2, r3
 800357e:	68fb      	ldr	r3, [r7, #12]
 8003580:	681b      	ldr	r3, [r3, #0]
 8003582:	611a      	str	r2, [r3, #16]

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8003584:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003586:	6a3a      	ldr	r2, [r7, #32]
 8003588:	4906      	ldr	r1, [pc, #24]	; (80035a4 <I2C_RequestMemoryRead+0x1c8>)
 800358a:	68f8      	ldr	r0, [r7, #12]
 800358c:	f000 f863 	bl	8003656 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003590:	4603      	mov	r3, r0
 8003592:	2b00      	cmp	r3, #0
 8003594:	d001      	beq.n	800359a <I2C_RequestMemoryRead+0x1be>
  {
    return HAL_ERROR;
 8003596:	2301      	movs	r3, #1
 8003598:	e000      	b.n	800359c <I2C_RequestMemoryRead+0x1c0>
  }

  return HAL_OK;
 800359a:	2300      	movs	r3, #0
}
 800359c:	4618      	mov	r0, r3
 800359e:	3718      	adds	r7, #24
 80035a0:	46bd      	mov	sp, r7
 80035a2:	bd80      	pop	{r7, pc}
 80035a4:	00010002 	.word	0x00010002

080035a8 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
{
 80035a8:	b580      	push	{r7, lr}
 80035aa:	b084      	sub	sp, #16
 80035ac:	af00      	add	r7, sp, #0
 80035ae:	60f8      	str	r0, [r7, #12]
 80035b0:	60b9      	str	r1, [r7, #8]
 80035b2:	603b      	str	r3, [r7, #0]
 80035b4:	4613      	mov	r3, r2
 80035b6:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80035b8:	e025      	b.n	8003606 <I2C_WaitOnFlagUntilTimeout+0x5e>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80035ba:	683b      	ldr	r3, [r7, #0]
 80035bc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80035c0:	d021      	beq.n	8003606 <I2C_WaitOnFlagUntilTimeout+0x5e>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80035c2:	f7fe faef 	bl	8001ba4 <HAL_GetTick>
 80035c6:	4602      	mov	r2, r0
 80035c8:	69bb      	ldr	r3, [r7, #24]
 80035ca:	1ad3      	subs	r3, r2, r3
 80035cc:	683a      	ldr	r2, [r7, #0]
 80035ce:	429a      	cmp	r2, r3
 80035d0:	d302      	bcc.n	80035d8 <I2C_WaitOnFlagUntilTimeout+0x30>
 80035d2:	683b      	ldr	r3, [r7, #0]
 80035d4:	2b00      	cmp	r3, #0
 80035d6:	d116      	bne.n	8003606 <I2C_WaitOnFlagUntilTimeout+0x5e>
      {
        hi2c->PreviousState     = I2C_STATE_NONE;
 80035d8:	68fb      	ldr	r3, [r7, #12]
 80035da:	2200      	movs	r2, #0
 80035dc:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80035de:	68fb      	ldr	r3, [r7, #12]
 80035e0:	2220      	movs	r2, #32
 80035e2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80035e6:	68fb      	ldr	r3, [r7, #12]
 80035e8:	2200      	movs	r2, #0
 80035ea:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80035ee:	68fb      	ldr	r3, [r7, #12]
 80035f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80035f2:	f043 0220 	orr.w	r2, r3, #32
 80035f6:	68fb      	ldr	r3, [r7, #12]
 80035f8:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80035fa:	68fb      	ldr	r3, [r7, #12]
 80035fc:	2200      	movs	r2, #0
 80035fe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 8003602:	2301      	movs	r3, #1
 8003604:	e023      	b.n	800364e <I2C_WaitOnFlagUntilTimeout+0xa6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8003606:	68bb      	ldr	r3, [r7, #8]
 8003608:	0c1b      	lsrs	r3, r3, #16
 800360a:	b2db      	uxtb	r3, r3
 800360c:	2b01      	cmp	r3, #1
 800360e:	d10d      	bne.n	800362c <I2C_WaitOnFlagUntilTimeout+0x84>
 8003610:	68fb      	ldr	r3, [r7, #12]
 8003612:	681b      	ldr	r3, [r3, #0]
 8003614:	695b      	ldr	r3, [r3, #20]
 8003616:	43da      	mvns	r2, r3
 8003618:	68bb      	ldr	r3, [r7, #8]
 800361a:	4013      	ands	r3, r2
 800361c:	b29b      	uxth	r3, r3
 800361e:	2b00      	cmp	r3, #0
 8003620:	bf0c      	ite	eq
 8003622:	2301      	moveq	r3, #1
 8003624:	2300      	movne	r3, #0
 8003626:	b2db      	uxtb	r3, r3
 8003628:	461a      	mov	r2, r3
 800362a:	e00c      	b.n	8003646 <I2C_WaitOnFlagUntilTimeout+0x9e>
 800362c:	68fb      	ldr	r3, [r7, #12]
 800362e:	681b      	ldr	r3, [r3, #0]
 8003630:	699b      	ldr	r3, [r3, #24]
 8003632:	43da      	mvns	r2, r3
 8003634:	68bb      	ldr	r3, [r7, #8]
 8003636:	4013      	ands	r3, r2
 8003638:	b29b      	uxth	r3, r3
 800363a:	2b00      	cmp	r3, #0
 800363c:	bf0c      	ite	eq
 800363e:	2301      	moveq	r3, #1
 8003640:	2300      	movne	r3, #0
 8003642:	b2db      	uxtb	r3, r3
 8003644:	461a      	mov	r2, r3
 8003646:	79fb      	ldrb	r3, [r7, #7]
 8003648:	429a      	cmp	r2, r3
 800364a:	d0b6      	beq.n	80035ba <I2C_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 800364c:	2300      	movs	r3, #0
}
 800364e:	4618      	mov	r0, r3
 8003650:	3710      	adds	r7, #16
 8003652:	46bd      	mov	sp, r7
 8003654:	bd80      	pop	{r7, pc}

08003656 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
{
 8003656:	b580      	push	{r7, lr}
 8003658:	b084      	sub	sp, #16
 800365a:	af00      	add	r7, sp, #0
 800365c:	60f8      	str	r0, [r7, #12]
 800365e:	60b9      	str	r1, [r7, #8]
 8003660:	607a      	str	r2, [r7, #4]
 8003662:	603b      	str	r3, [r7, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8003664:	e051      	b.n	800370a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8003666:	68fb      	ldr	r3, [r7, #12]
 8003668:	681b      	ldr	r3, [r3, #0]
 800366a:	695b      	ldr	r3, [r3, #20]
 800366c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003670:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003674:	d123      	bne.n	80036be <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8003676:	68fb      	ldr	r3, [r7, #12]
 8003678:	681b      	ldr	r3, [r3, #0]
 800367a:	681a      	ldr	r2, [r3, #0]
 800367c:	68fb      	ldr	r3, [r7, #12]
 800367e:	681b      	ldr	r3, [r3, #0]
 8003680:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003684:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8003686:	68fb      	ldr	r3, [r7, #12]
 8003688:	681b      	ldr	r3, [r3, #0]
 800368a:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 800368e:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 8003690:	68fb      	ldr	r3, [r7, #12]
 8003692:	2200      	movs	r2, #0
 8003694:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8003696:	68fb      	ldr	r3, [r7, #12]
 8003698:	2220      	movs	r2, #32
 800369a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800369e:	68fb      	ldr	r3, [r7, #12]
 80036a0:	2200      	movs	r2, #0
 80036a2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80036a6:	68fb      	ldr	r3, [r7, #12]
 80036a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80036aa:	f043 0204 	orr.w	r2, r3, #4
 80036ae:	68fb      	ldr	r3, [r7, #12]
 80036b0:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 80036b2:	68fb      	ldr	r3, [r7, #12]
 80036b4:	2200      	movs	r2, #0
 80036b6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 80036ba:	2301      	movs	r3, #1
 80036bc:	e046      	b.n	800374c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80036be:	687b      	ldr	r3, [r7, #4]
 80036c0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80036c4:	d021      	beq.n	800370a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80036c6:	f7fe fa6d 	bl	8001ba4 <HAL_GetTick>
 80036ca:	4602      	mov	r2, r0
 80036cc:	683b      	ldr	r3, [r7, #0]
 80036ce:	1ad3      	subs	r3, r2, r3
 80036d0:	687a      	ldr	r2, [r7, #4]
 80036d2:	429a      	cmp	r2, r3
 80036d4:	d302      	bcc.n	80036dc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 80036d6:	687b      	ldr	r3, [r7, #4]
 80036d8:	2b00      	cmp	r3, #0
 80036da:	d116      	bne.n	800370a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 80036dc:	68fb      	ldr	r3, [r7, #12]
 80036de:	2200      	movs	r2, #0
 80036e0:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80036e2:	68fb      	ldr	r3, [r7, #12]
 80036e4:	2220      	movs	r2, #32
 80036e6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80036ea:	68fb      	ldr	r3, [r7, #12]
 80036ec:	2200      	movs	r2, #0
 80036ee:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80036f2:	68fb      	ldr	r3, [r7, #12]
 80036f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80036f6:	f043 0220 	orr.w	r2, r3, #32
 80036fa:	68fb      	ldr	r3, [r7, #12]
 80036fc:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80036fe:	68fb      	ldr	r3, [r7, #12]
 8003700:	2200      	movs	r2, #0
 8003702:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 8003706:	2301      	movs	r3, #1
 8003708:	e020      	b.n	800374c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800370a:	68bb      	ldr	r3, [r7, #8]
 800370c:	0c1b      	lsrs	r3, r3, #16
 800370e:	b2db      	uxtb	r3, r3
 8003710:	2b01      	cmp	r3, #1
 8003712:	d10c      	bne.n	800372e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8003714:	68fb      	ldr	r3, [r7, #12]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	695b      	ldr	r3, [r3, #20]
 800371a:	43da      	mvns	r2, r3
 800371c:	68bb      	ldr	r3, [r7, #8]
 800371e:	4013      	ands	r3, r2
 8003720:	b29b      	uxth	r3, r3
 8003722:	2b00      	cmp	r3, #0
 8003724:	bf14      	ite	ne
 8003726:	2301      	movne	r3, #1
 8003728:	2300      	moveq	r3, #0
 800372a:	b2db      	uxtb	r3, r3
 800372c:	e00b      	b.n	8003746 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 800372e:	68fb      	ldr	r3, [r7, #12]
 8003730:	681b      	ldr	r3, [r3, #0]
 8003732:	699b      	ldr	r3, [r3, #24]
 8003734:	43da      	mvns	r2, r3
 8003736:	68bb      	ldr	r3, [r7, #8]
 8003738:	4013      	ands	r3, r2
 800373a:	b29b      	uxth	r3, r3
 800373c:	2b00      	cmp	r3, #0
 800373e:	bf14      	ite	ne
 8003740:	2301      	movne	r3, #1
 8003742:	2300      	moveq	r3, #0
 8003744:	b2db      	uxtb	r3, r3
 8003746:	2b00      	cmp	r3, #0
 8003748:	d18d      	bne.n	8003666 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
      }
    }
  }
  return HAL_OK;
 800374a:	2300      	movs	r3, #0
}
 800374c:	4618      	mov	r0, r3
 800374e:	3710      	adds	r7, #16
 8003750:	46bd      	mov	sp, r7
 8003752:	bd80      	pop	{r7, pc}

08003754 <I2C_WaitOnTXEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8003754:	b580      	push	{r7, lr}
 8003756:	b084      	sub	sp, #16
 8003758:	af00      	add	r7, sp, #0
 800375a:	60f8      	str	r0, [r7, #12]
 800375c:	60b9      	str	r1, [r7, #8]
 800375e:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8003760:	e02d      	b.n	80037be <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8003762:	68f8      	ldr	r0, [r7, #12]
 8003764:	f000 f8ce 	bl	8003904 <I2C_IsAcknowledgeFailed>
 8003768:	4603      	mov	r3, r0
 800376a:	2b00      	cmp	r3, #0
 800376c:	d001      	beq.n	8003772 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 800376e:	2301      	movs	r3, #1
 8003770:	e02d      	b.n	80037ce <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8003772:	68bb      	ldr	r3, [r7, #8]
 8003774:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003778:	d021      	beq.n	80037be <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800377a:	f7fe fa13 	bl	8001ba4 <HAL_GetTick>
 800377e:	4602      	mov	r2, r0
 8003780:	687b      	ldr	r3, [r7, #4]
 8003782:	1ad3      	subs	r3, r2, r3
 8003784:	68ba      	ldr	r2, [r7, #8]
 8003786:	429a      	cmp	r2, r3
 8003788:	d302      	bcc.n	8003790 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 800378a:	68bb      	ldr	r3, [r7, #8]
 800378c:	2b00      	cmp	r3, #0
 800378e:	d116      	bne.n	80037be <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 8003790:	68fb      	ldr	r3, [r7, #12]
 8003792:	2200      	movs	r2, #0
 8003794:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8003796:	68fb      	ldr	r3, [r7, #12]
 8003798:	2220      	movs	r2, #32
 800379a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800379e:	68fb      	ldr	r3, [r7, #12]
 80037a0:	2200      	movs	r2, #0
 80037a2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80037a6:	68fb      	ldr	r3, [r7, #12]
 80037a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80037aa:	f043 0220 	orr.w	r2, r3, #32
 80037ae:	68fb      	ldr	r3, [r7, #12]
 80037b0:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80037b2:	68fb      	ldr	r3, [r7, #12]
 80037b4:	2200      	movs	r2, #0
 80037b6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 80037ba:	2301      	movs	r3, #1
 80037bc:	e007      	b.n	80037ce <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80037be:	68fb      	ldr	r3, [r7, #12]
 80037c0:	681b      	ldr	r3, [r3, #0]
 80037c2:	695b      	ldr	r3, [r3, #20]
 80037c4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80037c8:	2b80      	cmp	r3, #128	; 0x80
 80037ca:	d1ca      	bne.n	8003762 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 80037cc:	2300      	movs	r3, #0
}
 80037ce:	4618      	mov	r0, r3
 80037d0:	3710      	adds	r7, #16
 80037d2:	46bd      	mov	sp, r7
 80037d4:	bd80      	pop	{r7, pc}

080037d6 <I2C_WaitOnBTFFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 80037d6:	b580      	push	{r7, lr}
 80037d8:	b084      	sub	sp, #16
 80037da:	af00      	add	r7, sp, #0
 80037dc:	60f8      	str	r0, [r7, #12]
 80037de:	60b9      	str	r1, [r7, #8]
 80037e0:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80037e2:	e02d      	b.n	8003840 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80037e4:	68f8      	ldr	r0, [r7, #12]
 80037e6:	f000 f88d 	bl	8003904 <I2C_IsAcknowledgeFailed>
 80037ea:	4603      	mov	r3, r0
 80037ec:	2b00      	cmp	r3, #0
 80037ee:	d001      	beq.n	80037f4 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 80037f0:	2301      	movs	r3, #1
 80037f2:	e02d      	b.n	8003850 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80037f4:	68bb      	ldr	r3, [r7, #8]
 80037f6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80037fa:	d021      	beq.n	8003840 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80037fc:	f7fe f9d2 	bl	8001ba4 <HAL_GetTick>
 8003800:	4602      	mov	r2, r0
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	1ad3      	subs	r3, r2, r3
 8003806:	68ba      	ldr	r2, [r7, #8]
 8003808:	429a      	cmp	r2, r3
 800380a:	d302      	bcc.n	8003812 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 800380c:	68bb      	ldr	r3, [r7, #8]
 800380e:	2b00      	cmp	r3, #0
 8003810:	d116      	bne.n	8003840 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 8003812:	68fb      	ldr	r3, [r7, #12]
 8003814:	2200      	movs	r2, #0
 8003816:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8003818:	68fb      	ldr	r3, [r7, #12]
 800381a:	2220      	movs	r2, #32
 800381c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003820:	68fb      	ldr	r3, [r7, #12]
 8003822:	2200      	movs	r2, #0
 8003824:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8003828:	68fb      	ldr	r3, [r7, #12]
 800382a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800382c:	f043 0220 	orr.w	r2, r3, #32
 8003830:	68fb      	ldr	r3, [r7, #12]
 8003832:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8003834:	68fb      	ldr	r3, [r7, #12]
 8003836:	2200      	movs	r2, #0
 8003838:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 800383c:	2301      	movs	r3, #1
 800383e:	e007      	b.n	8003850 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8003840:	68fb      	ldr	r3, [r7, #12]
 8003842:	681b      	ldr	r3, [r3, #0]
 8003844:	695b      	ldr	r3, [r3, #20]
 8003846:	f003 0304 	and.w	r3, r3, #4
 800384a:	2b04      	cmp	r3, #4
 800384c:	d1ca      	bne.n	80037e4 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 800384e:	2300      	movs	r3, #0
}
 8003850:	4618      	mov	r0, r3
 8003852:	3710      	adds	r7, #16
 8003854:	46bd      	mov	sp, r7
 8003856:	bd80      	pop	{r7, pc}

08003858 <I2C_WaitOnRXNEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8003858:	b580      	push	{r7, lr}
 800385a:	b084      	sub	sp, #16
 800385c:	af00      	add	r7, sp, #0
 800385e:	60f8      	str	r0, [r7, #12]
 8003860:	60b9      	str	r1, [r7, #8]
 8003862:	607a      	str	r2, [r7, #4]

  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8003864:	e042      	b.n	80038ec <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
  {
    /* Check if a STOPF is detected */
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8003866:	68fb      	ldr	r3, [r7, #12]
 8003868:	681b      	ldr	r3, [r3, #0]
 800386a:	695b      	ldr	r3, [r3, #20]
 800386c:	f003 0310 	and.w	r3, r3, #16
 8003870:	2b10      	cmp	r3, #16
 8003872:	d119      	bne.n	80038a8 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8003874:	68fb      	ldr	r3, [r7, #12]
 8003876:	681b      	ldr	r3, [r3, #0]
 8003878:	f06f 0210 	mvn.w	r2, #16
 800387c:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 800387e:	68fb      	ldr	r3, [r7, #12]
 8003880:	2200      	movs	r2, #0
 8003882:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8003884:	68fb      	ldr	r3, [r7, #12]
 8003886:	2220      	movs	r2, #32
 8003888:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800388c:	68fb      	ldr	r3, [r7, #12]
 800388e:	2200      	movs	r2, #0
 8003890:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8003894:	68fb      	ldr	r3, [r7, #12]
 8003896:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003898:	68fb      	ldr	r3, [r7, #12]
 800389a:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 800389c:	68fb      	ldr	r3, [r7, #12]
 800389e:	2200      	movs	r2, #0
 80038a0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 80038a4:	2301      	movs	r3, #1
 80038a6:	e029      	b.n	80038fc <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80038a8:	f7fe f97c 	bl	8001ba4 <HAL_GetTick>
 80038ac:	4602      	mov	r2, r0
 80038ae:	687b      	ldr	r3, [r7, #4]
 80038b0:	1ad3      	subs	r3, r2, r3
 80038b2:	68ba      	ldr	r2, [r7, #8]
 80038b4:	429a      	cmp	r2, r3
 80038b6:	d302      	bcc.n	80038be <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 80038b8:	68bb      	ldr	r3, [r7, #8]
 80038ba:	2b00      	cmp	r3, #0
 80038bc:	d116      	bne.n	80038ec <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
    {
      hi2c->PreviousState       = I2C_STATE_NONE;
 80038be:	68fb      	ldr	r3, [r7, #12]
 80038c0:	2200      	movs	r2, #0
 80038c2:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80038c4:	68fb      	ldr	r3, [r7, #12]
 80038c6:	2220      	movs	r2, #32
 80038c8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80038cc:	68fb      	ldr	r3, [r7, #12]
 80038ce:	2200      	movs	r2, #0
 80038d0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80038d4:	68fb      	ldr	r3, [r7, #12]
 80038d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80038d8:	f043 0220 	orr.w	r2, r3, #32
 80038dc:	68fb      	ldr	r3, [r7, #12]
 80038de:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 80038e0:	68fb      	ldr	r3, [r7, #12]
 80038e2:	2200      	movs	r2, #0
 80038e4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 80038e8:	2301      	movs	r3, #1
 80038ea:	e007      	b.n	80038fc <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80038ec:	68fb      	ldr	r3, [r7, #12]
 80038ee:	681b      	ldr	r3, [r3, #0]
 80038f0:	695b      	ldr	r3, [r3, #20]
 80038f2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80038f6:	2b40      	cmp	r3, #64	; 0x40
 80038f8:	d1b5      	bne.n	8003866 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
    }
  }
  return HAL_OK;
 80038fa:	2300      	movs	r3, #0
}
 80038fc:	4618      	mov	r0, r3
 80038fe:	3710      	adds	r7, #16
 8003900:	46bd      	mov	sp, r7
 8003902:	bd80      	pop	{r7, pc}

08003904 <I2C_IsAcknowledgeFailed>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
 8003904:	b480      	push	{r7}
 8003906:	b083      	sub	sp, #12
 8003908:	af00      	add	r7, sp, #0
 800390a:	6078      	str	r0, [r7, #4]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800390c:	687b      	ldr	r3, [r7, #4]
 800390e:	681b      	ldr	r3, [r3, #0]
 8003910:	695b      	ldr	r3, [r3, #20]
 8003912:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003916:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800391a:	d11b      	bne.n	8003954 <I2C_IsAcknowledgeFailed+0x50>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8003924:	615a      	str	r2, [r3, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
 8003926:	687b      	ldr	r3, [r7, #4]
 8003928:	2200      	movs	r2, #0
 800392a:	631a      	str	r2, [r3, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800392c:	687b      	ldr	r3, [r7, #4]
 800392e:	2220      	movs	r2, #32
 8003930:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8003934:	687b      	ldr	r3, [r7, #4]
 8003936:	2200      	movs	r2, #0
 8003938:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800393c:	687b      	ldr	r3, [r7, #4]
 800393e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003940:	f043 0204 	orr.w	r2, r3, #4
 8003944:	687b      	ldr	r3, [r7, #4]
 8003946:	641a      	str	r2, [r3, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003948:	687b      	ldr	r3, [r7, #4]
 800394a:	2200      	movs	r2, #0
 800394c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_ERROR;
 8003950:	2301      	movs	r3, #1
 8003952:	e000      	b.n	8003956 <I2C_IsAcknowledgeFailed+0x52>
  }
  return HAL_OK;
 8003954:	2300      	movs	r3, #0
}
 8003956:	4618      	mov	r0, r3
 8003958:	370c      	adds	r7, #12
 800395a:	46bd      	mov	sp, r7
 800395c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003960:	4770      	bx	lr

08003962 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8003962:	b480      	push	{r7}
 8003964:	b083      	sub	sp, #12
 8003966:	af00      	add	r7, sp, #0
 8003968:	6078      	str	r0, [r7, #4]
 800396a:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800396c:	687b      	ldr	r3, [r7, #4]
 800396e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003972:	b2db      	uxtb	r3, r3
 8003974:	2b20      	cmp	r3, #32
 8003976:	d129      	bne.n	80039cc <HAL_I2CEx_ConfigAnalogFilter+0x6a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8003978:	687b      	ldr	r3, [r7, #4]
 800397a:	2224      	movs	r2, #36	; 0x24
 800397c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8003980:	687b      	ldr	r3, [r7, #4]
 8003982:	681b      	ldr	r3, [r3, #0]
 8003984:	681a      	ldr	r2, [r3, #0]
 8003986:	687b      	ldr	r3, [r7, #4]
 8003988:	681b      	ldr	r3, [r3, #0]
 800398a:	f022 0201 	bic.w	r2, r2, #1
 800398e:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8003990:	687b      	ldr	r3, [r7, #4]
 8003992:	681b      	ldr	r3, [r3, #0]
 8003994:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003996:	687b      	ldr	r3, [r7, #4]
 8003998:	681b      	ldr	r3, [r3, #0]
 800399a:	f022 0210 	bic.w	r2, r2, #16
 800399e:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 80039a0:	687b      	ldr	r3, [r7, #4]
 80039a2:	681b      	ldr	r3, [r3, #0]
 80039a4:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80039a6:	687b      	ldr	r3, [r7, #4]
 80039a8:	681b      	ldr	r3, [r3, #0]
 80039aa:	683a      	ldr	r2, [r7, #0]
 80039ac:	430a      	orrs	r2, r1
 80039ae:	625a      	str	r2, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 80039b0:	687b      	ldr	r3, [r7, #4]
 80039b2:	681b      	ldr	r3, [r3, #0]
 80039b4:	681a      	ldr	r2, [r3, #0]
 80039b6:	687b      	ldr	r3, [r7, #4]
 80039b8:	681b      	ldr	r3, [r3, #0]
 80039ba:	f042 0201 	orr.w	r2, r2, #1
 80039be:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80039c0:	687b      	ldr	r3, [r7, #4]
 80039c2:	2220      	movs	r2, #32
 80039c4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    return HAL_OK;
 80039c8:	2300      	movs	r3, #0
 80039ca:	e000      	b.n	80039ce <HAL_I2CEx_ConfigAnalogFilter+0x6c>
  }
  else
  {
    return HAL_BUSY;
 80039cc:	2302      	movs	r3, #2
  }
}
 80039ce:	4618      	mov	r0, r3
 80039d0:	370c      	adds	r7, #12
 80039d2:	46bd      	mov	sp, r7
 80039d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039d8:	4770      	bx	lr

080039da <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80039da:	b480      	push	{r7}
 80039dc:	b085      	sub	sp, #20
 80039de:	af00      	add	r7, sp, #0
 80039e0:	6078      	str	r0, [r7, #4]
 80039e2:	6039      	str	r1, [r7, #0]
  uint16_t tmpreg = 0;
 80039e4:	2300      	movs	r3, #0
 80039e6:	81fb      	strh	r3, [r7, #14]

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80039e8:	687b      	ldr	r3, [r7, #4]
 80039ea:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80039ee:	b2db      	uxtb	r3, r3
 80039f0:	2b20      	cmp	r3, #32
 80039f2:	d12a      	bne.n	8003a4a <HAL_I2CEx_ConfigDigitalFilter+0x70>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 80039f4:	687b      	ldr	r3, [r7, #4]
 80039f6:	2224      	movs	r2, #36	; 0x24
 80039f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80039fc:	687b      	ldr	r3, [r7, #4]
 80039fe:	681b      	ldr	r3, [r3, #0]
 8003a00:	681a      	ldr	r2, [r3, #0]
 8003a02:	687b      	ldr	r3, [r7, #4]
 8003a04:	681b      	ldr	r3, [r3, #0]
 8003a06:	f022 0201 	bic.w	r2, r2, #1
 8003a0a:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8003a0c:	687b      	ldr	r3, [r7, #4]
 8003a0e:	681b      	ldr	r3, [r3, #0]
 8003a10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a12:	81fb      	strh	r3, [r7, #14]

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8003a14:	89fb      	ldrh	r3, [r7, #14]
 8003a16:	f023 030f 	bic.w	r3, r3, #15
 8003a1a:	81fb      	strh	r3, [r7, #14]

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8003a1c:	683b      	ldr	r3, [r7, #0]
 8003a1e:	b29a      	uxth	r2, r3
 8003a20:	89fb      	ldrh	r3, [r7, #14]
 8003a22:	4313      	orrs	r3, r2
 8003a24:	81fb      	strh	r3, [r7, #14]

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8003a26:	687b      	ldr	r3, [r7, #4]
 8003a28:	681b      	ldr	r3, [r3, #0]
 8003a2a:	89fa      	ldrh	r2, [r7, #14]
 8003a2c:	625a      	str	r2, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8003a2e:	687b      	ldr	r3, [r7, #4]
 8003a30:	681b      	ldr	r3, [r3, #0]
 8003a32:	681a      	ldr	r2, [r3, #0]
 8003a34:	687b      	ldr	r3, [r7, #4]
 8003a36:	681b      	ldr	r3, [r3, #0]
 8003a38:	f042 0201 	orr.w	r2, r2, #1
 8003a3c:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	2220      	movs	r2, #32
 8003a42:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    return HAL_OK;
 8003a46:	2300      	movs	r3, #0
 8003a48:	e000      	b.n	8003a4c <HAL_I2CEx_ConfigDigitalFilter+0x72>
  }
  else
  {
    return HAL_BUSY;
 8003a4a:	2302      	movs	r3, #2
  }
}
 8003a4c:	4618      	mov	r0, r3
 8003a4e:	3714      	adds	r7, #20
 8003a50:	46bd      	mov	sp, r7
 8003a52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a56:	4770      	bx	lr

08003a58 <HAL_LTDC_Init>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_Init(LTDC_HandleTypeDef *hltdc)
{
 8003a58:	b580      	push	{r7, lr}
 8003a5a:	b084      	sub	sp, #16
 8003a5c:	af00      	add	r7, sp, #0
 8003a5e:	6078      	str	r0, [r7, #4]
  uint32_t tmp, tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	2b00      	cmp	r3, #0
 8003a64:	d101      	bne.n	8003a6a <HAL_LTDC_Init+0x12>
  {
    return HAL_ERROR;
 8003a66:	2301      	movs	r3, #1
 8003a68:	e0bf      	b.n	8003bea <HAL_LTDC_Init+0x192>
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8003a6a:	687b      	ldr	r3, [r7, #4]
 8003a6c:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8003a70:	b2db      	uxtb	r3, r3
 8003a72:	2b00      	cmp	r3, #0
 8003a74:	d106      	bne.n	8003a84 <HAL_LTDC_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hltdc->Lock = HAL_UNLOCKED;
 8003a76:	687b      	ldr	r3, [r7, #4]
 8003a78:	2200      	movs	r2, #0
 8003a7a:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
    /* Init the low level hardware */
    HAL_LTDC_MspInit(hltdc);
 8003a7e:	6878      	ldr	r0, [r7, #4]
 8003a80:	f7fd fba2 	bl	80011c8 <HAL_LTDC_MspInit>
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8003a84:	687b      	ldr	r3, [r7, #4]
 8003a86:	2202      	movs	r2, #2
 8003a88:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8003a8c:	687b      	ldr	r3, [r7, #4]
 8003a8e:	681b      	ldr	r3, [r3, #0]
 8003a90:	699a      	ldr	r2, [r3, #24]
 8003a92:	687b      	ldr	r3, [r7, #4]
 8003a94:	681b      	ldr	r3, [r3, #0]
 8003a96:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8003a9a:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8003a9c:	687b      	ldr	r3, [r7, #4]
 8003a9e:	681b      	ldr	r3, [r3, #0]
 8003aa0:	6999      	ldr	r1, [r3, #24]
 8003aa2:	687b      	ldr	r3, [r7, #4]
 8003aa4:	685a      	ldr	r2, [r3, #4]
 8003aa6:	687b      	ldr	r3, [r7, #4]
 8003aa8:	689b      	ldr	r3, [r3, #8]
 8003aaa:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8003aac:	687b      	ldr	r3, [r7, #4]
 8003aae:	68db      	ldr	r3, [r3, #12]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8003ab0:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8003ab2:	687b      	ldr	r3, [r7, #4]
 8003ab4:	691b      	ldr	r3, [r3, #16]
 8003ab6:	431a      	orrs	r2, r3
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8003ab8:	687b      	ldr	r3, [r7, #4]
 8003aba:	681b      	ldr	r3, [r3, #0]
 8003abc:	430a      	orrs	r2, r1
 8003abe:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8003ac0:	687b      	ldr	r3, [r7, #4]
 8003ac2:	681b      	ldr	r3, [r3, #0]
 8003ac4:	6899      	ldr	r1, [r3, #8]
 8003ac6:	687b      	ldr	r3, [r7, #4]
 8003ac8:	681a      	ldr	r2, [r3, #0]
 8003aca:	4b4a      	ldr	r3, [pc, #296]	; (8003bf4 <HAL_LTDC_Init+0x19c>)
 8003acc:	400b      	ands	r3, r1
 8003ace:	6093      	str	r3, [r2, #8]
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8003ad0:	687b      	ldr	r3, [r7, #4]
 8003ad2:	695b      	ldr	r3, [r3, #20]
 8003ad4:	041b      	lsls	r3, r3, #16
 8003ad6:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8003ad8:	687b      	ldr	r3, [r7, #4]
 8003ada:	681b      	ldr	r3, [r3, #0]
 8003adc:	6899      	ldr	r1, [r3, #8]
 8003ade:	687b      	ldr	r3, [r7, #4]
 8003ae0:	699a      	ldr	r2, [r3, #24]
 8003ae2:	68fb      	ldr	r3, [r7, #12]
 8003ae4:	431a      	orrs	r2, r3
 8003ae6:	687b      	ldr	r3, [r7, #4]
 8003ae8:	681b      	ldr	r3, [r3, #0]
 8003aea:	430a      	orrs	r2, r1
 8003aec:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8003aee:	687b      	ldr	r3, [r7, #4]
 8003af0:	681b      	ldr	r3, [r3, #0]
 8003af2:	68d9      	ldr	r1, [r3, #12]
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	681a      	ldr	r2, [r3, #0]
 8003af8:	4b3e      	ldr	r3, [pc, #248]	; (8003bf4 <HAL_LTDC_Init+0x19c>)
 8003afa:	400b      	ands	r3, r1
 8003afc:	60d3      	str	r3, [r2, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8003afe:	687b      	ldr	r3, [r7, #4]
 8003b00:	69db      	ldr	r3, [r3, #28]
 8003b02:	041b      	lsls	r3, r3, #16
 8003b04:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	681b      	ldr	r3, [r3, #0]
 8003b0a:	68d9      	ldr	r1, [r3, #12]
 8003b0c:	687b      	ldr	r3, [r7, #4]
 8003b0e:	6a1a      	ldr	r2, [r3, #32]
 8003b10:	68fb      	ldr	r3, [r7, #12]
 8003b12:	431a      	orrs	r2, r3
 8003b14:	687b      	ldr	r3, [r7, #4]
 8003b16:	681b      	ldr	r3, [r3, #0]
 8003b18:	430a      	orrs	r2, r1
 8003b1a:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8003b1c:	687b      	ldr	r3, [r7, #4]
 8003b1e:	681b      	ldr	r3, [r3, #0]
 8003b20:	6919      	ldr	r1, [r3, #16]
 8003b22:	687b      	ldr	r3, [r7, #4]
 8003b24:	681a      	ldr	r2, [r3, #0]
 8003b26:	4b33      	ldr	r3, [pc, #204]	; (8003bf4 <HAL_LTDC_Init+0x19c>)
 8003b28:	400b      	ands	r3, r1
 8003b2a:	6113      	str	r3, [r2, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8003b2c:	687b      	ldr	r3, [r7, #4]
 8003b2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b30:	041b      	lsls	r3, r3, #16
 8003b32:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8003b34:	687b      	ldr	r3, [r7, #4]
 8003b36:	681b      	ldr	r3, [r3, #0]
 8003b38:	6919      	ldr	r1, [r3, #16]
 8003b3a:	687b      	ldr	r3, [r7, #4]
 8003b3c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8003b3e:	68fb      	ldr	r3, [r7, #12]
 8003b40:	431a      	orrs	r2, r3
 8003b42:	687b      	ldr	r3, [r7, #4]
 8003b44:	681b      	ldr	r3, [r3, #0]
 8003b46:	430a      	orrs	r2, r1
 8003b48:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8003b4a:	687b      	ldr	r3, [r7, #4]
 8003b4c:	681b      	ldr	r3, [r3, #0]
 8003b4e:	6959      	ldr	r1, [r3, #20]
 8003b50:	687b      	ldr	r3, [r7, #4]
 8003b52:	681a      	ldr	r2, [r3, #0]
 8003b54:	4b27      	ldr	r3, [pc, #156]	; (8003bf4 <HAL_LTDC_Init+0x19c>)
 8003b56:	400b      	ands	r3, r1
 8003b58:	6153      	str	r3, [r2, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8003b5a:	687b      	ldr	r3, [r7, #4]
 8003b5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003b5e:	041b      	lsls	r3, r3, #16
 8003b60:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8003b62:	687b      	ldr	r3, [r7, #4]
 8003b64:	681b      	ldr	r3, [r3, #0]
 8003b66:	6959      	ldr	r1, [r3, #20]
 8003b68:	687b      	ldr	r3, [r7, #4]
 8003b6a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003b6c:	68fb      	ldr	r3, [r7, #12]
 8003b6e:	431a      	orrs	r2, r3
 8003b70:	687b      	ldr	r3, [r7, #4]
 8003b72:	681b      	ldr	r3, [r3, #0]
 8003b74:	430a      	orrs	r2, r1
 8003b76:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8003b78:	687b      	ldr	r3, [r7, #4]
 8003b7a:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8003b7e:	021b      	lsls	r3, r3, #8
 8003b80:	60fb      	str	r3, [r7, #12]
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8003b82:	687b      	ldr	r3, [r7, #4]
 8003b84:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
 8003b88:	041b      	lsls	r3, r3, #16
 8003b8a:	60bb      	str	r3, [r7, #8]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8003b8c:	687b      	ldr	r3, [r7, #4]
 8003b8e:	681b      	ldr	r3, [r3, #0]
 8003b90:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003b92:	687b      	ldr	r3, [r7, #4]
 8003b94:	681b      	ldr	r3, [r3, #0]
 8003b96:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 8003b9a:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8003b9c:	687b      	ldr	r3, [r7, #4]
 8003b9e:	681b      	ldr	r3, [r3, #0]
 8003ba0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8003ba2:	68ba      	ldr	r2, [r7, #8]
 8003ba4:	68fb      	ldr	r3, [r7, #12]
 8003ba6:	4313      	orrs	r3, r2
 8003ba8:	687a      	ldr	r2, [r7, #4]
 8003baa:	f892 2034 	ldrb.w	r2, [r2, #52]	; 0x34
 8003bae:	431a      	orrs	r2, r3
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	681b      	ldr	r3, [r3, #0]
 8003bb4:	430a      	orrs	r2, r1
 8003bb6:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	681b      	ldr	r3, [r3, #0]
 8003bbc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003bbe:	687b      	ldr	r3, [r7, #4]
 8003bc0:	681b      	ldr	r3, [r3, #0]
 8003bc2:	f042 0206 	orr.w	r2, r2, #6
 8003bc6:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 8003bc8:	687b      	ldr	r3, [r7, #4]
 8003bca:	681b      	ldr	r3, [r3, #0]
 8003bcc:	699a      	ldr	r2, [r3, #24]
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	681b      	ldr	r3, [r3, #0]
 8003bd2:	f042 0201 	orr.w	r2, r2, #1
 8003bd6:	619a      	str	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8003bd8:	687b      	ldr	r3, [r7, #4]
 8003bda:	2200      	movs	r2, #0
 8003bdc:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8003be0:	687b      	ldr	r3, [r7, #4]
 8003be2:	2201      	movs	r2, #1
 8003be4:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  return HAL_OK;
 8003be8:	2300      	movs	r3, #0
}
 8003bea:	4618      	mov	r0, r3
 8003bec:	3710      	adds	r7, #16
 8003bee:	46bd      	mov	sp, r7
 8003bf0:	bd80      	pop	{r7, pc}
 8003bf2:	bf00      	nop
 8003bf4:	f000f800 	.word	0xf000f800

08003bf8 <HAL_LTDC_IRQHandler>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
 8003bf8:	b580      	push	{r7, lr}
 8003bfa:	b084      	sub	sp, #16
 8003bfc:	af00      	add	r7, sp, #0
 8003bfe:	6078      	str	r0, [r7, #4]
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8003c00:	687b      	ldr	r3, [r7, #4]
 8003c02:	681b      	ldr	r3, [r3, #0]
 8003c04:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003c06:	60fb      	str	r3, [r7, #12]
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8003c08:	687b      	ldr	r3, [r7, #4]
 8003c0a:	681b      	ldr	r3, [r3, #0]
 8003c0c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003c0e:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8003c10:	68fb      	ldr	r3, [r7, #12]
 8003c12:	f003 0304 	and.w	r3, r3, #4
 8003c16:	2b00      	cmp	r3, #0
 8003c18:	d023      	beq.n	8003c62 <HAL_LTDC_IRQHandler+0x6a>
 8003c1a:	68bb      	ldr	r3, [r7, #8]
 8003c1c:	f003 0304 	and.w	r3, r3, #4
 8003c20:	2b00      	cmp	r3, #0
 8003c22:	d01e      	beq.n	8003c62 <HAL_LTDC_IRQHandler+0x6a>
  {
    /* Disable the transfer Error interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8003c24:	687b      	ldr	r3, [r7, #4]
 8003c26:	681b      	ldr	r3, [r3, #0]
 8003c28:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003c2a:	687b      	ldr	r3, [r7, #4]
 8003c2c:	681b      	ldr	r3, [r3, #0]
 8003c2e:	f022 0204 	bic.w	r2, r2, #4
 8003c32:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the transfer error flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8003c34:	687b      	ldr	r3, [r7, #4]
 8003c36:	681b      	ldr	r3, [r3, #0]
 8003c38:	2204      	movs	r2, #4
 8003c3a:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8003c3c:	687b      	ldr	r3, [r7, #4]
 8003c3e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8003c42:	f043 0201 	orr.w	r2, r3, #1
 8003c46:	687b      	ldr	r3, [r7, #4]
 8003c48:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8003c4c:	687b      	ldr	r3, [r7, #4]
 8003c4e:	2204      	movs	r2, #4
 8003c50:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8003c54:	687b      	ldr	r3, [r7, #4]
 8003c56:	2200      	movs	r2, #0
 8003c58:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 8003c5c:	6878      	ldr	r0, [r7, #4]
 8003c5e:	f000 f86f 	bl	8003d40 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8003c62:	68fb      	ldr	r3, [r7, #12]
 8003c64:	f003 0302 	and.w	r3, r3, #2
 8003c68:	2b00      	cmp	r3, #0
 8003c6a:	d023      	beq.n	8003cb4 <HAL_LTDC_IRQHandler+0xbc>
 8003c6c:	68bb      	ldr	r3, [r7, #8]
 8003c6e:	f003 0302 	and.w	r3, r3, #2
 8003c72:	2b00      	cmp	r3, #0
 8003c74:	d01e      	beq.n	8003cb4 <HAL_LTDC_IRQHandler+0xbc>
  {
    /* Disable the FIFO underrun interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	681b      	ldr	r3, [r3, #0]
 8003c7a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003c7c:	687b      	ldr	r3, [r7, #4]
 8003c7e:	681b      	ldr	r3, [r3, #0]
 8003c80:	f022 0202 	bic.w	r2, r2, #2
 8003c84:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the FIFO underrun flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	681b      	ldr	r3, [r3, #0]
 8003c8a:	2202      	movs	r2, #2
 8003c8c:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8003c8e:	687b      	ldr	r3, [r7, #4]
 8003c90:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8003c94:	f043 0202 	orr.w	r2, r3, #2
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8003c9e:	687b      	ldr	r3, [r7, #4]
 8003ca0:	2204      	movs	r2, #4
 8003ca2:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8003ca6:	687b      	ldr	r3, [r7, #4]
 8003ca8:	2200      	movs	r2, #0
 8003caa:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 8003cae:	6878      	ldr	r0, [r7, #4]
 8003cb0:	f000 f846 	bl	8003d40 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8003cb4:	68fb      	ldr	r3, [r7, #12]
 8003cb6:	f003 0301 	and.w	r3, r3, #1
 8003cba:	2b00      	cmp	r3, #0
 8003cbc:	d01b      	beq.n	8003cf6 <HAL_LTDC_IRQHandler+0xfe>
 8003cbe:	68bb      	ldr	r3, [r7, #8]
 8003cc0:	f003 0301 	and.w	r3, r3, #1
 8003cc4:	2b00      	cmp	r3, #0
 8003cc6:	d016      	beq.n	8003cf6 <HAL_LTDC_IRQHandler+0xfe>
  {
    /* Disable the Line interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8003cc8:	687b      	ldr	r3, [r7, #4]
 8003cca:	681b      	ldr	r3, [r3, #0]
 8003ccc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003cce:	687b      	ldr	r3, [r7, #4]
 8003cd0:	681b      	ldr	r3, [r3, #0]
 8003cd2:	f022 0201 	bic.w	r2, r2, #1
 8003cd6:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the Line interrupt flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8003cd8:	687b      	ldr	r3, [r7, #4]
 8003cda:	681b      	ldr	r3, [r3, #0]
 8003cdc:	2201      	movs	r2, #1
 8003cde:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8003ce0:	687b      	ldr	r3, [r7, #4]
 8003ce2:	2201      	movs	r2, #1
 8003ce4:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8003ce8:	687b      	ldr	r3, [r7, #4]
 8003cea:	2200      	movs	r2, #0
 8003cec:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered Line Event callback */
    hltdc->LineEventCallback(hltdc);
#else
    /*Call Legacy Line Event callback */
    HAL_LTDC_LineEventCallback(hltdc);
 8003cf0:	6878      	ldr	r0, [r7, #4]
 8003cf2:	f006 fd99 	bl	800a828 <HAL_LTDC_LineEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8003cf6:	68fb      	ldr	r3, [r7, #12]
 8003cf8:	f003 0308 	and.w	r3, r3, #8
 8003cfc:	2b00      	cmp	r3, #0
 8003cfe:	d01b      	beq.n	8003d38 <HAL_LTDC_IRQHandler+0x140>
 8003d00:	68bb      	ldr	r3, [r7, #8]
 8003d02:	f003 0308 	and.w	r3, r3, #8
 8003d06:	2b00      	cmp	r3, #0
 8003d08:	d016      	beq.n	8003d38 <HAL_LTDC_IRQHandler+0x140>
  {
    /* Disable the register reload interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8003d0a:	687b      	ldr	r3, [r7, #4]
 8003d0c:	681b      	ldr	r3, [r3, #0]
 8003d0e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003d10:	687b      	ldr	r3, [r7, #4]
 8003d12:	681b      	ldr	r3, [r3, #0]
 8003d14:	f022 0208 	bic.w	r2, r2, #8
 8003d18:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the register reload flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8003d1a:	687b      	ldr	r3, [r7, #4]
 8003d1c:	681b      	ldr	r3, [r3, #0]
 8003d1e:	2208      	movs	r2, #8
 8003d20:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8003d22:	687b      	ldr	r3, [r7, #4]
 8003d24:	2201      	movs	r2, #1
 8003d26:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8003d2a:	687b      	ldr	r3, [r7, #4]
 8003d2c:	2200      	movs	r2, #0
 8003d2e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered reload Event callback */
    hltdc->ReloadEventCallback(hltdc);
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
 8003d32:	6878      	ldr	r0, [r7, #4]
 8003d34:	f000 f80e 	bl	8003d54 <HAL_LTDC_ReloadEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 8003d38:	bf00      	nop
 8003d3a:	3710      	adds	r7, #16
 8003d3c:	46bd      	mov	sp, r7
 8003d3e:	bd80      	pop	{r7, pc}

08003d40 <HAL_LTDC_ErrorCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
{
 8003d40:	b480      	push	{r7}
 8003d42:	b083      	sub	sp, #12
 8003d44:	af00      	add	r7, sp, #0
 8003d46:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ErrorCallback could be implemented in the user file
   */
}
 8003d48:	bf00      	nop
 8003d4a:	370c      	adds	r7, #12
 8003d4c:	46bd      	mov	sp, r7
 8003d4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d52:	4770      	bx	lr

08003d54 <HAL_LTDC_ReloadEventCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
{
 8003d54:	b480      	push	{r7}
 8003d56:	b083      	sub	sp, #12
 8003d58:	af00      	add	r7, sp, #0
 8003d5a:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ReloadEvenCallback could be implemented in the user file
   */
}
 8003d5c:	bf00      	nop
 8003d5e:	370c      	adds	r7, #12
 8003d60:	46bd      	mov	sp, r7
 8003d62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d66:	4770      	bx	lr

08003d68 <HAL_LTDC_ConfigLayer>:
  *                    This parameter can be one of the following values:
  *                    LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ConfigLayer(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8003d68:	b5b0      	push	{r4, r5, r7, lr}
 8003d6a:	b084      	sub	sp, #16
 8003d6c:	af00      	add	r7, sp, #0
 8003d6e:	60f8      	str	r0, [r7, #12]
 8003d70:	60b9      	str	r1, [r7, #8]
 8003d72:	607a      	str	r2, [r7, #4]
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8003d74:	68fb      	ldr	r3, [r7, #12]
 8003d76:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8003d7a:	2b01      	cmp	r3, #1
 8003d7c:	d101      	bne.n	8003d82 <HAL_LTDC_ConfigLayer+0x1a>
 8003d7e:	2302      	movs	r3, #2
 8003d80:	e02c      	b.n	8003ddc <HAL_LTDC_ConfigLayer+0x74>
 8003d82:	68fb      	ldr	r3, [r7, #12]
 8003d84:	2201      	movs	r2, #1
 8003d86:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8003d8a:	68fb      	ldr	r3, [r7, #12]
 8003d8c:	2202      	movs	r2, #2
 8003d8e:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8003d92:	68fa      	ldr	r2, [r7, #12]
 8003d94:	687b      	ldr	r3, [r7, #4]
 8003d96:	2134      	movs	r1, #52	; 0x34
 8003d98:	fb01 f303 	mul.w	r3, r1, r3
 8003d9c:	4413      	add	r3, r2
 8003d9e:	f103 0238 	add.w	r2, r3, #56	; 0x38
 8003da2:	68bb      	ldr	r3, [r7, #8]
 8003da4:	4614      	mov	r4, r2
 8003da6:	461d      	mov	r5, r3
 8003da8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003daa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003dac:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003dae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003db0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003db2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003db4:	682b      	ldr	r3, [r5, #0]
 8003db6:	6023      	str	r3, [r4, #0]

  /* Configure the LTDC Layer */
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8003db8:	687a      	ldr	r2, [r7, #4]
 8003dba:	68b9      	ldr	r1, [r7, #8]
 8003dbc:	68f8      	ldr	r0, [r7, #12]
 8003dbe:	f000 f849 	bl	8003e54 <LTDC_SetConfig>

  /* Set the Immediate Reload type */
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8003dc2:	68fb      	ldr	r3, [r7, #12]
 8003dc4:	681b      	ldr	r3, [r3, #0]
 8003dc6:	2201      	movs	r2, #1
 8003dc8:	625a      	str	r2, [r3, #36]	; 0x24

  /* Initialize the LTDC state*/
  hltdc->State  = HAL_LTDC_STATE_READY;
 8003dca:	68fb      	ldr	r3, [r7, #12]
 8003dcc:	2201      	movs	r2, #1
 8003dce:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 8003dd2:	68fb      	ldr	r3, [r7, #12]
 8003dd4:	2200      	movs	r2, #0
 8003dd6:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 8003dda:	2300      	movs	r3, #0
}
 8003ddc:	4618      	mov	r0, r3
 8003dde:	3710      	adds	r7, #16
 8003de0:	46bd      	mov	sp, r7
 8003de2:	bdb0      	pop	{r4, r5, r7, pc}

08003de4 <HAL_LTDC_ProgramLineEvent>:
  * @param  Line    Line Interrupt Position.
  * @note   User application may resort to HAL_LTDC_LineEventCallback() at line interrupt generation.
  * @retval  HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ProgramLineEvent(LTDC_HandleTypeDef *hltdc, uint32_t Line)
{
 8003de4:	b480      	push	{r7}
 8003de6:	b083      	sub	sp, #12
 8003de8:	af00      	add	r7, sp, #0
 8003dea:	6078      	str	r0, [r7, #4]
 8003dec:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_LTDC_LIPOS(Line));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8003dee:	687b      	ldr	r3, [r7, #4]
 8003df0:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8003df4:	2b01      	cmp	r3, #1
 8003df6:	d101      	bne.n	8003dfc <HAL_LTDC_ProgramLineEvent+0x18>
 8003df8:	2302      	movs	r3, #2
 8003dfa:	e023      	b.n	8003e44 <HAL_LTDC_ProgramLineEvent+0x60>
 8003dfc:	687b      	ldr	r3, [r7, #4]
 8003dfe:	2201      	movs	r2, #1
 8003e00:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8003e04:	687b      	ldr	r3, [r7, #4]
 8003e06:	2202      	movs	r2, #2
 8003e08:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Disable the Line interrupt */
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8003e0c:	687b      	ldr	r3, [r7, #4]
 8003e0e:	681b      	ldr	r3, [r3, #0]
 8003e10:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003e12:	687b      	ldr	r3, [r7, #4]
 8003e14:	681b      	ldr	r3, [r3, #0]
 8003e16:	f022 0201 	bic.w	r2, r2, #1
 8003e1a:	635a      	str	r2, [r3, #52]	; 0x34

  /* Set the Line Interrupt position */
  LTDC->LIPCR = (uint32_t)Line;
 8003e1c:	4a0c      	ldr	r2, [pc, #48]	; (8003e50 <HAL_LTDC_ProgramLineEvent+0x6c>)
 8003e1e:	683b      	ldr	r3, [r7, #0]
 8003e20:	6413      	str	r3, [r2, #64]	; 0x40

  /* Enable the Line interrupt */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8003e22:	687b      	ldr	r3, [r7, #4]
 8003e24:	681b      	ldr	r3, [r3, #0]
 8003e26:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003e28:	687b      	ldr	r3, [r7, #4]
 8003e2a:	681b      	ldr	r3, [r3, #0]
 8003e2c:	f042 0201 	orr.w	r2, r2, #1
 8003e30:	635a      	str	r2, [r3, #52]	; 0x34

  /* Change the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8003e32:	687b      	ldr	r3, [r7, #4]
 8003e34:	2201      	movs	r2, #1
 8003e36:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	2200      	movs	r2, #0
 8003e3e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 8003e42:	2300      	movs	r3, #0
}
 8003e44:	4618      	mov	r0, r3
 8003e46:	370c      	adds	r7, #12
 8003e48:	46bd      	mov	sp, r7
 8003e4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e4e:	4770      	bx	lr
 8003e50:	40016800 	.word	0x40016800

08003e54 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8003e54:	b480      	push	{r7}
 8003e56:	b089      	sub	sp, #36	; 0x24
 8003e58:	af00      	add	r7, sp, #0
 8003e5a:	60f8      	str	r0, [r7, #12]
 8003e5c:	60b9      	str	r1, [r7, #8]
 8003e5e:	607a      	str	r2, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8003e60:	68bb      	ldr	r3, [r7, #8]
 8003e62:	685a      	ldr	r2, [r3, #4]
 8003e64:	68fb      	ldr	r3, [r7, #12]
 8003e66:	681b      	ldr	r3, [r3, #0]
 8003e68:	68db      	ldr	r3, [r3, #12]
 8003e6a:	0c1b      	lsrs	r3, r3, #16
 8003e6c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003e70:	4413      	add	r3, r2
 8003e72:	041b      	lsls	r3, r3, #16
 8003e74:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8003e76:	68fb      	ldr	r3, [r7, #12]
 8003e78:	681b      	ldr	r3, [r3, #0]
 8003e7a:	461a      	mov	r2, r3
 8003e7c:	687b      	ldr	r3, [r7, #4]
 8003e7e:	01db      	lsls	r3, r3, #7
 8003e80:	4413      	add	r3, r2
 8003e82:	3384      	adds	r3, #132	; 0x84
 8003e84:	685b      	ldr	r3, [r3, #4]
 8003e86:	68fa      	ldr	r2, [r7, #12]
 8003e88:	6812      	ldr	r2, [r2, #0]
 8003e8a:	4611      	mov	r1, r2
 8003e8c:	687a      	ldr	r2, [r7, #4]
 8003e8e:	01d2      	lsls	r2, r2, #7
 8003e90:	440a      	add	r2, r1
 8003e92:	3284      	adds	r2, #132	; 0x84
 8003e94:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8003e98:	6053      	str	r3, [r2, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8003e9a:	68bb      	ldr	r3, [r7, #8]
 8003e9c:	681a      	ldr	r2, [r3, #0]
 8003e9e:	68fb      	ldr	r3, [r7, #12]
 8003ea0:	681b      	ldr	r3, [r3, #0]
 8003ea2:	68db      	ldr	r3, [r3, #12]
 8003ea4:	0c1b      	lsrs	r3, r3, #16
 8003ea6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003eaa:	4413      	add	r3, r2
 8003eac:	1c5a      	adds	r2, r3, #1
 8003eae:	68fb      	ldr	r3, [r7, #12]
 8003eb0:	681b      	ldr	r3, [r3, #0]
 8003eb2:	4619      	mov	r1, r3
 8003eb4:	687b      	ldr	r3, [r7, #4]
 8003eb6:	01db      	lsls	r3, r3, #7
 8003eb8:	440b      	add	r3, r1
 8003eba:	3384      	adds	r3, #132	; 0x84
 8003ebc:	4619      	mov	r1, r3
 8003ebe:	69fb      	ldr	r3, [r7, #28]
 8003ec0:	4313      	orrs	r3, r2
 8003ec2:	604b      	str	r3, [r1, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8003ec4:	68bb      	ldr	r3, [r7, #8]
 8003ec6:	68da      	ldr	r2, [r3, #12]
 8003ec8:	68fb      	ldr	r3, [r7, #12]
 8003eca:	681b      	ldr	r3, [r3, #0]
 8003ecc:	68db      	ldr	r3, [r3, #12]
 8003ece:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003ed2:	4413      	add	r3, r2
 8003ed4:	041b      	lsls	r3, r3, #16
 8003ed6:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8003ed8:	68fb      	ldr	r3, [r7, #12]
 8003eda:	681b      	ldr	r3, [r3, #0]
 8003edc:	461a      	mov	r2, r3
 8003ede:	687b      	ldr	r3, [r7, #4]
 8003ee0:	01db      	lsls	r3, r3, #7
 8003ee2:	4413      	add	r3, r2
 8003ee4:	3384      	adds	r3, #132	; 0x84
 8003ee6:	689b      	ldr	r3, [r3, #8]
 8003ee8:	68fa      	ldr	r2, [r7, #12]
 8003eea:	6812      	ldr	r2, [r2, #0]
 8003eec:	4611      	mov	r1, r2
 8003eee:	687a      	ldr	r2, [r7, #4]
 8003ef0:	01d2      	lsls	r2, r2, #7
 8003ef2:	440a      	add	r2, r1
 8003ef4:	3284      	adds	r2, #132	; 0x84
 8003ef6:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8003efa:	6093      	str	r3, [r2, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8003efc:	68bb      	ldr	r3, [r7, #8]
 8003efe:	689a      	ldr	r2, [r3, #8]
 8003f00:	68fb      	ldr	r3, [r7, #12]
 8003f02:	681b      	ldr	r3, [r3, #0]
 8003f04:	68db      	ldr	r3, [r3, #12]
 8003f06:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8003f0a:	4413      	add	r3, r2
 8003f0c:	1c5a      	adds	r2, r3, #1
 8003f0e:	68fb      	ldr	r3, [r7, #12]
 8003f10:	681b      	ldr	r3, [r3, #0]
 8003f12:	4619      	mov	r1, r3
 8003f14:	687b      	ldr	r3, [r7, #4]
 8003f16:	01db      	lsls	r3, r3, #7
 8003f18:	440b      	add	r3, r1
 8003f1a:	3384      	adds	r3, #132	; 0x84
 8003f1c:	4619      	mov	r1, r3
 8003f1e:	69fb      	ldr	r3, [r7, #28]
 8003f20:	4313      	orrs	r3, r2
 8003f22:	608b      	str	r3, [r1, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8003f24:	68fb      	ldr	r3, [r7, #12]
 8003f26:	681b      	ldr	r3, [r3, #0]
 8003f28:	461a      	mov	r2, r3
 8003f2a:	687b      	ldr	r3, [r7, #4]
 8003f2c:	01db      	lsls	r3, r3, #7
 8003f2e:	4413      	add	r3, r2
 8003f30:	3384      	adds	r3, #132	; 0x84
 8003f32:	691b      	ldr	r3, [r3, #16]
 8003f34:	68fa      	ldr	r2, [r7, #12]
 8003f36:	6812      	ldr	r2, [r2, #0]
 8003f38:	4611      	mov	r1, r2
 8003f3a:	687a      	ldr	r2, [r7, #4]
 8003f3c:	01d2      	lsls	r2, r2, #7
 8003f3e:	440a      	add	r2, r1
 8003f40:	3284      	adds	r2, #132	; 0x84
 8003f42:	f023 0307 	bic.w	r3, r3, #7
 8003f46:	6113      	str	r3, [r2, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8003f48:	68fb      	ldr	r3, [r7, #12]
 8003f4a:	681b      	ldr	r3, [r3, #0]
 8003f4c:	461a      	mov	r2, r3
 8003f4e:	687b      	ldr	r3, [r7, #4]
 8003f50:	01db      	lsls	r3, r3, #7
 8003f52:	4413      	add	r3, r2
 8003f54:	3384      	adds	r3, #132	; 0x84
 8003f56:	461a      	mov	r2, r3
 8003f58:	68bb      	ldr	r3, [r7, #8]
 8003f5a:	691b      	ldr	r3, [r3, #16]
 8003f5c:	6113      	str	r3, [r2, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8003f5e:	68bb      	ldr	r3, [r7, #8]
 8003f60:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 8003f64:	021b      	lsls	r3, r3, #8
 8003f66:	61fb      	str	r3, [r7, #28]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8003f68:	68bb      	ldr	r3, [r7, #8]
 8003f6a:	f893 3032 	ldrb.w	r3, [r3, #50]	; 0x32
 8003f6e:	041b      	lsls	r3, r3, #16
 8003f70:	61bb      	str	r3, [r7, #24]
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8003f72:	68bb      	ldr	r3, [r7, #8]
 8003f74:	699b      	ldr	r3, [r3, #24]
 8003f76:	061b      	lsls	r3, r3, #24
 8003f78:	617b      	str	r3, [r7, #20]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8003f7a:	68fb      	ldr	r3, [r7, #12]
 8003f7c:	681b      	ldr	r3, [r3, #0]
 8003f7e:	461a      	mov	r2, r3
 8003f80:	687b      	ldr	r3, [r7, #4]
 8003f82:	01db      	lsls	r3, r3, #7
 8003f84:	4413      	add	r3, r2
 8003f86:	3384      	adds	r3, #132	; 0x84
 8003f88:	699b      	ldr	r3, [r3, #24]
 8003f8a:	68fb      	ldr	r3, [r7, #12]
 8003f8c:	681b      	ldr	r3, [r3, #0]
 8003f8e:	461a      	mov	r2, r3
 8003f90:	687b      	ldr	r3, [r7, #4]
 8003f92:	01db      	lsls	r3, r3, #7
 8003f94:	4413      	add	r3, r2
 8003f96:	3384      	adds	r3, #132	; 0x84
 8003f98:	461a      	mov	r2, r3
 8003f9a:	2300      	movs	r3, #0
 8003f9c:	6193      	str	r3, [r2, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8003f9e:	68bb      	ldr	r3, [r7, #8]
 8003fa0:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8003fa4:	461a      	mov	r2, r3
 8003fa6:	69fb      	ldr	r3, [r7, #28]
 8003fa8:	431a      	orrs	r2, r3
 8003faa:	69bb      	ldr	r3, [r7, #24]
 8003fac:	431a      	orrs	r2, r3
 8003fae:	68fb      	ldr	r3, [r7, #12]
 8003fb0:	681b      	ldr	r3, [r3, #0]
 8003fb2:	4619      	mov	r1, r3
 8003fb4:	687b      	ldr	r3, [r7, #4]
 8003fb6:	01db      	lsls	r3, r3, #7
 8003fb8:	440b      	add	r3, r1
 8003fba:	3384      	adds	r3, #132	; 0x84
 8003fbc:	4619      	mov	r1, r3
 8003fbe:	697b      	ldr	r3, [r7, #20]
 8003fc0:	4313      	orrs	r3, r2
 8003fc2:	618b      	str	r3, [r1, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8003fc4:	68fb      	ldr	r3, [r7, #12]
 8003fc6:	681b      	ldr	r3, [r3, #0]
 8003fc8:	461a      	mov	r2, r3
 8003fca:	687b      	ldr	r3, [r7, #4]
 8003fcc:	01db      	lsls	r3, r3, #7
 8003fce:	4413      	add	r3, r2
 8003fd0:	3384      	adds	r3, #132	; 0x84
 8003fd2:	695b      	ldr	r3, [r3, #20]
 8003fd4:	68fa      	ldr	r2, [r7, #12]
 8003fd6:	6812      	ldr	r2, [r2, #0]
 8003fd8:	4611      	mov	r1, r2
 8003fda:	687a      	ldr	r2, [r7, #4]
 8003fdc:	01d2      	lsls	r2, r2, #7
 8003fde:	440a      	add	r2, r1
 8003fe0:	3284      	adds	r2, #132	; 0x84
 8003fe2:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8003fe6:	6153      	str	r3, [r2, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8003fe8:	68fb      	ldr	r3, [r7, #12]
 8003fea:	681b      	ldr	r3, [r3, #0]
 8003fec:	461a      	mov	r2, r3
 8003fee:	687b      	ldr	r3, [r7, #4]
 8003ff0:	01db      	lsls	r3, r3, #7
 8003ff2:	4413      	add	r3, r2
 8003ff4:	3384      	adds	r3, #132	; 0x84
 8003ff6:	461a      	mov	r2, r3
 8003ff8:	68bb      	ldr	r3, [r7, #8]
 8003ffa:	695b      	ldr	r3, [r3, #20]
 8003ffc:	6153      	str	r3, [r2, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8003ffe:	68fb      	ldr	r3, [r7, #12]
 8004000:	681b      	ldr	r3, [r3, #0]
 8004002:	461a      	mov	r2, r3
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	01db      	lsls	r3, r3, #7
 8004008:	4413      	add	r3, r2
 800400a:	3384      	adds	r3, #132	; 0x84
 800400c:	69db      	ldr	r3, [r3, #28]
 800400e:	68fa      	ldr	r2, [r7, #12]
 8004010:	6812      	ldr	r2, [r2, #0]
 8004012:	4611      	mov	r1, r2
 8004014:	687a      	ldr	r2, [r7, #4]
 8004016:	01d2      	lsls	r2, r2, #7
 8004018:	440a      	add	r2, r1
 800401a:	3284      	adds	r2, #132	; 0x84
 800401c:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8004020:	f023 0307 	bic.w	r3, r3, #7
 8004024:	61d3      	str	r3, [r2, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8004026:	68bb      	ldr	r3, [r7, #8]
 8004028:	69da      	ldr	r2, [r3, #28]
 800402a:	68bb      	ldr	r3, [r7, #8]
 800402c:	6a1b      	ldr	r3, [r3, #32]
 800402e:	68f9      	ldr	r1, [r7, #12]
 8004030:	6809      	ldr	r1, [r1, #0]
 8004032:	4608      	mov	r0, r1
 8004034:	6879      	ldr	r1, [r7, #4]
 8004036:	01c9      	lsls	r1, r1, #7
 8004038:	4401      	add	r1, r0
 800403a:	3184      	adds	r1, #132	; 0x84
 800403c:	4313      	orrs	r3, r2
 800403e:	61cb      	str	r3, [r1, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8004040:	68fb      	ldr	r3, [r7, #12]
 8004042:	681b      	ldr	r3, [r3, #0]
 8004044:	461a      	mov	r2, r3
 8004046:	687b      	ldr	r3, [r7, #4]
 8004048:	01db      	lsls	r3, r3, #7
 800404a:	4413      	add	r3, r2
 800404c:	3384      	adds	r3, #132	; 0x84
 800404e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004050:	68fb      	ldr	r3, [r7, #12]
 8004052:	681b      	ldr	r3, [r3, #0]
 8004054:	461a      	mov	r2, r3
 8004056:	687b      	ldr	r3, [r7, #4]
 8004058:	01db      	lsls	r3, r3, #7
 800405a:	4413      	add	r3, r2
 800405c:	3384      	adds	r3, #132	; 0x84
 800405e:	461a      	mov	r2, r3
 8004060:	2300      	movs	r3, #0
 8004062:	6293      	str	r3, [r2, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8004064:	68fb      	ldr	r3, [r7, #12]
 8004066:	681b      	ldr	r3, [r3, #0]
 8004068:	461a      	mov	r2, r3
 800406a:	687b      	ldr	r3, [r7, #4]
 800406c:	01db      	lsls	r3, r3, #7
 800406e:	4413      	add	r3, r2
 8004070:	3384      	adds	r3, #132	; 0x84
 8004072:	461a      	mov	r2, r3
 8004074:	68bb      	ldr	r3, [r7, #8]
 8004076:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004078:	6293      	str	r3, [r2, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800407a:	68bb      	ldr	r3, [r7, #8]
 800407c:	691b      	ldr	r3, [r3, #16]
 800407e:	2b00      	cmp	r3, #0
 8004080:	d102      	bne.n	8004088 <LTDC_SetConfig+0x234>
  {
    tmp = 4U;
 8004082:	2304      	movs	r3, #4
 8004084:	61fb      	str	r3, [r7, #28]
 8004086:	e01b      	b.n	80040c0 <LTDC_SetConfig+0x26c>
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8004088:	68bb      	ldr	r3, [r7, #8]
 800408a:	691b      	ldr	r3, [r3, #16]
 800408c:	2b01      	cmp	r3, #1
 800408e:	d102      	bne.n	8004096 <LTDC_SetConfig+0x242>
  {
    tmp = 3U;
 8004090:	2303      	movs	r3, #3
 8004092:	61fb      	str	r3, [r7, #28]
 8004094:	e014      	b.n	80040c0 <LTDC_SetConfig+0x26c>
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8004096:	68bb      	ldr	r3, [r7, #8]
 8004098:	691b      	ldr	r3, [r3, #16]
 800409a:	2b04      	cmp	r3, #4
 800409c:	d00b      	beq.n	80040b6 <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 800409e:	68bb      	ldr	r3, [r7, #8]
 80040a0:	691b      	ldr	r3, [r3, #16]
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80040a2:	2b02      	cmp	r3, #2
 80040a4:	d007      	beq.n	80040b6 <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 80040a6:	68bb      	ldr	r3, [r7, #8]
 80040a8:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 80040aa:	2b03      	cmp	r3, #3
 80040ac:	d003      	beq.n	80040b6 <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
 80040ae:	68bb      	ldr	r3, [r7, #8]
 80040b0:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 80040b2:	2b07      	cmp	r3, #7
 80040b4:	d102      	bne.n	80040bc <LTDC_SetConfig+0x268>
  {
    tmp = 2U;
 80040b6:	2302      	movs	r3, #2
 80040b8:	61fb      	str	r3, [r7, #28]
 80040ba:	e001      	b.n	80040c0 <LTDC_SetConfig+0x26c>
  }
  else
  {
    tmp = 1U;
 80040bc:	2301      	movs	r3, #1
 80040be:	61fb      	str	r3, [r7, #28]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80040c0:	68fb      	ldr	r3, [r7, #12]
 80040c2:	681b      	ldr	r3, [r3, #0]
 80040c4:	461a      	mov	r2, r3
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	01db      	lsls	r3, r3, #7
 80040ca:	4413      	add	r3, r2
 80040cc:	3384      	adds	r3, #132	; 0x84
 80040ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80040d0:	68fa      	ldr	r2, [r7, #12]
 80040d2:	6812      	ldr	r2, [r2, #0]
 80040d4:	4611      	mov	r1, r2
 80040d6:	687a      	ldr	r2, [r7, #4]
 80040d8:	01d2      	lsls	r2, r2, #7
 80040da:	440a      	add	r2, r1
 80040dc:	3284      	adds	r2, #132	; 0x84
 80040de:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 80040e2:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80040e4:	68bb      	ldr	r3, [r7, #8]
 80040e6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80040e8:	69fa      	ldr	r2, [r7, #28]
 80040ea:	fb02 f303 	mul.w	r3, r2, r3
 80040ee:	041a      	lsls	r2, r3, #16
 80040f0:	68bb      	ldr	r3, [r7, #8]
 80040f2:	6859      	ldr	r1, [r3, #4]
 80040f4:	68bb      	ldr	r3, [r7, #8]
 80040f6:	681b      	ldr	r3, [r3, #0]
 80040f8:	1acb      	subs	r3, r1, r3
 80040fa:	69f9      	ldr	r1, [r7, #28]
 80040fc:	fb01 f303 	mul.w	r3, r1, r3
 8004100:	3303      	adds	r3, #3
 8004102:	68f9      	ldr	r1, [r7, #12]
 8004104:	6809      	ldr	r1, [r1, #0]
 8004106:	4608      	mov	r0, r1
 8004108:	6879      	ldr	r1, [r7, #4]
 800410a:	01c9      	lsls	r1, r1, #7
 800410c:	4401      	add	r1, r0
 800410e:	3184      	adds	r1, #132	; 0x84
 8004110:	4313      	orrs	r3, r2
 8004112:	62cb      	str	r3, [r1, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8004114:	68fb      	ldr	r3, [r7, #12]
 8004116:	681b      	ldr	r3, [r3, #0]
 8004118:	461a      	mov	r2, r3
 800411a:	687b      	ldr	r3, [r7, #4]
 800411c:	01db      	lsls	r3, r3, #7
 800411e:	4413      	add	r3, r2
 8004120:	3384      	adds	r3, #132	; 0x84
 8004122:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004124:	68fa      	ldr	r2, [r7, #12]
 8004126:	6812      	ldr	r2, [r2, #0]
 8004128:	4611      	mov	r1, r2
 800412a:	687a      	ldr	r2, [r7, #4]
 800412c:	01d2      	lsls	r2, r2, #7
 800412e:	440a      	add	r2, r1
 8004130:	3284      	adds	r2, #132	; 0x84
 8004132:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8004136:	f023 0307 	bic.w	r3, r3, #7
 800413a:	6313      	str	r3, [r2, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800413c:	68fb      	ldr	r3, [r7, #12]
 800413e:	681b      	ldr	r3, [r3, #0]
 8004140:	461a      	mov	r2, r3
 8004142:	687b      	ldr	r3, [r7, #4]
 8004144:	01db      	lsls	r3, r3, #7
 8004146:	4413      	add	r3, r2
 8004148:	3384      	adds	r3, #132	; 0x84
 800414a:	461a      	mov	r2, r3
 800414c:	68bb      	ldr	r3, [r7, #8]
 800414e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004150:	6313      	str	r3, [r2, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8004152:	68fb      	ldr	r3, [r7, #12]
 8004154:	681b      	ldr	r3, [r3, #0]
 8004156:	461a      	mov	r2, r3
 8004158:	687b      	ldr	r3, [r7, #4]
 800415a:	01db      	lsls	r3, r3, #7
 800415c:	4413      	add	r3, r2
 800415e:	3384      	adds	r3, #132	; 0x84
 8004160:	681b      	ldr	r3, [r3, #0]
 8004162:	68fa      	ldr	r2, [r7, #12]
 8004164:	6812      	ldr	r2, [r2, #0]
 8004166:	4611      	mov	r1, r2
 8004168:	687a      	ldr	r2, [r7, #4]
 800416a:	01d2      	lsls	r2, r2, #7
 800416c:	440a      	add	r2, r1
 800416e:	3284      	adds	r2, #132	; 0x84
 8004170:	f043 0301 	orr.w	r3, r3, #1
 8004174:	6013      	str	r3, [r2, #0]
}
 8004176:	bf00      	nop
 8004178:	3724      	adds	r7, #36	; 0x24
 800417a:	46bd      	mov	sp, r7
 800417c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004180:	4770      	bx	lr
	...

08004184 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8004184:	b580      	push	{r7, lr}
 8004186:	b086      	sub	sp, #24
 8004188:	af00      	add	r7, sp, #0
 800418a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800418c:	687b      	ldr	r3, [r7, #4]
 800418e:	2b00      	cmp	r3, #0
 8004190:	d101      	bne.n	8004196 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8004192:	2301      	movs	r3, #1
 8004194:	e25b      	b.n	800464e <HAL_RCC_OscConfig+0x4ca>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8004196:	687b      	ldr	r3, [r7, #4]
 8004198:	681b      	ldr	r3, [r3, #0]
 800419a:	f003 0301 	and.w	r3, r3, #1
 800419e:	2b00      	cmp	r3, #0
 80041a0:	d075      	beq.n	800428e <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80041a2:	4ba3      	ldr	r3, [pc, #652]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 80041a4:	689b      	ldr	r3, [r3, #8]
 80041a6:	f003 030c 	and.w	r3, r3, #12
 80041aa:	2b04      	cmp	r3, #4
 80041ac:	d00c      	beq.n	80041c8 <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80041ae:	4ba0      	ldr	r3, [pc, #640]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 80041b0:	689b      	ldr	r3, [r3, #8]
 80041b2:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 80041b6:	2b08      	cmp	r3, #8
 80041b8:	d112      	bne.n	80041e0 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80041ba:	4b9d      	ldr	r3, [pc, #628]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 80041bc:	685b      	ldr	r3, [r3, #4]
 80041be:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80041c2:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80041c6:	d10b      	bne.n	80041e0 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80041c8:	4b99      	ldr	r3, [pc, #612]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 80041ca:	681b      	ldr	r3, [r3, #0]
 80041cc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80041d0:	2b00      	cmp	r3, #0
 80041d2:	d05b      	beq.n	800428c <HAL_RCC_OscConfig+0x108>
 80041d4:	687b      	ldr	r3, [r7, #4]
 80041d6:	685b      	ldr	r3, [r3, #4]
 80041d8:	2b00      	cmp	r3, #0
 80041da:	d157      	bne.n	800428c <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 80041dc:	2301      	movs	r3, #1
 80041de:	e236      	b.n	800464e <HAL_RCC_OscConfig+0x4ca>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80041e0:	687b      	ldr	r3, [r7, #4]
 80041e2:	685b      	ldr	r3, [r3, #4]
 80041e4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80041e8:	d106      	bne.n	80041f8 <HAL_RCC_OscConfig+0x74>
 80041ea:	4b91      	ldr	r3, [pc, #580]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 80041ec:	681b      	ldr	r3, [r3, #0]
 80041ee:	4a90      	ldr	r2, [pc, #576]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 80041f0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80041f4:	6013      	str	r3, [r2, #0]
 80041f6:	e01d      	b.n	8004234 <HAL_RCC_OscConfig+0xb0>
 80041f8:	687b      	ldr	r3, [r7, #4]
 80041fa:	685b      	ldr	r3, [r3, #4]
 80041fc:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004200:	d10c      	bne.n	800421c <HAL_RCC_OscConfig+0x98>
 8004202:	4b8b      	ldr	r3, [pc, #556]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 8004204:	681b      	ldr	r3, [r3, #0]
 8004206:	4a8a      	ldr	r2, [pc, #552]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 8004208:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800420c:	6013      	str	r3, [r2, #0]
 800420e:	4b88      	ldr	r3, [pc, #544]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 8004210:	681b      	ldr	r3, [r3, #0]
 8004212:	4a87      	ldr	r2, [pc, #540]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 8004214:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004218:	6013      	str	r3, [r2, #0]
 800421a:	e00b      	b.n	8004234 <HAL_RCC_OscConfig+0xb0>
 800421c:	4b84      	ldr	r3, [pc, #528]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 800421e:	681b      	ldr	r3, [r3, #0]
 8004220:	4a83      	ldr	r2, [pc, #524]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 8004222:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004226:	6013      	str	r3, [r2, #0]
 8004228:	4b81      	ldr	r3, [pc, #516]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 800422a:	681b      	ldr	r3, [r3, #0]
 800422c:	4a80      	ldr	r2, [pc, #512]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 800422e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004232:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8004234:	687b      	ldr	r3, [r7, #4]
 8004236:	685b      	ldr	r3, [r3, #4]
 8004238:	2b00      	cmp	r3, #0
 800423a:	d013      	beq.n	8004264 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800423c:	f7fd fcb2 	bl	8001ba4 <HAL_GetTick>
 8004240:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004242:	e008      	b.n	8004256 <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8004244:	f7fd fcae 	bl	8001ba4 <HAL_GetTick>
 8004248:	4602      	mov	r2, r0
 800424a:	693b      	ldr	r3, [r7, #16]
 800424c:	1ad3      	subs	r3, r2, r3
 800424e:	2b64      	cmp	r3, #100	; 0x64
 8004250:	d901      	bls.n	8004256 <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 8004252:	2303      	movs	r3, #3
 8004254:	e1fb      	b.n	800464e <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004256:	4b76      	ldr	r3, [pc, #472]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 8004258:	681b      	ldr	r3, [r3, #0]
 800425a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800425e:	2b00      	cmp	r3, #0
 8004260:	d0f0      	beq.n	8004244 <HAL_RCC_OscConfig+0xc0>
 8004262:	e014      	b.n	800428e <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004264:	f7fd fc9e 	bl	8001ba4 <HAL_GetTick>
 8004268:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800426a:	e008      	b.n	800427e <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800426c:	f7fd fc9a 	bl	8001ba4 <HAL_GetTick>
 8004270:	4602      	mov	r2, r0
 8004272:	693b      	ldr	r3, [r7, #16]
 8004274:	1ad3      	subs	r3, r2, r3
 8004276:	2b64      	cmp	r3, #100	; 0x64
 8004278:	d901      	bls.n	800427e <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 800427a:	2303      	movs	r3, #3
 800427c:	e1e7      	b.n	800464e <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800427e:	4b6c      	ldr	r3, [pc, #432]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 8004280:	681b      	ldr	r3, [r3, #0]
 8004282:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004286:	2b00      	cmp	r3, #0
 8004288:	d1f0      	bne.n	800426c <HAL_RCC_OscConfig+0xe8>
 800428a:	e000      	b.n	800428e <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800428c:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800428e:	687b      	ldr	r3, [r7, #4]
 8004290:	681b      	ldr	r3, [r3, #0]
 8004292:	f003 0302 	and.w	r3, r3, #2
 8004296:	2b00      	cmp	r3, #0
 8004298:	d063      	beq.n	8004362 <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800429a:	4b65      	ldr	r3, [pc, #404]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 800429c:	689b      	ldr	r3, [r3, #8]
 800429e:	f003 030c 	and.w	r3, r3, #12
 80042a2:	2b00      	cmp	r3, #0
 80042a4:	d00b      	beq.n	80042be <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80042a6:	4b62      	ldr	r3, [pc, #392]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 80042a8:	689b      	ldr	r3, [r3, #8]
 80042aa:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80042ae:	2b08      	cmp	r3, #8
 80042b0:	d11c      	bne.n	80042ec <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80042b2:	4b5f      	ldr	r3, [pc, #380]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 80042b4:	685b      	ldr	r3, [r3, #4]
 80042b6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80042ba:	2b00      	cmp	r3, #0
 80042bc:	d116      	bne.n	80042ec <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80042be:	4b5c      	ldr	r3, [pc, #368]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 80042c0:	681b      	ldr	r3, [r3, #0]
 80042c2:	f003 0302 	and.w	r3, r3, #2
 80042c6:	2b00      	cmp	r3, #0
 80042c8:	d005      	beq.n	80042d6 <HAL_RCC_OscConfig+0x152>
 80042ca:	687b      	ldr	r3, [r7, #4]
 80042cc:	68db      	ldr	r3, [r3, #12]
 80042ce:	2b01      	cmp	r3, #1
 80042d0:	d001      	beq.n	80042d6 <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 80042d2:	2301      	movs	r3, #1
 80042d4:	e1bb      	b.n	800464e <HAL_RCC_OscConfig+0x4ca>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80042d6:	4b56      	ldr	r3, [pc, #344]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 80042d8:	681b      	ldr	r3, [r3, #0]
 80042da:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80042de:	687b      	ldr	r3, [r7, #4]
 80042e0:	691b      	ldr	r3, [r3, #16]
 80042e2:	00db      	lsls	r3, r3, #3
 80042e4:	4952      	ldr	r1, [pc, #328]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 80042e6:	4313      	orrs	r3, r2
 80042e8:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80042ea:	e03a      	b.n	8004362 <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80042ec:	687b      	ldr	r3, [r7, #4]
 80042ee:	68db      	ldr	r3, [r3, #12]
 80042f0:	2b00      	cmp	r3, #0
 80042f2:	d020      	beq.n	8004336 <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 80042f4:	4b4f      	ldr	r3, [pc, #316]	; (8004434 <HAL_RCC_OscConfig+0x2b0>)
 80042f6:	2201      	movs	r2, #1
 80042f8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80042fa:	f7fd fc53 	bl	8001ba4 <HAL_GetTick>
 80042fe:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004300:	e008      	b.n	8004314 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8004302:	f7fd fc4f 	bl	8001ba4 <HAL_GetTick>
 8004306:	4602      	mov	r2, r0
 8004308:	693b      	ldr	r3, [r7, #16]
 800430a:	1ad3      	subs	r3, r2, r3
 800430c:	2b02      	cmp	r3, #2
 800430e:	d901      	bls.n	8004314 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8004310:	2303      	movs	r3, #3
 8004312:	e19c      	b.n	800464e <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004314:	4b46      	ldr	r3, [pc, #280]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 8004316:	681b      	ldr	r3, [r3, #0]
 8004318:	f003 0302 	and.w	r3, r3, #2
 800431c:	2b00      	cmp	r3, #0
 800431e:	d0f0      	beq.n	8004302 <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004320:	4b43      	ldr	r3, [pc, #268]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 8004322:	681b      	ldr	r3, [r3, #0]
 8004324:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8004328:	687b      	ldr	r3, [r7, #4]
 800432a:	691b      	ldr	r3, [r3, #16]
 800432c:	00db      	lsls	r3, r3, #3
 800432e:	4940      	ldr	r1, [pc, #256]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 8004330:	4313      	orrs	r3, r2
 8004332:	600b      	str	r3, [r1, #0]
 8004334:	e015      	b.n	8004362 <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8004336:	4b3f      	ldr	r3, [pc, #252]	; (8004434 <HAL_RCC_OscConfig+0x2b0>)
 8004338:	2200      	movs	r2, #0
 800433a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800433c:	f7fd fc32 	bl	8001ba4 <HAL_GetTick>
 8004340:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004342:	e008      	b.n	8004356 <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8004344:	f7fd fc2e 	bl	8001ba4 <HAL_GetTick>
 8004348:	4602      	mov	r2, r0
 800434a:	693b      	ldr	r3, [r7, #16]
 800434c:	1ad3      	subs	r3, r2, r3
 800434e:	2b02      	cmp	r3, #2
 8004350:	d901      	bls.n	8004356 <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 8004352:	2303      	movs	r3, #3
 8004354:	e17b      	b.n	800464e <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004356:	4b36      	ldr	r3, [pc, #216]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 8004358:	681b      	ldr	r3, [r3, #0]
 800435a:	f003 0302 	and.w	r3, r3, #2
 800435e:	2b00      	cmp	r3, #0
 8004360:	d1f0      	bne.n	8004344 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8004362:	687b      	ldr	r3, [r7, #4]
 8004364:	681b      	ldr	r3, [r3, #0]
 8004366:	f003 0308 	and.w	r3, r3, #8
 800436a:	2b00      	cmp	r3, #0
 800436c:	d030      	beq.n	80043d0 <HAL_RCC_OscConfig+0x24c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800436e:	687b      	ldr	r3, [r7, #4]
 8004370:	695b      	ldr	r3, [r3, #20]
 8004372:	2b00      	cmp	r3, #0
 8004374:	d016      	beq.n	80043a4 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8004376:	4b30      	ldr	r3, [pc, #192]	; (8004438 <HAL_RCC_OscConfig+0x2b4>)
 8004378:	2201      	movs	r2, #1
 800437a:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800437c:	f7fd fc12 	bl	8001ba4 <HAL_GetTick>
 8004380:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004382:	e008      	b.n	8004396 <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8004384:	f7fd fc0e 	bl	8001ba4 <HAL_GetTick>
 8004388:	4602      	mov	r2, r0
 800438a:	693b      	ldr	r3, [r7, #16]
 800438c:	1ad3      	subs	r3, r2, r3
 800438e:	2b02      	cmp	r3, #2
 8004390:	d901      	bls.n	8004396 <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 8004392:	2303      	movs	r3, #3
 8004394:	e15b      	b.n	800464e <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004396:	4b26      	ldr	r3, [pc, #152]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 8004398:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800439a:	f003 0302 	and.w	r3, r3, #2
 800439e:	2b00      	cmp	r3, #0
 80043a0:	d0f0      	beq.n	8004384 <HAL_RCC_OscConfig+0x200>
 80043a2:	e015      	b.n	80043d0 <HAL_RCC_OscConfig+0x24c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80043a4:	4b24      	ldr	r3, [pc, #144]	; (8004438 <HAL_RCC_OscConfig+0x2b4>)
 80043a6:	2200      	movs	r2, #0
 80043a8:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80043aa:	f7fd fbfb 	bl	8001ba4 <HAL_GetTick>
 80043ae:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80043b0:	e008      	b.n	80043c4 <HAL_RCC_OscConfig+0x240>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80043b2:	f7fd fbf7 	bl	8001ba4 <HAL_GetTick>
 80043b6:	4602      	mov	r2, r0
 80043b8:	693b      	ldr	r3, [r7, #16]
 80043ba:	1ad3      	subs	r3, r2, r3
 80043bc:	2b02      	cmp	r3, #2
 80043be:	d901      	bls.n	80043c4 <HAL_RCC_OscConfig+0x240>
        {
          return HAL_TIMEOUT;
 80043c0:	2303      	movs	r3, #3
 80043c2:	e144      	b.n	800464e <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80043c4:	4b1a      	ldr	r3, [pc, #104]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 80043c6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80043c8:	f003 0302 	and.w	r3, r3, #2
 80043cc:	2b00      	cmp	r3, #0
 80043ce:	d1f0      	bne.n	80043b2 <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80043d0:	687b      	ldr	r3, [r7, #4]
 80043d2:	681b      	ldr	r3, [r3, #0]
 80043d4:	f003 0304 	and.w	r3, r3, #4
 80043d8:	2b00      	cmp	r3, #0
 80043da:	f000 80a0 	beq.w	800451e <HAL_RCC_OscConfig+0x39a>
  {
    FlagStatus       pwrclkchanged = RESET;
 80043de:	2300      	movs	r3, #0
 80043e0:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80043e2:	4b13      	ldr	r3, [pc, #76]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 80043e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80043e6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80043ea:	2b00      	cmp	r3, #0
 80043ec:	d10f      	bne.n	800440e <HAL_RCC_OscConfig+0x28a>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80043ee:	2300      	movs	r3, #0
 80043f0:	60bb      	str	r3, [r7, #8]
 80043f2:	4b0f      	ldr	r3, [pc, #60]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 80043f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80043f6:	4a0e      	ldr	r2, [pc, #56]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 80043f8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80043fc:	6413      	str	r3, [r2, #64]	; 0x40
 80043fe:	4b0c      	ldr	r3, [pc, #48]	; (8004430 <HAL_RCC_OscConfig+0x2ac>)
 8004400:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004402:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004406:	60bb      	str	r3, [r7, #8]
 8004408:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 800440a:	2301      	movs	r3, #1
 800440c:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800440e:	4b0b      	ldr	r3, [pc, #44]	; (800443c <HAL_RCC_OscConfig+0x2b8>)
 8004410:	681b      	ldr	r3, [r3, #0]
 8004412:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004416:	2b00      	cmp	r3, #0
 8004418:	d121      	bne.n	800445e <HAL_RCC_OscConfig+0x2da>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800441a:	4b08      	ldr	r3, [pc, #32]	; (800443c <HAL_RCC_OscConfig+0x2b8>)
 800441c:	681b      	ldr	r3, [r3, #0]
 800441e:	4a07      	ldr	r2, [pc, #28]	; (800443c <HAL_RCC_OscConfig+0x2b8>)
 8004420:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004424:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8004426:	f7fd fbbd 	bl	8001ba4 <HAL_GetTick>
 800442a:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800442c:	e011      	b.n	8004452 <HAL_RCC_OscConfig+0x2ce>
 800442e:	bf00      	nop
 8004430:	40023800 	.word	0x40023800
 8004434:	42470000 	.word	0x42470000
 8004438:	42470e80 	.word	0x42470e80
 800443c:	40007000 	.word	0x40007000
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004440:	f7fd fbb0 	bl	8001ba4 <HAL_GetTick>
 8004444:	4602      	mov	r2, r0
 8004446:	693b      	ldr	r3, [r7, #16]
 8004448:	1ad3      	subs	r3, r2, r3
 800444a:	2b02      	cmp	r3, #2
 800444c:	d901      	bls.n	8004452 <HAL_RCC_OscConfig+0x2ce>
        {
          return HAL_TIMEOUT;
 800444e:	2303      	movs	r3, #3
 8004450:	e0fd      	b.n	800464e <HAL_RCC_OscConfig+0x4ca>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004452:	4b81      	ldr	r3, [pc, #516]	; (8004658 <HAL_RCC_OscConfig+0x4d4>)
 8004454:	681b      	ldr	r3, [r3, #0]
 8004456:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800445a:	2b00      	cmp	r3, #0
 800445c:	d0f0      	beq.n	8004440 <HAL_RCC_OscConfig+0x2bc>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800445e:	687b      	ldr	r3, [r7, #4]
 8004460:	689b      	ldr	r3, [r3, #8]
 8004462:	2b01      	cmp	r3, #1
 8004464:	d106      	bne.n	8004474 <HAL_RCC_OscConfig+0x2f0>
 8004466:	4b7d      	ldr	r3, [pc, #500]	; (800465c <HAL_RCC_OscConfig+0x4d8>)
 8004468:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800446a:	4a7c      	ldr	r2, [pc, #496]	; (800465c <HAL_RCC_OscConfig+0x4d8>)
 800446c:	f043 0301 	orr.w	r3, r3, #1
 8004470:	6713      	str	r3, [r2, #112]	; 0x70
 8004472:	e01c      	b.n	80044ae <HAL_RCC_OscConfig+0x32a>
 8004474:	687b      	ldr	r3, [r7, #4]
 8004476:	689b      	ldr	r3, [r3, #8]
 8004478:	2b05      	cmp	r3, #5
 800447a:	d10c      	bne.n	8004496 <HAL_RCC_OscConfig+0x312>
 800447c:	4b77      	ldr	r3, [pc, #476]	; (800465c <HAL_RCC_OscConfig+0x4d8>)
 800447e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004480:	4a76      	ldr	r2, [pc, #472]	; (800465c <HAL_RCC_OscConfig+0x4d8>)
 8004482:	f043 0304 	orr.w	r3, r3, #4
 8004486:	6713      	str	r3, [r2, #112]	; 0x70
 8004488:	4b74      	ldr	r3, [pc, #464]	; (800465c <HAL_RCC_OscConfig+0x4d8>)
 800448a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800448c:	4a73      	ldr	r2, [pc, #460]	; (800465c <HAL_RCC_OscConfig+0x4d8>)
 800448e:	f043 0301 	orr.w	r3, r3, #1
 8004492:	6713      	str	r3, [r2, #112]	; 0x70
 8004494:	e00b      	b.n	80044ae <HAL_RCC_OscConfig+0x32a>
 8004496:	4b71      	ldr	r3, [pc, #452]	; (800465c <HAL_RCC_OscConfig+0x4d8>)
 8004498:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800449a:	4a70      	ldr	r2, [pc, #448]	; (800465c <HAL_RCC_OscConfig+0x4d8>)
 800449c:	f023 0301 	bic.w	r3, r3, #1
 80044a0:	6713      	str	r3, [r2, #112]	; 0x70
 80044a2:	4b6e      	ldr	r3, [pc, #440]	; (800465c <HAL_RCC_OscConfig+0x4d8>)
 80044a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80044a6:	4a6d      	ldr	r2, [pc, #436]	; (800465c <HAL_RCC_OscConfig+0x4d8>)
 80044a8:	f023 0304 	bic.w	r3, r3, #4
 80044ac:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 80044ae:	687b      	ldr	r3, [r7, #4]
 80044b0:	689b      	ldr	r3, [r3, #8]
 80044b2:	2b00      	cmp	r3, #0
 80044b4:	d015      	beq.n	80044e2 <HAL_RCC_OscConfig+0x35e>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80044b6:	f7fd fb75 	bl	8001ba4 <HAL_GetTick>
 80044ba:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80044bc:	e00a      	b.n	80044d4 <HAL_RCC_OscConfig+0x350>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80044be:	f7fd fb71 	bl	8001ba4 <HAL_GetTick>
 80044c2:	4602      	mov	r2, r0
 80044c4:	693b      	ldr	r3, [r7, #16]
 80044c6:	1ad3      	subs	r3, r2, r3
 80044c8:	f241 3288 	movw	r2, #5000	; 0x1388
 80044cc:	4293      	cmp	r3, r2
 80044ce:	d901      	bls.n	80044d4 <HAL_RCC_OscConfig+0x350>
        {
          return HAL_TIMEOUT;
 80044d0:	2303      	movs	r3, #3
 80044d2:	e0bc      	b.n	800464e <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80044d4:	4b61      	ldr	r3, [pc, #388]	; (800465c <HAL_RCC_OscConfig+0x4d8>)
 80044d6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80044d8:	f003 0302 	and.w	r3, r3, #2
 80044dc:	2b00      	cmp	r3, #0
 80044de:	d0ee      	beq.n	80044be <HAL_RCC_OscConfig+0x33a>
 80044e0:	e014      	b.n	800450c <HAL_RCC_OscConfig+0x388>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80044e2:	f7fd fb5f 	bl	8001ba4 <HAL_GetTick>
 80044e6:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80044e8:	e00a      	b.n	8004500 <HAL_RCC_OscConfig+0x37c>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80044ea:	f7fd fb5b 	bl	8001ba4 <HAL_GetTick>
 80044ee:	4602      	mov	r2, r0
 80044f0:	693b      	ldr	r3, [r7, #16]
 80044f2:	1ad3      	subs	r3, r2, r3
 80044f4:	f241 3288 	movw	r2, #5000	; 0x1388
 80044f8:	4293      	cmp	r3, r2
 80044fa:	d901      	bls.n	8004500 <HAL_RCC_OscConfig+0x37c>
        {
          return HAL_TIMEOUT;
 80044fc:	2303      	movs	r3, #3
 80044fe:	e0a6      	b.n	800464e <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8004500:	4b56      	ldr	r3, [pc, #344]	; (800465c <HAL_RCC_OscConfig+0x4d8>)
 8004502:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004504:	f003 0302 	and.w	r3, r3, #2
 8004508:	2b00      	cmp	r3, #0
 800450a:	d1ee      	bne.n	80044ea <HAL_RCC_OscConfig+0x366>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800450c:	7dfb      	ldrb	r3, [r7, #23]
 800450e:	2b01      	cmp	r3, #1
 8004510:	d105      	bne.n	800451e <HAL_RCC_OscConfig+0x39a>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8004512:	4b52      	ldr	r3, [pc, #328]	; (800465c <HAL_RCC_OscConfig+0x4d8>)
 8004514:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004516:	4a51      	ldr	r2, [pc, #324]	; (800465c <HAL_RCC_OscConfig+0x4d8>)
 8004518:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800451c:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800451e:	687b      	ldr	r3, [r7, #4]
 8004520:	699b      	ldr	r3, [r3, #24]
 8004522:	2b00      	cmp	r3, #0
 8004524:	f000 8092 	beq.w	800464c <HAL_RCC_OscConfig+0x4c8>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8004528:	4b4c      	ldr	r3, [pc, #304]	; (800465c <HAL_RCC_OscConfig+0x4d8>)
 800452a:	689b      	ldr	r3, [r3, #8]
 800452c:	f003 030c 	and.w	r3, r3, #12
 8004530:	2b08      	cmp	r3, #8
 8004532:	d05c      	beq.n	80045ee <HAL_RCC_OscConfig+0x46a>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8004534:	687b      	ldr	r3, [r7, #4]
 8004536:	699b      	ldr	r3, [r3, #24]
 8004538:	2b02      	cmp	r3, #2
 800453a:	d141      	bne.n	80045c0 <HAL_RCC_OscConfig+0x43c>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800453c:	4b48      	ldr	r3, [pc, #288]	; (8004660 <HAL_RCC_OscConfig+0x4dc>)
 800453e:	2200      	movs	r2, #0
 8004540:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004542:	f7fd fb2f 	bl	8001ba4 <HAL_GetTick>
 8004546:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8004548:	e008      	b.n	800455c <HAL_RCC_OscConfig+0x3d8>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800454a:	f7fd fb2b 	bl	8001ba4 <HAL_GetTick>
 800454e:	4602      	mov	r2, r0
 8004550:	693b      	ldr	r3, [r7, #16]
 8004552:	1ad3      	subs	r3, r2, r3
 8004554:	2b02      	cmp	r3, #2
 8004556:	d901      	bls.n	800455c <HAL_RCC_OscConfig+0x3d8>
          {
            return HAL_TIMEOUT;
 8004558:	2303      	movs	r3, #3
 800455a:	e078      	b.n	800464e <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800455c:	4b3f      	ldr	r3, [pc, #252]	; (800465c <HAL_RCC_OscConfig+0x4d8>)
 800455e:	681b      	ldr	r3, [r3, #0]
 8004560:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004564:	2b00      	cmp	r3, #0
 8004566:	d1f0      	bne.n	800454a <HAL_RCC_OscConfig+0x3c6>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8004568:	687b      	ldr	r3, [r7, #4]
 800456a:	69da      	ldr	r2, [r3, #28]
 800456c:	687b      	ldr	r3, [r7, #4]
 800456e:	6a1b      	ldr	r3, [r3, #32]
 8004570:	431a      	orrs	r2, r3
 8004572:	687b      	ldr	r3, [r7, #4]
 8004574:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004576:	019b      	lsls	r3, r3, #6
 8004578:	431a      	orrs	r2, r3
 800457a:	687b      	ldr	r3, [r7, #4]
 800457c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800457e:	085b      	lsrs	r3, r3, #1
 8004580:	3b01      	subs	r3, #1
 8004582:	041b      	lsls	r3, r3, #16
 8004584:	431a      	orrs	r2, r3
 8004586:	687b      	ldr	r3, [r7, #4]
 8004588:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800458a:	061b      	lsls	r3, r3, #24
 800458c:	4933      	ldr	r1, [pc, #204]	; (800465c <HAL_RCC_OscConfig+0x4d8>)
 800458e:	4313      	orrs	r3, r2
 8004590:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8004592:	4b33      	ldr	r3, [pc, #204]	; (8004660 <HAL_RCC_OscConfig+0x4dc>)
 8004594:	2201      	movs	r2, #1
 8004596:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004598:	f7fd fb04 	bl	8001ba4 <HAL_GetTick>
 800459c:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800459e:	e008      	b.n	80045b2 <HAL_RCC_OscConfig+0x42e>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80045a0:	f7fd fb00 	bl	8001ba4 <HAL_GetTick>
 80045a4:	4602      	mov	r2, r0
 80045a6:	693b      	ldr	r3, [r7, #16]
 80045a8:	1ad3      	subs	r3, r2, r3
 80045aa:	2b02      	cmp	r3, #2
 80045ac:	d901      	bls.n	80045b2 <HAL_RCC_OscConfig+0x42e>
          {
            return HAL_TIMEOUT;
 80045ae:	2303      	movs	r3, #3
 80045b0:	e04d      	b.n	800464e <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80045b2:	4b2a      	ldr	r3, [pc, #168]	; (800465c <HAL_RCC_OscConfig+0x4d8>)
 80045b4:	681b      	ldr	r3, [r3, #0]
 80045b6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80045ba:	2b00      	cmp	r3, #0
 80045bc:	d0f0      	beq.n	80045a0 <HAL_RCC_OscConfig+0x41c>
 80045be:	e045      	b.n	800464c <HAL_RCC_OscConfig+0x4c8>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80045c0:	4b27      	ldr	r3, [pc, #156]	; (8004660 <HAL_RCC_OscConfig+0x4dc>)
 80045c2:	2200      	movs	r2, #0
 80045c4:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80045c6:	f7fd faed 	bl	8001ba4 <HAL_GetTick>
 80045ca:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80045cc:	e008      	b.n	80045e0 <HAL_RCC_OscConfig+0x45c>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80045ce:	f7fd fae9 	bl	8001ba4 <HAL_GetTick>
 80045d2:	4602      	mov	r2, r0
 80045d4:	693b      	ldr	r3, [r7, #16]
 80045d6:	1ad3      	subs	r3, r2, r3
 80045d8:	2b02      	cmp	r3, #2
 80045da:	d901      	bls.n	80045e0 <HAL_RCC_OscConfig+0x45c>
          {
            return HAL_TIMEOUT;
 80045dc:	2303      	movs	r3, #3
 80045de:	e036      	b.n	800464e <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80045e0:	4b1e      	ldr	r3, [pc, #120]	; (800465c <HAL_RCC_OscConfig+0x4d8>)
 80045e2:	681b      	ldr	r3, [r3, #0]
 80045e4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80045e8:	2b00      	cmp	r3, #0
 80045ea:	d1f0      	bne.n	80045ce <HAL_RCC_OscConfig+0x44a>
 80045ec:	e02e      	b.n	800464c <HAL_RCC_OscConfig+0x4c8>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80045ee:	687b      	ldr	r3, [r7, #4]
 80045f0:	699b      	ldr	r3, [r3, #24]
 80045f2:	2b01      	cmp	r3, #1
 80045f4:	d101      	bne.n	80045fa <HAL_RCC_OscConfig+0x476>
      {
        return HAL_ERROR;
 80045f6:	2301      	movs	r3, #1
 80045f8:	e029      	b.n	800464e <HAL_RCC_OscConfig+0x4ca>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 80045fa:	4b18      	ldr	r3, [pc, #96]	; (800465c <HAL_RCC_OscConfig+0x4d8>)
 80045fc:	689b      	ldr	r3, [r3, #8]
 80045fe:	60fb      	str	r3, [r7, #12]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004600:	68fb      	ldr	r3, [r7, #12]
 8004602:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8004606:	687b      	ldr	r3, [r7, #4]
 8004608:	69db      	ldr	r3, [r3, #28]
 800460a:	429a      	cmp	r2, r3
 800460c:	d11c      	bne.n	8004648 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800460e:	68fb      	ldr	r3, [r7, #12]
 8004610:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8004614:	687b      	ldr	r3, [r7, #4]
 8004616:	6a1b      	ldr	r3, [r3, #32]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004618:	429a      	cmp	r2, r3
 800461a:	d115      	bne.n	8004648 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800461c:	68fa      	ldr	r2, [r7, #12]
 800461e:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8004622:	4013      	ands	r3, r2
 8004624:	687a      	ldr	r2, [r7, #4]
 8004626:	6a52      	ldr	r2, [r2, #36]	; 0x24
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8004628:	4293      	cmp	r3, r2
 800462a:	d10d      	bne.n	8004648 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800462c:	68fb      	ldr	r3, [r7, #12]
 800462e:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8004632:	687b      	ldr	r3, [r7, #4]
 8004634:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8004636:	429a      	cmp	r2, r3
 8004638:	d106      	bne.n	8004648 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 800463a:	68fb      	ldr	r3, [r7, #12]
 800463c:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8004640:	687b      	ldr	r3, [r7, #4]
 8004642:	6adb      	ldr	r3, [r3, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8004644:	429a      	cmp	r2, r3
 8004646:	d001      	beq.n	800464c <HAL_RCC_OscConfig+0x4c8>
        {
          return HAL_ERROR;
 8004648:	2301      	movs	r3, #1
 800464a:	e000      	b.n	800464e <HAL_RCC_OscConfig+0x4ca>
        }
      }
    }
  }
  return HAL_OK;
 800464c:	2300      	movs	r3, #0
}
 800464e:	4618      	mov	r0, r3
 8004650:	3718      	adds	r7, #24
 8004652:	46bd      	mov	sp, r7
 8004654:	bd80      	pop	{r7, pc}
 8004656:	bf00      	nop
 8004658:	40007000 	.word	0x40007000
 800465c:	40023800 	.word	0x40023800
 8004660:	42470060 	.word	0x42470060

08004664 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8004664:	b580      	push	{r7, lr}
 8004666:	b084      	sub	sp, #16
 8004668:	af00      	add	r7, sp, #0
 800466a:	6078      	str	r0, [r7, #4]
 800466c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 800466e:	687b      	ldr	r3, [r7, #4]
 8004670:	2b00      	cmp	r3, #0
 8004672:	d101      	bne.n	8004678 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8004674:	2301      	movs	r3, #1
 8004676:	e0cc      	b.n	8004812 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8004678:	4b68      	ldr	r3, [pc, #416]	; (800481c <HAL_RCC_ClockConfig+0x1b8>)
 800467a:	681b      	ldr	r3, [r3, #0]
 800467c:	f003 030f 	and.w	r3, r3, #15
 8004680:	683a      	ldr	r2, [r7, #0]
 8004682:	429a      	cmp	r2, r3
 8004684:	d90c      	bls.n	80046a0 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004686:	4b65      	ldr	r3, [pc, #404]	; (800481c <HAL_RCC_ClockConfig+0x1b8>)
 8004688:	683a      	ldr	r2, [r7, #0]
 800468a:	b2d2      	uxtb	r2, r2
 800468c:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800468e:	4b63      	ldr	r3, [pc, #396]	; (800481c <HAL_RCC_ClockConfig+0x1b8>)
 8004690:	681b      	ldr	r3, [r3, #0]
 8004692:	f003 030f 	and.w	r3, r3, #15
 8004696:	683a      	ldr	r2, [r7, #0]
 8004698:	429a      	cmp	r2, r3
 800469a:	d001      	beq.n	80046a0 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 800469c:	2301      	movs	r3, #1
 800469e:	e0b8      	b.n	8004812 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80046a0:	687b      	ldr	r3, [r7, #4]
 80046a2:	681b      	ldr	r3, [r3, #0]
 80046a4:	f003 0302 	and.w	r3, r3, #2
 80046a8:	2b00      	cmp	r3, #0
 80046aa:	d020      	beq.n	80046ee <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80046ac:	687b      	ldr	r3, [r7, #4]
 80046ae:	681b      	ldr	r3, [r3, #0]
 80046b0:	f003 0304 	and.w	r3, r3, #4
 80046b4:	2b00      	cmp	r3, #0
 80046b6:	d005      	beq.n	80046c4 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80046b8:	4b59      	ldr	r3, [pc, #356]	; (8004820 <HAL_RCC_ClockConfig+0x1bc>)
 80046ba:	689b      	ldr	r3, [r3, #8]
 80046bc:	4a58      	ldr	r2, [pc, #352]	; (8004820 <HAL_RCC_ClockConfig+0x1bc>)
 80046be:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80046c2:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80046c4:	687b      	ldr	r3, [r7, #4]
 80046c6:	681b      	ldr	r3, [r3, #0]
 80046c8:	f003 0308 	and.w	r3, r3, #8
 80046cc:	2b00      	cmp	r3, #0
 80046ce:	d005      	beq.n	80046dc <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80046d0:	4b53      	ldr	r3, [pc, #332]	; (8004820 <HAL_RCC_ClockConfig+0x1bc>)
 80046d2:	689b      	ldr	r3, [r3, #8]
 80046d4:	4a52      	ldr	r2, [pc, #328]	; (8004820 <HAL_RCC_ClockConfig+0x1bc>)
 80046d6:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80046da:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80046dc:	4b50      	ldr	r3, [pc, #320]	; (8004820 <HAL_RCC_ClockConfig+0x1bc>)
 80046de:	689b      	ldr	r3, [r3, #8]
 80046e0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80046e4:	687b      	ldr	r3, [r7, #4]
 80046e6:	689b      	ldr	r3, [r3, #8]
 80046e8:	494d      	ldr	r1, [pc, #308]	; (8004820 <HAL_RCC_ClockConfig+0x1bc>)
 80046ea:	4313      	orrs	r3, r2
 80046ec:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80046ee:	687b      	ldr	r3, [r7, #4]
 80046f0:	681b      	ldr	r3, [r3, #0]
 80046f2:	f003 0301 	and.w	r3, r3, #1
 80046f6:	2b00      	cmp	r3, #0
 80046f8:	d044      	beq.n	8004784 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80046fa:	687b      	ldr	r3, [r7, #4]
 80046fc:	685b      	ldr	r3, [r3, #4]
 80046fe:	2b01      	cmp	r3, #1
 8004700:	d107      	bne.n	8004712 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004702:	4b47      	ldr	r3, [pc, #284]	; (8004820 <HAL_RCC_ClockConfig+0x1bc>)
 8004704:	681b      	ldr	r3, [r3, #0]
 8004706:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800470a:	2b00      	cmp	r3, #0
 800470c:	d119      	bne.n	8004742 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800470e:	2301      	movs	r3, #1
 8004710:	e07f      	b.n	8004812 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8004712:	687b      	ldr	r3, [r7, #4]
 8004714:	685b      	ldr	r3, [r3, #4]
 8004716:	2b02      	cmp	r3, #2
 8004718:	d003      	beq.n	8004722 <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 800471a:	687b      	ldr	r3, [r7, #4]
 800471c:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800471e:	2b03      	cmp	r3, #3
 8004720:	d107      	bne.n	8004732 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004722:	4b3f      	ldr	r3, [pc, #252]	; (8004820 <HAL_RCC_ClockConfig+0x1bc>)
 8004724:	681b      	ldr	r3, [r3, #0]
 8004726:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800472a:	2b00      	cmp	r3, #0
 800472c:	d109      	bne.n	8004742 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800472e:	2301      	movs	r3, #1
 8004730:	e06f      	b.n	8004812 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004732:	4b3b      	ldr	r3, [pc, #236]	; (8004820 <HAL_RCC_ClockConfig+0x1bc>)
 8004734:	681b      	ldr	r3, [r3, #0]
 8004736:	f003 0302 	and.w	r3, r3, #2
 800473a:	2b00      	cmp	r3, #0
 800473c:	d101      	bne.n	8004742 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800473e:	2301      	movs	r3, #1
 8004740:	e067      	b.n	8004812 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8004742:	4b37      	ldr	r3, [pc, #220]	; (8004820 <HAL_RCC_ClockConfig+0x1bc>)
 8004744:	689b      	ldr	r3, [r3, #8]
 8004746:	f023 0203 	bic.w	r2, r3, #3
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	685b      	ldr	r3, [r3, #4]
 800474e:	4934      	ldr	r1, [pc, #208]	; (8004820 <HAL_RCC_ClockConfig+0x1bc>)
 8004750:	4313      	orrs	r3, r2
 8004752:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8004754:	f7fd fa26 	bl	8001ba4 <HAL_GetTick>
 8004758:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800475a:	e00a      	b.n	8004772 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800475c:	f7fd fa22 	bl	8001ba4 <HAL_GetTick>
 8004760:	4602      	mov	r2, r0
 8004762:	68fb      	ldr	r3, [r7, #12]
 8004764:	1ad3      	subs	r3, r2, r3
 8004766:	f241 3288 	movw	r2, #5000	; 0x1388
 800476a:	4293      	cmp	r3, r2
 800476c:	d901      	bls.n	8004772 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 800476e:	2303      	movs	r3, #3
 8004770:	e04f      	b.n	8004812 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8004772:	4b2b      	ldr	r3, [pc, #172]	; (8004820 <HAL_RCC_ClockConfig+0x1bc>)
 8004774:	689b      	ldr	r3, [r3, #8]
 8004776:	f003 020c 	and.w	r2, r3, #12
 800477a:	687b      	ldr	r3, [r7, #4]
 800477c:	685b      	ldr	r3, [r3, #4]
 800477e:	009b      	lsls	r3, r3, #2
 8004780:	429a      	cmp	r2, r3
 8004782:	d1eb      	bne.n	800475c <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8004784:	4b25      	ldr	r3, [pc, #148]	; (800481c <HAL_RCC_ClockConfig+0x1b8>)
 8004786:	681b      	ldr	r3, [r3, #0]
 8004788:	f003 030f 	and.w	r3, r3, #15
 800478c:	683a      	ldr	r2, [r7, #0]
 800478e:	429a      	cmp	r2, r3
 8004790:	d20c      	bcs.n	80047ac <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004792:	4b22      	ldr	r3, [pc, #136]	; (800481c <HAL_RCC_ClockConfig+0x1b8>)
 8004794:	683a      	ldr	r2, [r7, #0]
 8004796:	b2d2      	uxtb	r2, r2
 8004798:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800479a:	4b20      	ldr	r3, [pc, #128]	; (800481c <HAL_RCC_ClockConfig+0x1b8>)
 800479c:	681b      	ldr	r3, [r3, #0]
 800479e:	f003 030f 	and.w	r3, r3, #15
 80047a2:	683a      	ldr	r2, [r7, #0]
 80047a4:	429a      	cmp	r2, r3
 80047a6:	d001      	beq.n	80047ac <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 80047a8:	2301      	movs	r3, #1
 80047aa:	e032      	b.n	8004812 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80047ac:	687b      	ldr	r3, [r7, #4]
 80047ae:	681b      	ldr	r3, [r3, #0]
 80047b0:	f003 0304 	and.w	r3, r3, #4
 80047b4:	2b00      	cmp	r3, #0
 80047b6:	d008      	beq.n	80047ca <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80047b8:	4b19      	ldr	r3, [pc, #100]	; (8004820 <HAL_RCC_ClockConfig+0x1bc>)
 80047ba:	689b      	ldr	r3, [r3, #8]
 80047bc:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80047c0:	687b      	ldr	r3, [r7, #4]
 80047c2:	68db      	ldr	r3, [r3, #12]
 80047c4:	4916      	ldr	r1, [pc, #88]	; (8004820 <HAL_RCC_ClockConfig+0x1bc>)
 80047c6:	4313      	orrs	r3, r2
 80047c8:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80047ca:	687b      	ldr	r3, [r7, #4]
 80047cc:	681b      	ldr	r3, [r3, #0]
 80047ce:	f003 0308 	and.w	r3, r3, #8
 80047d2:	2b00      	cmp	r3, #0
 80047d4:	d009      	beq.n	80047ea <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80047d6:	4b12      	ldr	r3, [pc, #72]	; (8004820 <HAL_RCC_ClockConfig+0x1bc>)
 80047d8:	689b      	ldr	r3, [r3, #8]
 80047da:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80047de:	687b      	ldr	r3, [r7, #4]
 80047e0:	691b      	ldr	r3, [r3, #16]
 80047e2:	00db      	lsls	r3, r3, #3
 80047e4:	490e      	ldr	r1, [pc, #56]	; (8004820 <HAL_RCC_ClockConfig+0x1bc>)
 80047e6:	4313      	orrs	r3, r2
 80047e8:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80047ea:	f000 f821 	bl	8004830 <HAL_RCC_GetSysClockFreq>
 80047ee:	4601      	mov	r1, r0
 80047f0:	4b0b      	ldr	r3, [pc, #44]	; (8004820 <HAL_RCC_ClockConfig+0x1bc>)
 80047f2:	689b      	ldr	r3, [r3, #8]
 80047f4:	091b      	lsrs	r3, r3, #4
 80047f6:	f003 030f 	and.w	r3, r3, #15
 80047fa:	4a0a      	ldr	r2, [pc, #40]	; (8004824 <HAL_RCC_ClockConfig+0x1c0>)
 80047fc:	5cd3      	ldrb	r3, [r2, r3]
 80047fe:	fa21 f303 	lsr.w	r3, r1, r3
 8004802:	4a09      	ldr	r2, [pc, #36]	; (8004828 <HAL_RCC_ClockConfig+0x1c4>)
 8004804:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 8004806:	4b09      	ldr	r3, [pc, #36]	; (800482c <HAL_RCC_ClockConfig+0x1c8>)
 8004808:	681b      	ldr	r3, [r3, #0]
 800480a:	4618      	mov	r0, r3
 800480c:	f7fc fede 	bl	80015cc <HAL_InitTick>

  return HAL_OK;
 8004810:	2300      	movs	r3, #0
}
 8004812:	4618      	mov	r0, r3
 8004814:	3710      	adds	r7, #16
 8004816:	46bd      	mov	sp, r7
 8004818:	bd80      	pop	{r7, pc}
 800481a:	bf00      	nop
 800481c:	40023c00 	.word	0x40023c00
 8004820:	40023800 	.word	0x40023800
 8004824:	0801c73c 	.word	0x0801c73c
 8004828:	20000004 	.word	0x20000004
 800482c:	20000008 	.word	0x20000008

08004830 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8004830:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004832:	b085      	sub	sp, #20
 8004834:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 8004836:	2300      	movs	r3, #0
 8004838:	607b      	str	r3, [r7, #4]
 800483a:	2300      	movs	r3, #0
 800483c:	60fb      	str	r3, [r7, #12]
 800483e:	2300      	movs	r3, #0
 8004840:	603b      	str	r3, [r7, #0]
  uint32_t sysclockfreq = 0U;
 8004842:	2300      	movs	r3, #0
 8004844:	60bb      	str	r3, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8004846:	4b50      	ldr	r3, [pc, #320]	; (8004988 <HAL_RCC_GetSysClockFreq+0x158>)
 8004848:	689b      	ldr	r3, [r3, #8]
 800484a:	f003 030c 	and.w	r3, r3, #12
 800484e:	2b04      	cmp	r3, #4
 8004850:	d007      	beq.n	8004862 <HAL_RCC_GetSysClockFreq+0x32>
 8004852:	2b08      	cmp	r3, #8
 8004854:	d008      	beq.n	8004868 <HAL_RCC_GetSysClockFreq+0x38>
 8004856:	2b00      	cmp	r3, #0
 8004858:	f040 808d 	bne.w	8004976 <HAL_RCC_GetSysClockFreq+0x146>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 800485c:	4b4b      	ldr	r3, [pc, #300]	; (800498c <HAL_RCC_GetSysClockFreq+0x15c>)
 800485e:	60bb      	str	r3, [r7, #8]
       break;
 8004860:	e08c      	b.n	800497c <HAL_RCC_GetSysClockFreq+0x14c>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8004862:	4b4b      	ldr	r3, [pc, #300]	; (8004990 <HAL_RCC_GetSysClockFreq+0x160>)
 8004864:	60bb      	str	r3, [r7, #8]
      break;
 8004866:	e089      	b.n	800497c <HAL_RCC_GetSysClockFreq+0x14c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8004868:	4b47      	ldr	r3, [pc, #284]	; (8004988 <HAL_RCC_GetSysClockFreq+0x158>)
 800486a:	685b      	ldr	r3, [r3, #4]
 800486c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8004870:	607b      	str	r3, [r7, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8004872:	4b45      	ldr	r3, [pc, #276]	; (8004988 <HAL_RCC_GetSysClockFreq+0x158>)
 8004874:	685b      	ldr	r3, [r3, #4]
 8004876:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800487a:	2b00      	cmp	r3, #0
 800487c:	d023      	beq.n	80048c6 <HAL_RCC_GetSysClockFreq+0x96>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800487e:	4b42      	ldr	r3, [pc, #264]	; (8004988 <HAL_RCC_GetSysClockFreq+0x158>)
 8004880:	685b      	ldr	r3, [r3, #4]
 8004882:	099b      	lsrs	r3, r3, #6
 8004884:	f04f 0400 	mov.w	r4, #0
 8004888:	f240 11ff 	movw	r1, #511	; 0x1ff
 800488c:	f04f 0200 	mov.w	r2, #0
 8004890:	ea03 0501 	and.w	r5, r3, r1
 8004894:	ea04 0602 	and.w	r6, r4, r2
 8004898:	4a3d      	ldr	r2, [pc, #244]	; (8004990 <HAL_RCC_GetSysClockFreq+0x160>)
 800489a:	fb02 f106 	mul.w	r1, r2, r6
 800489e:	2200      	movs	r2, #0
 80048a0:	fb02 f205 	mul.w	r2, r2, r5
 80048a4:	440a      	add	r2, r1
 80048a6:	493a      	ldr	r1, [pc, #232]	; (8004990 <HAL_RCC_GetSysClockFreq+0x160>)
 80048a8:	fba5 0101 	umull	r0, r1, r5, r1
 80048ac:	1853      	adds	r3, r2, r1
 80048ae:	4619      	mov	r1, r3
 80048b0:	687b      	ldr	r3, [r7, #4]
 80048b2:	f04f 0400 	mov.w	r4, #0
 80048b6:	461a      	mov	r2, r3
 80048b8:	4623      	mov	r3, r4
 80048ba:	f7fb fce9 	bl	8000290 <__aeabi_uldivmod>
 80048be:	4603      	mov	r3, r0
 80048c0:	460c      	mov	r4, r1
 80048c2:	60fb      	str	r3, [r7, #12]
 80048c4:	e049      	b.n	800495a <HAL_RCC_GetSysClockFreq+0x12a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80048c6:	4b30      	ldr	r3, [pc, #192]	; (8004988 <HAL_RCC_GetSysClockFreq+0x158>)
 80048c8:	685b      	ldr	r3, [r3, #4]
 80048ca:	099b      	lsrs	r3, r3, #6
 80048cc:	f04f 0400 	mov.w	r4, #0
 80048d0:	f240 11ff 	movw	r1, #511	; 0x1ff
 80048d4:	f04f 0200 	mov.w	r2, #0
 80048d8:	ea03 0501 	and.w	r5, r3, r1
 80048dc:	ea04 0602 	and.w	r6, r4, r2
 80048e0:	4629      	mov	r1, r5
 80048e2:	4632      	mov	r2, r6
 80048e4:	f04f 0300 	mov.w	r3, #0
 80048e8:	f04f 0400 	mov.w	r4, #0
 80048ec:	0154      	lsls	r4, r2, #5
 80048ee:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 80048f2:	014b      	lsls	r3, r1, #5
 80048f4:	4619      	mov	r1, r3
 80048f6:	4622      	mov	r2, r4
 80048f8:	1b49      	subs	r1, r1, r5
 80048fa:	eb62 0206 	sbc.w	r2, r2, r6
 80048fe:	f04f 0300 	mov.w	r3, #0
 8004902:	f04f 0400 	mov.w	r4, #0
 8004906:	0194      	lsls	r4, r2, #6
 8004908:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 800490c:	018b      	lsls	r3, r1, #6
 800490e:	1a5b      	subs	r3, r3, r1
 8004910:	eb64 0402 	sbc.w	r4, r4, r2
 8004914:	f04f 0100 	mov.w	r1, #0
 8004918:	f04f 0200 	mov.w	r2, #0
 800491c:	00e2      	lsls	r2, r4, #3
 800491e:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8004922:	00d9      	lsls	r1, r3, #3
 8004924:	460b      	mov	r3, r1
 8004926:	4614      	mov	r4, r2
 8004928:	195b      	adds	r3, r3, r5
 800492a:	eb44 0406 	adc.w	r4, r4, r6
 800492e:	f04f 0100 	mov.w	r1, #0
 8004932:	f04f 0200 	mov.w	r2, #0
 8004936:	02a2      	lsls	r2, r4, #10
 8004938:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 800493c:	0299      	lsls	r1, r3, #10
 800493e:	460b      	mov	r3, r1
 8004940:	4614      	mov	r4, r2
 8004942:	4618      	mov	r0, r3
 8004944:	4621      	mov	r1, r4
 8004946:	687b      	ldr	r3, [r7, #4]
 8004948:	f04f 0400 	mov.w	r4, #0
 800494c:	461a      	mov	r2, r3
 800494e:	4623      	mov	r3, r4
 8004950:	f7fb fc9e 	bl	8000290 <__aeabi_uldivmod>
 8004954:	4603      	mov	r3, r0
 8004956:	460c      	mov	r4, r1
 8004958:	60fb      	str	r3, [r7, #12]
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800495a:	4b0b      	ldr	r3, [pc, #44]	; (8004988 <HAL_RCC_GetSysClockFreq+0x158>)
 800495c:	685b      	ldr	r3, [r3, #4]
 800495e:	0c1b      	lsrs	r3, r3, #16
 8004960:	f003 0303 	and.w	r3, r3, #3
 8004964:	3301      	adds	r3, #1
 8004966:	005b      	lsls	r3, r3, #1
 8004968:	603b      	str	r3, [r7, #0]

      sysclockfreq = pllvco/pllp;
 800496a:	68fa      	ldr	r2, [r7, #12]
 800496c:	683b      	ldr	r3, [r7, #0]
 800496e:	fbb2 f3f3 	udiv	r3, r2, r3
 8004972:	60bb      	str	r3, [r7, #8]
      break;
 8004974:	e002      	b.n	800497c <HAL_RCC_GetSysClockFreq+0x14c>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8004976:	4b05      	ldr	r3, [pc, #20]	; (800498c <HAL_RCC_GetSysClockFreq+0x15c>)
 8004978:	60bb      	str	r3, [r7, #8]
      break;
 800497a:	bf00      	nop
    }
  }
  return sysclockfreq;
 800497c:	68bb      	ldr	r3, [r7, #8]
}
 800497e:	4618      	mov	r0, r3
 8004980:	3714      	adds	r7, #20
 8004982:	46bd      	mov	sp, r7
 8004984:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004986:	bf00      	nop
 8004988:	40023800 	.word	0x40023800
 800498c:	00f42400 	.word	0x00f42400
 8004990:	017d7840 	.word	0x017d7840

08004994 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8004994:	b480      	push	{r7}
 8004996:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8004998:	4b03      	ldr	r3, [pc, #12]	; (80049a8 <HAL_RCC_GetHCLKFreq+0x14>)
 800499a:	681b      	ldr	r3, [r3, #0]
}
 800499c:	4618      	mov	r0, r3
 800499e:	46bd      	mov	sp, r7
 80049a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049a4:	4770      	bx	lr
 80049a6:	bf00      	nop
 80049a8:	20000004 	.word	0x20000004

080049ac <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 80049ac:	b580      	push	{r7, lr}
 80049ae:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 80049b0:	f7ff fff0 	bl	8004994 <HAL_RCC_GetHCLKFreq>
 80049b4:	4601      	mov	r1, r0
 80049b6:	4b05      	ldr	r3, [pc, #20]	; (80049cc <HAL_RCC_GetPCLK1Freq+0x20>)
 80049b8:	689b      	ldr	r3, [r3, #8]
 80049ba:	0a9b      	lsrs	r3, r3, #10
 80049bc:	f003 0307 	and.w	r3, r3, #7
 80049c0:	4a03      	ldr	r2, [pc, #12]	; (80049d0 <HAL_RCC_GetPCLK1Freq+0x24>)
 80049c2:	5cd3      	ldrb	r3, [r2, r3]
 80049c4:	fa21 f303 	lsr.w	r3, r1, r3
}
 80049c8:	4618      	mov	r0, r3
 80049ca:	bd80      	pop	{r7, pc}
 80049cc:	40023800 	.word	0x40023800
 80049d0:	0801c74c 	.word	0x0801c74c

080049d4 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 80049d4:	b580      	push	{r7, lr}
 80049d6:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 80049d8:	f7ff ffdc 	bl	8004994 <HAL_RCC_GetHCLKFreq>
 80049dc:	4601      	mov	r1, r0
 80049de:	4b05      	ldr	r3, [pc, #20]	; (80049f4 <HAL_RCC_GetPCLK2Freq+0x20>)
 80049e0:	689b      	ldr	r3, [r3, #8]
 80049e2:	0b5b      	lsrs	r3, r3, #13
 80049e4:	f003 0307 	and.w	r3, r3, #7
 80049e8:	4a03      	ldr	r2, [pc, #12]	; (80049f8 <HAL_RCC_GetPCLK2Freq+0x24>)
 80049ea:	5cd3      	ldrb	r3, [r2, r3]
 80049ec:	fa21 f303 	lsr.w	r3, r1, r3
}
 80049f0:	4618      	mov	r0, r3
 80049f2:	bd80      	pop	{r7, pc}
 80049f4:	40023800 	.word	0x40023800
 80049f8:	0801c74c 	.word	0x0801c74c

080049fc <HAL_RCC_GetClockConfig>:
  * will be configured.
  * @param  pFLatency Pointer on the Flash Latency.
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
 80049fc:	b480      	push	{r7}
 80049fe:	b083      	sub	sp, #12
 8004a00:	af00      	add	r7, sp, #0
 8004a02:	6078      	str	r0, [r7, #4]
 8004a04:	6039      	str	r1, [r7, #0]
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8004a06:	687b      	ldr	r3, [r7, #4]
 8004a08:	220f      	movs	r2, #15
 8004a0a:	601a      	str	r2, [r3, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8004a0c:	4b12      	ldr	r3, [pc, #72]	; (8004a58 <HAL_RCC_GetClockConfig+0x5c>)
 8004a0e:	689b      	ldr	r3, [r3, #8]
 8004a10:	f003 0203 	and.w	r2, r3, #3
 8004a14:	687b      	ldr	r3, [r7, #4]
 8004a16:	605a      	str	r2, [r3, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8004a18:	4b0f      	ldr	r3, [pc, #60]	; (8004a58 <HAL_RCC_GetClockConfig+0x5c>)
 8004a1a:	689b      	ldr	r3, [r3, #8]
 8004a1c:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8004a20:	687b      	ldr	r3, [r7, #4]
 8004a22:	609a      	str	r2, [r3, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8004a24:	4b0c      	ldr	r3, [pc, #48]	; (8004a58 <HAL_RCC_GetClockConfig+0x5c>)
 8004a26:	689b      	ldr	r3, [r3, #8]
 8004a28:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8004a2c:	687b      	ldr	r3, [r7, #4]
 8004a2e:	60da      	str	r2, [r3, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8004a30:	4b09      	ldr	r3, [pc, #36]	; (8004a58 <HAL_RCC_GetClockConfig+0x5c>)
 8004a32:	689b      	ldr	r3, [r3, #8]
 8004a34:	08db      	lsrs	r3, r3, #3
 8004a36:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8004a3a:	687b      	ldr	r3, [r7, #4]
 8004a3c:	611a      	str	r2, [r3, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8004a3e:	4b07      	ldr	r3, [pc, #28]	; (8004a5c <HAL_RCC_GetClockConfig+0x60>)
 8004a40:	681b      	ldr	r3, [r3, #0]
 8004a42:	f003 020f 	and.w	r2, r3, #15
 8004a46:	683b      	ldr	r3, [r7, #0]
 8004a48:	601a      	str	r2, [r3, #0]
}
 8004a4a:	bf00      	nop
 8004a4c:	370c      	adds	r7, #12
 8004a4e:	46bd      	mov	sp, r7
 8004a50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a54:	4770      	bx	lr
 8004a56:	bf00      	nop
 8004a58:	40023800 	.word	0x40023800
 8004a5c:	40023c00 	.word	0x40023c00

08004a60 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8004a60:	b580      	push	{r7, lr}
 8004a62:	b086      	sub	sp, #24
 8004a64:	af00      	add	r7, sp, #0
 8004a66:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 8004a68:	2300      	movs	r3, #0
 8004a6a:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg1 = 0U;
 8004a6c:	2300      	movs	r3, #0
 8004a6e:	613b      	str	r3, [r7, #16]

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8004a70:	687b      	ldr	r3, [r7, #4]
 8004a72:	681b      	ldr	r3, [r3, #0]
 8004a74:	f003 0301 	and.w	r3, r3, #1
 8004a78:	2b00      	cmp	r3, #0
 8004a7a:	d10b      	bne.n	8004a94 <HAL_RCCEx_PeriphCLKConfig+0x34>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8004a7c:	687b      	ldr	r3, [r7, #4]
 8004a7e:	681b      	ldr	r3, [r3, #0]
 8004a80:	f003 0302 	and.w	r3, r3, #2
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8004a84:	2b00      	cmp	r3, #0
 8004a86:	d105      	bne.n	8004a94 <HAL_RCCEx_PeriphCLKConfig+0x34>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	681b      	ldr	r3, [r3, #0]
 8004a8c:	f003 0340 	and.w	r3, r3, #64	; 0x40
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8004a90:	2b00      	cmp	r3, #0
 8004a92:	d075      	beq.n	8004b80 <HAL_RCCEx_PeriphCLKConfig+0x120>
  {
    /* check for Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 8004a94:	4bad      	ldr	r3, [pc, #692]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8004a96:	2200      	movs	r2, #0
 8004a98:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8004a9a:	f7fd f883 	bl	8001ba4 <HAL_GetTick>
 8004a9e:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8004aa0:	e008      	b.n	8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x54>
    {
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8004aa2:	f7fd f87f 	bl	8001ba4 <HAL_GetTick>
 8004aa6:	4602      	mov	r2, r0
 8004aa8:	697b      	ldr	r3, [r7, #20]
 8004aaa:	1ad3      	subs	r3, r2, r3
 8004aac:	2b02      	cmp	r3, #2
 8004aae:	d901      	bls.n	8004ab4 <HAL_RCCEx_PeriphCLKConfig+0x54>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8004ab0:	2303      	movs	r3, #3
 8004ab2:	e18b      	b.n	8004dcc <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8004ab4:	4ba6      	ldr	r3, [pc, #664]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004ab6:	681b      	ldr	r3, [r3, #0]
 8004ab8:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8004abc:	2b00      	cmp	r3, #0
 8004abe:	d1f0      	bne.n	8004aa2 <HAL_RCCEx_PeriphCLKConfig+0x42>
    }

    /*---------------------------- I2S configuration -------------------------*/
    /* In Case of I2S Clock Configuration through PLLI2S, PLLI2SR must be added
      only for I2S configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8004ac0:	687b      	ldr	r3, [r7, #4]
 8004ac2:	681b      	ldr	r3, [r3, #0]
 8004ac4:	f003 0301 	and.w	r3, r3, #1
 8004ac8:	2b00      	cmp	r3, #0
 8004aca:	d009      	beq.n	8004ae0 <HAL_RCCEx_PeriphCLKConfig+0x80>
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8004acc:	687b      	ldr	r3, [r7, #4]
 8004ace:	685b      	ldr	r3, [r3, #4]
 8004ad0:	019a      	lsls	r2, r3, #6
 8004ad2:	687b      	ldr	r3, [r7, #4]
 8004ad4:	689b      	ldr	r3, [r3, #8]
 8004ad6:	071b      	lsls	r3, r3, #28
 8004ad8:	499d      	ldr	r1, [pc, #628]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004ada:	4313      	orrs	r3, r2
 8004adc:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLI2S, PLLI2SQ and PLLI2S_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8004ae0:	687b      	ldr	r3, [r7, #4]
 8004ae2:	681b      	ldr	r3, [r3, #0]
 8004ae4:	f003 0302 	and.w	r3, r3, #2
 8004ae8:	2b00      	cmp	r3, #0
 8004aea:	d01f      	beq.n	8004b2c <HAL_RCCEx_PeriphCLKConfig+0xcc>
      /* Check the PLLI2S division factors */
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SR value from PLLI2SCFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8004aec:	4b98      	ldr	r3, [pc, #608]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004aee:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8004af2:	0f1b      	lsrs	r3, r3, #28
 8004af4:	f003 0307 	and.w	r3, r3, #7
 8004af8:	613b      	str	r3, [r7, #16]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8004afa:	687b      	ldr	r3, [r7, #4]
 8004afc:	685b      	ldr	r3, [r3, #4]
 8004afe:	019a      	lsls	r2, r3, #6
 8004b00:	687b      	ldr	r3, [r7, #4]
 8004b02:	68db      	ldr	r3, [r3, #12]
 8004b04:	061b      	lsls	r3, r3, #24
 8004b06:	431a      	orrs	r2, r3
 8004b08:	693b      	ldr	r3, [r7, #16]
 8004b0a:	071b      	lsls	r3, r3, #28
 8004b0c:	4990      	ldr	r1, [pc, #576]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004b0e:	4313      	orrs	r3, r2
 8004b10:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8004b14:	4b8e      	ldr	r3, [pc, #568]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004b16:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8004b1a:	f023 021f 	bic.w	r2, r3, #31
 8004b1e:	687b      	ldr	r3, [r7, #4]
 8004b20:	69db      	ldr	r3, [r3, #28]
 8004b22:	3b01      	subs	r3, #1
 8004b24:	498a      	ldr	r1, [pc, #552]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004b26:	4313      	orrs	r3, r2
 8004b28:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8004b2c:	687b      	ldr	r3, [r7, #4]
 8004b2e:	681b      	ldr	r3, [r3, #0]
 8004b30:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004b34:	2b00      	cmp	r3, #0
 8004b36:	d00d      	beq.n	8004b54 <HAL_RCCEx_PeriphCLKConfig+0xf4>
      /* Check for Parameters */
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Configure the PLLI2S multiplication and division factors */
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8004b38:	687b      	ldr	r3, [r7, #4]
 8004b3a:	685b      	ldr	r3, [r3, #4]
 8004b3c:	019a      	lsls	r2, r3, #6
 8004b3e:	687b      	ldr	r3, [r7, #4]
 8004b40:	68db      	ldr	r3, [r3, #12]
 8004b42:	061b      	lsls	r3, r3, #24
 8004b44:	431a      	orrs	r2, r3
 8004b46:	687b      	ldr	r3, [r7, #4]
 8004b48:	689b      	ldr	r3, [r3, #8]
 8004b4a:	071b      	lsls	r3, r3, #28
 8004b4c:	4980      	ldr	r1, [pc, #512]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004b4e:	4313      	orrs	r3, r2
 8004b50:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 8004b54:	4b7d      	ldr	r3, [pc, #500]	; (8004d4c <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8004b56:	2201      	movs	r2, #1
 8004b58:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8004b5a:	f7fd f823 	bl	8001ba4 <HAL_GetTick>
 8004b5e:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8004b60:	e008      	b.n	8004b74 <HAL_RCCEx_PeriphCLKConfig+0x114>
    {
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8004b62:	f7fd f81f 	bl	8001ba4 <HAL_GetTick>
 8004b66:	4602      	mov	r2, r0
 8004b68:	697b      	ldr	r3, [r7, #20]
 8004b6a:	1ad3      	subs	r3, r2, r3
 8004b6c:	2b02      	cmp	r3, #2
 8004b6e:	d901      	bls.n	8004b74 <HAL_RCCEx_PeriphCLKConfig+0x114>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8004b70:	2303      	movs	r3, #3
 8004b72:	e12b      	b.n	8004dcc <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8004b74:	4b76      	ldr	r3, [pc, #472]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004b76:	681b      	ldr	r3, [r3, #0]
 8004b78:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8004b7c:	2b00      	cmp	r3, #0
 8004b7e:	d0f0      	beq.n	8004b62 <HAL_RCCEx_PeriphCLKConfig+0x102>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8004b80:	687b      	ldr	r3, [r7, #4]
 8004b82:	681b      	ldr	r3, [r3, #0]
 8004b84:	f003 0304 	and.w	r3, r3, #4
 8004b88:	2b00      	cmp	r3, #0
 8004b8a:	d105      	bne.n	8004b98 <HAL_RCCEx_PeriphCLKConfig+0x138>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC))
 8004b8c:	687b      	ldr	r3, [r7, #4]
 8004b8e:	681b      	ldr	r3, [r3, #0]
 8004b90:	f003 0308 	and.w	r3, r3, #8
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8004b94:	2b00      	cmp	r3, #0
 8004b96:	d079      	beq.n	8004c8c <HAL_RCCEx_PeriphCLKConfig+0x22c>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8004b98:	4b6e      	ldr	r3, [pc, #440]	; (8004d54 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 8004b9a:	2200      	movs	r2, #0
 8004b9c:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8004b9e:	f7fd f801 	bl	8001ba4 <HAL_GetTick>
 8004ba2:	6178      	str	r0, [r7, #20]
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8004ba4:	e008      	b.n	8004bb8 <HAL_RCCEx_PeriphCLKConfig+0x158>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8004ba6:	f7fc fffd 	bl	8001ba4 <HAL_GetTick>
 8004baa:	4602      	mov	r2, r0
 8004bac:	697b      	ldr	r3, [r7, #20]
 8004bae:	1ad3      	subs	r3, r2, r3
 8004bb0:	2b02      	cmp	r3, #2
 8004bb2:	d901      	bls.n	8004bb8 <HAL_RCCEx_PeriphCLKConfig+0x158>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8004bb4:	2303      	movs	r3, #3
 8004bb6:	e109      	b.n	8004dcc <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8004bb8:	4b65      	ldr	r3, [pc, #404]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004bba:	681b      	ldr	r3, [r3, #0]
 8004bbc:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8004bc0:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8004bc4:	d0ef      	beq.n	8004ba6 <HAL_RCCEx_PeriphCLKConfig+0x146>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8004bc6:	687b      	ldr	r3, [r7, #4]
 8004bc8:	681b      	ldr	r3, [r3, #0]
 8004bca:	f003 0304 	and.w	r3, r3, #4
 8004bce:	2b00      	cmp	r3, #0
 8004bd0:	d020      	beq.n	8004c14 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8004bd2:	4b5f      	ldr	r3, [pc, #380]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004bd4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004bd8:	0f1b      	lsrs	r3, r3, #28
 8004bda:	f003 0307 	and.w	r3, r3, #7
 8004bde:	613b      	str	r3, [r7, #16]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8004be0:	687b      	ldr	r3, [r7, #4]
 8004be2:	691b      	ldr	r3, [r3, #16]
 8004be4:	019a      	lsls	r2, r3, #6
 8004be6:	687b      	ldr	r3, [r7, #4]
 8004be8:	695b      	ldr	r3, [r3, #20]
 8004bea:	061b      	lsls	r3, r3, #24
 8004bec:	431a      	orrs	r2, r3
 8004bee:	693b      	ldr	r3, [r7, #16]
 8004bf0:	071b      	lsls	r3, r3, #28
 8004bf2:	4957      	ldr	r1, [pc, #348]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004bf4:	4313      	orrs	r3, r2
 8004bf6:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8004bfa:	4b55      	ldr	r3, [pc, #340]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004bfc:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8004c00:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8004c04:	687b      	ldr	r3, [r7, #4]
 8004c06:	6a1b      	ldr	r3, [r3, #32]
 8004c08:	3b01      	subs	r3, #1
 8004c0a:	021b      	lsls	r3, r3, #8
 8004c0c:	4950      	ldr	r1, [pc, #320]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004c0e:	4313      	orrs	r3, r2
 8004c10:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8004c14:	687b      	ldr	r3, [r7, #4]
 8004c16:	681b      	ldr	r3, [r3, #0]
 8004c18:	f003 0308 	and.w	r3, r3, #8
 8004c1c:	2b00      	cmp	r3, #0
 8004c1e:	d01e      	beq.n	8004c5e <HAL_RCCEx_PeriphCLKConfig+0x1fe>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8004c20:	4b4b      	ldr	r3, [pc, #300]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004c22:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004c26:	0e1b      	lsrs	r3, r3, #24
 8004c28:	f003 030f 	and.w	r3, r3, #15
 8004c2c:	613b      	str	r3, [r7, #16]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8004c2e:	687b      	ldr	r3, [r7, #4]
 8004c30:	691b      	ldr	r3, [r3, #16]
 8004c32:	019a      	lsls	r2, r3, #6
 8004c34:	693b      	ldr	r3, [r7, #16]
 8004c36:	061b      	lsls	r3, r3, #24
 8004c38:	431a      	orrs	r2, r3
 8004c3a:	687b      	ldr	r3, [r7, #4]
 8004c3c:	699b      	ldr	r3, [r3, #24]
 8004c3e:	071b      	lsls	r3, r3, #28
 8004c40:	4943      	ldr	r1, [pc, #268]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004c42:	4313      	orrs	r3, r2
 8004c44:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8004c48:	4b41      	ldr	r3, [pc, #260]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004c4a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8004c4e:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8004c52:	687b      	ldr	r3, [r7, #4]
 8004c54:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c56:	493e      	ldr	r1, [pc, #248]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004c58:	4313      	orrs	r3, r2
 8004c5a:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8004c5e:	4b3d      	ldr	r3, [pc, #244]	; (8004d54 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 8004c60:	2201      	movs	r2, #1
 8004c62:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8004c64:	f7fc ff9e 	bl	8001ba4 <HAL_GetTick>
 8004c68:	6178      	str	r0, [r7, #20]
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8004c6a:	e008      	b.n	8004c7e <HAL_RCCEx_PeriphCLKConfig+0x21e>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8004c6c:	f7fc ff9a 	bl	8001ba4 <HAL_GetTick>
 8004c70:	4602      	mov	r2, r0
 8004c72:	697b      	ldr	r3, [r7, #20]
 8004c74:	1ad3      	subs	r3, r2, r3
 8004c76:	2b02      	cmp	r3, #2
 8004c78:	d901      	bls.n	8004c7e <HAL_RCCEx_PeriphCLKConfig+0x21e>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8004c7a:	2303      	movs	r3, #3
 8004c7c:	e0a6      	b.n	8004dcc <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8004c7e:	4b34      	ldr	r3, [pc, #208]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004c80:	681b      	ldr	r3, [r3, #0]
 8004c82:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8004c86:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8004c8a:	d1ef      	bne.n	8004c6c <HAL_RCCEx_PeriphCLKConfig+0x20c>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8004c8c:	687b      	ldr	r3, [r7, #4]
 8004c8e:	681b      	ldr	r3, [r3, #0]
 8004c90:	f003 0320 	and.w	r3, r3, #32
 8004c94:	2b00      	cmp	r3, #0
 8004c96:	f000 808d 	beq.w	8004db4 <HAL_RCCEx_PeriphCLKConfig+0x354>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8004c9a:	2300      	movs	r3, #0
 8004c9c:	60fb      	str	r3, [r7, #12]
 8004c9e:	4b2c      	ldr	r3, [pc, #176]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004ca0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ca2:	4a2b      	ldr	r2, [pc, #172]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004ca4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004ca8:	6413      	str	r3, [r2, #64]	; 0x40
 8004caa:	4b29      	ldr	r3, [pc, #164]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004cac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004cae:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004cb2:	60fb      	str	r3, [r7, #12]
 8004cb4:	68fb      	ldr	r3, [r7, #12]

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8004cb6:	4b28      	ldr	r3, [pc, #160]	; (8004d58 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 8004cb8:	681b      	ldr	r3, [r3, #0]
 8004cba:	4a27      	ldr	r2, [pc, #156]	; (8004d58 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 8004cbc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004cc0:	6013      	str	r3, [r2, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8004cc2:	f7fc ff6f 	bl	8001ba4 <HAL_GetTick>
 8004cc6:	6178      	str	r0, [r7, #20]

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8004cc8:	e008      	b.n	8004cdc <HAL_RCCEx_PeriphCLKConfig+0x27c>
    {
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8004cca:	f7fc ff6b 	bl	8001ba4 <HAL_GetTick>
 8004cce:	4602      	mov	r2, r0
 8004cd0:	697b      	ldr	r3, [r7, #20]
 8004cd2:	1ad3      	subs	r3, r2, r3
 8004cd4:	2b02      	cmp	r3, #2
 8004cd6:	d901      	bls.n	8004cdc <HAL_RCCEx_PeriphCLKConfig+0x27c>
      {
        return HAL_TIMEOUT;
 8004cd8:	2303      	movs	r3, #3
 8004cda:	e077      	b.n	8004dcc <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 8004cdc:	4b1e      	ldr	r3, [pc, #120]	; (8004d58 <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 8004cde:	681b      	ldr	r3, [r3, #0]
 8004ce0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004ce4:	2b00      	cmp	r3, #0
 8004ce6:	d0f0      	beq.n	8004cca <HAL_RCCEx_PeriphCLKConfig+0x26a>
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8004ce8:	4b19      	ldr	r3, [pc, #100]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004cea:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004cec:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004cf0:	613b      	str	r3, [r7, #16]
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8004cf2:	693b      	ldr	r3, [r7, #16]
 8004cf4:	2b00      	cmp	r3, #0
 8004cf6:	d039      	beq.n	8004d6c <HAL_RCCEx_PeriphCLKConfig+0x30c>
 8004cf8:	687b      	ldr	r3, [r7, #4]
 8004cfa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004cfc:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004d00:	693a      	ldr	r2, [r7, #16]
 8004d02:	429a      	cmp	r2, r3
 8004d04:	d032      	beq.n	8004d6c <HAL_RCCEx_PeriphCLKConfig+0x30c>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8004d06:	4b12      	ldr	r3, [pc, #72]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004d08:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004d0a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004d0e:	613b      	str	r3, [r7, #16]
      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 8004d10:	4b12      	ldr	r3, [pc, #72]	; (8004d5c <HAL_RCCEx_PeriphCLKConfig+0x2fc>)
 8004d12:	2201      	movs	r2, #1
 8004d14:	601a      	str	r2, [r3, #0]
      __HAL_RCC_BACKUPRESET_RELEASE();
 8004d16:	4b11      	ldr	r3, [pc, #68]	; (8004d5c <HAL_RCCEx_PeriphCLKConfig+0x2fc>)
 8004d18:	2200      	movs	r2, #0
 8004d1a:	601a      	str	r2, [r3, #0]
      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg1;
 8004d1c:	4a0c      	ldr	r2, [pc, #48]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004d1e:	693b      	ldr	r3, [r7, #16]
 8004d20:	6713      	str	r3, [r2, #112]	; 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8004d22:	4b0b      	ldr	r3, [pc, #44]	; (8004d50 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8004d24:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004d26:	f003 0301 	and.w	r3, r3, #1
 8004d2a:	2b01      	cmp	r3, #1
 8004d2c:	d11e      	bne.n	8004d6c <HAL_RCCEx_PeriphCLKConfig+0x30c>
      {
        /* Get tick */
        tickstart = HAL_GetTick();
 8004d2e:	f7fc ff39 	bl	8001ba4 <HAL_GetTick>
 8004d32:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004d34:	e014      	b.n	8004d60 <HAL_RCCEx_PeriphCLKConfig+0x300>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004d36:	f7fc ff35 	bl	8001ba4 <HAL_GetTick>
 8004d3a:	4602      	mov	r2, r0
 8004d3c:	697b      	ldr	r3, [r7, #20]
 8004d3e:	1ad3      	subs	r3, r2, r3
 8004d40:	f241 3288 	movw	r2, #5000	; 0x1388
 8004d44:	4293      	cmp	r3, r2
 8004d46:	d90b      	bls.n	8004d60 <HAL_RCCEx_PeriphCLKConfig+0x300>
          {
            return HAL_TIMEOUT;
 8004d48:	2303      	movs	r3, #3
 8004d4a:	e03f      	b.n	8004dcc <HAL_RCCEx_PeriphCLKConfig+0x36c>
 8004d4c:	42470068 	.word	0x42470068
 8004d50:	40023800 	.word	0x40023800
 8004d54:	42470070 	.word	0x42470070
 8004d58:	40007000 	.word	0x40007000
 8004d5c:	42470e40 	.word	0x42470e40
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004d60:	4b1c      	ldr	r3, [pc, #112]	; (8004dd4 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004d62:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004d64:	f003 0302 	and.w	r3, r3, #2
 8004d68:	2b00      	cmp	r3, #0
 8004d6a:	d0e4      	beq.n	8004d36 <HAL_RCCEx_PeriphCLKConfig+0x2d6>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8004d6c:	687b      	ldr	r3, [r7, #4]
 8004d6e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004d70:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004d74:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8004d78:	d10d      	bne.n	8004d96 <HAL_RCCEx_PeriphCLKConfig+0x336>
 8004d7a:	4b16      	ldr	r3, [pc, #88]	; (8004dd4 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004d7c:	689b      	ldr	r3, [r3, #8]
 8004d7e:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 8004d82:	687b      	ldr	r3, [r7, #4]
 8004d84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004d86:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 8004d8a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004d8e:	4911      	ldr	r1, [pc, #68]	; (8004dd4 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004d90:	4313      	orrs	r3, r2
 8004d92:	608b      	str	r3, [r1, #8]
 8004d94:	e005      	b.n	8004da2 <HAL_RCCEx_PeriphCLKConfig+0x342>
 8004d96:	4b0f      	ldr	r3, [pc, #60]	; (8004dd4 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004d98:	689b      	ldr	r3, [r3, #8]
 8004d9a:	4a0e      	ldr	r2, [pc, #56]	; (8004dd4 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004d9c:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8004da0:	6093      	str	r3, [r2, #8]
 8004da2:	4b0c      	ldr	r3, [pc, #48]	; (8004dd4 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004da4:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8004da6:	687b      	ldr	r3, [r7, #4]
 8004da8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004daa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004dae:	4909      	ldr	r1, [pc, #36]	; (8004dd4 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8004db0:	4313      	orrs	r3, r2
 8004db2:	670b      	str	r3, [r1, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8004db4:	687b      	ldr	r3, [r7, #4]
 8004db6:	681b      	ldr	r3, [r3, #0]
 8004db8:	f003 0310 	and.w	r3, r3, #16
 8004dbc:	2b00      	cmp	r3, #0
 8004dbe:	d004      	beq.n	8004dca <HAL_RCCEx_PeriphCLKConfig+0x36a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8004dc0:	687b      	ldr	r3, [r7, #4]
 8004dc2:	f893 202c 	ldrb.w	r2, [r3, #44]	; 0x2c
 8004dc6:	4b04      	ldr	r3, [pc, #16]	; (8004dd8 <HAL_RCCEx_PeriphCLKConfig+0x378>)
 8004dc8:	601a      	str	r2, [r3, #0]
  }
  return HAL_OK;
 8004dca:	2300      	movs	r3, #0
}
 8004dcc:	4618      	mov	r0, r3
 8004dce:	3718      	adds	r7, #24
 8004dd0:	46bd      	mov	sp, r7
 8004dd2:	bd80      	pop	{r7, pc}
 8004dd4:	40023800 	.word	0x40023800
 8004dd8:	424711e0 	.word	0x424711e0

08004ddc <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8004ddc:	b580      	push	{r7, lr}
 8004dde:	b082      	sub	sp, #8
 8004de0:	af00      	add	r7, sp, #0
 8004de2:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8004de4:	687b      	ldr	r3, [r7, #4]
 8004de6:	2b00      	cmp	r3, #0
 8004de8:	d101      	bne.n	8004dee <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8004dea:	2301      	movs	r3, #1
 8004dec:	e056      	b.n	8004e9c <HAL_SPI_Init+0xc0>
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8004dee:	687b      	ldr	r3, [r7, #4]
 8004df0:	2200      	movs	r2, #0
 8004df2:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8004df4:	687b      	ldr	r3, [r7, #4]
 8004df6:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8004dfa:	b2db      	uxtb	r3, r3
 8004dfc:	2b00      	cmp	r3, #0
 8004dfe:	d106      	bne.n	8004e0e <HAL_SPI_Init+0x32>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8004e00:	687b      	ldr	r3, [r7, #4]
 8004e02:	2200      	movs	r2, #0
 8004e04:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8004e08:	6878      	ldr	r0, [r7, #4]
 8004e0a:	f7fc fac1 	bl	8001390 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8004e0e:	687b      	ldr	r3, [r7, #4]
 8004e10:	2202      	movs	r2, #2
 8004e12:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8004e16:	687b      	ldr	r3, [r7, #4]
 8004e18:	681b      	ldr	r3, [r3, #0]
 8004e1a:	681a      	ldr	r2, [r3, #0]
 8004e1c:	687b      	ldr	r3, [r7, #4]
 8004e1e:	681b      	ldr	r3, [r3, #0]
 8004e20:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004e24:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8004e26:	687b      	ldr	r3, [r7, #4]
 8004e28:	685a      	ldr	r2, [r3, #4]
 8004e2a:	687b      	ldr	r3, [r7, #4]
 8004e2c:	689b      	ldr	r3, [r3, #8]
 8004e2e:	431a      	orrs	r2, r3
 8004e30:	687b      	ldr	r3, [r7, #4]
 8004e32:	68db      	ldr	r3, [r3, #12]
 8004e34:	431a      	orrs	r2, r3
 8004e36:	687b      	ldr	r3, [r7, #4]
 8004e38:	691b      	ldr	r3, [r3, #16]
 8004e3a:	431a      	orrs	r2, r3
 8004e3c:	687b      	ldr	r3, [r7, #4]
 8004e3e:	695b      	ldr	r3, [r3, #20]
 8004e40:	431a      	orrs	r2, r3
 8004e42:	687b      	ldr	r3, [r7, #4]
 8004e44:	699b      	ldr	r3, [r3, #24]
 8004e46:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8004e4a:	431a      	orrs	r2, r3
 8004e4c:	687b      	ldr	r3, [r7, #4]
 8004e4e:	69db      	ldr	r3, [r3, #28]
 8004e50:	431a      	orrs	r2, r3
 8004e52:	687b      	ldr	r3, [r7, #4]
 8004e54:	6a1b      	ldr	r3, [r3, #32]
 8004e56:	ea42 0103 	orr.w	r1, r2, r3
 8004e5a:	687b      	ldr	r3, [r7, #4]
 8004e5c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004e5e:	687b      	ldr	r3, [r7, #4]
 8004e60:	681b      	ldr	r3, [r3, #0]
 8004e62:	430a      	orrs	r2, r1
 8004e64:	601a      	str	r2, [r3, #0]
                                  hspi->Init.CLKPolarity | hspi->Init.CLKPhase | (hspi->Init.NSS & SPI_CR1_SSM) |
                                  hspi->Init.BaudRatePrescaler | hspi->Init.FirstBit  | hspi->Init.CRCCalculation));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8004e66:	687b      	ldr	r3, [r7, #4]
 8004e68:	699b      	ldr	r3, [r3, #24]
 8004e6a:	0c1b      	lsrs	r3, r3, #16
 8004e6c:	f003 0104 	and.w	r1, r3, #4
 8004e70:	687b      	ldr	r3, [r7, #4]
 8004e72:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004e74:	687b      	ldr	r3, [r7, #4]
 8004e76:	681b      	ldr	r3, [r3, #0]
 8004e78:	430a      	orrs	r2, r1
 8004e7a:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	681b      	ldr	r3, [r3, #0]
 8004e80:	69da      	ldr	r2, [r3, #28]
 8004e82:	687b      	ldr	r3, [r7, #4]
 8004e84:	681b      	ldr	r3, [r3, #0]
 8004e86:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004e8a:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8004e8c:	687b      	ldr	r3, [r7, #4]
 8004e8e:	2200      	movs	r2, #0
 8004e90:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8004e92:	687b      	ldr	r3, [r7, #4]
 8004e94:	2201      	movs	r2, #1
 8004e96:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

  return HAL_OK;
 8004e9a:	2300      	movs	r3, #0
}
 8004e9c:	4618      	mov	r0, r3
 8004e9e:	3708      	adds	r7, #8
 8004ea0:	46bd      	mov	sp, r7
 8004ea2:	bd80      	pop	{r7, pc}

08004ea4 <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8004ea4:	b580      	push	{r7, lr}
 8004ea6:	b088      	sub	sp, #32
 8004ea8:	af00      	add	r7, sp, #0
 8004eaa:	60f8      	str	r0, [r7, #12]
 8004eac:	60b9      	str	r1, [r7, #8]
 8004eae:	603b      	str	r3, [r7, #0]
 8004eb0:	4613      	mov	r3, r2
 8004eb2:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 8004eb4:	2300      	movs	r3, #0
 8004eb6:	77fb      	strb	r3, [r7, #31]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8004eb8:	68fb      	ldr	r3, [r7, #12]
 8004eba:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8004ebe:	2b01      	cmp	r3, #1
 8004ec0:	d101      	bne.n	8004ec6 <HAL_SPI_Transmit+0x22>
 8004ec2:	2302      	movs	r3, #2
 8004ec4:	e11e      	b.n	8005104 <HAL_SPI_Transmit+0x260>
 8004ec6:	68fb      	ldr	r3, [r7, #12]
 8004ec8:	2201      	movs	r2, #1
 8004eca:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8004ece:	f7fc fe69 	bl	8001ba4 <HAL_GetTick>
 8004ed2:	61b8      	str	r0, [r7, #24]
  initial_TxXferCount = Size;
 8004ed4:	88fb      	ldrh	r3, [r7, #6]
 8004ed6:	82fb      	strh	r3, [r7, #22]

  if (hspi->State != HAL_SPI_STATE_READY)
 8004ed8:	68fb      	ldr	r3, [r7, #12]
 8004eda:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8004ede:	b2db      	uxtb	r3, r3
 8004ee0:	2b01      	cmp	r3, #1
 8004ee2:	d002      	beq.n	8004eea <HAL_SPI_Transmit+0x46>
  {
    errorcode = HAL_BUSY;
 8004ee4:	2302      	movs	r3, #2
 8004ee6:	77fb      	strb	r3, [r7, #31]
    goto error;
 8004ee8:	e103      	b.n	80050f2 <HAL_SPI_Transmit+0x24e>
  }

  if ((pData == NULL) || (Size == 0U))
 8004eea:	68bb      	ldr	r3, [r7, #8]
 8004eec:	2b00      	cmp	r3, #0
 8004eee:	d002      	beq.n	8004ef6 <HAL_SPI_Transmit+0x52>
 8004ef0:	88fb      	ldrh	r3, [r7, #6]
 8004ef2:	2b00      	cmp	r3, #0
 8004ef4:	d102      	bne.n	8004efc <HAL_SPI_Transmit+0x58>
  {
    errorcode = HAL_ERROR;
 8004ef6:	2301      	movs	r3, #1
 8004ef8:	77fb      	strb	r3, [r7, #31]
    goto error;
 8004efa:	e0fa      	b.n	80050f2 <HAL_SPI_Transmit+0x24e>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8004efc:	68fb      	ldr	r3, [r7, #12]
 8004efe:	2203      	movs	r2, #3
 8004f00:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8004f04:	68fb      	ldr	r3, [r7, #12]
 8004f06:	2200      	movs	r2, #0
 8004f08:	655a      	str	r2, [r3, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8004f0a:	68fb      	ldr	r3, [r7, #12]
 8004f0c:	68ba      	ldr	r2, [r7, #8]
 8004f0e:	631a      	str	r2, [r3, #48]	; 0x30
  hspi->TxXferSize  = Size;
 8004f10:	68fb      	ldr	r3, [r7, #12]
 8004f12:	88fa      	ldrh	r2, [r7, #6]
 8004f14:	869a      	strh	r2, [r3, #52]	; 0x34
  hspi->TxXferCount = Size;
 8004f16:	68fb      	ldr	r3, [r7, #12]
 8004f18:	88fa      	ldrh	r2, [r7, #6]
 8004f1a:	86da      	strh	r2, [r3, #54]	; 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8004f1c:	68fb      	ldr	r3, [r7, #12]
 8004f1e:	2200      	movs	r2, #0
 8004f20:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 8004f22:	68fb      	ldr	r3, [r7, #12]
 8004f24:	2200      	movs	r2, #0
 8004f26:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 8004f28:	68fb      	ldr	r3, [r7, #12]
 8004f2a:	2200      	movs	r2, #0
 8004f2c:	87da      	strh	r2, [r3, #62]	; 0x3e
  hspi->TxISR       = NULL;
 8004f2e:	68fb      	ldr	r3, [r7, #12]
 8004f30:	2200      	movs	r2, #0
 8004f32:	645a      	str	r2, [r3, #68]	; 0x44
  hspi->RxISR       = NULL;
 8004f34:	68fb      	ldr	r3, [r7, #12]
 8004f36:	2200      	movs	r2, #0
 8004f38:	641a      	str	r2, [r3, #64]	; 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8004f3a:	68fb      	ldr	r3, [r7, #12]
 8004f3c:	689b      	ldr	r3, [r3, #8]
 8004f3e:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004f42:	d107      	bne.n	8004f54 <HAL_SPI_Transmit+0xb0>
  {
    SPI_1LINE_TX(hspi);
 8004f44:	68fb      	ldr	r3, [r7, #12]
 8004f46:	681b      	ldr	r3, [r3, #0]
 8004f48:	681a      	ldr	r2, [r3, #0]
 8004f4a:	68fb      	ldr	r3, [r7, #12]
 8004f4c:	681b      	ldr	r3, [r3, #0]
 8004f4e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8004f52:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8004f54:	68fb      	ldr	r3, [r7, #12]
 8004f56:	681b      	ldr	r3, [r3, #0]
 8004f58:	681b      	ldr	r3, [r3, #0]
 8004f5a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004f5e:	2b40      	cmp	r3, #64	; 0x40
 8004f60:	d007      	beq.n	8004f72 <HAL_SPI_Transmit+0xce>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8004f62:	68fb      	ldr	r3, [r7, #12]
 8004f64:	681b      	ldr	r3, [r3, #0]
 8004f66:	681a      	ldr	r2, [r3, #0]
 8004f68:	68fb      	ldr	r3, [r7, #12]
 8004f6a:	681b      	ldr	r3, [r3, #0]
 8004f6c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004f70:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8004f72:	68fb      	ldr	r3, [r7, #12]
 8004f74:	68db      	ldr	r3, [r3, #12]
 8004f76:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8004f7a:	d14b      	bne.n	8005014 <HAL_SPI_Transmit+0x170>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8004f7c:	68fb      	ldr	r3, [r7, #12]
 8004f7e:	685b      	ldr	r3, [r3, #4]
 8004f80:	2b00      	cmp	r3, #0
 8004f82:	d002      	beq.n	8004f8a <HAL_SPI_Transmit+0xe6>
 8004f84:	8afb      	ldrh	r3, [r7, #22]
 8004f86:	2b01      	cmp	r3, #1
 8004f88:	d13e      	bne.n	8005008 <HAL_SPI_Transmit+0x164>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8004f8a:	68fb      	ldr	r3, [r7, #12]
 8004f8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f8e:	881a      	ldrh	r2, [r3, #0]
 8004f90:	68fb      	ldr	r3, [r7, #12]
 8004f92:	681b      	ldr	r3, [r3, #0]
 8004f94:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8004f96:	68fb      	ldr	r3, [r7, #12]
 8004f98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f9a:	1c9a      	adds	r2, r3, #2
 8004f9c:	68fb      	ldr	r3, [r7, #12]
 8004f9e:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 8004fa0:	68fb      	ldr	r3, [r7, #12]
 8004fa2:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004fa4:	b29b      	uxth	r3, r3
 8004fa6:	3b01      	subs	r3, #1
 8004fa8:	b29a      	uxth	r2, r3
 8004faa:	68fb      	ldr	r3, [r7, #12]
 8004fac:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8004fae:	e02b      	b.n	8005008 <HAL_SPI_Transmit+0x164>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8004fb0:	68fb      	ldr	r3, [r7, #12]
 8004fb2:	681b      	ldr	r3, [r3, #0]
 8004fb4:	689b      	ldr	r3, [r3, #8]
 8004fb6:	f003 0302 	and.w	r3, r3, #2
 8004fba:	2b02      	cmp	r3, #2
 8004fbc:	d112      	bne.n	8004fe4 <HAL_SPI_Transmit+0x140>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8004fbe:	68fb      	ldr	r3, [r7, #12]
 8004fc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004fc2:	881a      	ldrh	r2, [r3, #0]
 8004fc4:	68fb      	ldr	r3, [r7, #12]
 8004fc6:	681b      	ldr	r3, [r3, #0]
 8004fc8:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8004fca:	68fb      	ldr	r3, [r7, #12]
 8004fcc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004fce:	1c9a      	adds	r2, r3, #2
 8004fd0:	68fb      	ldr	r3, [r7, #12]
 8004fd2:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8004fd4:	68fb      	ldr	r3, [r7, #12]
 8004fd6:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004fd8:	b29b      	uxth	r3, r3
 8004fda:	3b01      	subs	r3, #1
 8004fdc:	b29a      	uxth	r2, r3
 8004fde:	68fb      	ldr	r3, [r7, #12]
 8004fe0:	86da      	strh	r2, [r3, #54]	; 0x36
 8004fe2:	e011      	b.n	8005008 <HAL_SPI_Transmit+0x164>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8004fe4:	f7fc fdde 	bl	8001ba4 <HAL_GetTick>
 8004fe8:	4602      	mov	r2, r0
 8004fea:	69bb      	ldr	r3, [r7, #24]
 8004fec:	1ad3      	subs	r3, r2, r3
 8004fee:	683a      	ldr	r2, [r7, #0]
 8004ff0:	429a      	cmp	r2, r3
 8004ff2:	d803      	bhi.n	8004ffc <HAL_SPI_Transmit+0x158>
 8004ff4:	683b      	ldr	r3, [r7, #0]
 8004ff6:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004ffa:	d102      	bne.n	8005002 <HAL_SPI_Transmit+0x15e>
 8004ffc:	683b      	ldr	r3, [r7, #0]
 8004ffe:	2b00      	cmp	r3, #0
 8005000:	d102      	bne.n	8005008 <HAL_SPI_Transmit+0x164>
        {
          errorcode = HAL_TIMEOUT;
 8005002:	2303      	movs	r3, #3
 8005004:	77fb      	strb	r3, [r7, #31]
          goto error;
 8005006:	e074      	b.n	80050f2 <HAL_SPI_Transmit+0x24e>
    while (hspi->TxXferCount > 0U)
 8005008:	68fb      	ldr	r3, [r7, #12]
 800500a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800500c:	b29b      	uxth	r3, r3
 800500e:	2b00      	cmp	r3, #0
 8005010:	d1ce      	bne.n	8004fb0 <HAL_SPI_Transmit+0x10c>
 8005012:	e04c      	b.n	80050ae <HAL_SPI_Transmit+0x20a>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005014:	68fb      	ldr	r3, [r7, #12]
 8005016:	685b      	ldr	r3, [r3, #4]
 8005018:	2b00      	cmp	r3, #0
 800501a:	d002      	beq.n	8005022 <HAL_SPI_Transmit+0x17e>
 800501c:	8afb      	ldrh	r3, [r7, #22]
 800501e:	2b01      	cmp	r3, #1
 8005020:	d140      	bne.n	80050a4 <HAL_SPI_Transmit+0x200>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8005022:	68fb      	ldr	r3, [r7, #12]
 8005024:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005026:	68fb      	ldr	r3, [r7, #12]
 8005028:	681b      	ldr	r3, [r3, #0]
 800502a:	330c      	adds	r3, #12
 800502c:	7812      	ldrb	r2, [r2, #0]
 800502e:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8005030:	68fb      	ldr	r3, [r7, #12]
 8005032:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005034:	1c5a      	adds	r2, r3, #1
 8005036:	68fb      	ldr	r3, [r7, #12]
 8005038:	631a      	str	r2, [r3, #48]	; 0x30
      hspi->TxXferCount--;
 800503a:	68fb      	ldr	r3, [r7, #12]
 800503c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800503e:	b29b      	uxth	r3, r3
 8005040:	3b01      	subs	r3, #1
 8005042:	b29a      	uxth	r2, r3
 8005044:	68fb      	ldr	r3, [r7, #12]
 8005046:	86da      	strh	r2, [r3, #54]	; 0x36
    }
    while (hspi->TxXferCount > 0U)
 8005048:	e02c      	b.n	80050a4 <HAL_SPI_Transmit+0x200>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800504a:	68fb      	ldr	r3, [r7, #12]
 800504c:	681b      	ldr	r3, [r3, #0]
 800504e:	689b      	ldr	r3, [r3, #8]
 8005050:	f003 0302 	and.w	r3, r3, #2
 8005054:	2b02      	cmp	r3, #2
 8005056:	d113      	bne.n	8005080 <HAL_SPI_Transmit+0x1dc>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8005058:	68fb      	ldr	r3, [r7, #12]
 800505a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800505c:	68fb      	ldr	r3, [r7, #12]
 800505e:	681b      	ldr	r3, [r3, #0]
 8005060:	330c      	adds	r3, #12
 8005062:	7812      	ldrb	r2, [r2, #0]
 8005064:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8005066:	68fb      	ldr	r3, [r7, #12]
 8005068:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800506a:	1c5a      	adds	r2, r3, #1
 800506c:	68fb      	ldr	r3, [r7, #12]
 800506e:	631a      	str	r2, [r3, #48]	; 0x30
        hspi->TxXferCount--;
 8005070:	68fb      	ldr	r3, [r7, #12]
 8005072:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005074:	b29b      	uxth	r3, r3
 8005076:	3b01      	subs	r3, #1
 8005078:	b29a      	uxth	r2, r3
 800507a:	68fb      	ldr	r3, [r7, #12]
 800507c:	86da      	strh	r2, [r3, #54]	; 0x36
 800507e:	e011      	b.n	80050a4 <HAL_SPI_Transmit+0x200>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005080:	f7fc fd90 	bl	8001ba4 <HAL_GetTick>
 8005084:	4602      	mov	r2, r0
 8005086:	69bb      	ldr	r3, [r7, #24]
 8005088:	1ad3      	subs	r3, r2, r3
 800508a:	683a      	ldr	r2, [r7, #0]
 800508c:	429a      	cmp	r2, r3
 800508e:	d803      	bhi.n	8005098 <HAL_SPI_Transmit+0x1f4>
 8005090:	683b      	ldr	r3, [r7, #0]
 8005092:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005096:	d102      	bne.n	800509e <HAL_SPI_Transmit+0x1fa>
 8005098:	683b      	ldr	r3, [r7, #0]
 800509a:	2b00      	cmp	r3, #0
 800509c:	d102      	bne.n	80050a4 <HAL_SPI_Transmit+0x200>
        {
          errorcode = HAL_TIMEOUT;
 800509e:	2303      	movs	r3, #3
 80050a0:	77fb      	strb	r3, [r7, #31]
          goto error;
 80050a2:	e026      	b.n	80050f2 <HAL_SPI_Transmit+0x24e>
    while (hspi->TxXferCount > 0U)
 80050a4:	68fb      	ldr	r3, [r7, #12]
 80050a6:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80050a8:	b29b      	uxth	r3, r3
 80050aa:	2b00      	cmp	r3, #0
 80050ac:	d1cd      	bne.n	800504a <HAL_SPI_Transmit+0x1a6>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80050ae:	69ba      	ldr	r2, [r7, #24]
 80050b0:	6839      	ldr	r1, [r7, #0]
 80050b2:	68f8      	ldr	r0, [r7, #12]
 80050b4:	f000 f894 	bl	80051e0 <SPI_EndRxTxTransaction>
 80050b8:	4603      	mov	r3, r0
 80050ba:	2b00      	cmp	r3, #0
 80050bc:	d002      	beq.n	80050c4 <HAL_SPI_Transmit+0x220>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80050be:	68fb      	ldr	r3, [r7, #12]
 80050c0:	2220      	movs	r2, #32
 80050c2:	655a      	str	r2, [r3, #84]	; 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80050c4:	68fb      	ldr	r3, [r7, #12]
 80050c6:	689b      	ldr	r3, [r3, #8]
 80050c8:	2b00      	cmp	r3, #0
 80050ca:	d10a      	bne.n	80050e2 <HAL_SPI_Transmit+0x23e>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80050cc:	2300      	movs	r3, #0
 80050ce:	613b      	str	r3, [r7, #16]
 80050d0:	68fb      	ldr	r3, [r7, #12]
 80050d2:	681b      	ldr	r3, [r3, #0]
 80050d4:	68db      	ldr	r3, [r3, #12]
 80050d6:	613b      	str	r3, [r7, #16]
 80050d8:	68fb      	ldr	r3, [r7, #12]
 80050da:	681b      	ldr	r3, [r3, #0]
 80050dc:	689b      	ldr	r3, [r3, #8]
 80050de:	613b      	str	r3, [r7, #16]
 80050e0:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80050e2:	68fb      	ldr	r3, [r7, #12]
 80050e4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80050e6:	2b00      	cmp	r3, #0
 80050e8:	d002      	beq.n	80050f0 <HAL_SPI_Transmit+0x24c>
  {
    errorcode = HAL_ERROR;
 80050ea:	2301      	movs	r3, #1
 80050ec:	77fb      	strb	r3, [r7, #31]
 80050ee:	e000      	b.n	80050f2 <HAL_SPI_Transmit+0x24e>
  }

error:
 80050f0:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 80050f2:	68fb      	ldr	r3, [r7, #12]
 80050f4:	2201      	movs	r2, #1
 80050f6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 80050fa:	68fb      	ldr	r3, [r7, #12]
 80050fc:	2200      	movs	r2, #0
 80050fe:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
  return errorcode;
 8005102:	7ffb      	ldrb	r3, [r7, #31]
}
 8005104:	4618      	mov	r0, r3
 8005106:	3720      	adds	r7, #32
 8005108:	46bd      	mov	sp, r7
 800510a:	bd80      	pop	{r7, pc}

0800510c <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 800510c:	b580      	push	{r7, lr}
 800510e:	b084      	sub	sp, #16
 8005110:	af00      	add	r7, sp, #0
 8005112:	60f8      	str	r0, [r7, #12]
 8005114:	60b9      	str	r1, [r7, #8]
 8005116:	603b      	str	r3, [r7, #0]
 8005118:	4613      	mov	r3, r2
 800511a:	71fb      	strb	r3, [r7, #7]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800511c:	e04c      	b.n	80051b8 <SPI_WaitFlagStateUntilTimeout+0xac>
  {
    if (Timeout != HAL_MAX_DELAY)
 800511e:	683b      	ldr	r3, [r7, #0]
 8005120:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005124:	d048      	beq.n	80051b8 <SPI_WaitFlagStateUntilTimeout+0xac>
    {
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8005126:	f7fc fd3d 	bl	8001ba4 <HAL_GetTick>
 800512a:	4602      	mov	r2, r0
 800512c:	69bb      	ldr	r3, [r7, #24]
 800512e:	1ad3      	subs	r3, r2, r3
 8005130:	683a      	ldr	r2, [r7, #0]
 8005132:	429a      	cmp	r2, r3
 8005134:	d902      	bls.n	800513c <SPI_WaitFlagStateUntilTimeout+0x30>
 8005136:	683b      	ldr	r3, [r7, #0]
 8005138:	2b00      	cmp	r3, #0
 800513a:	d13d      	bne.n	80051b8 <SPI_WaitFlagStateUntilTimeout+0xac>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
        on both master and slave sides in order to resynchronize the master
        and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800513c:	68fb      	ldr	r3, [r7, #12]
 800513e:	681b      	ldr	r3, [r3, #0]
 8005140:	685a      	ldr	r2, [r3, #4]
 8005142:	68fb      	ldr	r3, [r7, #12]
 8005144:	681b      	ldr	r3, [r3, #0]
 8005146:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800514a:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800514c:	68fb      	ldr	r3, [r7, #12]
 800514e:	685b      	ldr	r3, [r3, #4]
 8005150:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005154:	d111      	bne.n	800517a <SPI_WaitFlagStateUntilTimeout+0x6e>
 8005156:	68fb      	ldr	r3, [r7, #12]
 8005158:	689b      	ldr	r3, [r3, #8]
 800515a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800515e:	d004      	beq.n	800516a <SPI_WaitFlagStateUntilTimeout+0x5e>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8005160:	68fb      	ldr	r3, [r7, #12]
 8005162:	689b      	ldr	r3, [r3, #8]
 8005164:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005168:	d107      	bne.n	800517a <SPI_WaitFlagStateUntilTimeout+0x6e>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 800516a:	68fb      	ldr	r3, [r7, #12]
 800516c:	681b      	ldr	r3, [r3, #0]
 800516e:	681a      	ldr	r2, [r3, #0]
 8005170:	68fb      	ldr	r3, [r7, #12]
 8005172:	681b      	ldr	r3, [r3, #0]
 8005174:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005178:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800517a:	68fb      	ldr	r3, [r7, #12]
 800517c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800517e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005182:	d10f      	bne.n	80051a4 <SPI_WaitFlagStateUntilTimeout+0x98>
        {
          SPI_RESET_CRC(hspi);
 8005184:	68fb      	ldr	r3, [r7, #12]
 8005186:	681b      	ldr	r3, [r3, #0]
 8005188:	681a      	ldr	r2, [r3, #0]
 800518a:	68fb      	ldr	r3, [r7, #12]
 800518c:	681b      	ldr	r3, [r3, #0]
 800518e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8005192:	601a      	str	r2, [r3, #0]
 8005194:	68fb      	ldr	r3, [r7, #12]
 8005196:	681b      	ldr	r3, [r3, #0]
 8005198:	681a      	ldr	r2, [r3, #0]
 800519a:	68fb      	ldr	r3, [r7, #12]
 800519c:	681b      	ldr	r3, [r3, #0]
 800519e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80051a2:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 80051a4:	68fb      	ldr	r3, [r7, #12]
 80051a6:	2201      	movs	r2, #1
 80051a8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 80051ac:	68fb      	ldr	r3, [r7, #12]
 80051ae:	2200      	movs	r2, #0
 80051b0:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50

        return HAL_TIMEOUT;
 80051b4:	2303      	movs	r3, #3
 80051b6:	e00f      	b.n	80051d8 <SPI_WaitFlagStateUntilTimeout+0xcc>
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 80051b8:	68fb      	ldr	r3, [r7, #12]
 80051ba:	681b      	ldr	r3, [r3, #0]
 80051bc:	689a      	ldr	r2, [r3, #8]
 80051be:	68bb      	ldr	r3, [r7, #8]
 80051c0:	4013      	ands	r3, r2
 80051c2:	68ba      	ldr	r2, [r7, #8]
 80051c4:	429a      	cmp	r2, r3
 80051c6:	bf0c      	ite	eq
 80051c8:	2301      	moveq	r3, #1
 80051ca:	2300      	movne	r3, #0
 80051cc:	b2db      	uxtb	r3, r3
 80051ce:	461a      	mov	r2, r3
 80051d0:	79fb      	ldrb	r3, [r7, #7]
 80051d2:	429a      	cmp	r2, r3
 80051d4:	d1a3      	bne.n	800511e <SPI_WaitFlagStateUntilTimeout+0x12>
      }
    }
  }

  return HAL_OK;
 80051d6:	2300      	movs	r3, #0
}
 80051d8:	4618      	mov	r0, r3
 80051da:	3710      	adds	r7, #16
 80051dc:	46bd      	mov	sp, r7
 80051de:	bd80      	pop	{r7, pc}

080051e0 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 80051e0:	b580      	push	{r7, lr}
 80051e2:	b088      	sub	sp, #32
 80051e4:	af02      	add	r7, sp, #8
 80051e6:	60f8      	str	r0, [r7, #12]
 80051e8:	60b9      	str	r1, [r7, #8]
 80051ea:	607a      	str	r2, [r7, #4]
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80051ec:	4b1b      	ldr	r3, [pc, #108]	; (800525c <SPI_EndRxTxTransaction+0x7c>)
 80051ee:	681b      	ldr	r3, [r3, #0]
 80051f0:	4a1b      	ldr	r2, [pc, #108]	; (8005260 <SPI_EndRxTxTransaction+0x80>)
 80051f2:	fba2 2303 	umull	r2, r3, r2, r3
 80051f6:	0d5b      	lsrs	r3, r3, #21
 80051f8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80051fc:	fb02 f303 	mul.w	r3, r2, r3
 8005200:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005202:	68fb      	ldr	r3, [r7, #12]
 8005204:	685b      	ldr	r3, [r3, #4]
 8005206:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800520a:	d112      	bne.n	8005232 <SPI_EndRxTxTransaction+0x52>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800520c:	687b      	ldr	r3, [r7, #4]
 800520e:	9300      	str	r3, [sp, #0]
 8005210:	68bb      	ldr	r3, [r7, #8]
 8005212:	2200      	movs	r2, #0
 8005214:	2180      	movs	r1, #128	; 0x80
 8005216:	68f8      	ldr	r0, [r7, #12]
 8005218:	f7ff ff78 	bl	800510c <SPI_WaitFlagStateUntilTimeout>
 800521c:	4603      	mov	r3, r0
 800521e:	2b00      	cmp	r3, #0
 8005220:	d016      	beq.n	8005250 <SPI_EndRxTxTransaction+0x70>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8005222:	68fb      	ldr	r3, [r7, #12]
 8005224:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005226:	f043 0220 	orr.w	r2, r3, #32
 800522a:	68fb      	ldr	r3, [r7, #12]
 800522c:	655a      	str	r2, [r3, #84]	; 0x54
      return HAL_TIMEOUT;
 800522e:	2303      	movs	r3, #3
 8005230:	e00f      	b.n	8005252 <SPI_EndRxTxTransaction+0x72>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 8005232:	697b      	ldr	r3, [r7, #20]
 8005234:	2b00      	cmp	r3, #0
 8005236:	d00a      	beq.n	800524e <SPI_EndRxTxTransaction+0x6e>
      {
        break;
      }
      count--;
 8005238:	697b      	ldr	r3, [r7, #20]
 800523a:	3b01      	subs	r3, #1
 800523c:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800523e:	68fb      	ldr	r3, [r7, #12]
 8005240:	681b      	ldr	r3, [r3, #0]
 8005242:	689b      	ldr	r3, [r3, #8]
 8005244:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005248:	2b80      	cmp	r3, #128	; 0x80
 800524a:	d0f2      	beq.n	8005232 <SPI_EndRxTxTransaction+0x52>
 800524c:	e000      	b.n	8005250 <SPI_EndRxTxTransaction+0x70>
        break;
 800524e:	bf00      	nop
  }

  return HAL_OK;
 8005250:	2300      	movs	r3, #0
}
 8005252:	4618      	mov	r0, r3
 8005254:	3718      	adds	r7, #24
 8005256:	46bd      	mov	sp, r7
 8005258:	bd80      	pop	{r7, pc}
 800525a:	bf00      	nop
 800525c:	20000004 	.word	0x20000004
 8005260:	165e9f81 	.word	0x165e9f81

08005264 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8005264:	b580      	push	{r7, lr}
 8005266:	b082      	sub	sp, #8
 8005268:	af00      	add	r7, sp, #0
 800526a:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800526c:	687b      	ldr	r3, [r7, #4]
 800526e:	2b00      	cmp	r3, #0
 8005270:	d101      	bne.n	8005276 <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8005272:	2301      	movs	r3, #1
 8005274:	e01d      	b.n	80052b2 <HAL_TIM_Base_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8005276:	687b      	ldr	r3, [r7, #4]
 8005278:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800527c:	b2db      	uxtb	r3, r3
 800527e:	2b00      	cmp	r3, #0
 8005280:	d106      	bne.n	8005290 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8005282:	687b      	ldr	r3, [r7, #4]
 8005284:	2200      	movs	r2, #0
 8005286:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 800528a:	6878      	ldr	r0, [r7, #4]
 800528c:	f000 f815 	bl	80052ba <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8005290:	687b      	ldr	r3, [r7, #4]
 8005292:	2202      	movs	r2, #2
 8005294:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8005298:	687b      	ldr	r3, [r7, #4]
 800529a:	681a      	ldr	r2, [r3, #0]
 800529c:	687b      	ldr	r3, [r7, #4]
 800529e:	3304      	adds	r3, #4
 80052a0:	4619      	mov	r1, r3
 80052a2:	4610      	mov	r0, r2
 80052a4:	f000 fa96 	bl	80057d4 <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 80052a8:	687b      	ldr	r3, [r7, #4]
 80052aa:	2201      	movs	r2, #1
 80052ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 80052b0:	2300      	movs	r3, #0
}
 80052b2:	4618      	mov	r0, r3
 80052b4:	3708      	adds	r7, #8
 80052b6:	46bd      	mov	sp, r7
 80052b8:	bd80      	pop	{r7, pc}

080052ba <HAL_TIM_Base_MspInit>:
  * @brief  Initializes the TIM Base MSP.
  * @param  htim TIM Base handle
  * @retval None
  */
__weak void HAL_TIM_Base_MspInit(TIM_HandleTypeDef *htim)
{
 80052ba:	b480      	push	{r7}
 80052bc:	b083      	sub	sp, #12
 80052be:	af00      	add	r7, sp, #0
 80052c0:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 80052c2:	bf00      	nop
 80052c4:	370c      	adds	r7, #12
 80052c6:	46bd      	mov	sp, r7
 80052c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052cc:	4770      	bx	lr

080052ce <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 80052ce:	b480      	push	{r7}
 80052d0:	b085      	sub	sp, #20
 80052d2:	af00      	add	r7, sp, #0
 80052d4:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80052d6:	687b      	ldr	r3, [r7, #4]
 80052d8:	681b      	ldr	r3, [r3, #0]
 80052da:	68da      	ldr	r2, [r3, #12]
 80052dc:	687b      	ldr	r3, [r7, #4]
 80052de:	681b      	ldr	r3, [r3, #0]
 80052e0:	f042 0201 	orr.w	r2, r2, #1
 80052e4:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80052e6:	687b      	ldr	r3, [r7, #4]
 80052e8:	681b      	ldr	r3, [r3, #0]
 80052ea:	689b      	ldr	r3, [r3, #8]
 80052ec:	f003 0307 	and.w	r3, r3, #7
 80052f0:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80052f2:	68fb      	ldr	r3, [r7, #12]
 80052f4:	2b06      	cmp	r3, #6
 80052f6:	d007      	beq.n	8005308 <HAL_TIM_Base_Start_IT+0x3a>
  {
    __HAL_TIM_ENABLE(htim);
 80052f8:	687b      	ldr	r3, [r7, #4]
 80052fa:	681b      	ldr	r3, [r3, #0]
 80052fc:	681a      	ldr	r2, [r3, #0]
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	681b      	ldr	r3, [r3, #0]
 8005302:	f042 0201 	orr.w	r2, r2, #1
 8005306:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8005308:	2300      	movs	r3, #0
}
 800530a:	4618      	mov	r0, r3
 800530c:	3714      	adds	r7, #20
 800530e:	46bd      	mov	sp, r7
 8005310:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005314:	4770      	bx	lr

08005316 <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 8005316:	b580      	push	{r7, lr}
 8005318:	b082      	sub	sp, #8
 800531a:	af00      	add	r7, sp, #0
 800531c:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800531e:	687b      	ldr	r3, [r7, #4]
 8005320:	2b00      	cmp	r3, #0
 8005322:	d101      	bne.n	8005328 <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 8005324:	2301      	movs	r3, #1
 8005326:	e01d      	b.n	8005364 <HAL_TIM_PWM_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8005328:	687b      	ldr	r3, [r7, #4]
 800532a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800532e:	b2db      	uxtb	r3, r3
 8005330:	2b00      	cmp	r3, #0
 8005332:	d106      	bne.n	8005342 <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8005334:	687b      	ldr	r3, [r7, #4]
 8005336:	2200      	movs	r2, #0
 8005338:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 800533c:	6878      	ldr	r0, [r7, #4]
 800533e:	f7fc f86f 	bl	8001420 <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8005342:	687b      	ldr	r3, [r7, #4]
 8005344:	2202      	movs	r2, #2
 8005346:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800534a:	687b      	ldr	r3, [r7, #4]
 800534c:	681a      	ldr	r2, [r3, #0]
 800534e:	687b      	ldr	r3, [r7, #4]
 8005350:	3304      	adds	r3, #4
 8005352:	4619      	mov	r1, r3
 8005354:	4610      	mov	r0, r2
 8005356:	f000 fa3d 	bl	80057d4 <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 800535a:	687b      	ldr	r3, [r7, #4]
 800535c:	2201      	movs	r2, #1
 800535e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8005362:	2300      	movs	r3, #0
}
 8005364:	4618      	mov	r0, r3
 8005366:	3708      	adds	r7, #8
 8005368:	46bd      	mov	sp, r7
 800536a:	bd80      	pop	{r7, pc}

0800536c <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 800536c:	b580      	push	{r7, lr}
 800536e:	b084      	sub	sp, #16
 8005370:	af00      	add	r7, sp, #0
 8005372:	6078      	str	r0, [r7, #4]
 8005374:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8005376:	687b      	ldr	r3, [r7, #4]
 8005378:	681b      	ldr	r3, [r3, #0]
 800537a:	2201      	movs	r2, #1
 800537c:	6839      	ldr	r1, [r7, #0]
 800537e:	4618      	mov	r0, r3
 8005380:	f000 fc78 	bl	8005c74 <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8005384:	687b      	ldr	r3, [r7, #4]
 8005386:	681b      	ldr	r3, [r3, #0]
 8005388:	4a15      	ldr	r2, [pc, #84]	; (80053e0 <HAL_TIM_PWM_Start+0x74>)
 800538a:	4293      	cmp	r3, r2
 800538c:	d004      	beq.n	8005398 <HAL_TIM_PWM_Start+0x2c>
 800538e:	687b      	ldr	r3, [r7, #4]
 8005390:	681b      	ldr	r3, [r3, #0]
 8005392:	4a14      	ldr	r2, [pc, #80]	; (80053e4 <HAL_TIM_PWM_Start+0x78>)
 8005394:	4293      	cmp	r3, r2
 8005396:	d101      	bne.n	800539c <HAL_TIM_PWM_Start+0x30>
 8005398:	2301      	movs	r3, #1
 800539a:	e000      	b.n	800539e <HAL_TIM_PWM_Start+0x32>
 800539c:	2300      	movs	r3, #0
 800539e:	2b00      	cmp	r3, #0
 80053a0:	d007      	beq.n	80053b2 <HAL_TIM_PWM_Start+0x46>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 80053a2:	687b      	ldr	r3, [r7, #4]
 80053a4:	681b      	ldr	r3, [r3, #0]
 80053a6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80053a8:	687b      	ldr	r3, [r7, #4]
 80053aa:	681b      	ldr	r3, [r3, #0]
 80053ac:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80053b0:	645a      	str	r2, [r3, #68]	; 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80053b2:	687b      	ldr	r3, [r7, #4]
 80053b4:	681b      	ldr	r3, [r3, #0]
 80053b6:	689b      	ldr	r3, [r3, #8]
 80053b8:	f003 0307 	and.w	r3, r3, #7
 80053bc:	60fb      	str	r3, [r7, #12]
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80053be:	68fb      	ldr	r3, [r7, #12]
 80053c0:	2b06      	cmp	r3, #6
 80053c2:	d007      	beq.n	80053d4 <HAL_TIM_PWM_Start+0x68>
  {
    __HAL_TIM_ENABLE(htim);
 80053c4:	687b      	ldr	r3, [r7, #4]
 80053c6:	681b      	ldr	r3, [r3, #0]
 80053c8:	681a      	ldr	r2, [r3, #0]
 80053ca:	687b      	ldr	r3, [r7, #4]
 80053cc:	681b      	ldr	r3, [r3, #0]
 80053ce:	f042 0201 	orr.w	r2, r2, #1
 80053d2:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80053d4:	2300      	movs	r3, #0
}
 80053d6:	4618      	mov	r0, r3
 80053d8:	3710      	adds	r7, #16
 80053da:	46bd      	mov	sp, r7
 80053dc:	bd80      	pop	{r7, pc}
 80053de:	bf00      	nop
 80053e0:	40010000 	.word	0x40010000
 80053e4:	40010400 	.word	0x40010400

080053e8 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 80053e8:	b580      	push	{r7, lr}
 80053ea:	b082      	sub	sp, #8
 80053ec:	af00      	add	r7, sp, #0
 80053ee:	6078      	str	r0, [r7, #4]
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80053f0:	687b      	ldr	r3, [r7, #4]
 80053f2:	681b      	ldr	r3, [r3, #0]
 80053f4:	691b      	ldr	r3, [r3, #16]
 80053f6:	f003 0302 	and.w	r3, r3, #2
 80053fa:	2b02      	cmp	r3, #2
 80053fc:	d122      	bne.n	8005444 <HAL_TIM_IRQHandler+0x5c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80053fe:	687b      	ldr	r3, [r7, #4]
 8005400:	681b      	ldr	r3, [r3, #0]
 8005402:	68db      	ldr	r3, [r3, #12]
 8005404:	f003 0302 	and.w	r3, r3, #2
 8005408:	2b02      	cmp	r3, #2
 800540a:	d11b      	bne.n	8005444 <HAL_TIM_IRQHandler+0x5c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800540c:	687b      	ldr	r3, [r7, #4]
 800540e:	681b      	ldr	r3, [r3, #0]
 8005410:	f06f 0202 	mvn.w	r2, #2
 8005414:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8005416:	687b      	ldr	r3, [r7, #4]
 8005418:	2201      	movs	r2, #1
 800541a:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800541c:	687b      	ldr	r3, [r7, #4]
 800541e:	681b      	ldr	r3, [r3, #0]
 8005420:	699b      	ldr	r3, [r3, #24]
 8005422:	f003 0303 	and.w	r3, r3, #3
 8005426:	2b00      	cmp	r3, #0
 8005428:	d003      	beq.n	8005432 <HAL_TIM_IRQHandler+0x4a>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 800542a:	6878      	ldr	r0, [r7, #4]
 800542c:	f000 f9b4 	bl	8005798 <HAL_TIM_IC_CaptureCallback>
 8005430:	e005      	b.n	800543e <HAL_TIM_IRQHandler+0x56>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8005432:	6878      	ldr	r0, [r7, #4]
 8005434:	f000 f9a6 	bl	8005784 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005438:	6878      	ldr	r0, [r7, #4]
 800543a:	f000 f9b7 	bl	80057ac <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800543e:	687b      	ldr	r3, [r7, #4]
 8005440:	2200      	movs	r2, #0
 8005442:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8005444:	687b      	ldr	r3, [r7, #4]
 8005446:	681b      	ldr	r3, [r3, #0]
 8005448:	691b      	ldr	r3, [r3, #16]
 800544a:	f003 0304 	and.w	r3, r3, #4
 800544e:	2b04      	cmp	r3, #4
 8005450:	d122      	bne.n	8005498 <HAL_TIM_IRQHandler+0xb0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8005452:	687b      	ldr	r3, [r7, #4]
 8005454:	681b      	ldr	r3, [r3, #0]
 8005456:	68db      	ldr	r3, [r3, #12]
 8005458:	f003 0304 	and.w	r3, r3, #4
 800545c:	2b04      	cmp	r3, #4
 800545e:	d11b      	bne.n	8005498 <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8005460:	687b      	ldr	r3, [r7, #4]
 8005462:	681b      	ldr	r3, [r3, #0]
 8005464:	f06f 0204 	mvn.w	r2, #4
 8005468:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800546a:	687b      	ldr	r3, [r7, #4]
 800546c:	2202      	movs	r2, #2
 800546e:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8005470:	687b      	ldr	r3, [r7, #4]
 8005472:	681b      	ldr	r3, [r3, #0]
 8005474:	699b      	ldr	r3, [r3, #24]
 8005476:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800547a:	2b00      	cmp	r3, #0
 800547c:	d003      	beq.n	8005486 <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800547e:	6878      	ldr	r0, [r7, #4]
 8005480:	f000 f98a 	bl	8005798 <HAL_TIM_IC_CaptureCallback>
 8005484:	e005      	b.n	8005492 <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8005486:	6878      	ldr	r0, [r7, #4]
 8005488:	f000 f97c 	bl	8005784 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800548c:	6878      	ldr	r0, [r7, #4]
 800548e:	f000 f98d 	bl	80057ac <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8005492:	687b      	ldr	r3, [r7, #4]
 8005494:	2200      	movs	r2, #0
 8005496:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8005498:	687b      	ldr	r3, [r7, #4]
 800549a:	681b      	ldr	r3, [r3, #0]
 800549c:	691b      	ldr	r3, [r3, #16]
 800549e:	f003 0308 	and.w	r3, r3, #8
 80054a2:	2b08      	cmp	r3, #8
 80054a4:	d122      	bne.n	80054ec <HAL_TIM_IRQHandler+0x104>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80054a6:	687b      	ldr	r3, [r7, #4]
 80054a8:	681b      	ldr	r3, [r3, #0]
 80054aa:	68db      	ldr	r3, [r3, #12]
 80054ac:	f003 0308 	and.w	r3, r3, #8
 80054b0:	2b08      	cmp	r3, #8
 80054b2:	d11b      	bne.n	80054ec <HAL_TIM_IRQHandler+0x104>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80054b4:	687b      	ldr	r3, [r7, #4]
 80054b6:	681b      	ldr	r3, [r3, #0]
 80054b8:	f06f 0208 	mvn.w	r2, #8
 80054bc:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80054be:	687b      	ldr	r3, [r7, #4]
 80054c0:	2204      	movs	r2, #4
 80054c2:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80054c4:	687b      	ldr	r3, [r7, #4]
 80054c6:	681b      	ldr	r3, [r3, #0]
 80054c8:	69db      	ldr	r3, [r3, #28]
 80054ca:	f003 0303 	and.w	r3, r3, #3
 80054ce:	2b00      	cmp	r3, #0
 80054d0:	d003      	beq.n	80054da <HAL_TIM_IRQHandler+0xf2>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80054d2:	6878      	ldr	r0, [r7, #4]
 80054d4:	f000 f960 	bl	8005798 <HAL_TIM_IC_CaptureCallback>
 80054d8:	e005      	b.n	80054e6 <HAL_TIM_IRQHandler+0xfe>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80054da:	6878      	ldr	r0, [r7, #4]
 80054dc:	f000 f952 	bl	8005784 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80054e0:	6878      	ldr	r0, [r7, #4]
 80054e2:	f000 f963 	bl	80057ac <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80054e6:	687b      	ldr	r3, [r7, #4]
 80054e8:	2200      	movs	r2, #0
 80054ea:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80054ec:	687b      	ldr	r3, [r7, #4]
 80054ee:	681b      	ldr	r3, [r3, #0]
 80054f0:	691b      	ldr	r3, [r3, #16]
 80054f2:	f003 0310 	and.w	r3, r3, #16
 80054f6:	2b10      	cmp	r3, #16
 80054f8:	d122      	bne.n	8005540 <HAL_TIM_IRQHandler+0x158>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80054fa:	687b      	ldr	r3, [r7, #4]
 80054fc:	681b      	ldr	r3, [r3, #0]
 80054fe:	68db      	ldr	r3, [r3, #12]
 8005500:	f003 0310 	and.w	r3, r3, #16
 8005504:	2b10      	cmp	r3, #16
 8005506:	d11b      	bne.n	8005540 <HAL_TIM_IRQHandler+0x158>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8005508:	687b      	ldr	r3, [r7, #4]
 800550a:	681b      	ldr	r3, [r3, #0]
 800550c:	f06f 0210 	mvn.w	r2, #16
 8005510:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8005512:	687b      	ldr	r3, [r7, #4]
 8005514:	2208      	movs	r2, #8
 8005516:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8005518:	687b      	ldr	r3, [r7, #4]
 800551a:	681b      	ldr	r3, [r3, #0]
 800551c:	69db      	ldr	r3, [r3, #28]
 800551e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005522:	2b00      	cmp	r3, #0
 8005524:	d003      	beq.n	800552e <HAL_TIM_IRQHandler+0x146>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8005526:	6878      	ldr	r0, [r7, #4]
 8005528:	f000 f936 	bl	8005798 <HAL_TIM_IC_CaptureCallback>
 800552c:	e005      	b.n	800553a <HAL_TIM_IRQHandler+0x152>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800552e:	6878      	ldr	r0, [r7, #4]
 8005530:	f000 f928 	bl	8005784 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8005534:	6878      	ldr	r0, [r7, #4]
 8005536:	f000 f939 	bl	80057ac <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800553a:	687b      	ldr	r3, [r7, #4]
 800553c:	2200      	movs	r2, #0
 800553e:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8005540:	687b      	ldr	r3, [r7, #4]
 8005542:	681b      	ldr	r3, [r3, #0]
 8005544:	691b      	ldr	r3, [r3, #16]
 8005546:	f003 0301 	and.w	r3, r3, #1
 800554a:	2b01      	cmp	r3, #1
 800554c:	d10e      	bne.n	800556c <HAL_TIM_IRQHandler+0x184>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800554e:	687b      	ldr	r3, [r7, #4]
 8005550:	681b      	ldr	r3, [r3, #0]
 8005552:	68db      	ldr	r3, [r3, #12]
 8005554:	f003 0301 	and.w	r3, r3, #1
 8005558:	2b01      	cmp	r3, #1
 800555a:	d107      	bne.n	800556c <HAL_TIM_IRQHandler+0x184>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800555c:	687b      	ldr	r3, [r7, #4]
 800555e:	681b      	ldr	r3, [r3, #0]
 8005560:	f06f 0201 	mvn.w	r2, #1
 8005564:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8005566:	6878      	ldr	r0, [r7, #4]
 8005568:	f7fb fd1e 	bl	8000fa8 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800556c:	687b      	ldr	r3, [r7, #4]
 800556e:	681b      	ldr	r3, [r3, #0]
 8005570:	691b      	ldr	r3, [r3, #16]
 8005572:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005576:	2b80      	cmp	r3, #128	; 0x80
 8005578:	d10e      	bne.n	8005598 <HAL_TIM_IRQHandler+0x1b0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800557a:	687b      	ldr	r3, [r7, #4]
 800557c:	681b      	ldr	r3, [r3, #0]
 800557e:	68db      	ldr	r3, [r3, #12]
 8005580:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005584:	2b80      	cmp	r3, #128	; 0x80
 8005586:	d107      	bne.n	8005598 <HAL_TIM_IRQHandler+0x1b0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8005588:	687b      	ldr	r3, [r7, #4]
 800558a:	681b      	ldr	r3, [r3, #0]
 800558c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8005590:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8005592:	6878      	ldr	r0, [r7, #4]
 8005594:	f000 fc1a 	bl	8005dcc <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8005598:	687b      	ldr	r3, [r7, #4]
 800559a:	681b      	ldr	r3, [r3, #0]
 800559c:	691b      	ldr	r3, [r3, #16]
 800559e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80055a2:	2b40      	cmp	r3, #64	; 0x40
 80055a4:	d10e      	bne.n	80055c4 <HAL_TIM_IRQHandler+0x1dc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 80055a6:	687b      	ldr	r3, [r7, #4]
 80055a8:	681b      	ldr	r3, [r3, #0]
 80055aa:	68db      	ldr	r3, [r3, #12]
 80055ac:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80055b0:	2b40      	cmp	r3, #64	; 0x40
 80055b2:	d107      	bne.n	80055c4 <HAL_TIM_IRQHandler+0x1dc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 80055b4:	687b      	ldr	r3, [r7, #4]
 80055b6:	681b      	ldr	r3, [r3, #0]
 80055b8:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80055bc:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 80055be:	6878      	ldr	r0, [r7, #4]
 80055c0:	f000 f8fe 	bl	80057c0 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80055c4:	687b      	ldr	r3, [r7, #4]
 80055c6:	681b      	ldr	r3, [r3, #0]
 80055c8:	691b      	ldr	r3, [r3, #16]
 80055ca:	f003 0320 	and.w	r3, r3, #32
 80055ce:	2b20      	cmp	r3, #32
 80055d0:	d10e      	bne.n	80055f0 <HAL_TIM_IRQHandler+0x208>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80055d2:	687b      	ldr	r3, [r7, #4]
 80055d4:	681b      	ldr	r3, [r3, #0]
 80055d6:	68db      	ldr	r3, [r3, #12]
 80055d8:	f003 0320 	and.w	r3, r3, #32
 80055dc:	2b20      	cmp	r3, #32
 80055de:	d107      	bne.n	80055f0 <HAL_TIM_IRQHandler+0x208>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80055e0:	687b      	ldr	r3, [r7, #4]
 80055e2:	681b      	ldr	r3, [r3, #0]
 80055e4:	f06f 0220 	mvn.w	r2, #32
 80055e8:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 80055ea:	6878      	ldr	r0, [r7, #4]
 80055ec:	f000 fbe4 	bl	8005db8 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 80055f0:	bf00      	nop
 80055f2:	3708      	adds	r7, #8
 80055f4:	46bd      	mov	sp, r7
 80055f6:	bd80      	pop	{r7, pc}

080055f8 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 80055f8:	b580      	push	{r7, lr}
 80055fa:	b084      	sub	sp, #16
 80055fc:	af00      	add	r7, sp, #0
 80055fe:	60f8      	str	r0, [r7, #12]
 8005600:	60b9      	str	r1, [r7, #8]
 8005602:	607a      	str	r2, [r7, #4]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 8005604:	68fb      	ldr	r3, [r7, #12]
 8005606:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800560a:	2b01      	cmp	r3, #1
 800560c:	d101      	bne.n	8005612 <HAL_TIM_PWM_ConfigChannel+0x1a>
 800560e:	2302      	movs	r3, #2
 8005610:	e0b4      	b.n	800577c <HAL_TIM_PWM_ConfigChannel+0x184>
 8005612:	68fb      	ldr	r3, [r7, #12]
 8005614:	2201      	movs	r2, #1
 8005616:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 800561a:	68fb      	ldr	r3, [r7, #12]
 800561c:	2202      	movs	r2, #2
 800561e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  switch (Channel)
 8005622:	687b      	ldr	r3, [r7, #4]
 8005624:	2b0c      	cmp	r3, #12
 8005626:	f200 809f 	bhi.w	8005768 <HAL_TIM_PWM_ConfigChannel+0x170>
 800562a:	a201      	add	r2, pc, #4	; (adr r2, 8005630 <HAL_TIM_PWM_ConfigChannel+0x38>)
 800562c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005630:	08005665 	.word	0x08005665
 8005634:	08005769 	.word	0x08005769
 8005638:	08005769 	.word	0x08005769
 800563c:	08005769 	.word	0x08005769
 8005640:	080056a5 	.word	0x080056a5
 8005644:	08005769 	.word	0x08005769
 8005648:	08005769 	.word	0x08005769
 800564c:	08005769 	.word	0x08005769
 8005650:	080056e7 	.word	0x080056e7
 8005654:	08005769 	.word	0x08005769
 8005658:	08005769 	.word	0x08005769
 800565c:	08005769 	.word	0x08005769
 8005660:	08005727 	.word	0x08005727
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8005664:	68fb      	ldr	r3, [r7, #12]
 8005666:	681b      	ldr	r3, [r3, #0]
 8005668:	68b9      	ldr	r1, [r7, #8]
 800566a:	4618      	mov	r0, r3
 800566c:	f000 f952 	bl	8005914 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8005670:	68fb      	ldr	r3, [r7, #12]
 8005672:	681b      	ldr	r3, [r3, #0]
 8005674:	699a      	ldr	r2, [r3, #24]
 8005676:	68fb      	ldr	r3, [r7, #12]
 8005678:	681b      	ldr	r3, [r3, #0]
 800567a:	f042 0208 	orr.w	r2, r2, #8
 800567e:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 8005680:	68fb      	ldr	r3, [r7, #12]
 8005682:	681b      	ldr	r3, [r3, #0]
 8005684:	699a      	ldr	r2, [r3, #24]
 8005686:	68fb      	ldr	r3, [r7, #12]
 8005688:	681b      	ldr	r3, [r3, #0]
 800568a:	f022 0204 	bic.w	r2, r2, #4
 800568e:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8005690:	68fb      	ldr	r3, [r7, #12]
 8005692:	681b      	ldr	r3, [r3, #0]
 8005694:	6999      	ldr	r1, [r3, #24]
 8005696:	68bb      	ldr	r3, [r7, #8]
 8005698:	691a      	ldr	r2, [r3, #16]
 800569a:	68fb      	ldr	r3, [r7, #12]
 800569c:	681b      	ldr	r3, [r3, #0]
 800569e:	430a      	orrs	r2, r1
 80056a0:	619a      	str	r2, [r3, #24]
      break;
 80056a2:	e062      	b.n	800576a <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 80056a4:	68fb      	ldr	r3, [r7, #12]
 80056a6:	681b      	ldr	r3, [r3, #0]
 80056a8:	68b9      	ldr	r1, [r7, #8]
 80056aa:	4618      	mov	r0, r3
 80056ac:	f000 f9a2 	bl	80059f4 <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 80056b0:	68fb      	ldr	r3, [r7, #12]
 80056b2:	681b      	ldr	r3, [r3, #0]
 80056b4:	699a      	ldr	r2, [r3, #24]
 80056b6:	68fb      	ldr	r3, [r7, #12]
 80056b8:	681b      	ldr	r3, [r3, #0]
 80056ba:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80056be:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 80056c0:	68fb      	ldr	r3, [r7, #12]
 80056c2:	681b      	ldr	r3, [r3, #0]
 80056c4:	699a      	ldr	r2, [r3, #24]
 80056c6:	68fb      	ldr	r3, [r7, #12]
 80056c8:	681b      	ldr	r3, [r3, #0]
 80056ca:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80056ce:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 80056d0:	68fb      	ldr	r3, [r7, #12]
 80056d2:	681b      	ldr	r3, [r3, #0]
 80056d4:	6999      	ldr	r1, [r3, #24]
 80056d6:	68bb      	ldr	r3, [r7, #8]
 80056d8:	691b      	ldr	r3, [r3, #16]
 80056da:	021a      	lsls	r2, r3, #8
 80056dc:	68fb      	ldr	r3, [r7, #12]
 80056de:	681b      	ldr	r3, [r3, #0]
 80056e0:	430a      	orrs	r2, r1
 80056e2:	619a      	str	r2, [r3, #24]
      break;
 80056e4:	e041      	b.n	800576a <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 80056e6:	68fb      	ldr	r3, [r7, #12]
 80056e8:	681b      	ldr	r3, [r3, #0]
 80056ea:	68b9      	ldr	r1, [r7, #8]
 80056ec:	4618      	mov	r0, r3
 80056ee:	f000 f9f7 	bl	8005ae0 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80056f2:	68fb      	ldr	r3, [r7, #12]
 80056f4:	681b      	ldr	r3, [r3, #0]
 80056f6:	69da      	ldr	r2, [r3, #28]
 80056f8:	68fb      	ldr	r3, [r7, #12]
 80056fa:	681b      	ldr	r3, [r3, #0]
 80056fc:	f042 0208 	orr.w	r2, r2, #8
 8005700:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 8005702:	68fb      	ldr	r3, [r7, #12]
 8005704:	681b      	ldr	r3, [r3, #0]
 8005706:	69da      	ldr	r2, [r3, #28]
 8005708:	68fb      	ldr	r3, [r7, #12]
 800570a:	681b      	ldr	r3, [r3, #0]
 800570c:	f022 0204 	bic.w	r2, r2, #4
 8005710:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8005712:	68fb      	ldr	r3, [r7, #12]
 8005714:	681b      	ldr	r3, [r3, #0]
 8005716:	69d9      	ldr	r1, [r3, #28]
 8005718:	68bb      	ldr	r3, [r7, #8]
 800571a:	691a      	ldr	r2, [r3, #16]
 800571c:	68fb      	ldr	r3, [r7, #12]
 800571e:	681b      	ldr	r3, [r3, #0]
 8005720:	430a      	orrs	r2, r1
 8005722:	61da      	str	r2, [r3, #28]
      break;
 8005724:	e021      	b.n	800576a <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 8005726:	68fb      	ldr	r3, [r7, #12]
 8005728:	681b      	ldr	r3, [r3, #0]
 800572a:	68b9      	ldr	r1, [r7, #8]
 800572c:	4618      	mov	r0, r3
 800572e:	f000 fa4b 	bl	8005bc8 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 8005732:	68fb      	ldr	r3, [r7, #12]
 8005734:	681b      	ldr	r3, [r3, #0]
 8005736:	69da      	ldr	r2, [r3, #28]
 8005738:	68fb      	ldr	r3, [r7, #12]
 800573a:	681b      	ldr	r3, [r3, #0]
 800573c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005740:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8005742:	68fb      	ldr	r3, [r7, #12]
 8005744:	681b      	ldr	r3, [r3, #0]
 8005746:	69da      	ldr	r2, [r3, #28]
 8005748:	68fb      	ldr	r3, [r7, #12]
 800574a:	681b      	ldr	r3, [r3, #0]
 800574c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005750:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8005752:	68fb      	ldr	r3, [r7, #12]
 8005754:	681b      	ldr	r3, [r3, #0]
 8005756:	69d9      	ldr	r1, [r3, #28]
 8005758:	68bb      	ldr	r3, [r7, #8]
 800575a:	691b      	ldr	r3, [r3, #16]
 800575c:	021a      	lsls	r2, r3, #8
 800575e:	68fb      	ldr	r3, [r7, #12]
 8005760:	681b      	ldr	r3, [r3, #0]
 8005762:	430a      	orrs	r2, r1
 8005764:	61da      	str	r2, [r3, #28]
      break;
 8005766:	e000      	b.n	800576a <HAL_TIM_PWM_ConfigChannel+0x172>
    }

    default:
      break;
 8005768:	bf00      	nop
  }

  htim->State = HAL_TIM_STATE_READY;
 800576a:	68fb      	ldr	r3, [r7, #12]
 800576c:	2201      	movs	r2, #1
 800576e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8005772:	68fb      	ldr	r3, [r7, #12]
 8005774:	2200      	movs	r2, #0
 8005776:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 800577a:	2300      	movs	r3, #0
}
 800577c:	4618      	mov	r0, r3
 800577e:	3710      	adds	r7, #16
 8005780:	46bd      	mov	sp, r7
 8005782:	bd80      	pop	{r7, pc}

08005784 <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 8005784:	b480      	push	{r7}
 8005786:	b083      	sub	sp, #12
 8005788:	af00      	add	r7, sp, #0
 800578a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 800578c:	bf00      	nop
 800578e:	370c      	adds	r7, #12
 8005790:	46bd      	mov	sp, r7
 8005792:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005796:	4770      	bx	lr

08005798 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 8005798:	b480      	push	{r7}
 800579a:	b083      	sub	sp, #12
 800579c:	af00      	add	r7, sp, #0
 800579e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 80057a0:	bf00      	nop
 80057a2:	370c      	adds	r7, #12
 80057a4:	46bd      	mov	sp, r7
 80057a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057aa:	4770      	bx	lr

080057ac <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 80057ac:	b480      	push	{r7}
 80057ae:	b083      	sub	sp, #12
 80057b0:	af00      	add	r7, sp, #0
 80057b2:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 80057b4:	bf00      	nop
 80057b6:	370c      	adds	r7, #12
 80057b8:	46bd      	mov	sp, r7
 80057ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057be:	4770      	bx	lr

080057c0 <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 80057c0:	b480      	push	{r7}
 80057c2:	b083      	sub	sp, #12
 80057c4:	af00      	add	r7, sp, #0
 80057c6:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 80057c8:	bf00      	nop
 80057ca:	370c      	adds	r7, #12
 80057cc:	46bd      	mov	sp, r7
 80057ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057d2:	4770      	bx	lr

080057d4 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
 80057d4:	b480      	push	{r7}
 80057d6:	b085      	sub	sp, #20
 80057d8:	af00      	add	r7, sp, #0
 80057da:	6078      	str	r0, [r7, #4]
 80057dc:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 80057de:	687b      	ldr	r3, [r7, #4]
 80057e0:	681b      	ldr	r3, [r3, #0]
 80057e2:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80057e4:	687b      	ldr	r3, [r7, #4]
 80057e6:	4a40      	ldr	r2, [pc, #256]	; (80058e8 <TIM_Base_SetConfig+0x114>)
 80057e8:	4293      	cmp	r3, r2
 80057ea:	d013      	beq.n	8005814 <TIM_Base_SetConfig+0x40>
 80057ec:	687b      	ldr	r3, [r7, #4]
 80057ee:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80057f2:	d00f      	beq.n	8005814 <TIM_Base_SetConfig+0x40>
 80057f4:	687b      	ldr	r3, [r7, #4]
 80057f6:	4a3d      	ldr	r2, [pc, #244]	; (80058ec <TIM_Base_SetConfig+0x118>)
 80057f8:	4293      	cmp	r3, r2
 80057fa:	d00b      	beq.n	8005814 <TIM_Base_SetConfig+0x40>
 80057fc:	687b      	ldr	r3, [r7, #4]
 80057fe:	4a3c      	ldr	r2, [pc, #240]	; (80058f0 <TIM_Base_SetConfig+0x11c>)
 8005800:	4293      	cmp	r3, r2
 8005802:	d007      	beq.n	8005814 <TIM_Base_SetConfig+0x40>
 8005804:	687b      	ldr	r3, [r7, #4]
 8005806:	4a3b      	ldr	r2, [pc, #236]	; (80058f4 <TIM_Base_SetConfig+0x120>)
 8005808:	4293      	cmp	r3, r2
 800580a:	d003      	beq.n	8005814 <TIM_Base_SetConfig+0x40>
 800580c:	687b      	ldr	r3, [r7, #4]
 800580e:	4a3a      	ldr	r2, [pc, #232]	; (80058f8 <TIM_Base_SetConfig+0x124>)
 8005810:	4293      	cmp	r3, r2
 8005812:	d108      	bne.n	8005826 <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8005814:	68fb      	ldr	r3, [r7, #12]
 8005816:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800581a:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 800581c:	683b      	ldr	r3, [r7, #0]
 800581e:	685b      	ldr	r3, [r3, #4]
 8005820:	68fa      	ldr	r2, [r7, #12]
 8005822:	4313      	orrs	r3, r2
 8005824:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8005826:	687b      	ldr	r3, [r7, #4]
 8005828:	4a2f      	ldr	r2, [pc, #188]	; (80058e8 <TIM_Base_SetConfig+0x114>)
 800582a:	4293      	cmp	r3, r2
 800582c:	d02b      	beq.n	8005886 <TIM_Base_SetConfig+0xb2>
 800582e:	687b      	ldr	r3, [r7, #4]
 8005830:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005834:	d027      	beq.n	8005886 <TIM_Base_SetConfig+0xb2>
 8005836:	687b      	ldr	r3, [r7, #4]
 8005838:	4a2c      	ldr	r2, [pc, #176]	; (80058ec <TIM_Base_SetConfig+0x118>)
 800583a:	4293      	cmp	r3, r2
 800583c:	d023      	beq.n	8005886 <TIM_Base_SetConfig+0xb2>
 800583e:	687b      	ldr	r3, [r7, #4]
 8005840:	4a2b      	ldr	r2, [pc, #172]	; (80058f0 <TIM_Base_SetConfig+0x11c>)
 8005842:	4293      	cmp	r3, r2
 8005844:	d01f      	beq.n	8005886 <TIM_Base_SetConfig+0xb2>
 8005846:	687b      	ldr	r3, [r7, #4]
 8005848:	4a2a      	ldr	r2, [pc, #168]	; (80058f4 <TIM_Base_SetConfig+0x120>)
 800584a:	4293      	cmp	r3, r2
 800584c:	d01b      	beq.n	8005886 <TIM_Base_SetConfig+0xb2>
 800584e:	687b      	ldr	r3, [r7, #4]
 8005850:	4a29      	ldr	r2, [pc, #164]	; (80058f8 <TIM_Base_SetConfig+0x124>)
 8005852:	4293      	cmp	r3, r2
 8005854:	d017      	beq.n	8005886 <TIM_Base_SetConfig+0xb2>
 8005856:	687b      	ldr	r3, [r7, #4]
 8005858:	4a28      	ldr	r2, [pc, #160]	; (80058fc <TIM_Base_SetConfig+0x128>)
 800585a:	4293      	cmp	r3, r2
 800585c:	d013      	beq.n	8005886 <TIM_Base_SetConfig+0xb2>
 800585e:	687b      	ldr	r3, [r7, #4]
 8005860:	4a27      	ldr	r2, [pc, #156]	; (8005900 <TIM_Base_SetConfig+0x12c>)
 8005862:	4293      	cmp	r3, r2
 8005864:	d00f      	beq.n	8005886 <TIM_Base_SetConfig+0xb2>
 8005866:	687b      	ldr	r3, [r7, #4]
 8005868:	4a26      	ldr	r2, [pc, #152]	; (8005904 <TIM_Base_SetConfig+0x130>)
 800586a:	4293      	cmp	r3, r2
 800586c:	d00b      	beq.n	8005886 <TIM_Base_SetConfig+0xb2>
 800586e:	687b      	ldr	r3, [r7, #4]
 8005870:	4a25      	ldr	r2, [pc, #148]	; (8005908 <TIM_Base_SetConfig+0x134>)
 8005872:	4293      	cmp	r3, r2
 8005874:	d007      	beq.n	8005886 <TIM_Base_SetConfig+0xb2>
 8005876:	687b      	ldr	r3, [r7, #4]
 8005878:	4a24      	ldr	r2, [pc, #144]	; (800590c <TIM_Base_SetConfig+0x138>)
 800587a:	4293      	cmp	r3, r2
 800587c:	d003      	beq.n	8005886 <TIM_Base_SetConfig+0xb2>
 800587e:	687b      	ldr	r3, [r7, #4]
 8005880:	4a23      	ldr	r2, [pc, #140]	; (8005910 <TIM_Base_SetConfig+0x13c>)
 8005882:	4293      	cmp	r3, r2
 8005884:	d108      	bne.n	8005898 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8005886:	68fb      	ldr	r3, [r7, #12]
 8005888:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800588c:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800588e:	683b      	ldr	r3, [r7, #0]
 8005890:	68db      	ldr	r3, [r3, #12]
 8005892:	68fa      	ldr	r2, [r7, #12]
 8005894:	4313      	orrs	r3, r2
 8005896:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8005898:	68fb      	ldr	r3, [r7, #12]
 800589a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800589e:	683b      	ldr	r3, [r7, #0]
 80058a0:	695b      	ldr	r3, [r3, #20]
 80058a2:	4313      	orrs	r3, r2
 80058a4:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 80058a6:	687b      	ldr	r3, [r7, #4]
 80058a8:	68fa      	ldr	r2, [r7, #12]
 80058aa:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80058ac:	683b      	ldr	r3, [r7, #0]
 80058ae:	689a      	ldr	r2, [r3, #8]
 80058b0:	687b      	ldr	r3, [r7, #4]
 80058b2:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80058b4:	683b      	ldr	r3, [r7, #0]
 80058b6:	681a      	ldr	r2, [r3, #0]
 80058b8:	687b      	ldr	r3, [r7, #4]
 80058ba:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80058bc:	687b      	ldr	r3, [r7, #4]
 80058be:	4a0a      	ldr	r2, [pc, #40]	; (80058e8 <TIM_Base_SetConfig+0x114>)
 80058c0:	4293      	cmp	r3, r2
 80058c2:	d003      	beq.n	80058cc <TIM_Base_SetConfig+0xf8>
 80058c4:	687b      	ldr	r3, [r7, #4]
 80058c6:	4a0c      	ldr	r2, [pc, #48]	; (80058f8 <TIM_Base_SetConfig+0x124>)
 80058c8:	4293      	cmp	r3, r2
 80058ca:	d103      	bne.n	80058d4 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80058cc:	683b      	ldr	r3, [r7, #0]
 80058ce:	691a      	ldr	r2, [r3, #16]
 80058d0:	687b      	ldr	r3, [r7, #4]
 80058d2:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80058d4:	687b      	ldr	r3, [r7, #4]
 80058d6:	2201      	movs	r2, #1
 80058d8:	615a      	str	r2, [r3, #20]
}
 80058da:	bf00      	nop
 80058dc:	3714      	adds	r7, #20
 80058de:	46bd      	mov	sp, r7
 80058e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058e4:	4770      	bx	lr
 80058e6:	bf00      	nop
 80058e8:	40010000 	.word	0x40010000
 80058ec:	40000400 	.word	0x40000400
 80058f0:	40000800 	.word	0x40000800
 80058f4:	40000c00 	.word	0x40000c00
 80058f8:	40010400 	.word	0x40010400
 80058fc:	40014000 	.word	0x40014000
 8005900:	40014400 	.word	0x40014400
 8005904:	40014800 	.word	0x40014800
 8005908:	40001800 	.word	0x40001800
 800590c:	40001c00 	.word	0x40001c00
 8005910:	40002000 	.word	0x40002000

08005914 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8005914:	b480      	push	{r7}
 8005916:	b087      	sub	sp, #28
 8005918:	af00      	add	r7, sp, #0
 800591a:	6078      	str	r0, [r7, #4]
 800591c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800591e:	687b      	ldr	r3, [r7, #4]
 8005920:	6a1b      	ldr	r3, [r3, #32]
 8005922:	f023 0201 	bic.w	r2, r3, #1
 8005926:	687b      	ldr	r3, [r7, #4]
 8005928:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800592a:	687b      	ldr	r3, [r7, #4]
 800592c:	6a1b      	ldr	r3, [r3, #32]
 800592e:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8005930:	687b      	ldr	r3, [r7, #4]
 8005932:	685b      	ldr	r3, [r3, #4]
 8005934:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8005936:	687b      	ldr	r3, [r7, #4]
 8005938:	699b      	ldr	r3, [r3, #24]
 800593a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 800593c:	68fb      	ldr	r3, [r7, #12]
 800593e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005942:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8005944:	68fb      	ldr	r3, [r7, #12]
 8005946:	f023 0303 	bic.w	r3, r3, #3
 800594a:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800594c:	683b      	ldr	r3, [r7, #0]
 800594e:	681b      	ldr	r3, [r3, #0]
 8005950:	68fa      	ldr	r2, [r7, #12]
 8005952:	4313      	orrs	r3, r2
 8005954:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 8005956:	697b      	ldr	r3, [r7, #20]
 8005958:	f023 0302 	bic.w	r3, r3, #2
 800595c:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 800595e:	683b      	ldr	r3, [r7, #0]
 8005960:	689b      	ldr	r3, [r3, #8]
 8005962:	697a      	ldr	r2, [r7, #20]
 8005964:	4313      	orrs	r3, r2
 8005966:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8005968:	687b      	ldr	r3, [r7, #4]
 800596a:	4a20      	ldr	r2, [pc, #128]	; (80059ec <TIM_OC1_SetConfig+0xd8>)
 800596c:	4293      	cmp	r3, r2
 800596e:	d003      	beq.n	8005978 <TIM_OC1_SetConfig+0x64>
 8005970:	687b      	ldr	r3, [r7, #4]
 8005972:	4a1f      	ldr	r2, [pc, #124]	; (80059f0 <TIM_OC1_SetConfig+0xdc>)
 8005974:	4293      	cmp	r3, r2
 8005976:	d10c      	bne.n	8005992 <TIM_OC1_SetConfig+0x7e>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 8005978:	697b      	ldr	r3, [r7, #20]
 800597a:	f023 0308 	bic.w	r3, r3, #8
 800597e:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8005980:	683b      	ldr	r3, [r7, #0]
 8005982:	68db      	ldr	r3, [r3, #12]
 8005984:	697a      	ldr	r2, [r7, #20]
 8005986:	4313      	orrs	r3, r2
 8005988:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 800598a:	697b      	ldr	r3, [r7, #20]
 800598c:	f023 0304 	bic.w	r3, r3, #4
 8005990:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8005992:	687b      	ldr	r3, [r7, #4]
 8005994:	4a15      	ldr	r2, [pc, #84]	; (80059ec <TIM_OC1_SetConfig+0xd8>)
 8005996:	4293      	cmp	r3, r2
 8005998:	d003      	beq.n	80059a2 <TIM_OC1_SetConfig+0x8e>
 800599a:	687b      	ldr	r3, [r7, #4]
 800599c:	4a14      	ldr	r2, [pc, #80]	; (80059f0 <TIM_OC1_SetConfig+0xdc>)
 800599e:	4293      	cmp	r3, r2
 80059a0:	d111      	bne.n	80059c6 <TIM_OC1_SetConfig+0xb2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 80059a2:	693b      	ldr	r3, [r7, #16]
 80059a4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80059a8:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 80059aa:	693b      	ldr	r3, [r7, #16]
 80059ac:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80059b0:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 80059b2:	683b      	ldr	r3, [r7, #0]
 80059b4:	695b      	ldr	r3, [r3, #20]
 80059b6:	693a      	ldr	r2, [r7, #16]
 80059b8:	4313      	orrs	r3, r2
 80059ba:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 80059bc:	683b      	ldr	r3, [r7, #0]
 80059be:	699b      	ldr	r3, [r3, #24]
 80059c0:	693a      	ldr	r2, [r7, #16]
 80059c2:	4313      	orrs	r3, r2
 80059c4:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80059c6:	687b      	ldr	r3, [r7, #4]
 80059c8:	693a      	ldr	r2, [r7, #16]
 80059ca:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 80059cc:	687b      	ldr	r3, [r7, #4]
 80059ce:	68fa      	ldr	r2, [r7, #12]
 80059d0:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 80059d2:	683b      	ldr	r3, [r7, #0]
 80059d4:	685a      	ldr	r2, [r3, #4]
 80059d6:	687b      	ldr	r3, [r7, #4]
 80059d8:	635a      	str	r2, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80059da:	687b      	ldr	r3, [r7, #4]
 80059dc:	697a      	ldr	r2, [r7, #20]
 80059de:	621a      	str	r2, [r3, #32]
}
 80059e0:	bf00      	nop
 80059e2:	371c      	adds	r7, #28
 80059e4:	46bd      	mov	sp, r7
 80059e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059ea:	4770      	bx	lr
 80059ec:	40010000 	.word	0x40010000
 80059f0:	40010400 	.word	0x40010400

080059f4 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 80059f4:	b480      	push	{r7}
 80059f6:	b087      	sub	sp, #28
 80059f8:	af00      	add	r7, sp, #0
 80059fa:	6078      	str	r0, [r7, #4]
 80059fc:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80059fe:	687b      	ldr	r3, [r7, #4]
 8005a00:	6a1b      	ldr	r3, [r3, #32]
 8005a02:	f023 0210 	bic.w	r2, r3, #16
 8005a06:	687b      	ldr	r3, [r7, #4]
 8005a08:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8005a0a:	687b      	ldr	r3, [r7, #4]
 8005a0c:	6a1b      	ldr	r3, [r3, #32]
 8005a0e:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8005a10:	687b      	ldr	r3, [r7, #4]
 8005a12:	685b      	ldr	r3, [r3, #4]
 8005a14:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8005a16:	687b      	ldr	r3, [r7, #4]
 8005a18:	699b      	ldr	r3, [r3, #24]
 8005a1a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 8005a1c:	68fb      	ldr	r3, [r7, #12]
 8005a1e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005a22:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8005a24:	68fb      	ldr	r3, [r7, #12]
 8005a26:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005a2a:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8005a2c:	683b      	ldr	r3, [r7, #0]
 8005a2e:	681b      	ldr	r3, [r3, #0]
 8005a30:	021b      	lsls	r3, r3, #8
 8005a32:	68fa      	ldr	r2, [r7, #12]
 8005a34:	4313      	orrs	r3, r2
 8005a36:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 8005a38:	697b      	ldr	r3, [r7, #20]
 8005a3a:	f023 0320 	bic.w	r3, r3, #32
 8005a3e:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8005a40:	683b      	ldr	r3, [r7, #0]
 8005a42:	689b      	ldr	r3, [r3, #8]
 8005a44:	011b      	lsls	r3, r3, #4
 8005a46:	697a      	ldr	r2, [r7, #20]
 8005a48:	4313      	orrs	r3, r2
 8005a4a:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8005a4c:	687b      	ldr	r3, [r7, #4]
 8005a4e:	4a22      	ldr	r2, [pc, #136]	; (8005ad8 <TIM_OC2_SetConfig+0xe4>)
 8005a50:	4293      	cmp	r3, r2
 8005a52:	d003      	beq.n	8005a5c <TIM_OC2_SetConfig+0x68>
 8005a54:	687b      	ldr	r3, [r7, #4]
 8005a56:	4a21      	ldr	r2, [pc, #132]	; (8005adc <TIM_OC2_SetConfig+0xe8>)
 8005a58:	4293      	cmp	r3, r2
 8005a5a:	d10d      	bne.n	8005a78 <TIM_OC2_SetConfig+0x84>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 8005a5c:	697b      	ldr	r3, [r7, #20]
 8005a5e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005a62:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8005a64:	683b      	ldr	r3, [r7, #0]
 8005a66:	68db      	ldr	r3, [r3, #12]
 8005a68:	011b      	lsls	r3, r3, #4
 8005a6a:	697a      	ldr	r2, [r7, #20]
 8005a6c:	4313      	orrs	r3, r2
 8005a6e:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 8005a70:	697b      	ldr	r3, [r7, #20]
 8005a72:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8005a76:	617b      	str	r3, [r7, #20]

  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8005a78:	687b      	ldr	r3, [r7, #4]
 8005a7a:	4a17      	ldr	r2, [pc, #92]	; (8005ad8 <TIM_OC2_SetConfig+0xe4>)
 8005a7c:	4293      	cmp	r3, r2
 8005a7e:	d003      	beq.n	8005a88 <TIM_OC2_SetConfig+0x94>
 8005a80:	687b      	ldr	r3, [r7, #4]
 8005a82:	4a16      	ldr	r2, [pc, #88]	; (8005adc <TIM_OC2_SetConfig+0xe8>)
 8005a84:	4293      	cmp	r3, r2
 8005a86:	d113      	bne.n	8005ab0 <TIM_OC2_SetConfig+0xbc>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 8005a88:	693b      	ldr	r3, [r7, #16]
 8005a8a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8005a8e:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8005a90:	693b      	ldr	r3, [r7, #16]
 8005a92:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005a96:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 8005a98:	683b      	ldr	r3, [r7, #0]
 8005a9a:	695b      	ldr	r3, [r3, #20]
 8005a9c:	009b      	lsls	r3, r3, #2
 8005a9e:	693a      	ldr	r2, [r7, #16]
 8005aa0:	4313      	orrs	r3, r2
 8005aa2:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8005aa4:	683b      	ldr	r3, [r7, #0]
 8005aa6:	699b      	ldr	r3, [r3, #24]
 8005aa8:	009b      	lsls	r3, r3, #2
 8005aaa:	693a      	ldr	r2, [r7, #16]
 8005aac:	4313      	orrs	r3, r2
 8005aae:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8005ab0:	687b      	ldr	r3, [r7, #4]
 8005ab2:	693a      	ldr	r2, [r7, #16]
 8005ab4:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8005ab6:	687b      	ldr	r3, [r7, #4]
 8005ab8:	68fa      	ldr	r2, [r7, #12]
 8005aba:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 8005abc:	683b      	ldr	r3, [r7, #0]
 8005abe:	685a      	ldr	r2, [r3, #4]
 8005ac0:	687b      	ldr	r3, [r7, #4]
 8005ac2:	639a      	str	r2, [r3, #56]	; 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8005ac4:	687b      	ldr	r3, [r7, #4]
 8005ac6:	697a      	ldr	r2, [r7, #20]
 8005ac8:	621a      	str	r2, [r3, #32]
}
 8005aca:	bf00      	nop
 8005acc:	371c      	adds	r7, #28
 8005ace:	46bd      	mov	sp, r7
 8005ad0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ad4:	4770      	bx	lr
 8005ad6:	bf00      	nop
 8005ad8:	40010000 	.word	0x40010000
 8005adc:	40010400 	.word	0x40010400

08005ae0 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8005ae0:	b480      	push	{r7}
 8005ae2:	b087      	sub	sp, #28
 8005ae4:	af00      	add	r7, sp, #0
 8005ae6:	6078      	str	r0, [r7, #4]
 8005ae8:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8005aea:	687b      	ldr	r3, [r7, #4]
 8005aec:	6a1b      	ldr	r3, [r3, #32]
 8005aee:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8005af2:	687b      	ldr	r3, [r7, #4]
 8005af4:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8005af6:	687b      	ldr	r3, [r7, #4]
 8005af8:	6a1b      	ldr	r3, [r3, #32]
 8005afa:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8005afc:	687b      	ldr	r3, [r7, #4]
 8005afe:	685b      	ldr	r3, [r3, #4]
 8005b00:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8005b02:	687b      	ldr	r3, [r7, #4]
 8005b04:	69db      	ldr	r3, [r3, #28]
 8005b06:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 8005b08:	68fb      	ldr	r3, [r7, #12]
 8005b0a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005b0e:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8005b10:	68fb      	ldr	r3, [r7, #12]
 8005b12:	f023 0303 	bic.w	r3, r3, #3
 8005b16:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8005b18:	683b      	ldr	r3, [r7, #0]
 8005b1a:	681b      	ldr	r3, [r3, #0]
 8005b1c:	68fa      	ldr	r2, [r7, #12]
 8005b1e:	4313      	orrs	r3, r2
 8005b20:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 8005b22:	697b      	ldr	r3, [r7, #20]
 8005b24:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8005b28:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8005b2a:	683b      	ldr	r3, [r7, #0]
 8005b2c:	689b      	ldr	r3, [r3, #8]
 8005b2e:	021b      	lsls	r3, r3, #8
 8005b30:	697a      	ldr	r2, [r7, #20]
 8005b32:	4313      	orrs	r3, r2
 8005b34:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8005b36:	687b      	ldr	r3, [r7, #4]
 8005b38:	4a21      	ldr	r2, [pc, #132]	; (8005bc0 <TIM_OC3_SetConfig+0xe0>)
 8005b3a:	4293      	cmp	r3, r2
 8005b3c:	d003      	beq.n	8005b46 <TIM_OC3_SetConfig+0x66>
 8005b3e:	687b      	ldr	r3, [r7, #4]
 8005b40:	4a20      	ldr	r2, [pc, #128]	; (8005bc4 <TIM_OC3_SetConfig+0xe4>)
 8005b42:	4293      	cmp	r3, r2
 8005b44:	d10d      	bne.n	8005b62 <TIM_OC3_SetConfig+0x82>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 8005b46:	697b      	ldr	r3, [r7, #20]
 8005b48:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005b4c:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8005b4e:	683b      	ldr	r3, [r7, #0]
 8005b50:	68db      	ldr	r3, [r3, #12]
 8005b52:	021b      	lsls	r3, r3, #8
 8005b54:	697a      	ldr	r2, [r7, #20]
 8005b56:	4313      	orrs	r3, r2
 8005b58:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 8005b5a:	697b      	ldr	r3, [r7, #20]
 8005b5c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8005b60:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8005b62:	687b      	ldr	r3, [r7, #4]
 8005b64:	4a16      	ldr	r2, [pc, #88]	; (8005bc0 <TIM_OC3_SetConfig+0xe0>)
 8005b66:	4293      	cmp	r3, r2
 8005b68:	d003      	beq.n	8005b72 <TIM_OC3_SetConfig+0x92>
 8005b6a:	687b      	ldr	r3, [r7, #4]
 8005b6c:	4a15      	ldr	r2, [pc, #84]	; (8005bc4 <TIM_OC3_SetConfig+0xe4>)
 8005b6e:	4293      	cmp	r3, r2
 8005b70:	d113      	bne.n	8005b9a <TIM_OC3_SetConfig+0xba>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 8005b72:	693b      	ldr	r3, [r7, #16]
 8005b74:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005b78:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8005b7a:	693b      	ldr	r3, [r7, #16]
 8005b7c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8005b80:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8005b82:	683b      	ldr	r3, [r7, #0]
 8005b84:	695b      	ldr	r3, [r3, #20]
 8005b86:	011b      	lsls	r3, r3, #4
 8005b88:	693a      	ldr	r2, [r7, #16]
 8005b8a:	4313      	orrs	r3, r2
 8005b8c:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8005b8e:	683b      	ldr	r3, [r7, #0]
 8005b90:	699b      	ldr	r3, [r3, #24]
 8005b92:	011b      	lsls	r3, r3, #4
 8005b94:	693a      	ldr	r2, [r7, #16]
 8005b96:	4313      	orrs	r3, r2
 8005b98:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8005b9a:	687b      	ldr	r3, [r7, #4]
 8005b9c:	693a      	ldr	r2, [r7, #16]
 8005b9e:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8005ba0:	687b      	ldr	r3, [r7, #4]
 8005ba2:	68fa      	ldr	r2, [r7, #12]
 8005ba4:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8005ba6:	683b      	ldr	r3, [r7, #0]
 8005ba8:	685a      	ldr	r2, [r3, #4]
 8005baa:	687b      	ldr	r3, [r7, #4]
 8005bac:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8005bae:	687b      	ldr	r3, [r7, #4]
 8005bb0:	697a      	ldr	r2, [r7, #20]
 8005bb2:	621a      	str	r2, [r3, #32]
}
 8005bb4:	bf00      	nop
 8005bb6:	371c      	adds	r7, #28
 8005bb8:	46bd      	mov	sp, r7
 8005bba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bbe:	4770      	bx	lr
 8005bc0:	40010000 	.word	0x40010000
 8005bc4:	40010400 	.word	0x40010400

08005bc8 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8005bc8:	b480      	push	{r7}
 8005bca:	b087      	sub	sp, #28
 8005bcc:	af00      	add	r7, sp, #0
 8005bce:	6078      	str	r0, [r7, #4]
 8005bd0:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8005bd2:	687b      	ldr	r3, [r7, #4]
 8005bd4:	6a1b      	ldr	r3, [r3, #32]
 8005bd6:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8005bda:	687b      	ldr	r3, [r7, #4]
 8005bdc:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8005bde:	687b      	ldr	r3, [r7, #4]
 8005be0:	6a1b      	ldr	r3, [r3, #32]
 8005be2:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8005be4:	687b      	ldr	r3, [r7, #4]
 8005be6:	685b      	ldr	r3, [r3, #4]
 8005be8:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8005bea:	687b      	ldr	r3, [r7, #4]
 8005bec:	69db      	ldr	r3, [r3, #28]
 8005bee:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 8005bf0:	68fb      	ldr	r3, [r7, #12]
 8005bf2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005bf6:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8005bf8:	68fb      	ldr	r3, [r7, #12]
 8005bfa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005bfe:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8005c00:	683b      	ldr	r3, [r7, #0]
 8005c02:	681b      	ldr	r3, [r3, #0]
 8005c04:	021b      	lsls	r3, r3, #8
 8005c06:	68fa      	ldr	r2, [r7, #12]
 8005c08:	4313      	orrs	r3, r2
 8005c0a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 8005c0c:	693b      	ldr	r3, [r7, #16]
 8005c0e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8005c12:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8005c14:	683b      	ldr	r3, [r7, #0]
 8005c16:	689b      	ldr	r3, [r3, #8]
 8005c18:	031b      	lsls	r3, r3, #12
 8005c1a:	693a      	ldr	r2, [r7, #16]
 8005c1c:	4313      	orrs	r3, r2
 8005c1e:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8005c20:	687b      	ldr	r3, [r7, #4]
 8005c22:	4a12      	ldr	r2, [pc, #72]	; (8005c6c <TIM_OC4_SetConfig+0xa4>)
 8005c24:	4293      	cmp	r3, r2
 8005c26:	d003      	beq.n	8005c30 <TIM_OC4_SetConfig+0x68>
 8005c28:	687b      	ldr	r3, [r7, #4]
 8005c2a:	4a11      	ldr	r2, [pc, #68]	; (8005c70 <TIM_OC4_SetConfig+0xa8>)
 8005c2c:	4293      	cmp	r3, r2
 8005c2e:	d109      	bne.n	8005c44 <TIM_OC4_SetConfig+0x7c>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 8005c30:	697b      	ldr	r3, [r7, #20]
 8005c32:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8005c36:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8005c38:	683b      	ldr	r3, [r7, #0]
 8005c3a:	695b      	ldr	r3, [r3, #20]
 8005c3c:	019b      	lsls	r3, r3, #6
 8005c3e:	697a      	ldr	r2, [r7, #20]
 8005c40:	4313      	orrs	r3, r2
 8005c42:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8005c44:	687b      	ldr	r3, [r7, #4]
 8005c46:	697a      	ldr	r2, [r7, #20]
 8005c48:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8005c4a:	687b      	ldr	r3, [r7, #4]
 8005c4c:	68fa      	ldr	r2, [r7, #12]
 8005c4e:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8005c50:	683b      	ldr	r3, [r7, #0]
 8005c52:	685a      	ldr	r2, [r3, #4]
 8005c54:	687b      	ldr	r3, [r7, #4]
 8005c56:	641a      	str	r2, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8005c58:	687b      	ldr	r3, [r7, #4]
 8005c5a:	693a      	ldr	r2, [r7, #16]
 8005c5c:	621a      	str	r2, [r3, #32]
}
 8005c5e:	bf00      	nop
 8005c60:	371c      	adds	r7, #28
 8005c62:	46bd      	mov	sp, r7
 8005c64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005c68:	4770      	bx	lr
 8005c6a:	bf00      	nop
 8005c6c:	40010000 	.word	0x40010000
 8005c70:	40010400 	.word	0x40010400

08005c74 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 8005c74:	b480      	push	{r7}
 8005c76:	b087      	sub	sp, #28
 8005c78:	af00      	add	r7, sp, #0
 8005c7a:	60f8      	str	r0, [r7, #12]
 8005c7c:	60b9      	str	r1, [r7, #8]
 8005c7e:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8005c80:	68bb      	ldr	r3, [r7, #8]
 8005c82:	f003 031f 	and.w	r3, r3, #31
 8005c86:	2201      	movs	r2, #1
 8005c88:	fa02 f303 	lsl.w	r3, r2, r3
 8005c8c:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8005c8e:	68fb      	ldr	r3, [r7, #12]
 8005c90:	6a1a      	ldr	r2, [r3, #32]
 8005c92:	697b      	ldr	r3, [r7, #20]
 8005c94:	43db      	mvns	r3, r3
 8005c96:	401a      	ands	r2, r3
 8005c98:	68fb      	ldr	r3, [r7, #12]
 8005c9a:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8005c9c:	68fb      	ldr	r3, [r7, #12]
 8005c9e:	6a1a      	ldr	r2, [r3, #32]
 8005ca0:	68bb      	ldr	r3, [r7, #8]
 8005ca2:	f003 031f 	and.w	r3, r3, #31
 8005ca6:	6879      	ldr	r1, [r7, #4]
 8005ca8:	fa01 f303 	lsl.w	r3, r1, r3
 8005cac:	431a      	orrs	r2, r3
 8005cae:	68fb      	ldr	r3, [r7, #12]
 8005cb0:	621a      	str	r2, [r3, #32]
}
 8005cb2:	bf00      	nop
 8005cb4:	371c      	adds	r7, #28
 8005cb6:	46bd      	mov	sp, r7
 8005cb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cbc:	4770      	bx	lr
	...

08005cc0 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8005cc0:	b480      	push	{r7}
 8005cc2:	b085      	sub	sp, #20
 8005cc4:	af00      	add	r7, sp, #0
 8005cc6:	6078      	str	r0, [r7, #4]
 8005cc8:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8005cca:	687b      	ldr	r3, [r7, #4]
 8005ccc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005cd0:	2b01      	cmp	r3, #1
 8005cd2:	d101      	bne.n	8005cd8 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8005cd4:	2302      	movs	r3, #2
 8005cd6:	e05a      	b.n	8005d8e <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8005cd8:	687b      	ldr	r3, [r7, #4]
 8005cda:	2201      	movs	r2, #1
 8005cdc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8005ce0:	687b      	ldr	r3, [r7, #4]
 8005ce2:	2202      	movs	r2, #2
 8005ce4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8005ce8:	687b      	ldr	r3, [r7, #4]
 8005cea:	681b      	ldr	r3, [r3, #0]
 8005cec:	685b      	ldr	r3, [r3, #4]
 8005cee:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8005cf0:	687b      	ldr	r3, [r7, #4]
 8005cf2:	681b      	ldr	r3, [r3, #0]
 8005cf4:	689b      	ldr	r3, [r3, #8]
 8005cf6:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8005cf8:	68fb      	ldr	r3, [r7, #12]
 8005cfa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005cfe:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8005d00:	683b      	ldr	r3, [r7, #0]
 8005d02:	681b      	ldr	r3, [r3, #0]
 8005d04:	68fa      	ldr	r2, [r7, #12]
 8005d06:	4313      	orrs	r3, r2
 8005d08:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8005d0a:	687b      	ldr	r3, [r7, #4]
 8005d0c:	681b      	ldr	r3, [r3, #0]
 8005d0e:	68fa      	ldr	r2, [r7, #12]
 8005d10:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8005d12:	687b      	ldr	r3, [r7, #4]
 8005d14:	681b      	ldr	r3, [r3, #0]
 8005d16:	4a21      	ldr	r2, [pc, #132]	; (8005d9c <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8005d18:	4293      	cmp	r3, r2
 8005d1a:	d022      	beq.n	8005d62 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005d1c:	687b      	ldr	r3, [r7, #4]
 8005d1e:	681b      	ldr	r3, [r3, #0]
 8005d20:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8005d24:	d01d      	beq.n	8005d62 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005d26:	687b      	ldr	r3, [r7, #4]
 8005d28:	681b      	ldr	r3, [r3, #0]
 8005d2a:	4a1d      	ldr	r2, [pc, #116]	; (8005da0 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8005d2c:	4293      	cmp	r3, r2
 8005d2e:	d018      	beq.n	8005d62 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005d30:	687b      	ldr	r3, [r7, #4]
 8005d32:	681b      	ldr	r3, [r3, #0]
 8005d34:	4a1b      	ldr	r2, [pc, #108]	; (8005da4 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8005d36:	4293      	cmp	r3, r2
 8005d38:	d013      	beq.n	8005d62 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005d3a:	687b      	ldr	r3, [r7, #4]
 8005d3c:	681b      	ldr	r3, [r3, #0]
 8005d3e:	4a1a      	ldr	r2, [pc, #104]	; (8005da8 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8005d40:	4293      	cmp	r3, r2
 8005d42:	d00e      	beq.n	8005d62 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005d44:	687b      	ldr	r3, [r7, #4]
 8005d46:	681b      	ldr	r3, [r3, #0]
 8005d48:	4a18      	ldr	r2, [pc, #96]	; (8005dac <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8005d4a:	4293      	cmp	r3, r2
 8005d4c:	d009      	beq.n	8005d62 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005d4e:	687b      	ldr	r3, [r7, #4]
 8005d50:	681b      	ldr	r3, [r3, #0]
 8005d52:	4a17      	ldr	r2, [pc, #92]	; (8005db0 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8005d54:	4293      	cmp	r3, r2
 8005d56:	d004      	beq.n	8005d62 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8005d58:	687b      	ldr	r3, [r7, #4]
 8005d5a:	681b      	ldr	r3, [r3, #0]
 8005d5c:	4a15      	ldr	r2, [pc, #84]	; (8005db4 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8005d5e:	4293      	cmp	r3, r2
 8005d60:	d10c      	bne.n	8005d7c <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8005d62:	68bb      	ldr	r3, [r7, #8]
 8005d64:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005d68:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8005d6a:	683b      	ldr	r3, [r7, #0]
 8005d6c:	685b      	ldr	r3, [r3, #4]
 8005d6e:	68ba      	ldr	r2, [r7, #8]
 8005d70:	4313      	orrs	r3, r2
 8005d72:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8005d74:	687b      	ldr	r3, [r7, #4]
 8005d76:	681b      	ldr	r3, [r3, #0]
 8005d78:	68ba      	ldr	r2, [r7, #8]
 8005d7a:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8005d7c:	687b      	ldr	r3, [r7, #4]
 8005d7e:	2201      	movs	r2, #1
 8005d80:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8005d84:	687b      	ldr	r3, [r7, #4]
 8005d86:	2200      	movs	r2, #0
 8005d88:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8005d8c:	2300      	movs	r3, #0
}
 8005d8e:	4618      	mov	r0, r3
 8005d90:	3714      	adds	r7, #20
 8005d92:	46bd      	mov	sp, r7
 8005d94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d98:	4770      	bx	lr
 8005d9a:	bf00      	nop
 8005d9c:	40010000 	.word	0x40010000
 8005da0:	40000400 	.word	0x40000400
 8005da4:	40000800 	.word	0x40000800
 8005da8:	40000c00 	.word	0x40000c00
 8005dac:	40010400 	.word	0x40010400
 8005db0:	40014000 	.word	0x40014000
 8005db4:	40001800 	.word	0x40001800

08005db8 <HAL_TIMEx_CommutCallback>:
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 8005db8:	b480      	push	{r7}
 8005dba:	b083      	sub	sp, #12
 8005dbc:	af00      	add	r7, sp, #0
 8005dbe:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 8005dc0:	bf00      	nop
 8005dc2:	370c      	adds	r7, #12
 8005dc4:	46bd      	mov	sp, r7
 8005dc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005dca:	4770      	bx	lr

08005dcc <HAL_TIMEx_BreakCallback>:
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8005dcc:	b480      	push	{r7}
 8005dce:	b083      	sub	sp, #12
 8005dd0:	af00      	add	r7, sp, #0
 8005dd2:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 8005dd4:	bf00      	nop
 8005dd6:	370c      	adds	r7, #12
 8005dd8:	46bd      	mov	sp, r7
 8005dda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005dde:	4770      	bx	lr

08005de0 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8005de0:	b580      	push	{r7, lr}
 8005de2:	af00      	add	r7, sp, #0
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 8005de4:	f004 f934 	bl	800a050 <touchgfx_init>
}
 8005de8:	bf00      	nop
 8005dea:	bd80      	pop	{r7, pc}

08005dec <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 8005dec:	b580      	push	{r7, lr}
 8005dee:	af00      	add	r7, sp, #0
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
 8005df0:	f004 f95e 	bl	800a0b0 <touchgfx_taskEntry>
}
 8005df4:	bf00      	nop
 8005df6:	bd80      	pop	{r7, pc}

08005df8 <_ZN8touchgfx12FontProviderD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~FontProvider()
 8005df8:	b480      	push	{r7}
 8005dfa:	b083      	sub	sp, #12
 8005dfc:	af00      	add	r7, sp, #0
 8005dfe:	6078      	str	r0, [r7, #4]
    {
 8005e00:	4a04      	ldr	r2, [pc, #16]	; (8005e14 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 8005e02:	687b      	ldr	r3, [r7, #4]
 8005e04:	601a      	str	r2, [r3, #0]
    }
 8005e06:	687b      	ldr	r3, [r7, #4]
 8005e08:	4618      	mov	r0, r3
 8005e0a:	370c      	adds	r7, #12
 8005e0c:	46bd      	mov	sp, r7
 8005e0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e12:	4770      	bx	lr
 8005e14:	0801c770 	.word	0x0801c770

08005e18 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 8005e18:	b580      	push	{r7, lr}
 8005e1a:	b082      	sub	sp, #8
 8005e1c:	af00      	add	r7, sp, #0
 8005e1e:	6078      	str	r0, [r7, #4]
    }
 8005e20:	6878      	ldr	r0, [r7, #4]
 8005e22:	f7ff ffe9 	bl	8005df8 <_ZN8touchgfx12FontProviderD1Ev>
 8005e26:	2104      	movs	r1, #4
 8005e28:	6878      	ldr	r0, [r7, #4]
 8005e2a:	f015 f98f 	bl	801b14c <_ZdlPvj>
 8005e2e:	687b      	ldr	r3, [r7, #4]
 8005e30:	4618      	mov	r0, r3
 8005e32:	3708      	adds	r7, #8
 8005e34:	46bd      	mov	sp, r7
 8005e36:	bd80      	pop	{r7, pc}

08005e38 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8005e38:	b580      	push	{r7, lr}
 8005e3a:	b082      	sub	sp, #8
 8005e3c:	af00      	add	r7, sp, #0
 8005e3e:	6078      	str	r0, [r7, #4]
 8005e40:	460b      	mov	r3, r1
 8005e42:	807b      	strh	r3, [r7, #2]
    switch (typography)
 8005e44:	887b      	ldrh	r3, [r7, #2]
 8005e46:	2b03      	cmp	r3, #3
 8005e48:	d81e      	bhi.n	8005e88 <_ZN23ApplicationFontProvider7getFontEt+0x50>
 8005e4a:	a201      	add	r2, pc, #4	; (adr r2, 8005e50 <_ZN23ApplicationFontProvider7getFontEt+0x18>)
 8005e4c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005e50:	08005e61 	.word	0x08005e61
 8005e54:	08005e6b 	.word	0x08005e6b
 8005e58:	08005e75 	.word	0x08005e75
 8005e5c:	08005e7f 	.word	0x08005e7f
    {
    case Typography::DEFAULT:
        // verdana_13_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8005e60:	f002 fc9c 	bl	800879c <_ZN17TypedTextDatabase8getFontsEv>
 8005e64:	4603      	mov	r3, r0
 8005e66:	681b      	ldr	r3, [r3, #0]
 8005e68:	e00f      	b.n	8005e8a <_ZN23ApplicationFontProvider7getFontEt+0x52>
    case Typography::LARGE:
        // verdana_36_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8005e6a:	f002 fc97 	bl	800879c <_ZN17TypedTextDatabase8getFontsEv>
 8005e6e:	4603      	mov	r3, r0
 8005e70:	685b      	ldr	r3, [r3, #4]
 8005e72:	e00a      	b.n	8005e8a <_ZN23ApplicationFontProvider7getFontEt+0x52>
    case Typography::SMALL:
        // verdana_25_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8005e74:	f002 fc92 	bl	800879c <_ZN17TypedTextDatabase8getFontsEv>
 8005e78:	4603      	mov	r3, r0
 8005e7a:	689b      	ldr	r3, [r3, #8]
 8005e7c:	e005      	b.n	8005e8a <_ZN23ApplicationFontProvider7getFontEt+0x52>
    case Typography::TITLE:
        // verdana_28_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8005e7e:	f002 fc8d 	bl	800879c <_ZN17TypedTextDatabase8getFontsEv>
 8005e82:	4603      	mov	r3, r0
 8005e84:	68db      	ldr	r3, [r3, #12]
 8005e86:	e000      	b.n	8005e8a <_ZN23ApplicationFontProvider7getFontEt+0x52>
    default:
        return 0;
 8005e88:	2300      	movs	r3, #0
    }
}
 8005e8a:	4618      	mov	r0, r3
 8005e8c:	3708      	adds	r7, #8
 8005e8e:	46bd      	mov	sp, r7
 8005e90:	bd80      	pop	{r7, pc}
 8005e92:	bf00      	nop

08005e94 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;   // verdana_25_4bpp
    static const touchgfx::FontId TITLE = 3;   // verdana_28_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8005e94:	b580      	push	{r7, lr}
 8005e96:	b082      	sub	sp, #8
 8005e98:	af00      	add	r7, sp, #0
 8005e9a:	6078      	str	r0, [r7, #4]
 8005e9c:	4a05      	ldr	r2, [pc, #20]	; (8005eb4 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 8005e9e:	687b      	ldr	r3, [r7, #4]
 8005ea0:	601a      	str	r2, [r3, #0]
 8005ea2:	687b      	ldr	r3, [r7, #4]
 8005ea4:	4618      	mov	r0, r3
 8005ea6:	f7ff ffa7 	bl	8005df8 <_ZN8touchgfx12FontProviderD1Ev>
 8005eaa:	687b      	ldr	r3, [r7, #4]
 8005eac:	4618      	mov	r0, r3
 8005eae:	3708      	adds	r7, #8
 8005eb0:	46bd      	mov	sp, r7
 8005eb2:	bd80      	pop	{r7, pc}
 8005eb4:	0801c75c 	.word	0x0801c75c

08005eb8 <_ZN23ApplicationFontProviderD0Ev>:
 8005eb8:	b580      	push	{r7, lr}
 8005eba:	b082      	sub	sp, #8
 8005ebc:	af00      	add	r7, sp, #0
 8005ebe:	6078      	str	r0, [r7, #4]
 8005ec0:	6878      	ldr	r0, [r7, #4]
 8005ec2:	f7ff ffe7 	bl	8005e94 <_ZN23ApplicationFontProviderD1Ev>
 8005ec6:	2104      	movs	r1, #4
 8005ec8:	6878      	ldr	r0, [r7, #4]
 8005eca:	f015 f93f 	bl	801b14c <_ZdlPvj>
 8005ece:	687b      	ldr	r3, [r7, #4]
 8005ed0:	4618      	mov	r0, r3
 8005ed2:	3708      	adds	r7, #8
 8005ed4:	46bd      	mov	sp, r7
 8005ed6:	bd80      	pop	{r7, pc}

08005ed8 <_ZN8touchgfx4FontD1Ev>:
 *        It provides utility functions such as obtaining string width and font height.
 */
class Font
{
public:
    virtual ~Font() { }
 8005ed8:	b480      	push	{r7}
 8005eda:	b083      	sub	sp, #12
 8005edc:	af00      	add	r7, sp, #0
 8005ede:	6078      	str	r0, [r7, #4]
 8005ee0:	4a04      	ldr	r2, [pc, #16]	; (8005ef4 <_ZN8touchgfx4FontD1Ev+0x1c>)
 8005ee2:	687b      	ldr	r3, [r7, #4]
 8005ee4:	601a      	str	r2, [r3, #0]
 8005ee6:	687b      	ldr	r3, [r7, #4]
 8005ee8:	4618      	mov	r0, r3
 8005eea:	370c      	adds	r7, #12
 8005eec:	46bd      	mov	sp, r7
 8005eee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ef2:	4770      	bx	lr
 8005ef4:	0801e614 	.word	0x0801e614

08005ef8 <_ZN8touchgfx4FontD0Ev>:
 8005ef8:	b580      	push	{r7, lr}
 8005efa:	b082      	sub	sp, #8
 8005efc:	af00      	add	r7, sp, #0
 8005efe:	6078      	str	r0, [r7, #4]
 8005f00:	6878      	ldr	r0, [r7, #4]
 8005f02:	f7ff ffe9 	bl	8005ed8 <_ZN8touchgfx4FontD1Ev>
 8005f06:	2110      	movs	r1, #16
 8005f08:	6878      	ldr	r0, [r7, #4]
 8005f0a:	f015 f91f 	bl	801b14c <_ZdlPvj>
 8005f0e:	687b      	ldr	r3, [r7, #4]
 8005f10:	4618      	mov	r0, r3
 8005f12:	3708      	adds	r7, #8
 8005f14:	46bd      	mov	sp, r7
 8005f16:	bd80      	pop	{r7, pc}

08005f18 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getGlyph
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8005f18:	b590      	push	{r4, r7, lr}
 8005f1a:	b087      	sub	sp, #28
 8005f1c:	af00      	add	r7, sp, #0
 8005f1e:	6078      	str	r0, [r7, #4]
 8005f20:	460b      	mov	r3, r1
 8005f22:	807b      	strh	r3, [r7, #2]
    {
        const uint8_t* dummyPixelDataPointer = 0;
 8005f24:	2300      	movs	r3, #0
 8005f26:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 8005f28:	2300      	movs	r3, #0
 8005f2a:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8005f2c:	687b      	ldr	r3, [r7, #4]
 8005f2e:	681b      	ldr	r3, [r3, #0]
 8005f30:	3308      	adds	r3, #8
 8005f32:	681c      	ldr	r4, [r3, #0]
 8005f34:	f107 030f 	add.w	r3, r7, #15
 8005f38:	f107 0210 	add.w	r2, r7, #16
 8005f3c:	8879      	ldrh	r1, [r7, #2]
 8005f3e:	6878      	ldr	r0, [r7, #4]
 8005f40:	47a0      	blx	r4
 8005f42:	6178      	str	r0, [r7, #20]
        return glyph;
 8005f44:	697b      	ldr	r3, [r7, #20]
    }
 8005f46:	4618      	mov	r0, r3
 8005f48:	371c      	adds	r7, #28
 8005f4a:	46bd      	mov	sp, r7
 8005f4c:	bd90      	pop	{r4, r7, pc}

08005f4e <_ZNK8touchgfx4Font15getFallbackCharEv>:
     *        character, use the glyph for the character returned by this function. If 0 (zero)
     *        is returned, there is no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 8005f4e:	b480      	push	{r7}
 8005f50:	b083      	sub	sp, #12
 8005f52:	af00      	add	r7, sp, #0
 8005f54:	6078      	str	r0, [r7, #4]
    {
        return falllbackCharacter;
 8005f56:	687b      	ldr	r3, [r7, #4]
 8005f58:	895b      	ldrh	r3, [r3, #10]
    }
 8005f5a:	4618      	mov	r0, r3
 8005f5c:	370c      	adds	r7, #12
 8005f5e:	46bd      	mov	sp, r7
 8005f60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f64:	4770      	bx	lr

08005f66 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
    *        Gets ellipsis character for the given font. This is the character which is used
    *        when truncating long lines.
    *
    * @return The ellipsis character for the typography.
    */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 8005f66:	b480      	push	{r7}
 8005f68:	b083      	sub	sp, #12
 8005f6a:	af00      	add	r7, sp, #0
 8005f6c:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 8005f6e:	687b      	ldr	r3, [r7, #4]
 8005f70:	899b      	ldrh	r3, [r3, #12]
    }
 8005f72:	4618      	mov	r0, r3
 8005f74:	370c      	adds	r7, #12
 8005f76:	46bd      	mov	sp, r7
 8005f78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f7c:	4770      	bx	lr

08005f7e <_ZNK8touchgfx4Font13getFontHeightEv>:
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getMinimumTextHeight for this.
     *
     * @return The height in pixels of this font.
     */
    virtual uint16_t getFontHeight() const
 8005f7e:	b480      	push	{r7}
 8005f80:	b083      	sub	sp, #12
 8005f82:	af00      	add	r7, sp, #0
 8005f84:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 8005f86:	687b      	ldr	r3, [r7, #4]
 8005f88:	889b      	ldrh	r3, [r3, #4]
    }
 8005f8a:	4618      	mov	r0, r3
 8005f8c:	370c      	adds	r7, #12
 8005f8e:	46bd      	mov	sp, r7
 8005f90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f94:	4770      	bx	lr

08005f96 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *        into account that certain characters (eg 'g') have pixels below the baseline,
     *        thus making the text height larger than the font height.
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    virtual uint16_t getMinimumTextHeight() const
 8005f96:	b480      	push	{r7}
 8005f98:	b083      	sub	sp, #12
 8005f9a:	af00      	add	r7, sp, #0
 8005f9c:	6078      	str	r0, [r7, #4]
    {
        return fontHeight + pixelsBelowBaseline;
 8005f9e:	687b      	ldr	r3, [r7, #4]
 8005fa0:	889a      	ldrh	r2, [r3, #4]
 8005fa2:	687b      	ldr	r3, [r7, #4]
 8005fa4:	799b      	ldrb	r3, [r3, #6]
 8005fa6:	b29b      	uxth	r3, r3
 8005fa8:	4413      	add	r3, r2
 8005faa:	b29b      	uxth	r3, r3
    }
 8005fac:	4618      	mov	r0, r3
 8005fae:	370c      	adds	r7, #12
 8005fb0:	46bd      	mov	sp, r7
 8005fb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fb6:	4770      	bx	lr

08005fb8 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     *        Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    virtual uint8_t getBitsPerPixel() const
 8005fb8:	b480      	push	{r7}
 8005fba:	b083      	sub	sp, #12
 8005fbc:	af00      	add	r7, sp, #0
 8005fbe:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 8005fc0:	687b      	ldr	r3, [r7, #4]
 8005fc2:	79db      	ldrb	r3, [r3, #7]
 8005fc4:	f3c3 0306 	ubfx	r3, r3, #0, #7
 8005fc8:	b2db      	uxtb	r3, r3
    }
 8005fca:	4618      	mov	r0, r3
 8005fcc:	370c      	adds	r7, #12
 8005fce:	46bd      	mov	sp, r7
 8005fd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fd4:	4770      	bx	lr

08005fd6 <_ZNK8touchgfx4Font15getDataFormatA4Ev>:
     *
     *        Are the glyphs saved using ST A4 format.
     *
     * @return True if the font is stored using A4 format, false otherwise.
     */
    virtual uint8_t getDataFormatA4() const
 8005fd6:	b480      	push	{r7}
 8005fd8:	b083      	sub	sp, #12
 8005fda:	af00      	add	r7, sp, #0
 8005fdc:	6078      	str	r0, [r7, #4]
    {
        return a4;
 8005fde:	687b      	ldr	r3, [r7, #4]
 8005fe0:	79db      	ldrb	r3, [r3, #7]
 8005fe2:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8005fe6:	b2db      	uxtb	r3, r3
    }
 8005fe8:	4618      	mov	r0, r3
 8005fea:	370c      	adds	r7, #12
 8005fec:	46bd      	mov	sp, r7
 8005fee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ff2:	4770      	bx	lr

08005ff4 <_ZN8touchgfx9ConstFontD1Ev>:
 * @note Pure virtual class. Create an application-
 *          specific implementation of getPixelData.
 *
 * @see Font
 */
class ConstFont : public Font
 8005ff4:	b580      	push	{r7, lr}
 8005ff6:	b082      	sub	sp, #8
 8005ff8:	af00      	add	r7, sp, #0
 8005ffa:	6078      	str	r0, [r7, #4]
 8005ffc:	4a05      	ldr	r2, [pc, #20]	; (8006014 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 8005ffe:	687b      	ldr	r3, [r7, #4]
 8006000:	601a      	str	r2, [r3, #0]
 8006002:	687b      	ldr	r3, [r7, #4]
 8006004:	4618      	mov	r0, r3
 8006006:	f7ff ff67 	bl	8005ed8 <_ZN8touchgfx4FontD1Ev>
 800600a:	687b      	ldr	r3, [r7, #4]
 800600c:	4618      	mov	r0, r3
 800600e:	3708      	adds	r7, #8
 8006010:	46bd      	mov	sp, r7
 8006012:	bd80      	pop	{r7, pc}
 8006014:	0801e6cc 	.word	0x0801e6cc

08006018 <_ZN8touchgfx9ConstFontD0Ev>:
 8006018:	b580      	push	{r7, lr}
 800601a:	b082      	sub	sp, #8
 800601c:	af00      	add	r7, sp, #0
 800601e:	6078      	str	r0, [r7, #4]
 8006020:	6878      	ldr	r0, [r7, #4]
 8006022:	f7ff ffe7 	bl	8005ff4 <_ZN8touchgfx9ConstFontD1Ev>
 8006026:	2118      	movs	r1, #24
 8006028:	6878      	ldr	r0, [r7, #4]
 800602a:	f015 f88f 	bl	801b14c <_ZdlPvj>
 800602e:	687b      	ldr	r3, [r7, #4]
 8006030:	4618      	mov	r0, r3
 8006032:	3708      	adds	r7, #8
 8006034:	46bd      	mov	sp, r7
 8006036:	bd80      	pop	{r7, pc}

08006038 <_ZN8touchgfx13GeneratedFontD1Ev>:
 *        An GeneratedFont has both glyph table and glyph data placed in a flash which
 *        supports random access read (i.e. not a NAND flash)
 *
 * @see ConstFont
 */
class GeneratedFont : public ConstFont
 8006038:	b580      	push	{r7, lr}
 800603a:	b082      	sub	sp, #8
 800603c:	af00      	add	r7, sp, #0
 800603e:	6078      	str	r0, [r7, #4]
 8006040:	4a05      	ldr	r2, [pc, #20]	; (8006058 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 8006042:	687b      	ldr	r3, [r7, #4]
 8006044:	601a      	str	r2, [r3, #0]
 8006046:	687b      	ldr	r3, [r7, #4]
 8006048:	4618      	mov	r0, r3
 800604a:	f7ff ffd3 	bl	8005ff4 <_ZN8touchgfx9ConstFontD1Ev>
 800604e:	687b      	ldr	r3, [r7, #4]
 8006050:	4618      	mov	r0, r3
 8006052:	3708      	adds	r7, #8
 8006054:	46bd      	mov	sp, r7
 8006056:	bd80      	pop	{r7, pc}
 8006058:	0801c7b4 	.word	0x0801c7b4

0800605c <_ZN8touchgfx13GeneratedFontD0Ev>:
 800605c:	b580      	push	{r7, lr}
 800605e:	b082      	sub	sp, #8
 8006060:	af00      	add	r7, sp, #0
 8006062:	6078      	str	r0, [r7, #4]
 8006064:	6878      	ldr	r0, [r7, #4]
 8006066:	f7ff ffe7 	bl	8006038 <_ZN8touchgfx13GeneratedFontD1Ev>
 800606a:	2124      	movs	r1, #36	; 0x24
 800606c:	6878      	ldr	r0, [r7, #4]
 800606e:	f015 f86d 	bl	801b14c <_ZdlPvj>
 8006072:	687b      	ldr	r3, [r7, #4]
 8006074:	4618      	mov	r0, r3
 8006076:	3708      	adds	r7, #8
 8006078:	46bd      	mov	sp, r7
 800607a:	bd80      	pop	{r7, pc}

0800607c <_ZNK8touchgfx9TypedText7getFontEv>:
     *
     *        Gets the font associated with this TypedText.
     *
     * @return The font.
     */
    const Font* getFont() const
 800607c:	b580      	push	{r7, lr}
 800607e:	b082      	sub	sp, #8
 8006080:	af00      	add	r7, sp, #0
 8006082:	6078      	str	r0, [r7, #4]
    {
        assertValid();
 8006084:	6878      	ldr	r0, [r7, #4]
 8006086:	f000 f82d 	bl	80060e4 <_ZNK8touchgfx9TypedText11assertValidEv>
        return fonts[typedTexts[typedTextId].fontIdx];
 800608a:	4b08      	ldr	r3, [pc, #32]	; (80060ac <_ZNK8touchgfx9TypedText7getFontEv+0x30>)
 800608c:	681a      	ldr	r2, [r3, #0]
 800608e:	4b08      	ldr	r3, [pc, #32]	; (80060b0 <_ZNK8touchgfx9TypedText7getFontEv+0x34>)
 8006090:	6819      	ldr	r1, [r3, #0]
 8006092:	687b      	ldr	r3, [r7, #4]
 8006094:	881b      	ldrh	r3, [r3, #0]
 8006096:	005b      	lsls	r3, r3, #1
 8006098:	440b      	add	r3, r1
 800609a:	781b      	ldrb	r3, [r3, #0]
 800609c:	009b      	lsls	r3, r3, #2
 800609e:	4413      	add	r3, r2
 80060a0:	681b      	ldr	r3, [r3, #0]
    }
 80060a2:	4618      	mov	r0, r3
 80060a4:	3708      	adds	r7, #8
 80060a6:	46bd      	mov	sp, r7
 80060a8:	bd80      	pop	{r7, pc}
 80060aa:	bf00      	nop
 80060ac:	20026f28 	.word	0x20026f28
 80060b0:	20026f20 	.word	0x20026f20

080060b4 <_ZNK8touchgfx9TypedText16getTextDirectionEv>:
     *
     *        Gets the text direction associated with this TypedText.
     *
     * @return The alignment.
     */
    TextDirection getTextDirection() const
 80060b4:	b580      	push	{r7, lr}
 80060b6:	b082      	sub	sp, #8
 80060b8:	af00      	add	r7, sp, #0
 80060ba:	6078      	str	r0, [r7, #4]
    {
        assertValid();
 80060bc:	6878      	ldr	r0, [r7, #4]
 80060be:	f000 f811 	bl	80060e4 <_ZNK8touchgfx9TypedText11assertValidEv>
        return typedTexts[typedTextId].direction;
 80060c2:	4b07      	ldr	r3, [pc, #28]	; (80060e0 <_ZNK8touchgfx9TypedText16getTextDirectionEv+0x2c>)
 80060c4:	681a      	ldr	r2, [r3, #0]
 80060c6:	687b      	ldr	r3, [r7, #4]
 80060c8:	881b      	ldrh	r3, [r3, #0]
 80060ca:	005b      	lsls	r3, r3, #1
 80060cc:	4413      	add	r3, r2
 80060ce:	785b      	ldrb	r3, [r3, #1]
 80060d0:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80060d4:	b2db      	uxtb	r3, r3
    }
 80060d6:	4618      	mov	r0, r3
 80060d8:	3708      	adds	r7, #8
 80060da:	46bd      	mov	sp, r7
 80060dc:	bd80      	pop	{r7, pc}
 80060de:	bf00      	nop
 80060e0:	20026f20 	.word	0x20026f20

080060e4 <_ZNK8touchgfx9TypedText11assertValidEv>:
    {
        texts = t;
    }

private:
    void assertValid() const
 80060e4:	b580      	push	{r7, lr}
 80060e6:	b082      	sub	sp, #8
 80060e8:	af00      	add	r7, sp, #0
 80060ea:	6078      	str	r0, [r7, #4]
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80060ec:	4b0c      	ldr	r3, [pc, #48]	; (8006120 <_ZNK8touchgfx9TypedText11assertValidEv+0x3c>)
 80060ee:	681b      	ldr	r3, [r3, #0]
 80060f0:	2b00      	cmp	r3, #0
 80060f2:	d105      	bne.n	8006100 <_ZNK8touchgfx9TypedText11assertValidEv+0x1c>
 80060f4:	4b0b      	ldr	r3, [pc, #44]	; (8006124 <_ZNK8touchgfx9TypedText11assertValidEv+0x40>)
 80060f6:	4a0c      	ldr	r2, [pc, #48]	; (8006128 <_ZNK8touchgfx9TypedText11assertValidEv+0x44>)
 80060f8:	21de      	movs	r1, #222	; 0xde
 80060fa:	480c      	ldr	r0, [pc, #48]	; (800612c <_ZNK8touchgfx9TypedText11assertValidEv+0x48>)
 80060fc:	f015 f852 	bl	801b1a4 <__assert_func>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 8006100:	687b      	ldr	r3, [r7, #4]
 8006102:	881a      	ldrh	r2, [r3, #0]
 8006104:	4b0a      	ldr	r3, [pc, #40]	; (8006130 <_ZNK8touchgfx9TypedText11assertValidEv+0x4c>)
 8006106:	881b      	ldrh	r3, [r3, #0]
 8006108:	429a      	cmp	r2, r3
 800610a:	d305      	bcc.n	8006118 <_ZNK8touchgfx9TypedText11assertValidEv+0x34>
 800610c:	4b09      	ldr	r3, [pc, #36]	; (8006134 <_ZNK8touchgfx9TypedText11assertValidEv+0x50>)
 800610e:	4a06      	ldr	r2, [pc, #24]	; (8006128 <_ZNK8touchgfx9TypedText11assertValidEv+0x44>)
 8006110:	21df      	movs	r1, #223	; 0xdf
 8006112:	4806      	ldr	r0, [pc, #24]	; (800612c <_ZNK8touchgfx9TypedText11assertValidEv+0x48>)
 8006114:	f015 f846 	bl	801b1a4 <__assert_func>
    }
 8006118:	bf00      	nop
 800611a:	3708      	adds	r7, #8
 800611c:	46bd      	mov	sp, r7
 800611e:	bd80      	pop	{r7, pc}
 8006120:	20026f20 	.word	0x20026f20
 8006124:	0801c1c8 	.word	0x0801c1c8
 8006128:	0801c77c 	.word	0x0801c77c
 800612c:	0801c20c 	.word	0x0801c20c
 8006130:	20026f24 	.word	0x20026f24
 8006134:	0801c250 	.word	0x0801c250

08006138 <_ZNK8touchgfx9GlyphNode15kerningTablePosEv>:
    uint16_t kerningTablePos() const
 8006138:	b480      	push	{r7}
 800613a:	b083      	sub	sp, #12
 800613c:	af00      	add	r7, sp, #0
 800613e:	6078      	str	r0, [r7, #4]
        return (((uint16_t)(flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10)) << 8) | (uint16_t)_kerningTablePos;
 8006140:	687b      	ldr	r3, [r7, #4]
 8006142:	7b5b      	ldrb	r3, [r3, #13]
 8006144:	021b      	lsls	r3, r3, #8
 8006146:	b21b      	sxth	r3, r3
 8006148:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800614c:	b21a      	sxth	r2, r3
 800614e:	687b      	ldr	r3, [r7, #4]
 8006150:	7adb      	ldrb	r3, [r3, #11]
 8006152:	b21b      	sxth	r3, r3
 8006154:	4313      	orrs	r3, r2
 8006156:	b21b      	sxth	r3, r3
 8006158:	b29b      	uxth	r3, r3
    }
 800615a:	4618      	mov	r0, r3
 800615c:	370c      	adds	r7, #12
 800615e:	46bd      	mov	sp, r7
 8006160:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006164:	4770      	bx	lr

08006166 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     *
     *        Gets GSUB table.
     *
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
 8006166:	b480      	push	{r7}
 8006168:	b083      	sub	sp, #12
 800616a:	af00      	add	r7, sp, #0
 800616c:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800616e:	687b      	ldr	r3, [r7, #4]
 8006170:	6a1b      	ldr	r3, [r3, #32]
    }
 8006172:	4618      	mov	r0, r3
 8006174:	370c      	adds	r7, #12
 8006176:	46bd      	mov	sp, r7
 8006178:	f85d 7b04 	ldr.w	r7, [sp], #4
 800617c:	4770      	bx	lr
	...

08006180 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t dataFormatA4, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 8006180:	b580      	push	{r7, lr}
 8006182:	b08c      	sub	sp, #48	; 0x30
 8006184:	af08      	add	r7, sp, #32
 8006186:	60f8      	str	r0, [r7, #12]
 8006188:	60b9      	str	r1, [r7, #8]
 800618a:	4611      	mov	r1, r2
 800618c:	461a      	mov	r2, r3
 800618e:	460b      	mov	r3, r1
 8006190:	80fb      	strh	r3, [r7, #6]
 8006192:	4613      	mov	r3, r2
 8006194:	80bb      	strh	r3, [r7, #4]
    ConstFont(list, size, height, pixBelowBase, bitsPerPixel, dataFormatA4, maxLeft, maxRight, fallbackChar, ellipsisChar),
    glyphData(glyphDataInternalFlash),
    kerningData(kerningList),
    gsubTable(gsubData)
 8006196:	68f8      	ldr	r0, [r7, #12]
 8006198:	88b9      	ldrh	r1, [r7, #4]
 800619a:	88fa      	ldrh	r2, [r7, #6]
 800619c:	8f3b      	ldrh	r3, [r7, #56]	; 0x38
 800619e:	9306      	str	r3, [sp, #24]
 80061a0:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 80061a2:	9305      	str	r3, [sp, #20]
 80061a4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80061a8:	9304      	str	r3, [sp, #16]
 80061aa:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80061ae:	9303      	str	r3, [sp, #12]
 80061b0:	f897 3020 	ldrb.w	r3, [r7, #32]
 80061b4:	9302      	str	r3, [sp, #8]
 80061b6:	7f3b      	ldrb	r3, [r7, #28]
 80061b8:	9301      	str	r3, [sp, #4]
 80061ba:	7e3b      	ldrb	r3, [r7, #24]
 80061bc:	9300      	str	r3, [sp, #0]
 80061be:	460b      	mov	r3, r1
 80061c0:	68b9      	ldr	r1, [r7, #8]
 80061c2:	f007 ff49 	bl	800e058 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80061c6:	4a08      	ldr	r2, [pc, #32]	; (80061e8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x68>)
 80061c8:	68fb      	ldr	r3, [r7, #12]
 80061ca:	601a      	str	r2, [r3, #0]
 80061cc:	68fb      	ldr	r3, [r7, #12]
 80061ce:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80061d0:	619a      	str	r2, [r3, #24]
 80061d2:	68fb      	ldr	r3, [r7, #12]
 80061d4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80061d6:	61da      	str	r2, [r3, #28]
 80061d8:	68fb      	ldr	r3, [r7, #12]
 80061da:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80061dc:	621a      	str	r2, [r3, #32]
{
}
 80061de:	68fb      	ldr	r3, [r7, #12]
 80061e0:	4618      	mov	r0, r3
 80061e2:	3710      	adds	r7, #16
 80061e4:	46bd      	mov	sp, r7
 80061e6:	bd80      	pop	{r7, pc}
 80061e8:	0801c7b4 	.word	0x0801c7b4

080061ec <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 80061ec:	b480      	push	{r7}
 80061ee:	b085      	sub	sp, #20
 80061f0:	af00      	add	r7, sp, #0
 80061f2:	6078      	str	r0, [r7, #4]
 80061f4:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 80061f6:	687b      	ldr	r3, [r7, #4]
 80061f8:	699b      	ldr	r3, [r3, #24]
 80061fa:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80061fc:	683b      	ldr	r3, [r7, #0]
 80061fe:	889b      	ldrh	r3, [r3, #4]
 8006200:	0adb      	lsrs	r3, r3, #11
 8006202:	b29b      	uxth	r3, r3
 8006204:	009b      	lsls	r3, r3, #2
 8006206:	68fa      	ldr	r2, [r7, #12]
 8006208:	4413      	add	r3, r2
 800620a:	681a      	ldr	r2, [r3, #0]
 800620c:	683b      	ldr	r3, [r7, #0]
 800620e:	681b      	ldr	r3, [r3, #0]
 8006210:	4413      	add	r3, r2
}
 8006212:	4618      	mov	r0, r3
 8006214:	3714      	adds	r7, #20
 8006216:	46bd      	mov	sp, r7
 8006218:	f85d 7b04 	ldr.w	r7, [sp], #4
 800621c:	4770      	bx	lr

0800621e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800621e:	b580      	push	{r7, lr}
 8006220:	b086      	sub	sp, #24
 8006222:	af00      	add	r7, sp, #0
 8006224:	60f8      	str	r0, [r7, #12]
 8006226:	460b      	mov	r3, r1
 8006228:	607a      	str	r2, [r7, #4]
 800622a:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 800622c:	687b      	ldr	r3, [r7, #4]
 800622e:	2b00      	cmp	r3, #0
 8006230:	d003      	beq.n	800623a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8006232:	687b      	ldr	r3, [r7, #4]
 8006234:	7b1b      	ldrb	r3, [r3, #12]
 8006236:	2b00      	cmp	r3, #0
 8006238:	d101      	bne.n	800623e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 800623a:	2300      	movs	r3, #0
 800623c:	e023      	b.n	8006286 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x68>
    }

    uint16_t kerningTablePos = glyph->kerningTablePos();
 800623e:	6878      	ldr	r0, [r7, #4]
 8006240:	f7ff ff7a 	bl	8006138 <_ZNK8touchgfx9GlyphNode15kerningTablePosEv>
 8006244:	4603      	mov	r3, r0
 8006246:	82bb      	strh	r3, [r7, #20]
    for (uint16_t i = kerningTablePos; i < kerningTablePos + glyph->kerningTableSize; i++)
 8006248:	8abb      	ldrh	r3, [r7, #20]
 800624a:	82fb      	strh	r3, [r7, #22]
 800624c:	8afa      	ldrh	r2, [r7, #22]
 800624e:	8abb      	ldrh	r3, [r7, #20]
 8006250:	6879      	ldr	r1, [r7, #4]
 8006252:	7b09      	ldrb	r1, [r1, #12]
 8006254:	440b      	add	r3, r1
 8006256:	429a      	cmp	r2, r3
 8006258:	da14      	bge.n	8006284 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x66>
    {
        if (prevChar == kerningData[i].unicodePrevChar)
 800625a:	68fb      	ldr	r3, [r7, #12]
 800625c:	69da      	ldr	r2, [r3, #28]
 800625e:	8afb      	ldrh	r3, [r7, #22]
 8006260:	009b      	lsls	r3, r3, #2
 8006262:	4413      	add	r3, r2
 8006264:	881b      	ldrh	r3, [r3, #0]
 8006266:	897a      	ldrh	r2, [r7, #10]
 8006268:	429a      	cmp	r2, r3
 800626a:	d107      	bne.n	800627c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x5e>
        {
            return kerningData[i].distance;
 800626c:	68fb      	ldr	r3, [r7, #12]
 800626e:	69da      	ldr	r2, [r3, #28]
 8006270:	8afb      	ldrh	r3, [r7, #22]
 8006272:	009b      	lsls	r3, r3, #2
 8006274:	4413      	add	r3, r2
 8006276:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800627a:	e004      	b.n	8006286 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x68>
    for (uint16_t i = kerningTablePos; i < kerningTablePos + glyph->kerningTableSize; i++)
 800627c:	8afb      	ldrh	r3, [r7, #22]
 800627e:	3301      	adds	r3, #1
 8006280:	82fb      	strh	r3, [r7, #22]
 8006282:	e7e3      	b.n	800624c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x2e>
        }
    }
    return 0;
 8006284:	2300      	movs	r3, #0
}
 8006286:	4618      	mov	r0, r3
 8006288:	3718      	adds	r7, #24
 800628a:	46bd      	mov	sp, r7
 800628c:	bd80      	pop	{r7, pc}
	...

08006290 <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_13_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_13_4bpp();

touchgfx::GeneratedFont& getFont_verdana_13_4bpp()
{
    static touchgfx::GeneratedFont verdana_13_4bpp(glyphs_verdana_13_4bpp, 20, 13, 3, 4, 1, 0, 0, unicodes_verdana_13_4bpp, kerning_verdana_13_4bpp, 63, 0, 0);
 8006290:	b580      	push	{r7, lr}
 8006292:	af00      	add	r7, sp, #0
 8006294:	4801      	ldr	r0, [pc, #4]	; (800629c <__tcf_0+0xc>)
 8006296:	f7ff fecf 	bl	8006038 <_ZN8touchgfx13GeneratedFontD1Ev>
 800629a:	bd80      	pop	{r7, pc}
 800629c:	20025924 	.word	0x20025924

080062a0 <_Z23getFont_verdana_13_4bppv>:
{
 80062a0:	b580      	push	{r7, lr}
 80062a2:	b08a      	sub	sp, #40	; 0x28
 80062a4:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_13_4bpp(glyphs_verdana_13_4bpp, 20, 13, 3, 4, 1, 0, 0, unicodes_verdana_13_4bpp, kerning_verdana_13_4bpp, 63, 0, 0);
 80062a6:	4b15      	ldr	r3, [pc, #84]	; (80062fc <_Z23getFont_verdana_13_4bppv+0x5c>)
 80062a8:	681b      	ldr	r3, [r3, #0]
 80062aa:	f003 0301 	and.w	r3, r3, #1
 80062ae:	2b00      	cmp	r3, #0
 80062b0:	d11f      	bne.n	80062f2 <_Z23getFont_verdana_13_4bppv+0x52>
 80062b2:	2300      	movs	r3, #0
 80062b4:	9309      	str	r3, [sp, #36]	; 0x24
 80062b6:	2300      	movs	r3, #0
 80062b8:	9308      	str	r3, [sp, #32]
 80062ba:	233f      	movs	r3, #63	; 0x3f
 80062bc:	9307      	str	r3, [sp, #28]
 80062be:	4b10      	ldr	r3, [pc, #64]	; (8006300 <_Z23getFont_verdana_13_4bppv+0x60>)
 80062c0:	9306      	str	r3, [sp, #24]
 80062c2:	4b10      	ldr	r3, [pc, #64]	; (8006304 <_Z23getFont_verdana_13_4bppv+0x64>)
 80062c4:	9305      	str	r3, [sp, #20]
 80062c6:	2300      	movs	r3, #0
 80062c8:	9304      	str	r3, [sp, #16]
 80062ca:	2300      	movs	r3, #0
 80062cc:	9303      	str	r3, [sp, #12]
 80062ce:	2301      	movs	r3, #1
 80062d0:	9302      	str	r3, [sp, #8]
 80062d2:	2304      	movs	r3, #4
 80062d4:	9301      	str	r3, [sp, #4]
 80062d6:	2303      	movs	r3, #3
 80062d8:	9300      	str	r3, [sp, #0]
 80062da:	230d      	movs	r3, #13
 80062dc:	2214      	movs	r2, #20
 80062de:	490a      	ldr	r1, [pc, #40]	; (8006308 <_Z23getFont_verdana_13_4bppv+0x68>)
 80062e0:	480a      	ldr	r0, [pc, #40]	; (800630c <_Z23getFont_verdana_13_4bppv+0x6c>)
 80062e2:	f7ff ff4d 	bl	8006180 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 80062e6:	4b05      	ldr	r3, [pc, #20]	; (80062fc <_Z23getFont_verdana_13_4bppv+0x5c>)
 80062e8:	2201      	movs	r2, #1
 80062ea:	601a      	str	r2, [r3, #0]
 80062ec:	4808      	ldr	r0, [pc, #32]	; (8006310 <_Z23getFont_verdana_13_4bppv+0x70>)
 80062ee:	f014 ff77 	bl	801b1e0 <atexit>
    return verdana_13_4bpp;
 80062f2:	4b06      	ldr	r3, [pc, #24]	; (800630c <_Z23getFont_verdana_13_4bppv+0x6c>)
}
 80062f4:	4618      	mov	r0, r3
 80062f6:	46bd      	mov	sp, r7
 80062f8:	bd80      	pop	{r7, pc}
 80062fa:	bf00      	nop
 80062fc:	20025948 	.word	0x20025948
 8006300:	08021a44 	.word	0x08021a44
 8006304:	0801c800 	.word	0x0801c800
 8006308:	08021a58 	.word	0x08021a58
 800630c:	20025924 	.word	0x20025924
 8006310:	08006291 	.word	0x08006291

08006314 <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_25_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_25_4bpp();

touchgfx::GeneratedFont& getFont_verdana_25_4bpp()
{
    static touchgfx::GeneratedFont verdana_25_4bpp(glyphs_verdana_25_4bpp, 12, 25, 0, 4, 1, 0, 0, unicodes_verdana_25_4bpp, kerning_verdana_25_4bpp, 63, 0, 0);
 8006314:	b580      	push	{r7, lr}
 8006316:	af00      	add	r7, sp, #0
 8006318:	4801      	ldr	r0, [pc, #4]	; (8006320 <__tcf_0+0xc>)
 800631a:	f7ff fe8d 	bl	8006038 <_ZN8touchgfx13GeneratedFontD1Ev>
 800631e:	bd80      	pop	{r7, pc}
 8006320:	2002594c 	.word	0x2002594c

08006324 <_Z23getFont_verdana_25_4bppv>:
{
 8006324:	b580      	push	{r7, lr}
 8006326:	b08a      	sub	sp, #40	; 0x28
 8006328:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_25_4bpp(glyphs_verdana_25_4bpp, 12, 25, 0, 4, 1, 0, 0, unicodes_verdana_25_4bpp, kerning_verdana_25_4bpp, 63, 0, 0);
 800632a:	4b15      	ldr	r3, [pc, #84]	; (8006380 <_Z23getFont_verdana_25_4bppv+0x5c>)
 800632c:	681b      	ldr	r3, [r3, #0]
 800632e:	f003 0301 	and.w	r3, r3, #1
 8006332:	2b00      	cmp	r3, #0
 8006334:	d11f      	bne.n	8006376 <_Z23getFont_verdana_25_4bppv+0x52>
 8006336:	2300      	movs	r3, #0
 8006338:	9309      	str	r3, [sp, #36]	; 0x24
 800633a:	2300      	movs	r3, #0
 800633c:	9308      	str	r3, [sp, #32]
 800633e:	233f      	movs	r3, #63	; 0x3f
 8006340:	9307      	str	r3, [sp, #28]
 8006342:	4b10      	ldr	r3, [pc, #64]	; (8006384 <_Z23getFont_verdana_25_4bppv+0x60>)
 8006344:	9306      	str	r3, [sp, #24]
 8006346:	4b10      	ldr	r3, [pc, #64]	; (8006388 <_Z23getFont_verdana_25_4bppv+0x64>)
 8006348:	9305      	str	r3, [sp, #20]
 800634a:	2300      	movs	r3, #0
 800634c:	9304      	str	r3, [sp, #16]
 800634e:	2300      	movs	r3, #0
 8006350:	9303      	str	r3, [sp, #12]
 8006352:	2301      	movs	r3, #1
 8006354:	9302      	str	r3, [sp, #8]
 8006356:	2304      	movs	r3, #4
 8006358:	9301      	str	r3, [sp, #4]
 800635a:	2300      	movs	r3, #0
 800635c:	9300      	str	r3, [sp, #0]
 800635e:	2319      	movs	r3, #25
 8006360:	220c      	movs	r2, #12
 8006362:	490a      	ldr	r1, [pc, #40]	; (800638c <_Z23getFont_verdana_25_4bppv+0x68>)
 8006364:	480a      	ldr	r0, [pc, #40]	; (8006390 <_Z23getFont_verdana_25_4bppv+0x6c>)
 8006366:	f7ff ff0b 	bl	8006180 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 800636a:	4b05      	ldr	r3, [pc, #20]	; (8006380 <_Z23getFont_verdana_25_4bppv+0x5c>)
 800636c:	2201      	movs	r2, #1
 800636e:	601a      	str	r2, [r3, #0]
 8006370:	4808      	ldr	r0, [pc, #32]	; (8006394 <_Z23getFont_verdana_25_4bppv+0x70>)
 8006372:	f014 ff35 	bl	801b1e0 <atexit>
    return verdana_25_4bpp;
 8006376:	4b06      	ldr	r3, [pc, #24]	; (8006390 <_Z23getFont_verdana_25_4bppv+0x6c>)
}
 8006378:	4618      	mov	r0, r3
 800637a:	46bd      	mov	sp, r7
 800637c:	bd80      	pop	{r7, pc}
 800637e:	bf00      	nop
 8006380:	20025970 	.word	0x20025970
 8006384:	08021a48 	.word	0x08021a48
 8006388:	0801c804 	.word	0x0801c804
 800638c:	08021b70 	.word	0x08021b70
 8006390:	2002594c 	.word	0x2002594c
 8006394:	08006315 	.word	0x08006315

08006398 <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_28_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_28_4bpp();

touchgfx::GeneratedFont& getFont_verdana_28_4bpp()
{
    static touchgfx::GeneratedFont verdana_28_4bpp(glyphs_verdana_28_4bpp, 18, 28, 6, 4, 1, 0, 1, unicodes_verdana_28_4bpp, kerning_verdana_28_4bpp, 63, 0, 0);
 8006398:	b580      	push	{r7, lr}
 800639a:	af00      	add	r7, sp, #0
 800639c:	4801      	ldr	r0, [pc, #4]	; (80063a4 <__tcf_0+0xc>)
 800639e:	f7ff fe4b 	bl	8006038 <_ZN8touchgfx13GeneratedFontD1Ev>
 80063a2:	bd80      	pop	{r7, pc}
 80063a4:	20025974 	.word	0x20025974

080063a8 <_Z23getFont_verdana_28_4bppv>:
{
 80063a8:	b580      	push	{r7, lr}
 80063aa:	b08a      	sub	sp, #40	; 0x28
 80063ac:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_28_4bpp(glyphs_verdana_28_4bpp, 18, 28, 6, 4, 1, 0, 1, unicodes_verdana_28_4bpp, kerning_verdana_28_4bpp, 63, 0, 0);
 80063ae:	4b15      	ldr	r3, [pc, #84]	; (8006404 <_Z23getFont_verdana_28_4bppv+0x5c>)
 80063b0:	681b      	ldr	r3, [r3, #0]
 80063b2:	f003 0301 	and.w	r3, r3, #1
 80063b6:	2b00      	cmp	r3, #0
 80063b8:	d11f      	bne.n	80063fa <_Z23getFont_verdana_28_4bppv+0x52>
 80063ba:	2300      	movs	r3, #0
 80063bc:	9309      	str	r3, [sp, #36]	; 0x24
 80063be:	2300      	movs	r3, #0
 80063c0:	9308      	str	r3, [sp, #32]
 80063c2:	233f      	movs	r3, #63	; 0x3f
 80063c4:	9307      	str	r3, [sp, #28]
 80063c6:	4b10      	ldr	r3, [pc, #64]	; (8006408 <_Z23getFont_verdana_28_4bppv+0x60>)
 80063c8:	9306      	str	r3, [sp, #24]
 80063ca:	4b10      	ldr	r3, [pc, #64]	; (800640c <_Z23getFont_verdana_28_4bppv+0x64>)
 80063cc:	9305      	str	r3, [sp, #20]
 80063ce:	2301      	movs	r3, #1
 80063d0:	9304      	str	r3, [sp, #16]
 80063d2:	2300      	movs	r3, #0
 80063d4:	9303      	str	r3, [sp, #12]
 80063d6:	2301      	movs	r3, #1
 80063d8:	9302      	str	r3, [sp, #8]
 80063da:	2304      	movs	r3, #4
 80063dc:	9301      	str	r3, [sp, #4]
 80063de:	2306      	movs	r3, #6
 80063e0:	9300      	str	r3, [sp, #0]
 80063e2:	231c      	movs	r3, #28
 80063e4:	2212      	movs	r2, #18
 80063e6:	490a      	ldr	r1, [pc, #40]	; (8006410 <_Z23getFont_verdana_28_4bppv+0x68>)
 80063e8:	480a      	ldr	r0, [pc, #40]	; (8006414 <_Z23getFont_verdana_28_4bppv+0x6c>)
 80063ea:	f7ff fec9 	bl	8006180 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 80063ee:	4b05      	ldr	r3, [pc, #20]	; (8006404 <_Z23getFont_verdana_28_4bppv+0x5c>)
 80063f0:	2201      	movs	r2, #1
 80063f2:	601a      	str	r2, [r3, #0]
 80063f4:	4808      	ldr	r0, [pc, #32]	; (8006418 <_Z23getFont_verdana_28_4bppv+0x70>)
 80063f6:	f014 fef3 	bl	801b1e0 <atexit>
    return verdana_28_4bpp;
 80063fa:	4b06      	ldr	r3, [pc, #24]	; (8006414 <_Z23getFont_verdana_28_4bppv+0x6c>)
}
 80063fc:	4618      	mov	r0, r3
 80063fe:	46bd      	mov	sp, r7
 8006400:	bd80      	pop	{r7, pc}
 8006402:	bf00      	nop
 8006404:	20025998 	.word	0x20025998
 8006408:	08021a4c 	.word	0x08021a4c
 800640c:	0801c808 	.word	0x0801c808
 8006410:	08021c18 	.word	0x08021c18
 8006414:	20025974 	.word	0x20025974
 8006418:	08006399 	.word	0x08006399

0800641c <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_36_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_36_4bpp();

touchgfx::GeneratedFont& getFont_verdana_36_4bpp()
{
    static touchgfx::GeneratedFont verdana_36_4bpp(glyphs_verdana_36_4bpp, 11, 36, 0, 4, 1, 0, 0, unicodes_verdana_36_4bpp, kerning_verdana_36_4bpp, 63, 0, 0);
 800641c:	b580      	push	{r7, lr}
 800641e:	af00      	add	r7, sp, #0
 8006420:	4801      	ldr	r0, [pc, #4]	; (8006428 <__tcf_0+0xc>)
 8006422:	f7ff fe09 	bl	8006038 <_ZN8touchgfx13GeneratedFontD1Ev>
 8006426:	bd80      	pop	{r7, pc}
 8006428:	2002599c 	.word	0x2002599c

0800642c <_Z23getFont_verdana_36_4bppv>:
{
 800642c:	b580      	push	{r7, lr}
 800642e:	b08a      	sub	sp, #40	; 0x28
 8006430:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_36_4bpp(glyphs_verdana_36_4bpp, 11, 36, 0, 4, 1, 0, 0, unicodes_verdana_36_4bpp, kerning_verdana_36_4bpp, 63, 0, 0);
 8006432:	4b15      	ldr	r3, [pc, #84]	; (8006488 <_Z23getFont_verdana_36_4bppv+0x5c>)
 8006434:	681b      	ldr	r3, [r3, #0]
 8006436:	f003 0301 	and.w	r3, r3, #1
 800643a:	2b00      	cmp	r3, #0
 800643c:	d11f      	bne.n	800647e <_Z23getFont_verdana_36_4bppv+0x52>
 800643e:	2300      	movs	r3, #0
 8006440:	9309      	str	r3, [sp, #36]	; 0x24
 8006442:	2300      	movs	r3, #0
 8006444:	9308      	str	r3, [sp, #32]
 8006446:	233f      	movs	r3, #63	; 0x3f
 8006448:	9307      	str	r3, [sp, #28]
 800644a:	4b10      	ldr	r3, [pc, #64]	; (800648c <_Z23getFont_verdana_36_4bppv+0x60>)
 800644c:	9306      	str	r3, [sp, #24]
 800644e:	4b10      	ldr	r3, [pc, #64]	; (8006490 <_Z23getFont_verdana_36_4bppv+0x64>)
 8006450:	9305      	str	r3, [sp, #20]
 8006452:	2300      	movs	r3, #0
 8006454:	9304      	str	r3, [sp, #16]
 8006456:	2300      	movs	r3, #0
 8006458:	9303      	str	r3, [sp, #12]
 800645a:	2301      	movs	r3, #1
 800645c:	9302      	str	r3, [sp, #8]
 800645e:	2304      	movs	r3, #4
 8006460:	9301      	str	r3, [sp, #4]
 8006462:	2300      	movs	r3, #0
 8006464:	9300      	str	r3, [sp, #0]
 8006466:	2324      	movs	r3, #36	; 0x24
 8006468:	220b      	movs	r2, #11
 800646a:	490a      	ldr	r1, [pc, #40]	; (8006494 <_Z23getFont_verdana_36_4bppv+0x68>)
 800646c:	480a      	ldr	r0, [pc, #40]	; (8006498 <_Z23getFont_verdana_36_4bppv+0x6c>)
 800646e:	f7ff fe87 	bl	8006180 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8006472:	4b05      	ldr	r3, [pc, #20]	; (8006488 <_Z23getFont_verdana_36_4bppv+0x5c>)
 8006474:	2201      	movs	r2, #1
 8006476:	601a      	str	r2, [r3, #0]
 8006478:	4808      	ldr	r0, [pc, #32]	; (800649c <_Z23getFont_verdana_36_4bppv+0x70>)
 800647a:	f014 feb1 	bl	801b1e0 <atexit>
    return verdana_36_4bpp;
 800647e:	4b06      	ldr	r3, [pc, #24]	; (8006498 <_Z23getFont_verdana_36_4bppv+0x6c>)
}
 8006480:	4618      	mov	r0, r3
 8006482:	46bd      	mov	sp, r7
 8006484:	bd80      	pop	{r7, pc}
 8006486:	bf00      	nop
 8006488:	200259c0 	.word	0x200259c0
 800648c:	08021a54 	.word	0x08021a54
 8006490:	0801c80c 	.word	0x0801c80c
 8006494:	08021d14 	.word	0x08021d14
 8006498:	2002599c 	.word	0x2002599c
 800649c:	0800641d 	.word	0x0800641d

080064a0 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 80064a0:	b480      	push	{r7}
 80064a2:	b083      	sub	sp, #12
 80064a4:	af00      	add	r7, sp, #0
 80064a6:	6078      	str	r0, [r7, #4]
 80064a8:	6039      	str	r1, [r7, #0]
 80064aa:	683b      	ldr	r3, [r7, #0]
 80064ac:	4618      	mov	r0, r3
 80064ae:	370c      	adds	r7, #12
 80064b0:	46bd      	mov	sp, r7
 80064b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064b6:	4770      	bx	lr

080064b8 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     *        This handler is invoked when a mouse click or display touch event has been
     *        detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 80064b8:	b480      	push	{r7}
 80064ba:	b083      	sub	sp, #12
 80064bc:	af00      	add	r7, sp, #0
 80064be:	6078      	str	r0, [r7, #4]
 80064c0:	6039      	str	r1, [r7, #0]
    {
    }
 80064c2:	bf00      	nop
 80064c4:	370c      	adds	r7, #12
 80064c6:	46bd      	mov	sp, r7
 80064c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064cc:	4770      	bx	lr

080064ce <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
     *
     *        This handler is invoked when a drag event has been detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 80064ce:	b480      	push	{r7}
 80064d0:	b083      	sub	sp, #12
 80064d2:	af00      	add	r7, sp, #0
 80064d4:	6078      	str	r0, [r7, #4]
 80064d6:	6039      	str	r1, [r7, #0]
    {
    }
 80064d8:	bf00      	nop
 80064da:	370c      	adds	r7, #12
 80064dc:	46bd      	mov	sp, r7
 80064de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064e2:	4770      	bx	lr

080064e4 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
     *
     *        This handler is invoked when a gesture event has been detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 80064e4:	b480      	push	{r7}
 80064e6:	b083      	sub	sp, #12
 80064e8:	af00      	add	r7, sp, #0
 80064ea:	6078      	str	r0, [r7, #4]
 80064ec:	6039      	str	r1, [r7, #0]
    {
    }
 80064ee:	bf00      	nop
 80064f0:	370c      	adds	r7, #12
 80064f2:	46bd      	mov	sp, r7
 80064f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064f8:	4770      	bx	lr

080064fa <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
     *        This handler is invoked when a key (or button) event has been detected by the
     *        system.
     *
     * @param c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 80064fa:	b480      	push	{r7}
 80064fc:	b083      	sub	sp, #12
 80064fe:	af00      	add	r7, sp, #0
 8006500:	6078      	str	r0, [r7, #4]
 8006502:	460b      	mov	r3, r1
 8006504:	70fb      	strb	r3, [r7, #3]
    {
    }
 8006506:	bf00      	nop
 8006508:	370c      	adds	r7, #12
 800650a:	46bd      	mov	sp, r7
 800650c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006510:	4770      	bx	lr

08006512 <_ZN8touchgfx15UIEventListener15handleTickEventEv>:
     * @brief This handler is invoked when a system tick event has been generated.
     *
     *        This handler is invoked when a system tick event has been generated. The system
     *        tick period is configured in the HAL.
     */
    virtual void handleTickEvent()
 8006512:	b480      	push	{r7}
 8006514:	b083      	sub	sp, #12
 8006516:	af00      	add	r7, sp, #0
 8006518:	6078      	str	r0, [r7, #4]
    {
    }
 800651a:	bf00      	nop
 800651c:	370c      	adds	r7, #12
 800651e:	46bd      	mov	sp, r7
 8006520:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006524:	4770      	bx	lr

08006526 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:
     *
     * @brief This handler is invoked when a change screen event is pending.
     *
     *        This handler is invoked when a change screen event is pending.
     */
    virtual void handlePendingScreenTransition()
 8006526:	b480      	push	{r7}
 8006528:	b083      	sub	sp, #12
 800652a:	af00      	add	r7, sp, #0
 800652c:	6078      	str	r0, [r7, #4]
    {
    }
 800652e:	bf00      	nop
 8006530:	370c      	adds	r7, #12
 8006532:	46bd      	mov	sp, r7
 8006534:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006538:	4770      	bx	lr
	...

0800653c <_ZN8touchgfx15UIEventListenerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~UIEventListener()
 800653c:	b480      	push	{r7}
 800653e:	b083      	sub	sp, #12
 8006540:	af00      	add	r7, sp, #0
 8006542:	6078      	str	r0, [r7, #4]
    {
 8006544:	4a04      	ldr	r2, [pc, #16]	; (8006558 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 8006546:	687b      	ldr	r3, [r7, #4]
 8006548:	601a      	str	r2, [r3, #0]
    }
 800654a:	687b      	ldr	r3, [r7, #4]
 800654c:	4618      	mov	r0, r3
 800654e:	370c      	adds	r7, #12
 8006550:	46bd      	mov	sp, r7
 8006552:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006556:	4770      	bx	lr
 8006558:	0801c900 	.word	0x0801c900

0800655c <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 800655c:	b580      	push	{r7, lr}
 800655e:	b082      	sub	sp, #8
 8006560:	af00      	add	r7, sp, #0
 8006562:	6078      	str	r0, [r7, #4]
    }
 8006564:	6878      	ldr	r0, [r7, #4]
 8006566:	f7ff ffe9 	bl	800653c <_ZN8touchgfx15UIEventListenerD1Ev>
 800656a:	2104      	movs	r1, #4
 800656c:	6878      	ldr	r0, [r7, #4]
 800656e:	f014 fded 	bl	801b14c <_ZdlPvj>
 8006572:	687b      	ldr	r3, [r7, #4]
 8006574:	4618      	mov	r0, r3
 8006576:	3708      	adds	r7, #8
 8006578:	46bd      	mov	sp, r7
 800657a:	bd80      	pop	{r7, pc}

0800657c <_ZN8touchgfx10TransitionC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Constructs the Transition.
     */
    Transition() :
 800657c:	b480      	push	{r7}
 800657e:	b083      	sub	sp, #12
 8006580:	af00      	add	r7, sp, #0
 8006582:	6078      	str	r0, [r7, #4]
        screenContainer(0), done(false)
 8006584:	4a07      	ldr	r2, [pc, #28]	; (80065a4 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 8006586:	687b      	ldr	r3, [r7, #4]
 8006588:	601a      	str	r2, [r3, #0]
 800658a:	687b      	ldr	r3, [r7, #4]
 800658c:	2200      	movs	r2, #0
 800658e:	605a      	str	r2, [r3, #4]
 8006590:	687b      	ldr	r3, [r7, #4]
 8006592:	2200      	movs	r2, #0
 8006594:	721a      	strb	r2, [r3, #8]
    {
    }
 8006596:	687b      	ldr	r3, [r7, #4]
 8006598:	4618      	mov	r0, r3
 800659a:	370c      	adds	r7, #12
 800659c:	46bd      	mov	sp, r7
 800659e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065a2:	4770      	bx	lr
 80065a4:	0801c8e0 	.word	0x0801c8e0

080065a8 <_ZN8touchgfx10TransitionD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Transition()
 80065a8:	b480      	push	{r7}
 80065aa:	b083      	sub	sp, #12
 80065ac:	af00      	add	r7, sp, #0
 80065ae:	6078      	str	r0, [r7, #4]
    {
 80065b0:	4a04      	ldr	r2, [pc, #16]	; (80065c4 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 80065b2:	687b      	ldr	r3, [r7, #4]
 80065b4:	601a      	str	r2, [r3, #0]
    }
 80065b6:	687b      	ldr	r3, [r7, #4]
 80065b8:	4618      	mov	r0, r3
 80065ba:	370c      	adds	r7, #12
 80065bc:	46bd      	mov	sp, r7
 80065be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065c2:	4770      	bx	lr
 80065c4:	0801c8e0 	.word	0x0801c8e0

080065c8 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 80065c8:	b580      	push	{r7, lr}
 80065ca:	b082      	sub	sp, #8
 80065cc:	af00      	add	r7, sp, #0
 80065ce:	6078      	str	r0, [r7, #4]
    }
 80065d0:	6878      	ldr	r0, [r7, #4]
 80065d2:	f7ff ffe9 	bl	80065a8 <_ZN8touchgfx10TransitionD1Ev>
 80065d6:	210c      	movs	r1, #12
 80065d8:	6878      	ldr	r0, [r7, #4]
 80065da:	f014 fdb7 	bl	801b14c <_ZdlPvj>
 80065de:	687b      	ldr	r3, [r7, #4]
 80065e0:	4618      	mov	r0, r3
 80065e2:	3708      	adds	r7, #8
 80065e4:	46bd      	mov	sp, r7
 80065e6:	bd80      	pop	{r7, pc}

080065e8 <_ZN8touchgfx10Transition15handleTickEventEv>:
     *
     * @brief Called for every tick when transitioning.
     *
     *        Called for every tick when transitioning. Base does nothing.
     */
    virtual void handleTickEvent() { }
 80065e8:	b480      	push	{r7}
 80065ea:	b083      	sub	sp, #12
 80065ec:	af00      	add	r7, sp, #0
 80065ee:	6078      	str	r0, [r7, #4]
 80065f0:	bf00      	nop
 80065f2:	370c      	adds	r7, #12
 80065f4:	46bd      	mov	sp, r7
 80065f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065fa:	4770      	bx	lr

080065fc <_ZN8touchgfx10Transition8tearDownEv>:
     * @brief Tears down the Animation.
     *
     *        Tears down the Animation. Called before the d.tor. when the application changes
     *        the transition. Base version does nothing.
     */
    virtual void tearDown() { }
 80065fc:	b480      	push	{r7}
 80065fe:	b083      	sub	sp, #12
 8006600:	af00      	add	r7, sp, #0
 8006602:	6078      	str	r0, [r7, #4]
 8006604:	bf00      	nop
 8006606:	370c      	adds	r7, #12
 8006608:	46bd      	mov	sp, r7
 800660a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800660e:	4770      	bx	lr

08006610 <_ZN8touchgfx10Transition4initEv>:
     * @brief Initializes the transition.
     *
     *        Initializes the transition. Called after the c.tor. when the application changes
     *        the transition. Base version does nothing.
     */
    virtual void init() { }
 8006610:	b480      	push	{r7}
 8006612:	b083      	sub	sp, #12
 8006614:	af00      	add	r7, sp, #0
 8006616:	6078      	str	r0, [r7, #4]
 8006618:	bf00      	nop
 800661a:	370c      	adds	r7, #12
 800661c:	46bd      	mov	sp, r7
 800661e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006622:	4770      	bx	lr

08006624 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *        Sets the screen container. Is used by Screen to enable the transition to access
     *        the container.
     *
     * @param [in] cont The container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 8006624:	b480      	push	{r7}
 8006626:	b083      	sub	sp, #12
 8006628:	af00      	add	r7, sp, #0
 800662a:	6078      	str	r0, [r7, #4]
 800662c:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 800662e:	687b      	ldr	r3, [r7, #4]
 8006630:	683a      	ldr	r2, [r7, #0]
 8006632:	605a      	str	r2, [r3, #4]
    }
 8006634:	bf00      	nop
 8006636:	370c      	adds	r7, #12
 8006638:	46bd      	mov	sp, r7
 800663a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800663e:	4770      	bx	lr

08006640 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *        provide a means to switch screen from places that does not have access to a
     *        pointer to the new screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 8006640:	b480      	push	{r7}
 8006642:	b083      	sub	sp, #12
 8006644:	af00      	add	r7, sp, #0
 8006646:	6078      	str	r0, [r7, #4]
 8006648:	460b      	mov	r3, r1
 800664a:	70fb      	strb	r3, [r7, #3]
    {
    }
 800664c:	bf00      	nop
 800664e:	370c      	adds	r7, #12
 8006650:	46bd      	mov	sp, r7
 8006652:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006656:	4770      	bx	lr

08006658 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
     *
     * @brief Destructor.
     *
     *        Empty virtual destructor.
     */
    virtual ~GenericCallback()
 8006658:	b480      	push	{r7}
 800665a:	b083      	sub	sp, #12
 800665c:	af00      	add	r7, sp, #0
 800665e:	6078      	str	r0, [r7, #4]
    {
 8006660:	4a04      	ldr	r2, [pc, #16]	; (8006674 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 8006662:	687b      	ldr	r3, [r7, #4]
 8006664:	601a      	str	r2, [r3, #0]
    }
 8006666:	687b      	ldr	r3, [r7, #4]
 8006668:	4618      	mov	r0, r3
 800666a:	370c      	adds	r7, #12
 800666c:	46bd      	mov	sp, r7
 800666e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006672:	4770      	bx	lr
 8006674:	0801c8c8 	.word	0x0801c8c8

08006678 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 8006678:	b580      	push	{r7, lr}
 800667a:	b082      	sub	sp, #8
 800667c:	af00      	add	r7, sp, #0
 800667e:	6078      	str	r0, [r7, #4]
    }
 8006680:	6878      	ldr	r0, [r7, #4]
 8006682:	f7ff ffe9 	bl	8006658 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8006686:	2104      	movs	r1, #4
 8006688:	6878      	ldr	r0, [r7, #4]
 800668a:	f014 fd5f 	bl	801b14c <_ZdlPvj>
 800668e:	687b      	ldr	r3, [r7, #4]
 8006690:	4618      	mov	r0, r3
 8006692:	3708      	adds	r7, #8
 8006694:	46bd      	mov	sp, r7
 8006696:	bd80      	pop	{r7, pc}

08006698 <_ZN8touchgfx3HAL11getInstanceEv>:
     *
     *        Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 8006698:	b480      	push	{r7}
 800669a:	af00      	add	r7, sp, #0
    {
        return instance;
 800669c:	4b03      	ldr	r3, [pc, #12]	; (80066ac <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800669e:	681b      	ldr	r3, [r3, #0]
    }
 80066a0:	4618      	mov	r0, r3
 80066a2:	46bd      	mov	sp, r7
 80066a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066a8:	4770      	bx	lr
 80066aa:	bf00      	nop
 80066ac:	20026eb0 	.word	0x20026eb0

080066b0 <_ZN8touchgfx3HAL3lcdEv>:
     *
     *        Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 80066b0:	b480      	push	{r7}
 80066b2:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80066b4:	4b0b      	ldr	r3, [pc, #44]	; (80066e4 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80066b6:	681b      	ldr	r3, [r3, #0]
 80066b8:	f893 3076 	ldrb.w	r3, [r3, #118]	; 0x76
 80066bc:	2b00      	cmp	r3, #0
 80066be:	d008      	beq.n	80066d2 <_ZN8touchgfx3HAL3lcdEv+0x22>
 80066c0:	4b08      	ldr	r3, [pc, #32]	; (80066e4 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80066c2:	681b      	ldr	r3, [r3, #0]
 80066c4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80066c6:	2b00      	cmp	r3, #0
 80066c8:	d003      	beq.n	80066d2 <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 80066ca:	4b06      	ldr	r3, [pc, #24]	; (80066e4 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80066cc:	681b      	ldr	r3, [r3, #0]
 80066ce:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80066d0:	e002      	b.n	80066d8 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        else
        {
            return instance->lcdRef;
 80066d2:	4b04      	ldr	r3, [pc, #16]	; (80066e4 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80066d4:	681b      	ldr	r3, [r3, #0]
 80066d6:	689b      	ldr	r3, [r3, #8]
        }
    }
 80066d8:	4618      	mov	r0, r3
 80066da:	46bd      	mov	sp, r7
 80066dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066e0:	4770      	bx	lr
 80066e2:	bf00      	nop
 80066e4:	20026eb0 	.word	0x20026eb0

080066e8 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 80066e8:	b580      	push	{r7, lr}
 80066ea:	b082      	sub	sp, #8
 80066ec:	af00      	add	r7, sp, #0
 80066ee:	6078      	str	r0, [r7, #4]
 80066f0:	4a05      	ldr	r2, [pc, #20]	; (8006708 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 80066f2:	687b      	ldr	r3, [r7, #4]
 80066f4:	601a      	str	r2, [r3, #0]
 80066f6:	687b      	ldr	r3, [r7, #4]
 80066f8:	4618      	mov	r0, r3
 80066fa:	f7ff ff1f 	bl	800653c <_ZN8touchgfx15UIEventListenerD1Ev>
 80066fe:	687b      	ldr	r3, [r7, #4]
 8006700:	4618      	mov	r0, r3
 8006702:	3708      	adds	r7, #8
 8006704:	46bd      	mov	sp, r7
 8006706:	bd80      	pop	{r7, pc}
 8006708:	0801e52c 	.word	0x0801e52c

0800670c <_ZN8touchgfx11ApplicationD0Ev>:
 800670c:	b580      	push	{r7, lr}
 800670e:	b082      	sub	sp, #8
 8006710:	af00      	add	r7, sp, #0
 8006712:	6078      	str	r0, [r7, #4]
 8006714:	6878      	ldr	r0, [r7, #4]
 8006716:	f7ff ffe7 	bl	80066e8 <_ZN8touchgfx11ApplicationD1Ev>
 800671a:	f44f 7198 	mov.w	r1, #304	; 0x130
 800671e:	6878      	ldr	r0, [r7, #4]
 8006720:	f014 fd14 	bl	801b14c <_ZdlPvj>
 8006724:	687b      	ldr	r3, [r7, #4]
 8006726:	4618      	mov	r0, r3
 8006728:	3708      	adds	r7, #8
 800672a:	46bd      	mov	sp, r7
 800672c:	bd80      	pop	{r7, pc}
	...

08006730 <_ZN8touchgfx14MVPApplicationC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    MVPApplication() :
 8006730:	b580      	push	{r7, lr}
 8006732:	b082      	sub	sp, #8
 8006734:	af00      	add	r7, sp, #0
 8006736:	6078      	str	r0, [r7, #4]
        currentPresenter(0),
        pendingScreenTransitionCallback(0)
 8006738:	687b      	ldr	r3, [r7, #4]
 800673a:	4618      	mov	r0, r3
 800673c:	f006 ffc8 	bl	800d6d0 <_ZN8touchgfx11ApplicationC1Ev>
 8006740:	4a09      	ldr	r2, [pc, #36]	; (8006768 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 8006742:	687b      	ldr	r3, [r7, #4]
 8006744:	601a      	str	r2, [r3, #0]
 8006746:	687b      	ldr	r3, [r7, #4]
 8006748:	2200      	movs	r2, #0
 800674a:	f8c3 2130 	str.w	r2, [r3, #304]	; 0x130
 800674e:	687b      	ldr	r3, [r7, #4]
 8006750:	2200      	movs	r2, #0
 8006752:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
    {
        instance = this;
 8006756:	687b      	ldr	r3, [r7, #4]
 8006758:	4a04      	ldr	r2, [pc, #16]	; (800676c <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800675a:	6013      	str	r3, [r2, #0]
    }
 800675c:	687b      	ldr	r3, [r7, #4]
 800675e:	4618      	mov	r0, r3
 8006760:	3708      	adds	r7, #8
 8006762:	46bd      	mov	sp, r7
 8006764:	bd80      	pop	{r7, pc}
 8006766:	bf00      	nop
 8006768:	0801c88c 	.word	0x0801c88c
 800676c:	20026f1c 	.word	0x20026f1c

08006770 <_ZN8touchgfx14MVPApplicationD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~MVPApplication() { }
 8006770:	b580      	push	{r7, lr}
 8006772:	b082      	sub	sp, #8
 8006774:	af00      	add	r7, sp, #0
 8006776:	6078      	str	r0, [r7, #4]
 8006778:	4a05      	ldr	r2, [pc, #20]	; (8006790 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800677a:	687b      	ldr	r3, [r7, #4]
 800677c:	601a      	str	r2, [r3, #0]
 800677e:	687b      	ldr	r3, [r7, #4]
 8006780:	4618      	mov	r0, r3
 8006782:	f7ff ffb1 	bl	80066e8 <_ZN8touchgfx11ApplicationD1Ev>
 8006786:	687b      	ldr	r3, [r7, #4]
 8006788:	4618      	mov	r0, r3
 800678a:	3708      	adds	r7, #8
 800678c:	46bd      	mov	sp, r7
 800678e:	bd80      	pop	{r7, pc}
 8006790:	0801c88c 	.word	0x0801c88c

08006794 <_ZN8touchgfx14MVPApplicationD0Ev>:
 8006794:	b580      	push	{r7, lr}
 8006796:	b082      	sub	sp, #8
 8006798:	af00      	add	r7, sp, #0
 800679a:	6078      	str	r0, [r7, #4]
 800679c:	6878      	ldr	r0, [r7, #4]
 800679e:	f7ff ffe7 	bl	8006770 <_ZN8touchgfx14MVPApplicationD1Ev>
 80067a2:	f44f 719c 	mov.w	r1, #312	; 0x138
 80067a6:	6878      	ldr	r0, [r7, #4]
 80067a8:	f014 fcd0 	bl	801b14c <_ZdlPvj>
 80067ac:	687b      	ldr	r3, [r7, #4]
 80067ae:	4618      	mov	r0, r3
 80067b0:	3708      	adds	r7, #8
 80067b2:	46bd      	mov	sp, r7
 80067b4:	bd80      	pop	{r7, pc}

080067b6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
     *
     * @brief Handles the pending screen transition.
     *
     *        Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80067b6:	b580      	push	{r7, lr}
 80067b8:	b082      	sub	sp, #8
 80067ba:	af00      	add	r7, sp, #0
 80067bc:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 80067be:	6878      	ldr	r0, [r7, #4]
 80067c0:	f000 f804 	bl	80067cc <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 80067c4:	bf00      	nop
 80067c6:	3708      	adds	r7, #8
 80067c8:	46bd      	mov	sp, r7
 80067ca:	bd80      	pop	{r7, pc}

080067cc <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:
     * @brief Evaluates the pending Callback instances.
     *
     *        Evaluates the pending Callback instances. If a callback is valid, it is executed
     *        and a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 80067cc:	b580      	push	{r7, lr}
 80067ce:	b082      	sub	sp, #8
 80067d0:	af00      	add	r7, sp, #0
 80067d2:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80067d4:	687b      	ldr	r3, [r7, #4]
 80067d6:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 80067da:	2b00      	cmp	r3, #0
 80067dc:	d00f      	beq.n	80067fe <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 80067de:	687b      	ldr	r3, [r7, #4]
 80067e0:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 80067e4:	687b      	ldr	r3, [r7, #4]
 80067e6:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 80067ea:	681b      	ldr	r3, [r3, #0]
 80067ec:	330c      	adds	r3, #12
 80067ee:	681b      	ldr	r3, [r3, #0]
 80067f0:	4610      	mov	r0, r2
 80067f2:	4798      	blx	r3
 80067f4:	4603      	mov	r3, r0
 80067f6:	2b00      	cmp	r3, #0
 80067f8:	d001      	beq.n	80067fe <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 80067fa:	2301      	movs	r3, #1
 80067fc:	e000      	b.n	8006800 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 80067fe:	2300      	movs	r3, #0
 8006800:	2b00      	cmp	r3, #0
 8006802:	d00e      	beq.n	8006822 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 8006804:	687b      	ldr	r3, [r7, #4]
 8006806:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 800680a:	687b      	ldr	r3, [r7, #4]
 800680c:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 8006810:	681b      	ldr	r3, [r3, #0]
 8006812:	3308      	adds	r3, #8
 8006814:	681b      	ldr	r3, [r3, #0]
 8006816:	4610      	mov	r0, r2
 8006818:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800681a:	687b      	ldr	r3, [r7, #4]
 800681c:	2200      	movs	r2, #0
 800681e:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
        }
    }
 8006822:	bf00      	nop
 8006824:	3708      	adds	r7, #8
 8006826:	46bd      	mov	sp, r7
 8006828:	bd80      	pop	{r7, pc}

0800682a <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE>:
 * @param [in] currentScreen    If non-null, the current screen.
 * @param [in] currentPresenter If non-null, the current presenter.
 * @param [in] currentTrans     If non-null, the current transaction.
 */
static inline void prepareTransition(Screen** currentScreen, Presenter** currentPresenter, Transition** currentTrans)
{
 800682a:	b580      	push	{r7, lr}
 800682c:	b084      	sub	sp, #16
 800682e:	af00      	add	r7, sp, #0
 8006830:	60f8      	str	r0, [r7, #12]
 8006832:	60b9      	str	r1, [r7, #8]
 8006834:	607a      	str	r2, [r7, #4]
    Application::getInstance()->clearAllTimerWidgets();
 8006836:	f006 ff2b 	bl	800d690 <_ZN8touchgfx11Application11getInstanceEv>
 800683a:	4603      	mov	r3, r0
 800683c:	4618      	mov	r0, r3
 800683e:	f006 ff2d 	bl	800d69c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>

    if (*currentTrans)
 8006842:	687b      	ldr	r3, [r7, #4]
 8006844:	681b      	ldr	r3, [r3, #0]
 8006846:	2b00      	cmp	r3, #0
 8006848:	d008      	beq.n	800685c <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x32>
    {
        (*currentTrans)->tearDown();
 800684a:	687b      	ldr	r3, [r7, #4]
 800684c:	681a      	ldr	r2, [r3, #0]
 800684e:	687b      	ldr	r3, [r7, #4]
 8006850:	681b      	ldr	r3, [r3, #0]
 8006852:	681b      	ldr	r3, [r3, #0]
 8006854:	330c      	adds	r3, #12
 8006856:	681b      	ldr	r3, [r3, #0]
 8006858:	4610      	mov	r0, r2
 800685a:	4798      	blx	r3
    }
    if (*currentTrans)
 800685c:	687b      	ldr	r3, [r7, #4]
 800685e:	681b      	ldr	r3, [r3, #0]
 8006860:	2b00      	cmp	r3, #0
 8006862:	d007      	beq.n	8006874 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x4a>
    {
        (*currentTrans)->~Transition();
 8006864:	687b      	ldr	r3, [r7, #4]
 8006866:	681a      	ldr	r2, [r3, #0]
 8006868:	687b      	ldr	r3, [r7, #4]
 800686a:	681b      	ldr	r3, [r3, #0]
 800686c:	681b      	ldr	r3, [r3, #0]
 800686e:	681b      	ldr	r3, [r3, #0]
 8006870:	4610      	mov	r0, r2
 8006872:	4798      	blx	r3
    }
    if (*currentScreen)
 8006874:	68fb      	ldr	r3, [r7, #12]
 8006876:	681b      	ldr	r3, [r3, #0]
 8006878:	2b00      	cmp	r3, #0
 800687a:	d008      	beq.n	800688e <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x64>
    {
        (*currentScreen)->tearDownScreen();
 800687c:	68fb      	ldr	r3, [r7, #12]
 800687e:	681a      	ldr	r2, [r3, #0]
 8006880:	68fb      	ldr	r3, [r7, #12]
 8006882:	681b      	ldr	r3, [r3, #0]
 8006884:	681b      	ldr	r3, [r3, #0]
 8006886:	3314      	adds	r3, #20
 8006888:	681b      	ldr	r3, [r3, #0]
 800688a:	4610      	mov	r0, r2
 800688c:	4798      	blx	r3
    }
    if (*currentPresenter)
 800688e:	68bb      	ldr	r3, [r7, #8]
 8006890:	681b      	ldr	r3, [r3, #0]
 8006892:	2b00      	cmp	r3, #0
 8006894:	d008      	beq.n	80068a8 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x7e>
    {
        (*currentPresenter)->deactivate();
 8006896:	68bb      	ldr	r3, [r7, #8]
 8006898:	681a      	ldr	r2, [r3, #0]
 800689a:	68bb      	ldr	r3, [r7, #8]
 800689c:	681b      	ldr	r3, [r3, #0]
 800689e:	681b      	ldr	r3, [r3, #0]
 80068a0:	3304      	adds	r3, #4
 80068a2:	681b      	ldr	r3, [r3, #0]
 80068a4:	4610      	mov	r0, r2
 80068a6:	4798      	blx	r3
    }
    if (*currentScreen)
 80068a8:	68fb      	ldr	r3, [r7, #12]
 80068aa:	681b      	ldr	r3, [r3, #0]
 80068ac:	2b00      	cmp	r3, #0
 80068ae:	d007      	beq.n	80068c0 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x96>
    {
        (*currentScreen)->~Screen();
 80068b0:	68fb      	ldr	r3, [r7, #12]
 80068b2:	681a      	ldr	r2, [r3, #0]
 80068b4:	68fb      	ldr	r3, [r7, #12]
 80068b6:	681b      	ldr	r3, [r3, #0]
 80068b8:	681b      	ldr	r3, [r3, #0]
 80068ba:	681b      	ldr	r3, [r3, #0]
 80068bc:	4610      	mov	r0, r2
 80068be:	4798      	blx	r3
    }
    if (*currentPresenter)
 80068c0:	68bb      	ldr	r3, [r7, #8]
 80068c2:	681b      	ldr	r3, [r3, #0]
 80068c4:	2b00      	cmp	r3, #0
 80068c6:	d008      	beq.n	80068da <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0xb0>
    {
        (*currentPresenter)->~Presenter();
 80068c8:	68bb      	ldr	r3, [r7, #8]
 80068ca:	681a      	ldr	r2, [r3, #0]
 80068cc:	68bb      	ldr	r3, [r7, #8]
 80068ce:	681b      	ldr	r3, [r3, #0]
 80068d0:	681b      	ldr	r3, [r3, #0]
 80068d2:	3308      	adds	r3, #8
 80068d4:	681b      	ldr	r3, [r3, #0]
 80068d6:	4610      	mov	r0, r2
 80068d8:	4798      	blx	r3
    }
}
 80068da:	bf00      	nop
 80068dc:	3710      	adds	r7, #16
 80068de:	46bd      	mov	sp, r7
 80068e0:	bd80      	pop	{r7, pc}

080068e2 <_ZN8touchgfxL18finalizeTransitionEPNS_6ScreenEPNS_9PresenterEPNS_10TransitionE>:
 * @param [in] newScreen     If non-null, the new screen.
 * @param [in] newPresenter  If non-null, the new presenter.
 * @param [in] newTransition If non-null, the new transition.
 */
static inline void finalizeTransition(Screen* newScreen, Presenter* newPresenter, Transition* newTransition)
{
 80068e2:	b580      	push	{r7, lr}
 80068e4:	b084      	sub	sp, #16
 80068e6:	af00      	add	r7, sp, #0
 80068e8:	60f8      	str	r0, [r7, #12]
 80068ea:	60b9      	str	r1, [r7, #8]
 80068ec:	607a      	str	r2, [r7, #4]
    newScreen->setupScreen();
 80068ee:	68fb      	ldr	r3, [r7, #12]
 80068f0:	681b      	ldr	r3, [r3, #0]
 80068f2:	330c      	adds	r3, #12
 80068f4:	681b      	ldr	r3, [r3, #0]
 80068f6:	68f8      	ldr	r0, [r7, #12]
 80068f8:	4798      	blx	r3
    newPresenter->activate();
 80068fa:	68bb      	ldr	r3, [r7, #8]
 80068fc:	681b      	ldr	r3, [r3, #0]
 80068fe:	681b      	ldr	r3, [r3, #0]
 8006900:	68b8      	ldr	r0, [r7, #8]
 8006902:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8006904:	6879      	ldr	r1, [r7, #4]
 8006906:	68f8      	ldr	r0, [r7, #12]
 8006908:	f007 ff72 	bl	800e7f0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800690c:	687b      	ldr	r3, [r7, #4]
 800690e:	681b      	ldr	r3, [r3, #0]
 8006910:	3310      	adds	r3, #16
 8006912:	681b      	ldr	r3, [r3, #0]
 8006914:	6878      	ldr	r0, [r7, #4]
 8006916:	4798      	blx	r3

    Application::getInstance()->draw();
 8006918:	f006 feba 	bl	800d690 <_ZN8touchgfx11Application11getInstanceEv>
 800691c:	4602      	mov	r2, r0
 800691e:	6813      	ldr	r3, [r2, #0]
 8006920:	3328      	adds	r3, #40	; 0x28
 8006922:	681b      	ldr	r3, [r3, #0]
 8006924:	4610      	mov	r0, r2
 8006926:	4798      	blx	r3
}
 8006928:	bf00      	nop
 800692a:	3710      	adds	r7, #16
 800692c:	46bd      	mov	sp, r7
 800692e:	bd80      	pop	{r7, pc}

08006930 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 8006930:	b480      	push	{r7}
 8006932:	b083      	sub	sp, #12
 8006934:	af00      	add	r7, sp, #0
 8006936:	6078      	str	r0, [r7, #4]
 8006938:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800693a:	687b      	ldr	r3, [r7, #4]
 800693c:	683a      	ldr	r2, [r7, #0]
 800693e:	601a      	str	r2, [r3, #0]
    }
 8006940:	bf00      	nop
 8006942:	370c      	adds	r7, #12
 8006944:	46bd      	mov	sp, r7
 8006946:	f85d 7b04 	ldr.w	r7, [sp], #4
 800694a:	4770      	bx	lr

0800694c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800694c:	b580      	push	{r7, lr}
 800694e:	b082      	sub	sp, #8
 8006950:	af00      	add	r7, sp, #0
 8006952:	6078      	str	r0, [r7, #4]
 8006954:	4a08      	ldr	r2, [pc, #32]	; (8006978 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 8006956:	687b      	ldr	r3, [r7, #4]
 8006958:	601a      	str	r2, [r3, #0]
 800695a:	687b      	ldr	r3, [r7, #4]
 800695c:	f503 739c 	add.w	r3, r3, #312	; 0x138
 8006960:	4618      	mov	r0, r3
 8006962:	f000 fa5f 	bl	8006e24 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8006966:	687b      	ldr	r3, [r7, #4]
 8006968:	4618      	mov	r0, r3
 800696a:	f7ff ff01 	bl	8006770 <_ZN8touchgfx14MVPApplicationD1Ev>
 800696e:	687b      	ldr	r3, [r7, #4]
 8006970:	4618      	mov	r0, r3
 8006972:	3708      	adds	r7, #8
 8006974:	46bd      	mov	sp, r7
 8006976:	bd80      	pop	{r7, pc}
 8006978:	0801c838 	.word	0x0801c838

0800697c <_ZN23FrontendApplicationBaseD0Ev>:
 800697c:	b580      	push	{r7, lr}
 800697e:	b082      	sub	sp, #8
 8006980:	af00      	add	r7, sp, #0
 8006982:	6078      	str	r0, [r7, #4]
 8006984:	6878      	ldr	r0, [r7, #4]
 8006986:	f7ff ffe1 	bl	800694c <_ZN23FrontendApplicationBaseD1Ev>
 800698a:	f44f 71a8 	mov.w	r1, #336	; 0x150
 800698e:	6878      	ldr	r0, [r7, #4]
 8006990:	f014 fbdc 	bl	801b14c <_ZdlPvj>
 8006994:	687b      	ldr	r3, [r7, #4]
 8006996:	4618      	mov	r0, r3
 8006998:	3708      	adds	r7, #8
 800699a:	46bd      	mov	sp, r7
 800699c:	bd80      	pop	{r7, pc}
	...

080069a0 <_ZN8touchgfx12NoTransitionC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    NoTransition() : Transition() { }
 80069a0:	b580      	push	{r7, lr}
 80069a2:	b082      	sub	sp, #8
 80069a4:	af00      	add	r7, sp, #0
 80069a6:	6078      	str	r0, [r7, #4]
 80069a8:	687b      	ldr	r3, [r7, #4]
 80069aa:	4618      	mov	r0, r3
 80069ac:	f7ff fde6 	bl	800657c <_ZN8touchgfx10TransitionC1Ev>
 80069b0:	4a03      	ldr	r2, [pc, #12]	; (80069c0 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 80069b2:	687b      	ldr	r3, [r7, #4]
 80069b4:	601a      	str	r2, [r3, #0]
 80069b6:	687b      	ldr	r3, [r7, #4]
 80069b8:	4618      	mov	r0, r3
 80069ba:	3708      	adds	r7, #8
 80069bc:	46bd      	mov	sp, r7
 80069be:	bd80      	pop	{r7, pc}
 80069c0:	0801c818 	.word	0x0801c818

080069c4 <_ZN8touchgfx12NoTransitionD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~NoTransition() { }
 80069c4:	b580      	push	{r7, lr}
 80069c6:	b082      	sub	sp, #8
 80069c8:	af00      	add	r7, sp, #0
 80069ca:	6078      	str	r0, [r7, #4]
 80069cc:	4a05      	ldr	r2, [pc, #20]	; (80069e4 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 80069ce:	687b      	ldr	r3, [r7, #4]
 80069d0:	601a      	str	r2, [r3, #0]
 80069d2:	687b      	ldr	r3, [r7, #4]
 80069d4:	4618      	mov	r0, r3
 80069d6:	f7ff fde7 	bl	80065a8 <_ZN8touchgfx10TransitionD1Ev>
 80069da:	687b      	ldr	r3, [r7, #4]
 80069dc:	4618      	mov	r0, r3
 80069de:	3708      	adds	r7, #8
 80069e0:	46bd      	mov	sp, r7
 80069e2:	bd80      	pop	{r7, pc}
 80069e4:	0801c818 	.word	0x0801c818

080069e8 <_ZN8touchgfx12NoTransitionD0Ev>:
 80069e8:	b580      	push	{r7, lr}
 80069ea:	b082      	sub	sp, #8
 80069ec:	af00      	add	r7, sp, #0
 80069ee:	6078      	str	r0, [r7, #4]
 80069f0:	6878      	ldr	r0, [r7, #4]
 80069f2:	f7ff ffe7 	bl	80069c4 <_ZN8touchgfx12NoTransitionD1Ev>
 80069f6:	210c      	movs	r1, #12
 80069f8:	6878      	ldr	r0, [r7, #4]
 80069fa:	f014 fba7 	bl	801b14c <_ZdlPvj>
 80069fe:	687b      	ldr	r3, [r7, #4]
 8006a00:	4618      	mov	r0, r3
 8006a02:	3708      	adds	r7, #8
 8006a04:	46bd      	mov	sp, r7
 8006a06:	bd80      	pop	{r7, pc}

08006a08 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
     *
     * @brief Indicates that the transition is done after the first tick.
     *
     *        Indicates that the transition is done after the first tick.
     */
    virtual void handleTickEvent()
 8006a08:	b480      	push	{r7}
 8006a0a:	b083      	sub	sp, #12
 8006a0c:	af00      	add	r7, sp, #0
 8006a0e:	6078      	str	r0, [r7, #4]
    {
        done = true;
 8006a10:	687b      	ldr	r3, [r7, #4]
 8006a12:	2201      	movs	r2, #1
 8006a14:	721a      	strb	r2, [r3, #8]
    }
 8006a16:	bf00      	nop
 8006a18:	370c      	adds	r7, #12
 8006a1a:	46bd      	mov	sp, r7
 8006a1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a20:	4770      	bx	lr

08006a22 <_ZN13ModelListener4bindEP5Model>:
    
    virtual ~ModelListener() {}

    virtual void UpdateValue(uint16_t value){}

    void bind(Model* m)
 8006a22:	b480      	push	{r7}
 8006a24:	b083      	sub	sp, #12
 8006a26:	af00      	add	r7, sp, #0
 8006a28:	6078      	str	r0, [r7, #4]
 8006a2a:	6039      	str	r1, [r7, #0]
    {
        model = m;
 8006a2c:	687b      	ldr	r3, [r7, #4]
 8006a2e:	683a      	ldr	r2, [r7, #0]
 8006a30:	605a      	str	r2, [r3, #4]
    }
 8006a32:	bf00      	nop
 8006a34:	370c      	adds	r7, #12
 8006a36:	46bd      	mov	sp, r7
 8006a38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a3c:	4770      	bx	lr
	...

08006a40 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8006a40:	b580      	push	{r7, lr}
 8006a42:	b084      	sub	sp, #16
 8006a44:	af00      	add	r7, sp, #0
 8006a46:	60f8      	str	r0, [r7, #12]
 8006a48:	60b9      	str	r1, [r7, #8]
 8006a4a:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8006a4c:	68fb      	ldr	r3, [r7, #12]
 8006a4e:	4618      	mov	r0, r3
 8006a50:	f7ff fe6e 	bl	8006730 <_ZN8touchgfx14MVPApplicationC1Ev>
 8006a54:	4a13      	ldr	r2, [pc, #76]	; (8006aa4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 8006a56:	68fb      	ldr	r3, [r7, #12]
 8006a58:	601a      	str	r2, [r3, #0]
 8006a5a:	68fb      	ldr	r3, [r7, #12]
 8006a5c:	f503 739c 	add.w	r3, r3, #312	; 0x138
 8006a60:	4618      	mov	r0, r3
 8006a62:	f000 f89f 	bl	8006ba4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
 8006a66:	68fb      	ldr	r3, [r7, #12]
 8006a68:	687a      	ldr	r2, [r7, #4]
 8006a6a:	f8c3 2148 	str.w	r2, [r3, #328]	; 0x148
 8006a6e:	68fb      	ldr	r3, [r7, #12]
 8006a70:	68ba      	ldr	r2, [r7, #8]
 8006a72:	f8c3 214c 	str.w	r2, [r3, #332]	; 0x14c
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8006a76:	f7ff fe0f 	bl	8006698 <_ZN8touchgfx3HAL11getInstanceEv>
 8006a7a:	4602      	mov	r2, r0
 8006a7c:	6813      	ldr	r3, [r2, #0]
 8006a7e:	3308      	adds	r3, #8
 8006a80:	681b      	ldr	r3, [r3, #0]
 8006a82:	2101      	movs	r1, #1
 8006a84:	4610      	mov	r0, r2
 8006a86:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8006a88:	2000      	movs	r0, #0
 8006a8a:	f001 fe0f 	bl	80086ac <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8006a8e:	f7ff fe0f 	bl	80066b0 <_ZN8touchgfx3HAL3lcdEv>
 8006a92:	4603      	mov	r3, r0
 8006a94:	4618      	mov	r0, r3
 8006a96:	f00d faf4 	bl	8014082 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8006a9a:	68fb      	ldr	r3, [r7, #12]
 8006a9c:	4618      	mov	r0, r3
 8006a9e:	3710      	adds	r7, #16
 8006aa0:	46bd      	mov	sp, r7
 8006aa2:	bd80      	pop	{r7, pc}
 8006aa4:	0801c838 	.word	0x0801c838

08006aa8 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 8006aa8:	b480      	push	{r7}
 8006aaa:	b083      	sub	sp, #12
 8006aac:	af00      	add	r7, sp, #0
 8006aae:	6078      	str	r0, [r7, #4]
 8006ab0:	6039      	str	r1, [r7, #0]
 8006ab2:	687b      	ldr	r3, [r7, #4]
 8006ab4:	4618      	mov	r0, r3
 8006ab6:	370c      	adds	r7, #12
 8006ab8:	46bd      	mov	sp, r7
 8006aba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006abe:	4770      	bx	lr

08006ac0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *       three arguments of any type.
 *
 * @tparam dest_type The type of the class in which the member function resides.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8006ac0:	b580      	push	{r7, lr}
 8006ac2:	b082      	sub	sp, #8
 8006ac4:	af00      	add	r7, sp, #0
 8006ac6:	6078      	str	r0, [r7, #4]
 8006ac8:	6039      	str	r1, [r7, #0]
 8006aca:	687b      	ldr	r3, [r7, #4]
 8006acc:	683a      	ldr	r2, [r7, #0]
 8006ace:	4611      	mov	r1, r2
 8006ad0:	4618      	mov	r0, r3
 8006ad2:	f7ff ffe9 	bl	8006aa8 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 8006ad6:	683b      	ldr	r3, [r7, #0]
 8006ad8:	685a      	ldr	r2, [r3, #4]
 8006ada:	687b      	ldr	r3, [r7, #4]
 8006adc:	605a      	str	r2, [r3, #4]
 8006ade:	687b      	ldr	r3, [r7, #4]
 8006ae0:	683a      	ldr	r2, [r7, #0]
 8006ae2:	3308      	adds	r3, #8
 8006ae4:	3208      	adds	r2, #8
 8006ae6:	e892 0003 	ldmia.w	r2, {r0, r1}
 8006aea:	e883 0003 	stmia.w	r3, {r0, r1}
 8006aee:	687b      	ldr	r3, [r7, #4]
 8006af0:	4618      	mov	r0, r3
 8006af2:	3708      	adds	r7, #8
 8006af4:	46bd      	mov	sp, r7
 8006af6:	bd80      	pop	{r7, pc}

08006af8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
 */

// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
 8006af8:	b590      	push	{r4, r7, lr}
 8006afa:	b089      	sub	sp, #36	; 0x24
 8006afc:	af00      	add	r7, sp, #0
 8006afe:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
 8006b00:	687b      	ldr	r3, [r7, #4]
 8006b02:	f503 749c 	add.w	r4, r3, #312	; 0x138
 8006b06:	4b10      	ldr	r3, [pc, #64]	; (8006b48 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x50>)
 8006b08:	61bb      	str	r3, [r7, #24]
 8006b0a:	2300      	movs	r3, #0
 8006b0c:	61fb      	str	r3, [r7, #28]
 8006b0e:	f107 0008 	add.w	r0, r7, #8
 8006b12:	f107 0318 	add.w	r3, r7, #24
 8006b16:	cb0c      	ldmia	r3, {r2, r3}
 8006b18:	6879      	ldr	r1, [r7, #4]
 8006b1a:	f000 f85f 	bl	8006bdc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8006b1e:	f107 0308 	add.w	r3, r7, #8
 8006b22:	4619      	mov	r1, r3
 8006b24:	4620      	mov	r0, r4
 8006b26:	f7ff ffcb 	bl	8006ac0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8006b2a:	f107 0308 	add.w	r3, r7, #8
 8006b2e:	4618      	mov	r0, r3
 8006b30:	f000 f978 	bl	8006e24 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8006b34:	687b      	ldr	r3, [r7, #4]
 8006b36:	f503 729c 	add.w	r2, r3, #312	; 0x138
 8006b3a:	687b      	ldr	r3, [r7, #4]
 8006b3c:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
}
 8006b40:	bf00      	nop
 8006b42:	3724      	adds	r7, #36	; 0x24
 8006b44:	46bd      	mov	sp, r7
 8006b46:	bd90      	pop	{r4, r7, pc}
 8006b48:	08006b4d 	.word	0x08006b4d

08006b4c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8006b4c:	b580      	push	{r7, lr}
 8006b4e:	b084      	sub	sp, #16
 8006b50:	af02      	add	r7, sp, #8
 8006b52:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8006b54:	687b      	ldr	r3, [r7, #4]
 8006b56:	f503 7198 	add.w	r1, r3, #304	; 0x130
 8006b5a:	687b      	ldr	r3, [r7, #4]
 8006b5c:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8006b60:	461a      	mov	r2, r3
 8006b62:	687b      	ldr	r3, [r7, #4]
 8006b64:	f8d3 314c 	ldr.w	r3, [r3, #332]	; 0x14c
 8006b68:	9300      	str	r3, [sp, #0]
 8006b6a:	4b04      	ldr	r3, [pc, #16]	; (8006b7c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x30>)
 8006b6c:	4804      	ldr	r0, [pc, #16]	; (8006b80 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x34>)
 8006b6e:	f000 f855 	bl	8006c1c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8006b72:	bf00      	nop
 8006b74:	3708      	adds	r7, #8
 8006b76:	46bd      	mov	sp, r7
 8006b78:	bd80      	pop	{r7, pc}
 8006b7a:	bf00      	nop
 8006b7c:	20026f10 	.word	0x20026f10
 8006b80:	20026f0c 	.word	0x20026f0c

08006b84 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 8006b84:	b480      	push	{r7}
 8006b86:	b083      	sub	sp, #12
 8006b88:	af00      	add	r7, sp, #0
 8006b8a:	6078      	str	r0, [r7, #4]
 8006b8c:	4a04      	ldr	r2, [pc, #16]	; (8006ba0 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 8006b8e:	687b      	ldr	r3, [r7, #4]
 8006b90:	601a      	str	r2, [r3, #0]
 8006b92:	687b      	ldr	r3, [r7, #4]
 8006b94:	4618      	mov	r0, r3
 8006b96:	370c      	adds	r7, #12
 8006b98:	46bd      	mov	sp, r7
 8006b9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b9e:	4770      	bx	lr
 8006ba0:	0801c8c8 	.word	0x0801c8c8

08006ba4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Initializes an empty callback.
     */
    Callback() : pobject(0), pmemfun_0(0) { }
 8006ba4:	b580      	push	{r7, lr}
 8006ba6:	b082      	sub	sp, #8
 8006ba8:	af00      	add	r7, sp, #0
 8006baa:	6078      	str	r0, [r7, #4]
 8006bac:	687b      	ldr	r3, [r7, #4]
 8006bae:	4618      	mov	r0, r3
 8006bb0:	f7ff ffe8 	bl	8006b84 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8006bb4:	4a08      	ldr	r2, [pc, #32]	; (8006bd8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 8006bb6:	687b      	ldr	r3, [r7, #4]
 8006bb8:	601a      	str	r2, [r3, #0]
 8006bba:	687b      	ldr	r3, [r7, #4]
 8006bbc:	2200      	movs	r2, #0
 8006bbe:	605a      	str	r2, [r3, #4]
 8006bc0:	687b      	ldr	r3, [r7, #4]
 8006bc2:	2200      	movs	r2, #0
 8006bc4:	609a      	str	r2, [r3, #8]
 8006bc6:	687b      	ldr	r3, [r7, #4]
 8006bc8:	2200      	movs	r2, #0
 8006bca:	60da      	str	r2, [r3, #12]
 8006bcc:	687b      	ldr	r3, [r7, #4]
 8006bce:	4618      	mov	r0, r3
 8006bd0:	3708      	adds	r7, #8
 8006bd2:	46bd      	mov	sp, r7
 8006bd4:	bd80      	pop	{r7, pc}
 8006bd6:	bf00      	nop
 8006bd8:	0801c874 	.word	0x0801c874

08006bdc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pobject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function
     *                       takes zero arguments.
     */
    Callback(dest_type* pobject, void (dest_type::*pmemfun_0)())
 8006bdc:	b580      	push	{r7, lr}
 8006bde:	b084      	sub	sp, #16
 8006be0:	af00      	add	r7, sp, #0
 8006be2:	60f8      	str	r0, [r7, #12]
 8006be4:	60b9      	str	r1, [r7, #8]
 8006be6:	4639      	mov	r1, r7
 8006be8:	e881 000c 	stmia.w	r1, {r2, r3}
    {
 8006bec:	68fb      	ldr	r3, [r7, #12]
 8006bee:	4618      	mov	r0, r3
 8006bf0:	f7ff ffc8 	bl	8006b84 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8006bf4:	4a08      	ldr	r2, [pc, #32]	; (8006c18 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 8006bf6:	68fb      	ldr	r3, [r7, #12]
 8006bf8:	601a      	str	r2, [r3, #0]
        this->pobject = pobject;
 8006bfa:	68fb      	ldr	r3, [r7, #12]
 8006bfc:	68ba      	ldr	r2, [r7, #8]
 8006bfe:	605a      	str	r2, [r3, #4]
        this->pmemfun_0 = pmemfun_0;
 8006c00:	68fb      	ldr	r3, [r7, #12]
 8006c02:	3308      	adds	r3, #8
 8006c04:	463a      	mov	r2, r7
 8006c06:	e892 0003 	ldmia.w	r2, {r0, r1}
 8006c0a:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 8006c0e:	68fb      	ldr	r3, [r7, #12]
 8006c10:	4618      	mov	r0, r3
 8006c12:	3710      	adds	r7, #16
 8006c14:	46bd      	mov	sp, r7
 8006c16:	bd80      	pop	{r7, pc}
 8006c18:	0801c874 	.word	0x0801c874

08006c1c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template< class ScreenType, class PresenterType, class TransType, class ModelType  >
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8006c1c:	b590      	push	{r4, r7, lr}
 8006c1e:	b089      	sub	sp, #36	; 0x24
 8006c20:	af00      	add	r7, sp, #0
 8006c22:	60f8      	str	r0, [r7, #12]
 8006c24:	60b9      	str	r1, [r7, #8]
 8006c26:	607a      	str	r2, [r7, #4]
 8006c28:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8006c2a:	687b      	ldr	r3, [r7, #4]
 8006c2c:	689a      	ldr	r2, [r3, #8]
 8006c2e:	687b      	ldr	r3, [r7, #4]
 8006c30:	689b      	ldr	r3, [r3, #8]
 8006c32:	681b      	ldr	r3, [r3, #0]
 8006c34:	3320      	adds	r3, #32
 8006c36:	681b      	ldr	r3, [r3, #0]
 8006c38:	4610      	mov	r0, r2
 8006c3a:	4798      	blx	r3
 8006c3c:	4602      	mov	r2, r0
 8006c3e:	f240 53eb 	movw	r3, #1515	; 0x5eb
 8006c42:	429a      	cmp	r2, r3
 8006c44:	d805      	bhi.n	8006c52 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x36>
 8006c46:	4b4e      	ldr	r3, [pc, #312]	; (8006d80 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 8006c48:	4a4e      	ldr	r2, [pc, #312]	; (8006d84 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x168>)
 8006c4a:	21c2      	movs	r1, #194	; 0xc2
 8006c4c:	484e      	ldr	r0, [pc, #312]	; (8006d88 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x16c>)
 8006c4e:	f014 faa9 	bl	801b1a4 <__assert_func>
 8006c52:	bf00      	nop
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006c54:	687b      	ldr	r3, [r7, #4]
 8006c56:	685a      	ldr	r2, [r3, #4]
 8006c58:	687b      	ldr	r3, [r7, #4]
 8006c5a:	685b      	ldr	r3, [r3, #4]
 8006c5c:	681b      	ldr	r3, [r3, #0]
 8006c5e:	3320      	adds	r3, #32
 8006c60:	681b      	ldr	r3, [r3, #0]
 8006c62:	4610      	mov	r0, r2
 8006c64:	4798      	blx	r3
 8006c66:	4603      	mov	r3, r0
 8006c68:	2b0f      	cmp	r3, #15
 8006c6a:	d805      	bhi.n	8006c78 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5c>
 8006c6c:	4b47      	ldr	r3, [pc, #284]	; (8006d8c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x170>)
 8006c6e:	4a45      	ldr	r2, [pc, #276]	; (8006d84 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x168>)
 8006c70:	21c3      	movs	r1, #195	; 0xc3
 8006c72:	4845      	ldr	r0, [pc, #276]	; (8006d88 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x16c>)
 8006c74:	f014 fa96 	bl	801b1a4 <__assert_func>
 8006c78:	bf00      	nop
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8006c7a:	687b      	ldr	r3, [r7, #4]
 8006c7c:	68da      	ldr	r2, [r3, #12]
 8006c7e:	687b      	ldr	r3, [r7, #4]
 8006c80:	68db      	ldr	r3, [r3, #12]
 8006c82:	681b      	ldr	r3, [r3, #0]
 8006c84:	3320      	adds	r3, #32
 8006c86:	681b      	ldr	r3, [r3, #0]
 8006c88:	4610      	mov	r0, r2
 8006c8a:	4798      	blx	r3
 8006c8c:	4603      	mov	r3, r0
 8006c8e:	2b0b      	cmp	r3, #11
 8006c90:	d805      	bhi.n	8006c9e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x82>
 8006c92:	4b3f      	ldr	r3, [pc, #252]	; (8006d90 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x174>)
 8006c94:	4a3b      	ldr	r2, [pc, #236]	; (8006d84 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x168>)
 8006c96:	21c4      	movs	r1, #196	; 0xc4
 8006c98:	483b      	ldr	r0, [pc, #236]	; (8006d88 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x16c>)
 8006c9a:	f014 fa83 	bl	801b1a4 <__assert_func>
 8006c9e:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);
 8006ca0:	683a      	ldr	r2, [r7, #0]
 8006ca2:	68b9      	ldr	r1, [r7, #8]
 8006ca4:	68f8      	ldr	r0, [r7, #12]
 8006ca6:	f7ff fdc0 	bl	800682a <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE>

    TransType* newTransition = new (&heap.transitionStorage.at< TransType >(0)) TransType;
 8006caa:	687b      	ldr	r3, [r7, #4]
 8006cac:	68db      	ldr	r3, [r3, #12]
 8006cae:	2100      	movs	r1, #0
 8006cb0:	4618      	mov	r0, r3
 8006cb2:	f000 f86f 	bl	8006d94 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8006cb6:	4603      	mov	r3, r0
 8006cb8:	4619      	mov	r1, r3
 8006cba:	200c      	movs	r0, #12
 8006cbc:	f7ff fbf0 	bl	80064a0 <_ZnwjPv>
 8006cc0:	4604      	mov	r4, r0
 8006cc2:	2c00      	cmp	r4, #0
 8006cc4:	d004      	beq.n	8006cd0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb4>
 8006cc6:	4620      	mov	r0, r4
 8006cc8:	f7ff fe6a 	bl	80069a0 <_ZN8touchgfx12NoTransitionC1Ev>
 8006ccc:	4623      	mov	r3, r4
 8006cce:	e000      	b.n	8006cd2 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb6>
 8006cd0:	4623      	mov	r3, r4
 8006cd2:	61fb      	str	r3, [r7, #28]
    ScreenType* newScreen = new (&heap.screenStorage.at< ScreenType >(0)) ScreenType;
 8006cd4:	687b      	ldr	r3, [r7, #4]
 8006cd6:	689b      	ldr	r3, [r3, #8]
 8006cd8:	2100      	movs	r1, #0
 8006cda:	4618      	mov	r0, r3
 8006cdc:	f000 f86d 	bl	8006dba <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>
 8006ce0:	4603      	mov	r3, r0
 8006ce2:	4619      	mov	r1, r3
 8006ce4:	f240 50ec 	movw	r0, #1516	; 0x5ec
 8006ce8:	f7ff fbda 	bl	80064a0 <_ZnwjPv>
 8006cec:	4604      	mov	r4, r0
 8006cee:	2c00      	cmp	r4, #0
 8006cf0:	d004      	beq.n	8006cfc <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
 8006cf2:	4620      	mov	r0, r4
 8006cf4:	f001 ff36 	bl	8008b64 <_ZN11Screen1ViewC1Ev>
 8006cf8:	4623      	mov	r3, r4
 8006cfa:	e000      	b.n	8006cfe <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe2>
 8006cfc:	4623      	mov	r3, r4
 8006cfe:	61bb      	str	r3, [r7, #24]
    PresenterType* newPresenter = new (&heap.presenterStorage.at< PresenterType >(0)) PresenterType(*newScreen);
 8006d00:	687b      	ldr	r3, [r7, #4]
 8006d02:	685b      	ldr	r3, [r3, #4]
 8006d04:	2100      	movs	r1, #0
 8006d06:	4618      	mov	r0, r3
 8006d08:	f000 f86a 	bl	8006de0 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>
 8006d0c:	4603      	mov	r3, r0
 8006d0e:	4619      	mov	r1, r3
 8006d10:	2010      	movs	r0, #16
 8006d12:	f7ff fbc5 	bl	80064a0 <_ZnwjPv>
 8006d16:	4604      	mov	r4, r0
 8006d18:	2c00      	cmp	r4, #0
 8006d1a:	d005      	beq.n	8006d28 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x10c>
 8006d1c:	69b9      	ldr	r1, [r7, #24]
 8006d1e:	4620      	mov	r0, r4
 8006d20:	f001 feb0 	bl	8008a84 <_ZN16Screen1PresenterC1ER11Screen1View>
 8006d24:	4623      	mov	r3, r4
 8006d26:	e000      	b.n	8006d2a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x10e>
 8006d28:	4623      	mov	r3, r4
 8006d2a:	617b      	str	r3, [r7, #20]
    *currentTrans = newTransition;
 8006d2c:	683b      	ldr	r3, [r7, #0]
 8006d2e:	69fa      	ldr	r2, [r7, #28]
 8006d30:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8006d32:	68bb      	ldr	r3, [r7, #8]
 8006d34:	697a      	ldr	r2, [r7, #20]
 8006d36:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8006d38:	68fb      	ldr	r3, [r7, #12]
 8006d3a:	69ba      	ldr	r2, [r7, #24]
 8006d3c:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8006d3e:	697b      	ldr	r3, [r7, #20]
 8006d40:	2b00      	cmp	r3, #0
 8006d42:	d002      	beq.n	8006d4a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12e>
 8006d44:	697b      	ldr	r3, [r7, #20]
 8006d46:	3304      	adds	r3, #4
 8006d48:	e000      	b.n	8006d4c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>
 8006d4a:	2300      	movs	r3, #0
 8006d4c:	4619      	mov	r1, r3
 8006d4e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8006d50:	f7ff fdee 	bl	8006930 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8006d54:	697b      	ldr	r3, [r7, #20]
 8006d56:	3304      	adds	r3, #4
 8006d58:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8006d5a:	4618      	mov	r0, r3
 8006d5c:	f7ff fe61 	bl	8006a22 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8006d60:	69bb      	ldr	r3, [r7, #24]
 8006d62:	6979      	ldr	r1, [r7, #20]
 8006d64:	4618      	mov	r0, r3
 8006d66:	f000 f84e 	bl	8006e06 <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);
 8006d6a:	69fa      	ldr	r2, [r7, #28]
 8006d6c:	6979      	ldr	r1, [r7, #20]
 8006d6e:	69b8      	ldr	r0, [r7, #24]
 8006d70:	f7ff fdb7 	bl	80068e2 <_ZN8touchgfxL18finalizeTransitionEPNS_6ScreenEPNS_9PresenterEPNS_10TransitionE>

    return newPresenter;
 8006d74:	697b      	ldr	r3, [r7, #20]
}
 8006d76:	4618      	mov	r0, r3
 8006d78:	3724      	adds	r7, #36	; 0x24
 8006d7a:	46bd      	mov	sp, r7
 8006d7c:	bd90      	pop	{r4, r7, pc}
 8006d7e:	bf00      	nop
 8006d80:	0801c2a4 	.word	0x0801c2a4
 8006d84:	0801c920 	.word	0x0801c920
 8006d88:	0801c334 	.word	0x0801c334
 8006d8c:	0801c378 	.word	0x0801c378
 8006d90:	0801c41c 	.word	0x0801c41c

08006d94 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template< typename T >
    T& at(const uint16_t index)
 8006d94:	b580      	push	{r7, lr}
 8006d96:	b082      	sub	sp, #8
 8006d98:	af00      	add	r7, sp, #0
 8006d9a:	6078      	str	r0, [r7, #4]
 8006d9c:	460b      	mov	r3, r1
 8006d9e:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 8006da0:	687b      	ldr	r3, [r7, #4]
 8006da2:	681b      	ldr	r3, [r3, #0]
 8006da4:	3324      	adds	r3, #36	; 0x24
 8006da6:	681b      	ldr	r3, [r3, #0]
 8006da8:	887a      	ldrh	r2, [r7, #2]
 8006daa:	4611      	mov	r1, r2
 8006dac:	6878      	ldr	r0, [r7, #4]
 8006dae:	4798      	blx	r3
 8006db0:	4603      	mov	r3, r0
    }
 8006db2:	4618      	mov	r0, r3
 8006db4:	3708      	adds	r7, #8
 8006db6:	46bd      	mov	sp, r7
 8006db8:	bd80      	pop	{r7, pc}

08006dba <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>:
    T& at(const uint16_t index)
 8006dba:	b580      	push	{r7, lr}
 8006dbc:	b082      	sub	sp, #8
 8006dbe:	af00      	add	r7, sp, #0
 8006dc0:	6078      	str	r0, [r7, #4]
 8006dc2:	460b      	mov	r3, r1
 8006dc4:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8006dc6:	687b      	ldr	r3, [r7, #4]
 8006dc8:	681b      	ldr	r3, [r3, #0]
 8006dca:	3324      	adds	r3, #36	; 0x24
 8006dcc:	681b      	ldr	r3, [r3, #0]
 8006dce:	887a      	ldrh	r2, [r7, #2]
 8006dd0:	4611      	mov	r1, r2
 8006dd2:	6878      	ldr	r0, [r7, #4]
 8006dd4:	4798      	blx	r3
 8006dd6:	4603      	mov	r3, r0
    }
 8006dd8:	4618      	mov	r0, r3
 8006dda:	3708      	adds	r7, #8
 8006ddc:	46bd      	mov	sp, r7
 8006dde:	bd80      	pop	{r7, pc}

08006de0 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>:
    T& at(const uint16_t index)
 8006de0:	b580      	push	{r7, lr}
 8006de2:	b082      	sub	sp, #8
 8006de4:	af00      	add	r7, sp, #0
 8006de6:	6078      	str	r0, [r7, #4]
 8006de8:	460b      	mov	r3, r1
 8006dea:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8006dec:	687b      	ldr	r3, [r7, #4]
 8006dee:	681b      	ldr	r3, [r3, #0]
 8006df0:	3324      	adds	r3, #36	; 0x24
 8006df2:	681b      	ldr	r3, [r3, #0]
 8006df4:	887a      	ldrh	r2, [r7, #2]
 8006df6:	4611      	mov	r1, r2
 8006df8:	6878      	ldr	r0, [r7, #4]
 8006dfa:	4798      	blx	r3
 8006dfc:	4603      	mov	r3, r0
    }
 8006dfe:	4618      	mov	r0, r3
 8006e00:	3708      	adds	r7, #8
 8006e02:	46bd      	mov	sp, r7
 8006e04:	bd80      	pop	{r7, pc}

08006e06 <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>:
     *        Binds an instance of a specific Presenter type (subclass) to the View instance.
     *        This function is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
 8006e06:	b480      	push	{r7}
 8006e08:	b083      	sub	sp, #12
 8006e0a:	af00      	add	r7, sp, #0
 8006e0c:	6078      	str	r0, [r7, #4]
 8006e0e:	6039      	str	r1, [r7, #0]
    {
        this->presenter = &presenter;
 8006e10:	687b      	ldr	r3, [r7, #4]
 8006e12:	683a      	ldr	r2, [r7, #0]
 8006e14:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 8006e16:	bf00      	nop
 8006e18:	370c      	adds	r7, #12
 8006e1a:	46bd      	mov	sp, r7
 8006e1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e20:	4770      	bx	lr
	...

08006e24 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8006e24:	b580      	push	{r7, lr}
 8006e26:	b082      	sub	sp, #8
 8006e28:	af00      	add	r7, sp, #0
 8006e2a:	6078      	str	r0, [r7, #4]
 8006e2c:	4a05      	ldr	r2, [pc, #20]	; (8006e44 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 8006e2e:	687b      	ldr	r3, [r7, #4]
 8006e30:	601a      	str	r2, [r3, #0]
 8006e32:	687b      	ldr	r3, [r7, #4]
 8006e34:	4618      	mov	r0, r3
 8006e36:	f7ff fc0f 	bl	8006658 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8006e3a:	687b      	ldr	r3, [r7, #4]
 8006e3c:	4618      	mov	r0, r3
 8006e3e:	3708      	adds	r7, #8
 8006e40:	46bd      	mov	sp, r7
 8006e42:	bd80      	pop	{r7, pc}
 8006e44:	0801c874 	.word	0x0801c874

08006e48 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 8006e48:	b580      	push	{r7, lr}
 8006e4a:	b082      	sub	sp, #8
 8006e4c:	af00      	add	r7, sp, #0
 8006e4e:	6078      	str	r0, [r7, #4]
 8006e50:	6878      	ldr	r0, [r7, #4]
 8006e52:	f7ff ffe7 	bl	8006e24 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8006e56:	2110      	movs	r1, #16
 8006e58:	6878      	ldr	r0, [r7, #4]
 8006e5a:	f014 f977 	bl	801b14c <_ZdlPvj>
 8006e5e:	687b      	ldr	r3, [r7, #4]
 8006e60:	4618      	mov	r0, r3
 8006e62:	3708      	adds	r7, #8
 8006e64:	46bd      	mov	sp, r7
 8006e66:	bd80      	pop	{r7, pc}

08006e68 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * @brief Calls the member function.
     *
     *        Calls the member function. Do not call execute unless isValid() returns true (ie.
     *        a pointer to the object and the function has been set).
     */
    virtual void execute()
 8006e68:	b580      	push	{r7, lr}
 8006e6a:	b082      	sub	sp, #8
 8006e6c:	af00      	add	r7, sp, #0
 8006e6e:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun_0)();
 8006e70:	687b      	ldr	r3, [r7, #4]
 8006e72:	685b      	ldr	r3, [r3, #4]
 8006e74:	687a      	ldr	r2, [r7, #4]
 8006e76:	68d2      	ldr	r2, [r2, #12]
 8006e78:	1052      	asrs	r2, r2, #1
 8006e7a:	1899      	adds	r1, r3, r2
 8006e7c:	687b      	ldr	r3, [r7, #4]
 8006e7e:	68db      	ldr	r3, [r3, #12]
 8006e80:	f003 0301 	and.w	r3, r3, #1
 8006e84:	2b00      	cmp	r3, #0
 8006e86:	d102      	bne.n	8006e8e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 8006e88:	687b      	ldr	r3, [r7, #4]
 8006e8a:	689b      	ldr	r3, [r3, #8]
 8006e8c:	e00a      	b.n	8006ea4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 8006e8e:	687b      	ldr	r3, [r7, #4]
 8006e90:	685b      	ldr	r3, [r3, #4]
 8006e92:	687a      	ldr	r2, [r7, #4]
 8006e94:	68d2      	ldr	r2, [r2, #12]
 8006e96:	1052      	asrs	r2, r2, #1
 8006e98:	4413      	add	r3, r2
 8006e9a:	681b      	ldr	r3, [r3, #0]
 8006e9c:	687a      	ldr	r2, [r7, #4]
 8006e9e:	6892      	ldr	r2, [r2, #8]
 8006ea0:	4413      	add	r3, r2
 8006ea2:	681b      	ldr	r3, [r3, #0]
 8006ea4:	4608      	mov	r0, r1
 8006ea6:	4798      	blx	r3
    }
 8006ea8:	bf00      	nop
 8006eaa:	3708      	adds	r7, #8
 8006eac:	46bd      	mov	sp, r7
 8006eae:	bd80      	pop	{r7, pc}

08006eb0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     *        Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8006eb0:	b480      	push	{r7}
 8006eb2:	b083      	sub	sp, #12
 8006eb4:	af00      	add	r7, sp, #0
 8006eb6:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8006eb8:	687b      	ldr	r3, [r7, #4]
 8006eba:	685b      	ldr	r3, [r3, #4]
 8006ebc:	2b00      	cmp	r3, #0
 8006ebe:	d010      	beq.n	8006ee2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8006ec0:	687b      	ldr	r3, [r7, #4]
 8006ec2:	689b      	ldr	r3, [r3, #8]
 8006ec4:	2b00      	cmp	r3, #0
 8006ec6:	d107      	bne.n	8006ed8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8006ec8:	687b      	ldr	r3, [r7, #4]
 8006eca:	68db      	ldr	r3, [r3, #12]
 8006ecc:	f003 0301 	and.w	r3, r3, #1
 8006ed0:	2b00      	cmp	r3, #0
 8006ed2:	d101      	bne.n	8006ed8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8006ed4:	2301      	movs	r3, #1
 8006ed6:	e000      	b.n	8006eda <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 8006ed8:	2300      	movs	r3, #0
 8006eda:	2b01      	cmp	r3, #1
 8006edc:	d001      	beq.n	8006ee2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8006ede:	2301      	movs	r3, #1
 8006ee0:	e000      	b.n	8006ee4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 8006ee2:	2300      	movs	r3, #0
    }
 8006ee4:	4618      	mov	r0, r3
 8006ee6:	370c      	adds	r7, #12
 8006ee8:	46bd      	mov	sp, r7
 8006eea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006eee:	4770      	bx	lr

08006ef0 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param col The color.
     *
     * @see Color::getColorFrom24BitRGB()
     */
    colortype(uint32_t col)
 8006ef0:	b480      	push	{r7}
 8006ef2:	b083      	sub	sp, #12
 8006ef4:	af00      	add	r7, sp, #0
 8006ef6:	6078      	str	r0, [r7, #4]
 8006ef8:	6039      	str	r1, [r7, #0]
    {
        color = col;
 8006efa:	687b      	ldr	r3, [r7, #4]
 8006efc:	683a      	ldr	r2, [r7, #0]
 8006efe:	601a      	str	r2, [r3, #0]
    }
 8006f00:	687b      	ldr	r3, [r7, #4]
 8006f02:	4618      	mov	r0, r3
 8006f04:	370c      	adds	r7, #12
 8006f06:	46bd      	mov	sp, r7
 8006f08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f0c:	4770      	bx	lr

08006f0e <_ZN8touchgfx4RectC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor. Resulting in an empty Rect with coordinates 0,0.
     */
    Rect()
 8006f0e:	b480      	push	{r7}
 8006f10:	b083      	sub	sp, #12
 8006f12:	af00      	add	r7, sp, #0
 8006f14:	6078      	str	r0, [r7, #4]
    {
        this->x = 0;
 8006f16:	687b      	ldr	r3, [r7, #4]
 8006f18:	2200      	movs	r2, #0
 8006f1a:	801a      	strh	r2, [r3, #0]
        this->y = 0;
 8006f1c:	687b      	ldr	r3, [r7, #4]
 8006f1e:	2200      	movs	r2, #0
 8006f20:	805a      	strh	r2, [r3, #2]
        this->width = 0;
 8006f22:	687b      	ldr	r3, [r7, #4]
 8006f24:	2200      	movs	r2, #0
 8006f26:	809a      	strh	r2, [r3, #4]
        this->height = 0;
 8006f28:	687b      	ldr	r3, [r7, #4]
 8006f2a:	2200      	movs	r2, #0
 8006f2c:	80da      	strh	r2, [r3, #6]
    }
 8006f2e:	687b      	ldr	r3, [r7, #4]
 8006f30:	4618      	mov	r0, r3
 8006f32:	370c      	adds	r7, #12
 8006f34:	46bd      	mov	sp, r7
 8006f36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f3a:	4770      	bx	lr

08006f3c <_ZN8touchgfx4RectC1Essss>:
     * @param x      The x coordinate.
     * @param y      The y coordinate.
     * @param width  The width.
     * @param height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
 8006f3c:	b480      	push	{r7}
 8006f3e:	b085      	sub	sp, #20
 8006f40:	af00      	add	r7, sp, #0
 8006f42:	60f8      	str	r0, [r7, #12]
 8006f44:	4608      	mov	r0, r1
 8006f46:	4611      	mov	r1, r2
 8006f48:	461a      	mov	r2, r3
 8006f4a:	4603      	mov	r3, r0
 8006f4c:	817b      	strh	r3, [r7, #10]
 8006f4e:	460b      	mov	r3, r1
 8006f50:	813b      	strh	r3, [r7, #8]
 8006f52:	4613      	mov	r3, r2
 8006f54:	80fb      	strh	r3, [r7, #6]
    {
        this->x = x;
 8006f56:	68fb      	ldr	r3, [r7, #12]
 8006f58:	897a      	ldrh	r2, [r7, #10]
 8006f5a:	801a      	strh	r2, [r3, #0]
        this->y = y;
 8006f5c:	68fb      	ldr	r3, [r7, #12]
 8006f5e:	893a      	ldrh	r2, [r7, #8]
 8006f60:	805a      	strh	r2, [r3, #2]
        this->width = width;
 8006f62:	68fb      	ldr	r3, [r7, #12]
 8006f64:	88fa      	ldrh	r2, [r7, #6]
 8006f66:	809a      	strh	r2, [r3, #4]
        this->height = height;
 8006f68:	68fb      	ldr	r3, [r7, #12]
 8006f6a:	8b3a      	ldrh	r2, [r7, #24]
 8006f6c:	80da      	strh	r2, [r3, #6]
    }
 8006f6e:	68fb      	ldr	r3, [r7, #12]
 8006f70:	4618      	mov	r0, r3
 8006f72:	3714      	adds	r7, #20
 8006f74:	46bd      	mov	sp, r7
 8006f76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f7a:	4770      	bx	lr

08006f7c <_ZN8touchgfx6BitmapC1Et>:
     *        Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     *        array.
     *
     * @param id The unique bitmap identifier.
     */
    explicit Bitmap(const BitmapId id = BITMAP_INVALID)
 8006f7c:	b480      	push	{r7}
 8006f7e:	b083      	sub	sp, #12
 8006f80:	af00      	add	r7, sp, #0
 8006f82:	6078      	str	r0, [r7, #4]
 8006f84:	460b      	mov	r3, r1
 8006f86:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 8006f88:	687b      	ldr	r3, [r7, #4]
 8006f8a:	887a      	ldrh	r2, [r7, #2]
 8006f8c:	801a      	strh	r2, [r3, #0]
    {
    }
 8006f8e:	687b      	ldr	r3, [r7, #4]
 8006f90:	4618      	mov	r0, r3
 8006f92:	370c      	adds	r7, #12
 8006f94:	46bd      	mov	sp, r7
 8006f96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f9a:	4770      	bx	lr

08006f9c <_ZN8touchgfx8DrawableC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Drawable() : rect(0, 0, 0, 0),
 8006f9c:	b580      	push	{r7, lr}
 8006f9e:	b084      	sub	sp, #16
 8006fa0:	af02      	add	r7, sp, #8
 8006fa2:	6078      	str	r0, [r7, #4]
        parent(0),
        nextSibling(0),
        nextDrawChainElement(0),
        touchable(false),
        visible(true)
 8006fa4:	4a13      	ldr	r2, [pc, #76]	; (8006ff4 <_ZN8touchgfx8DrawableC1Ev+0x58>)
 8006fa6:	687b      	ldr	r3, [r7, #4]
 8006fa8:	601a      	str	r2, [r3, #0]
 8006faa:	687b      	ldr	r3, [r7, #4]
 8006fac:	1d18      	adds	r0, r3, #4
 8006fae:	2300      	movs	r3, #0
 8006fb0:	9300      	str	r3, [sp, #0]
 8006fb2:	2300      	movs	r3, #0
 8006fb4:	2200      	movs	r2, #0
 8006fb6:	2100      	movs	r1, #0
 8006fb8:	f7ff ffc0 	bl	8006f3c <_ZN8touchgfx4RectC1Essss>
 8006fbc:	687b      	ldr	r3, [r7, #4]
 8006fbe:	330c      	adds	r3, #12
 8006fc0:	4618      	mov	r0, r3
 8006fc2:	f7ff ffa4 	bl	8006f0e <_ZN8touchgfx4RectC1Ev>
 8006fc6:	687b      	ldr	r3, [r7, #4]
 8006fc8:	2200      	movs	r2, #0
 8006fca:	615a      	str	r2, [r3, #20]
 8006fcc:	687b      	ldr	r3, [r7, #4]
 8006fce:	2200      	movs	r2, #0
 8006fd0:	619a      	str	r2, [r3, #24]
 8006fd2:	687b      	ldr	r3, [r7, #4]
 8006fd4:	2200      	movs	r2, #0
 8006fd6:	61da      	str	r2, [r3, #28]
 8006fd8:	687b      	ldr	r3, [r7, #4]
 8006fda:	2200      	movs	r2, #0
 8006fdc:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8006fe0:	687b      	ldr	r3, [r7, #4]
 8006fe2:	2201      	movs	r2, #1
 8006fe4:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 8006fe8:	687b      	ldr	r3, [r7, #4]
 8006fea:	4618      	mov	r0, r3
 8006fec:	3708      	adds	r7, #8
 8006fee:	46bd      	mov	sp, r7
 8006ff0:	bd80      	pop	{r7, pc}
 8006ff2:	bf00      	nop
 8006ff4:	0801e664 	.word	0x0801e664

08006ff8 <_ZN8touchgfx8DrawableD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Drawable() { }
 8006ff8:	b480      	push	{r7}
 8006ffa:	b083      	sub	sp, #12
 8006ffc:	af00      	add	r7, sp, #0
 8006ffe:	6078      	str	r0, [r7, #4]
 8007000:	4a04      	ldr	r2, [pc, #16]	; (8007014 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 8007002:	687b      	ldr	r3, [r7, #4]
 8007004:	601a      	str	r2, [r3, #0]
 8007006:	687b      	ldr	r3, [r7, #4]
 8007008:	4618      	mov	r0, r3
 800700a:	370c      	adds	r7, #12
 800700c:	46bd      	mov	sp, r7
 800700e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007012:	4770      	bx	lr
 8007014:	0801e664 	.word	0x0801e664

08007018 <_ZN8touchgfx8DrawableD0Ev>:
 8007018:	b580      	push	{r7, lr}
 800701a:	b082      	sub	sp, #8
 800701c:	af00      	add	r7, sp, #0
 800701e:	6078      	str	r0, [r7, #4]
 8007020:	6878      	ldr	r0, [r7, #4]
 8007022:	f7ff ffe9 	bl	8006ff8 <_ZN8touchgfx8DrawableD1Ev>
 8007026:	2128      	movs	r1, #40	; 0x28
 8007028:	6878      	ldr	r0, [r7, #4]
 800702a:	f014 f88f 	bl	801b14c <_ZdlPvj>
 800702e:	687b      	ldr	r3, [r7, #4]
 8007030:	4618      	mov	r0, r3
 8007032:	3708      	adds	r7, #8
 8007034:	46bd      	mov	sp, r7
 8007036:	bd80      	pop	{r7, pc}

08007038 <_ZN8touchgfx8Drawable11setPositionEssss>:
     * @param x      The x coordinate of this Drawable.
     * @param y      The y coordinate of this Drawable.
     * @param width  The width of this Drawable.
     * @param height The height of this Drawable.
     */
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8007038:	b580      	push	{r7, lr}
 800703a:	b084      	sub	sp, #16
 800703c:	af00      	add	r7, sp, #0
 800703e:	60f8      	str	r0, [r7, #12]
 8007040:	4608      	mov	r0, r1
 8007042:	4611      	mov	r1, r2
 8007044:	461a      	mov	r2, r3
 8007046:	4603      	mov	r3, r0
 8007048:	817b      	strh	r3, [r7, #10]
 800704a:	460b      	mov	r3, r1
 800704c:	813b      	strh	r3, [r7, #8]
 800704e:	4613      	mov	r3, r2
 8007050:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 8007052:	68fb      	ldr	r3, [r7, #12]
 8007054:	681b      	ldr	r3, [r3, #0]
 8007056:	3334      	adds	r3, #52	; 0x34
 8007058:	681b      	ldr	r3, [r3, #0]
 800705a:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800705e:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8007062:	68f8      	ldr	r0, [r7, #12]
 8007064:	4798      	blx	r3
        setWidth(width);
 8007066:	68fb      	ldr	r3, [r7, #12]
 8007068:	681b      	ldr	r3, [r3, #0]
 800706a:	3338      	adds	r3, #56	; 0x38
 800706c:	681b      	ldr	r3, [r3, #0]
 800706e:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8007072:	4611      	mov	r1, r2
 8007074:	68f8      	ldr	r0, [r7, #12]
 8007076:	4798      	blx	r3
        setHeight(height);
 8007078:	68fb      	ldr	r3, [r7, #12]
 800707a:	681b      	ldr	r3, [r3, #0]
 800707c:	333c      	adds	r3, #60	; 0x3c
 800707e:	681b      	ldr	r3, [r3, #0]
 8007080:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 8007084:	4611      	mov	r1, r2
 8007086:	68f8      	ldr	r0, [r7, #12]
 8007088:	4798      	blx	r3
    }
 800708a:	bf00      	nop
 800708c:	3710      	adds	r7, #16
 800708e:	46bd      	mov	sp, r7
 8007090:	bd80      	pop	{r7, pc}

08007092 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param x The new x value, relative to the parent. A negative value is allowed.
     */
    virtual void setX(int16_t x)
 8007092:	b480      	push	{r7}
 8007094:	b083      	sub	sp, #12
 8007096:	af00      	add	r7, sp, #0
 8007098:	6078      	str	r0, [r7, #4]
 800709a:	460b      	mov	r3, r1
 800709c:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 800709e:	687b      	ldr	r3, [r7, #4]
 80070a0:	887a      	ldrh	r2, [r7, #2]
 80070a2:	809a      	strh	r2, [r3, #4]
    }
 80070a4:	bf00      	nop
 80070a6:	370c      	adds	r7, #12
 80070a8:	46bd      	mov	sp, r7
 80070aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070ae:	4770      	bx	lr

080070b0 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param y The new y value, relative to the parent. A negative value is allowed.
     */
    virtual void setY(int16_t y)
 80070b0:	b480      	push	{r7}
 80070b2:	b083      	sub	sp, #12
 80070b4:	af00      	add	r7, sp, #0
 80070b6:	6078      	str	r0, [r7, #4]
 80070b8:	460b      	mov	r3, r1
 80070ba:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 80070bc:	687b      	ldr	r3, [r7, #4]
 80070be:	887a      	ldrh	r2, [r7, #2]
 80070c0:	80da      	strh	r2, [r3, #6]
    }
 80070c2:	bf00      	nop
 80070c4:	370c      	adds	r7, #12
 80070c6:	46bd      	mov	sp, r7
 80070c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070cc:	4770      	bx	lr

080070ce <_ZN8touchgfx8Drawable5setXYEss>:
     * @note Changing this does not automatically yield a redraw.
     *
     * @param x The new x value, relative to the parent. A negative value is allowed.
     * @param y The new y value, relative to the parent. A negative value is allowed.
     */
    virtual void setXY(int16_t x, int16_t y)
 80070ce:	b580      	push	{r7, lr}
 80070d0:	b082      	sub	sp, #8
 80070d2:	af00      	add	r7, sp, #0
 80070d4:	6078      	str	r0, [r7, #4]
 80070d6:	460b      	mov	r3, r1
 80070d8:	807b      	strh	r3, [r7, #2]
 80070da:	4613      	mov	r3, r2
 80070dc:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 80070de:	687b      	ldr	r3, [r7, #4]
 80070e0:	681b      	ldr	r3, [r3, #0]
 80070e2:	332c      	adds	r3, #44	; 0x2c
 80070e4:	681b      	ldr	r3, [r3, #0]
 80070e6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80070ea:	4611      	mov	r1, r2
 80070ec:	6878      	ldr	r0, [r7, #4]
 80070ee:	4798      	blx	r3
        setY(y);
 80070f0:	687b      	ldr	r3, [r7, #4]
 80070f2:	681b      	ldr	r3, [r3, #0]
 80070f4:	3330      	adds	r3, #48	; 0x30
 80070f6:	681b      	ldr	r3, [r3, #0]
 80070f8:	f9b7 2000 	ldrsh.w	r2, [r7]
 80070fc:	4611      	mov	r1, r2
 80070fe:	6878      	ldr	r0, [r7, #4]
 8007100:	4798      	blx	r3
    }
 8007102:	bf00      	nop
 8007104:	3708      	adds	r7, #8
 8007106:	46bd      	mov	sp, r7
 8007108:	bd80      	pop	{r7, pc}

0800710a <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param width The new width.
     */
    virtual void setWidth(int16_t width)
 800710a:	b480      	push	{r7}
 800710c:	b083      	sub	sp, #12
 800710e:	af00      	add	r7, sp, #0
 8007110:	6078      	str	r0, [r7, #4]
 8007112:	460b      	mov	r3, r1
 8007114:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 8007116:	687b      	ldr	r3, [r7, #4]
 8007118:	887a      	ldrh	r2, [r7, #2]
 800711a:	811a      	strh	r2, [r3, #8]
    }
 800711c:	bf00      	nop
 800711e:	370c      	adds	r7, #12
 8007120:	46bd      	mov	sp, r7
 8007122:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007126:	4770      	bx	lr

08007128 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param height The new height.
     */
    virtual void setHeight(int16_t height)
 8007128:	b480      	push	{r7}
 800712a:	b083      	sub	sp, #12
 800712c:	af00      	add	r7, sp, #0
 800712e:	6078      	str	r0, [r7, #4]
 8007130:	460b      	mov	r3, r1
 8007132:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 8007134:	687b      	ldr	r3, [r7, #4]
 8007136:	887a      	ldrh	r2, [r7, #2]
 8007138:	815a      	strh	r2, [r3, #10]
    }
 800713a:	bf00      	nop
 800713c:	370c      	adds	r7, #12
 800713e:	46bd      	mov	sp, r7
 8007140:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007144:	4770      	bx	lr

08007146 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     *
     *        This function can be called on parent nodes to signal that the size of one or
     *        more of its children has changed. Currently only used in ScrollableContainer to
     *        redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged() { }
 8007146:	b480      	push	{r7}
 8007148:	b083      	sub	sp, #12
 800714a:	af00      	add	r7, sp, #0
 800714c:	6078      	str	r0, [r7, #4]
 800714e:	bf00      	nop
 8007150:	370c      	adds	r7, #12
 8007152:	46bd      	mov	sp, r7
 8007154:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007158:	4770      	bx	lr

0800715a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *        Defines the event handler interface for ClickEvents. The default implementation
     *        ignores the event. The event is only received if the drawable is touchable.
     *
     * @param evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt) { }
 800715a:	b480      	push	{r7}
 800715c:	b083      	sub	sp, #12
 800715e:	af00      	add	r7, sp, #0
 8007160:	6078      	str	r0, [r7, #4]
 8007162:	6039      	str	r1, [r7, #0]
 8007164:	bf00      	nop
 8007166:	370c      	adds	r7, #12
 8007168:	46bd      	mov	sp, r7
 800716a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800716e:	4770      	bx	lr

08007170 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *        Defines the event handler interface for GestureEvents. The default implementation
     *        ignores the event. The event is only received if the drawable is touchable.
     *
     * @param evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt) { }
 8007170:	b480      	push	{r7}
 8007172:	b083      	sub	sp, #12
 8007174:	af00      	add	r7, sp, #0
 8007176:	6078      	str	r0, [r7, #4]
 8007178:	6039      	str	r1, [r7, #0]
 800717a:	bf00      	nop
 800717c:	370c      	adds	r7, #12
 800717e:	46bd      	mov	sp, r7
 8007180:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007184:	4770      	bx	lr

08007186 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *        Defines the event handler interface for DragEvents. The event is only received if
     *        the drawable is touchable.
     *
     * @param evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt) { }
 8007186:	b480      	push	{r7}
 8007188:	b083      	sub	sp, #12
 800718a:	af00      	add	r7, sp, #0
 800718c:	6078      	str	r0, [r7, #4]
 800718e:	6039      	str	r1, [r7, #0]
 8007190:	bf00      	nop
 8007192:	370c      	adds	r7, #12
 8007194:	46bd      	mov	sp, r7
 8007196:	f85d 7b04 	ldr.w	r7, [sp], #4
 800719a:	4770      	bx	lr

0800719c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *        Called periodically by the framework if the Drawable instance has subscribed to
     *        timer ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent() { }
 800719c:	b480      	push	{r7}
 800719e:	b083      	sub	sp, #12
 80071a0:	af00      	add	r7, sp, #0
 80071a2:	6078      	str	r0, [r7, #4]
 80071a4:	bf00      	nop
 80071a6:	370c      	adds	r7, #12
 80071a8:	46bd      	mov	sp, r7
 80071aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071ae:	4770      	bx	lr

080071b0 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     * @return true if the Drawable is visible.
     * @return True if visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 80071b0:	b480      	push	{r7}
 80071b2:	b083      	sub	sp, #12
 80071b4:	af00      	add	r7, sp, #0
 80071b6:	6078      	str	r0, [r7, #4]
    {
        return visible;
 80071b8:	687b      	ldr	r3, [r7, #4]
 80071ba:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 80071be:	4618      	mov	r0, r3
 80071c0:	370c      	adds	r7, #12
 80071c2:	46bd      	mov	sp, r7
 80071c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071c8:	4770      	bx	lr

080071ca <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 80071ca:	b480      	push	{r7}
 80071cc:	b083      	sub	sp, #12
 80071ce:	af00      	add	r7, sp, #0
 80071d0:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 80071d2:	687b      	ldr	r3, [r7, #4]
 80071d4:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 80071d8:	4618      	mov	r0, r3
 80071da:	370c      	adds	r7, #12
 80071dc:	46bd      	mov	sp, r7
 80071de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071e2:	4770      	bx	lr

080071e4 <_ZN8touchgfx8Drawable6moveToEss>:
     * @note Will redraw the appropriate areas of the screen.
     *
     * @param x The absolute position to move to.
     * @param y The absolute position to move to.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80071e4:	b580      	push	{r7, lr}
 80071e6:	b082      	sub	sp, #8
 80071e8:	af00      	add	r7, sp, #0
 80071ea:	6078      	str	r0, [r7, #4]
 80071ec:	460b      	mov	r3, r1
 80071ee:	807b      	strh	r3, [r7, #2]
 80071f0:	4613      	mov	r3, r2
 80071f2:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 80071f4:	687b      	ldr	r3, [r7, #4]
 80071f6:	681b      	ldr	r3, [r3, #0]
 80071f8:	3354      	adds	r3, #84	; 0x54
 80071fa:	681b      	ldr	r3, [r3, #0]
 80071fc:	8879      	ldrh	r1, [r7, #2]
 80071fe:	687a      	ldr	r2, [r7, #4]
 8007200:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 8007204:	b292      	uxth	r2, r2
 8007206:	1a8a      	subs	r2, r1, r2
 8007208:	b292      	uxth	r2, r2
 800720a:	b210      	sxth	r0, r2
 800720c:	8839      	ldrh	r1, [r7, #0]
 800720e:	687a      	ldr	r2, [r7, #4]
 8007210:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8007214:	b292      	uxth	r2, r2
 8007216:	1a8a      	subs	r2, r1, r2
 8007218:	b292      	uxth	r2, r2
 800721a:	b212      	sxth	r2, r2
 800721c:	4601      	mov	r1, r0
 800721e:	6878      	ldr	r0, [r7, #4]
 8007220:	4798      	blx	r3
    }
 8007222:	bf00      	nop
 8007224:	3708      	adds	r7, #8
 8007226:	46bd      	mov	sp, r7
 8007228:	bd80      	pop	{r7, pc}

0800722a <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     *        Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 800722a:	b480      	push	{r7}
 800722c:	b083      	sub	sp, #12
 800722e:	af00      	add	r7, sp, #0
 8007230:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8007232:	687b      	ldr	r3, [r7, #4]
 8007234:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8007238:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800723a:	687b      	ldr	r3, [r7, #4]
 800723c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8007240:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 8007242:	687b      	ldr	r3, [r7, #4]
 8007244:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8007248:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 800724a:	bf00      	nop
 800724c:	370c      	adds	r7, #12
 800724e:	46bd      	mov	sp, r7
 8007250:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007254:	4770      	bx	lr

08007256 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     *
     * @param invalidatedArea              Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 8007256:	b580      	push	{r7, lr}
 8007258:	b084      	sub	sp, #16
 800725a:	af00      	add	r7, sp, #0
 800725c:	60f8      	str	r0, [r7, #12]
 800725e:	60b9      	str	r1, [r7, #8]
 8007260:	607a      	str	r2, [r7, #4]
    {
        resetDrawChainCache();
 8007262:	68f8      	ldr	r0, [r7, #12]
 8007264:	f7ff ffe1 	bl	800722a <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 8007268:	687b      	ldr	r3, [r7, #4]
 800726a:	681a      	ldr	r2, [r3, #0]
 800726c:	68fb      	ldr	r3, [r7, #12]
 800726e:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 8007270:	687b      	ldr	r3, [r7, #4]
 8007272:	68fa      	ldr	r2, [r7, #12]
 8007274:	601a      	str	r2, [r3, #0]
    }
 8007276:	bf00      	nop
 8007278:	3710      	adds	r7, #16
 800727a:	46bd      	mov	sp, r7
 800727c:	bd80      	pop	{r7, pc}
	...

08007280 <_ZN8touchgfx9ContainerC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Container() : Drawable(),
 8007280:	b580      	push	{r7, lr}
 8007282:	b082      	sub	sp, #8
 8007284:	af00      	add	r7, sp, #0
 8007286:	6078      	str	r0, [r7, #4]
        firstChild(0)
 8007288:	687b      	ldr	r3, [r7, #4]
 800728a:	4618      	mov	r0, r3
 800728c:	f7ff fe86 	bl	8006f9c <_ZN8touchgfx8DrawableC1Ev>
 8007290:	4a05      	ldr	r2, [pc, #20]	; (80072a8 <_ZN8touchgfx9ContainerC1Ev+0x28>)
 8007292:	687b      	ldr	r3, [r7, #4]
 8007294:	601a      	str	r2, [r3, #0]
 8007296:	687b      	ldr	r3, [r7, #4]
 8007298:	2200      	movs	r2, #0
 800729a:	629a      	str	r2, [r3, #40]	; 0x28
    {
    }
 800729c:	687b      	ldr	r3, [r7, #4]
 800729e:	4618      	mov	r0, r3
 80072a0:	3708      	adds	r7, #8
 80072a2:	46bd      	mov	sp, r7
 80072a4:	bd80      	pop	{r7, pc}
 80072a6:	bf00      	nop
 80072a8:	0801d470 	.word	0x0801d470

080072ac <_ZN8touchgfx9ContainerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Container() { }
 80072ac:	b580      	push	{r7, lr}
 80072ae:	b082      	sub	sp, #8
 80072b0:	af00      	add	r7, sp, #0
 80072b2:	6078      	str	r0, [r7, #4]
 80072b4:	4a05      	ldr	r2, [pc, #20]	; (80072cc <_ZN8touchgfx9ContainerD1Ev+0x20>)
 80072b6:	687b      	ldr	r3, [r7, #4]
 80072b8:	601a      	str	r2, [r3, #0]
 80072ba:	687b      	ldr	r3, [r7, #4]
 80072bc:	4618      	mov	r0, r3
 80072be:	f7ff fe9b 	bl	8006ff8 <_ZN8touchgfx8DrawableD1Ev>
 80072c2:	687b      	ldr	r3, [r7, #4]
 80072c4:	4618      	mov	r0, r3
 80072c6:	3708      	adds	r7, #8
 80072c8:	46bd      	mov	sp, r7
 80072ca:	bd80      	pop	{r7, pc}
 80072cc:	0801d470 	.word	0x0801d470

080072d0 <_ZN8touchgfx9ContainerD0Ev>:
 80072d0:	b580      	push	{r7, lr}
 80072d2:	b082      	sub	sp, #8
 80072d4:	af00      	add	r7, sp, #0
 80072d6:	6078      	str	r0, [r7, #4]
 80072d8:	6878      	ldr	r0, [r7, #4]
 80072da:	f7ff ffe7 	bl	80072ac <_ZN8touchgfx9ContainerD1Ev>
 80072de:	212c      	movs	r1, #44	; 0x2c
 80072e0:	6878      	ldr	r0, [r7, #4]
 80072e2:	f013 ff33 	bl	801b14c <_ZdlPvj>
 80072e6:	687b      	ldr	r3, [r7, #4]
 80072e8:	4618      	mov	r0, r3
 80072ea:	3708      	adds	r7, #8
 80072ec:	46bd      	mov	sp, r7
 80072ee:	bd80      	pop	{r7, pc}

080072f0 <_ZN8touchgfx6ScreenD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Screen() { }
 80072f0:	b580      	push	{r7, lr}
 80072f2:	b082      	sub	sp, #8
 80072f4:	af00      	add	r7, sp, #0
 80072f6:	6078      	str	r0, [r7, #4]
 80072f8:	4a06      	ldr	r2, [pc, #24]	; (8007314 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 80072fa:	687b      	ldr	r3, [r7, #4]
 80072fc:	601a      	str	r2, [r3, #0]
 80072fe:	687b      	ldr	r3, [r7, #4]
 8007300:	3304      	adds	r3, #4
 8007302:	4618      	mov	r0, r3
 8007304:	f7ff ffd2 	bl	80072ac <_ZN8touchgfx9ContainerD1Ev>
 8007308:	687b      	ldr	r3, [r7, #4]
 800730a:	4618      	mov	r0, r3
 800730c:	3708      	adds	r7, #8
 800730e:	46bd      	mov	sp, r7
 8007310:	bd80      	pop	{r7, pc}
 8007312:	bf00      	nop
 8007314:	0801e75c 	.word	0x0801e75c

08007318 <_ZN8touchgfx6ScreenD0Ev>:
 8007318:	b580      	push	{r7, lr}
 800731a:	b082      	sub	sp, #8
 800731c:	af00      	add	r7, sp, #0
 800731e:	6078      	str	r0, [r7, #4]
 8007320:	6878      	ldr	r0, [r7, #4]
 8007322:	f7ff ffe5 	bl	80072f0 <_ZN8touchgfx6ScreenD1Ev>
 8007326:	213c      	movs	r1, #60	; 0x3c
 8007328:	6878      	ldr	r0, [r7, #4]
 800732a:	f013 ff0f 	bl	801b14c <_ZdlPvj>
 800732e:	687b      	ldr	r3, [r7, #4]
 8007330:	4618      	mov	r0, r3
 8007332:	3708      	adds	r7, #8
 8007334:	46bd      	mov	sp, r7
 8007336:	bd80      	pop	{r7, pc}

08007338 <_ZN8touchgfx6Screen11setupScreenEv>:
     *        Base version does nothing, but place any screen specific initialization code in
     *        an overridden version.
     *
     * @see touchgfx::Application::switchScreen()
     */
    virtual void setupScreen() { }
 8007338:	b480      	push	{r7}
 800733a:	b083      	sub	sp, #12
 800733c:	af00      	add	r7, sp, #0
 800733e:	6078      	str	r0, [r7, #4]
 8007340:	bf00      	nop
 8007342:	370c      	adds	r7, #12
 8007344:	46bd      	mov	sp, r7
 8007346:	f85d 7b04 	ldr.w	r7, [sp], #4
 800734a:	4770      	bx	lr

0800734c <_ZN8touchgfx6Screen15afterTransitionEv>:
     *        Base version does nothing, but override to do screen specific initialization code
     *        that has to be done after the transition to the screen.
     *
     * @see touchgfx::Application::handleTick()
     */
    virtual void afterTransition() { }
 800734c:	b480      	push	{r7}
 800734e:	b083      	sub	sp, #12
 8007350:	af00      	add	r7, sp, #0
 8007352:	6078      	str	r0, [r7, #4]
 8007354:	bf00      	nop
 8007356:	370c      	adds	r7, #12
 8007358:	46bd      	mov	sp, r7
 800735a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800735e:	4770      	bx	lr

08007360 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *        displayed. Base version does nothing, but place any screen specific cleanup code
     *        in an overridden version.
     *
     * @see touchgfx::Application::switchScreen()
     */
    virtual void tearDownScreen() { }
 8007360:	b480      	push	{r7}
 8007362:	b083      	sub	sp, #12
 8007364:	af00      	add	r7, sp, #0
 8007366:	6078      	str	r0, [r7, #4]
 8007368:	bf00      	nop
 800736a:	370c      	adds	r7, #12
 800736c:	46bd      	mov	sp, r7
 800736e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007372:	4770      	bx	lr

08007374 <_ZN8touchgfx6Screen15handleTickEventEv>:
     *        Application::TICK_INTERVAL_MS.
     *
     *        Called by the Application on the current screen with a frequency of
     *        Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 8007374:	b480      	push	{r7}
 8007376:	b083      	sub	sp, #12
 8007378:	af00      	add	r7, sp, #0
 800737a:	6078      	str	r0, [r7, #4]
    {
    }
 800737c:	bf00      	nop
 800737e:	370c      	adds	r7, #12
 8007380:	46bd      	mov	sp, r7
 8007382:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007386:	4770      	bx	lr

08007388 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *        Called by the Application on the reception of a "key", the meaning of which is
     *        platform/application specific. Default implementation does nothing.
     *
     * @param key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 8007388:	b480      	push	{r7}
 800738a:	b083      	sub	sp, #12
 800738c:	af00      	add	r7, sp, #0
 800738e:	6078      	str	r0, [r7, #4]
 8007390:	460b      	mov	r3, r1
 8007392:	70fb      	strb	r3, [r7, #3]
    {
    }
 8007394:	bf00      	nop
 8007396:	370c      	adds	r7, #12
 8007398:	46bd      	mov	sp, r7
 800739a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800739e:	4770      	bx	lr

080073a0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     *
     * @param [in] d The Drawable to add.
     */
    void add(Drawable& d)
 80073a0:	b580      	push	{r7, lr}
 80073a2:	b082      	sub	sp, #8
 80073a4:	af00      	add	r7, sp, #0
 80073a6:	6078      	str	r0, [r7, #4]
 80073a8:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 80073aa:	687b      	ldr	r3, [r7, #4]
 80073ac:	3304      	adds	r3, #4
 80073ae:	6839      	ldr	r1, [r7, #0]
 80073b0:	4618      	mov	r0, r3
 80073b2:	f003 fb9f 	bl	800aaf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 80073b6:	bf00      	nop
 80073b8:	3708      	adds	r7, #8
 80073ba:	46bd      	mov	sp, r7
 80073bc:	bd80      	pop	{r7, pc}
	...

080073c0 <_ZN8touchgfx6WidgetC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Widget() : Drawable() { }
 80073c0:	b580      	push	{r7, lr}
 80073c2:	b082      	sub	sp, #8
 80073c4:	af00      	add	r7, sp, #0
 80073c6:	6078      	str	r0, [r7, #4]
 80073c8:	687b      	ldr	r3, [r7, #4]
 80073ca:	4618      	mov	r0, r3
 80073cc:	f7ff fde6 	bl	8006f9c <_ZN8touchgfx8DrawableC1Ev>
 80073d0:	4a03      	ldr	r2, [pc, #12]	; (80073e0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80073d2:	687b      	ldr	r3, [r7, #4]
 80073d4:	601a      	str	r2, [r3, #0]
 80073d6:	687b      	ldr	r3, [r7, #4]
 80073d8:	4618      	mov	r0, r3
 80073da:	3708      	adds	r7, #8
 80073dc:	46bd      	mov	sp, r7
 80073de:	bd80      	pop	{r7, pc}
 80073e0:	0801cb40 	.word	0x0801cb40

080073e4 <_ZN8touchgfx6WidgetD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Widget() { }
 80073e4:	b580      	push	{r7, lr}
 80073e6:	b082      	sub	sp, #8
 80073e8:	af00      	add	r7, sp, #0
 80073ea:	6078      	str	r0, [r7, #4]
 80073ec:	4a05      	ldr	r2, [pc, #20]	; (8007404 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 80073ee:	687b      	ldr	r3, [r7, #4]
 80073f0:	601a      	str	r2, [r3, #0]
 80073f2:	687b      	ldr	r3, [r7, #4]
 80073f4:	4618      	mov	r0, r3
 80073f6:	f7ff fdff 	bl	8006ff8 <_ZN8touchgfx8DrawableD1Ev>
 80073fa:	687b      	ldr	r3, [r7, #4]
 80073fc:	4618      	mov	r0, r3
 80073fe:	3708      	adds	r7, #8
 8007400:	46bd      	mov	sp, r7
 8007402:	bd80      	pop	{r7, pc}
 8007404:	0801cb40 	.word	0x0801cb40

08007408 <_ZN8touchgfx6WidgetD0Ev>:
 8007408:	b580      	push	{r7, lr}
 800740a:	b082      	sub	sp, #8
 800740c:	af00      	add	r7, sp, #0
 800740e:	6078      	str	r0, [r7, #4]
 8007410:	6878      	ldr	r0, [r7, #4]
 8007412:	f7ff ffe7 	bl	80073e4 <_ZN8touchgfx6WidgetD1Ev>
 8007416:	2128      	movs	r1, #40	; 0x28
 8007418:	6878      	ldr	r0, [r7, #4]
 800741a:	f013 fe97 	bl	801b14c <_ZdlPvj>
 800741e:	687b      	ldr	r3, [r7, #4]
 8007420:	4618      	mov	r0, r3
 8007422:	3708      	adds	r7, #8
 8007424:	46bd      	mov	sp, r7
 8007426:	bd80      	pop	{r7, pc}

08007428 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param x          The point of intersection expressed in coordinates relative to the parent.
     * @param y          The y coordinate.
     * @param [out] last Result will be placed here.
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
 8007428:	b580      	push	{r7, lr}
 800742a:	b084      	sub	sp, #16
 800742c:	af00      	add	r7, sp, #0
 800742e:	60f8      	str	r0, [r7, #12]
 8007430:	607b      	str	r3, [r7, #4]
 8007432:	460b      	mov	r3, r1
 8007434:	817b      	strh	r3, [r7, #10]
 8007436:	4613      	mov	r3, r2
 8007438:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800743a:	68fb      	ldr	r3, [r7, #12]
 800743c:	4618      	mov	r0, r3
 800743e:	f7ff feb7 	bl	80071b0 <_ZNK8touchgfx8Drawable9isVisibleEv>
 8007442:	4603      	mov	r3, r0
 8007444:	2b00      	cmp	r3, #0
 8007446:	d008      	beq.n	800745a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8007448:	68fb      	ldr	r3, [r7, #12]
 800744a:	4618      	mov	r0, r3
 800744c:	f7ff febd 	bl	80071ca <_ZNK8touchgfx8Drawable11isTouchableEv>
 8007450:	4603      	mov	r3, r0
 8007452:	2b00      	cmp	r3, #0
 8007454:	d001      	beq.n	800745a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8007456:	2301      	movs	r3, #1
 8007458:	e000      	b.n	800745c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800745a:	2300      	movs	r3, #0
 800745c:	2b00      	cmp	r3, #0
 800745e:	d002      	beq.n	8007466 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 8007460:	68fa      	ldr	r2, [r7, #12]
 8007462:	687b      	ldr	r3, [r7, #4]
 8007464:	601a      	str	r2, [r3, #0]
        }
    }
 8007466:	bf00      	nop
 8007468:	3710      	adds	r7, #16
 800746a:	46bd      	mov	sp, r7
 800746c:	bd80      	pop	{r7, pc}
	...

08007470 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *        Constructs a new Image with a default alpha value of 255 (solid) and a default
     *        Bitmap if none is specified.
     *
     * @param bmp The bitmap to display.
     */
    Image(const Bitmap& bmp = Bitmap()) : Widget(), alpha(255)
 8007470:	b580      	push	{r7, lr}
 8007472:	b082      	sub	sp, #8
 8007474:	af00      	add	r7, sp, #0
 8007476:	6078      	str	r0, [r7, #4]
 8007478:	6039      	str	r1, [r7, #0]
 800747a:	687b      	ldr	r3, [r7, #4]
 800747c:	4618      	mov	r0, r3
 800747e:	f7ff ff9f 	bl	80073c0 <_ZN8touchgfx6WidgetC1Ev>
 8007482:	4a0b      	ldr	r2, [pc, #44]	; (80074b0 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x40>)
 8007484:	687b      	ldr	r3, [r7, #4]
 8007486:	601a      	str	r2, [r3, #0]
 8007488:	687b      	ldr	r3, [r7, #4]
 800748a:	3326      	adds	r3, #38	; 0x26
 800748c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8007490:	4618      	mov	r0, r3
 8007492:	f7ff fd73 	bl	8006f7c <_ZN8touchgfx6BitmapC1Et>
 8007496:	687b      	ldr	r3, [r7, #4]
 8007498:	22ff      	movs	r2, #255	; 0xff
 800749a:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
    {
        setBitmap(bmp);
 800749e:	6839      	ldr	r1, [r7, #0]
 80074a0:	6878      	ldr	r0, [r7, #4]
 80074a2:	f005 f8a9 	bl	800c5f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 80074a6:	687b      	ldr	r3, [r7, #4]
 80074a8:	4618      	mov	r0, r3
 80074aa:	3708      	adds	r7, #8
 80074ac:	46bd      	mov	sp, r7
 80074ae:	bd80      	pop	{r7, pc}
 80074b0:	0801e3e4 	.word	0x0801e3e4

080074b4 <_ZN8touchgfx6Slider19setNewValueCallbackERNS_15GenericCallbackIRKS0_ivEE>:
     * @param callback The callback to be executed. The callback will be given a reference to
     *                 the Slider and the current value of the slider.
     *
     * @see GenericCallback
     */
    void setNewValueCallback(GenericCallback< const Slider&, int >& callback)
 80074b4:	b480      	push	{r7}
 80074b6:	b083      	sub	sp, #12
 80074b8:	af00      	add	r7, sp, #0
 80074ba:	6078      	str	r0, [r7, #4]
 80074bc:	6039      	str	r1, [r7, #0]
    {
        newValueCallback = &callback;
 80074be:	687b      	ldr	r3, [r7, #4]
 80074c0:	683a      	ldr	r2, [r7, #0]
 80074c2:	f8c3 20f8 	str.w	r2, [r3, #248]	; 0xf8
    }
 80074c6:	bf00      	nop
 80074c8:	370c      	adds	r7, #12
 80074ca:	46bd      	mov	sp, r7
 80074cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074d0:	4770      	bx	lr

080074d2 <_ZN8touchgfx9TypedTextC1Et>:
    explicit TypedText(const TypedTextId id = TYPED_TEXT_INVALID) : typedTextId(id)
 80074d2:	b480      	push	{r7}
 80074d4:	b083      	sub	sp, #12
 80074d6:	af00      	add	r7, sp, #0
 80074d8:	6078      	str	r0, [r7, #4]
 80074da:	460b      	mov	r3, r1
 80074dc:	807b      	strh	r3, [r7, #2]
 80074de:	687b      	ldr	r3, [r7, #4]
 80074e0:	887a      	ldrh	r2, [r7, #2]
 80074e2:	801a      	strh	r2, [r3, #0]
    }
 80074e4:	687b      	ldr	r3, [r7, #4]
 80074e6:	4618      	mov	r0, r3
 80074e8:	370c      	adds	r7, #12
 80074ea:	46bd      	mov	sp, r7
 80074ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074f0:	4770      	bx	lr
	...

080074f4 <_ZNK8touchgfx9TypedText7getTextEv>:
    const Unicode::UnicodeChar* getText() const
 80074f4:	b580      	push	{r7, lr}
 80074f6:	b082      	sub	sp, #8
 80074f8:	af00      	add	r7, sp, #0
 80074fa:	6078      	str	r0, [r7, #4]
        assertValid();
 80074fc:	6878      	ldr	r0, [r7, #4]
 80074fe:	f7fe fdf1 	bl	80060e4 <_ZNK8touchgfx9TypedText11assertValidEv>
        return texts->getText(typedTextId);
 8007502:	4b06      	ldr	r3, [pc, #24]	; (800751c <_ZNK8touchgfx9TypedText7getTextEv+0x28>)
 8007504:	681a      	ldr	r2, [r3, #0]
 8007506:	687b      	ldr	r3, [r7, #4]
 8007508:	881b      	ldrh	r3, [r3, #0]
 800750a:	4619      	mov	r1, r3
 800750c:	4610      	mov	r0, r2
 800750e:	f001 f923 	bl	8008758 <_ZNK8touchgfx5Texts7getTextEt>
 8007512:	4603      	mov	r3, r0
    }
 8007514:	4618      	mov	r0, r3
 8007516:	3708      	adds	r7, #8
 8007518:	46bd      	mov	sp, r7
 800751a:	bd80      	pop	{r7, pc}
 800751c:	20026f2c 	.word	0x20026f2c

08007520 <_ZN8touchgfx8TextAreaC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Create an empty TextArea. Default color is black.
     */
    TextArea()
 8007520:	b580      	push	{r7, lr}
 8007522:	b082      	sub	sp, #8
 8007524:	af00      	add	r7, sp, #0
 8007526:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 8007528:	687b      	ldr	r3, [r7, #4]
 800752a:	4618      	mov	r0, r3
 800752c:	f7ff ff48 	bl	80073c0 <_ZN8touchgfx6WidgetC1Ev>
 8007530:	4a13      	ldr	r2, [pc, #76]	; (8007580 <_ZN8touchgfx8TextAreaC1Ev+0x60>)
 8007532:	687b      	ldr	r3, [r7, #4]
 8007534:	601a      	str	r2, [r3, #0]
 8007536:	687b      	ldr	r3, [r7, #4]
 8007538:	3326      	adds	r3, #38	; 0x26
 800753a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800753e:	4618      	mov	r0, r3
 8007540:	f7ff ffc7 	bl	80074d2 <_ZN8touchgfx9TypedTextC1Et>
 8007544:	687b      	ldr	r3, [r7, #4]
 8007546:	3328      	adds	r3, #40	; 0x28
 8007548:	2100      	movs	r1, #0
 800754a:	4618      	mov	r0, r3
 800754c:	f7ff fcd0 	bl	8006ef0 <_ZN8touchgfx9colortypeC1Em>
 8007550:	687b      	ldr	r3, [r7, #4]
 8007552:	2200      	movs	r2, #0
 8007554:	859a      	strh	r2, [r3, #44]	; 0x2c
 8007556:	687b      	ldr	r3, [r7, #4]
 8007558:	22ff      	movs	r2, #255	; 0xff
 800755a:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
 800755e:	687b      	ldr	r3, [r7, #4]
 8007560:	2200      	movs	r2, #0
 8007562:	f883 202f 	strb.w	r2, [r3, #47]	; 0x2f
 8007566:	687b      	ldr	r3, [r7, #4]
 8007568:	2200      	movs	r2, #0
 800756a:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
 800756e:	687b      	ldr	r3, [r7, #4]
 8007570:	2200      	movs	r2, #0
 8007572:	f883 2031 	strb.w	r2, [r3, #49]	; 0x31
    {
    }
 8007576:	687b      	ldr	r3, [r7, #4]
 8007578:	4618      	mov	r0, r3
 800757a:	3708      	adds	r7, #8
 800757c:	46bd      	mov	sp, r7
 800757e:	bd80      	pop	{r7, pc}
 8007580:	0801e1e4 	.word	0x0801e1e4

08007584 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
     *
     *        Gets solid rectangle.
     *
     * @return the largest solid rectangle for this widget. For a TextArea, this is an empty area.
     */
    virtual Rect getSolidRect() const
 8007584:	b580      	push	{r7, lr}
 8007586:	b084      	sub	sp, #16
 8007588:	af02      	add	r7, sp, #8
 800758a:	6078      	str	r0, [r7, #4]
 800758c:	6039      	str	r1, [r7, #0]
    {
        return Rect(0, 0, 0, 0);
 800758e:	2300      	movs	r3, #0
 8007590:	9300      	str	r3, [sp, #0]
 8007592:	2300      	movs	r3, #0
 8007594:	2200      	movs	r2, #0
 8007596:	2100      	movs	r1, #0
 8007598:	6878      	ldr	r0, [r7, #4]
 800759a:	f7ff fccf 	bl	8006f3c <_ZN8touchgfx4RectC1Essss>
    }
 800759e:	6878      	ldr	r0, [r7, #4]
 80075a0:	3708      	adds	r7, #8
 80075a2:	46bd      	mov	sp, r7
 80075a4:	bd80      	pop	{r7, pc}

080075a6 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>:
     *
     *        Sets the color of the text.
     *
     * @param color The color to use.
     */
    inline void setColor(colortype color)
 80075a6:	b480      	push	{r7}
 80075a8:	b083      	sub	sp, #12
 80075aa:	af00      	add	r7, sp, #0
 80075ac:	6078      	str	r0, [r7, #4]
 80075ae:	6039      	str	r1, [r7, #0]
    {
        this->color = color;
 80075b0:	687b      	ldr	r3, [r7, #4]
 80075b2:	683a      	ldr	r2, [r7, #0]
 80075b4:	629a      	str	r2, [r3, #40]	; 0x28
    }
 80075b6:	bf00      	nop
 80075b8:	370c      	adds	r7, #12
 80075ba:	46bd      	mov	sp, r7
 80075bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075c0:	4770      	bx	lr

080075c2 <_ZN8touchgfx8TextArea8setAlphaEh>:
     *
     *        Sets the alpha value of the text.
     *
     * @param alpha The alpha value. 255 = completely solid. 0 = invisible.
     */
    void setAlpha(uint8_t alpha)
 80075c2:	b480      	push	{r7}
 80075c4:	b083      	sub	sp, #12
 80075c6:	af00      	add	r7, sp, #0
 80075c8:	6078      	str	r0, [r7, #4]
 80075ca:	460b      	mov	r3, r1
 80075cc:	70fb      	strb	r3, [r7, #3]
    {
        this->alpha = alpha;
 80075ce:	687b      	ldr	r3, [r7, #4]
 80075d0:	78fa      	ldrb	r2, [r7, #3]
 80075d2:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
    }
 80075d6:	bf00      	nop
 80075d8:	370c      	adds	r7, #12
 80075da:	46bd      	mov	sp, r7
 80075dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075e0:	4770      	bx	lr

080075e2 <_ZN8touchgfx8TextArea12setBaselineYEs>:
     *        changes you have to set the baseline again. Note that setTypedText must be called
     *        prior to setting the baseline.
     *
     * @param baselineY The y coordinate of the baseline.
     */
    virtual void setBaselineY(int16_t baselineY)
 80075e2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80075e4:	b085      	sub	sp, #20
 80075e6:	af00      	add	r7, sp, #0
 80075e8:	6078      	str	r0, [r7, #4]
 80075ea:	460b      	mov	r3, r1
 80075ec:	807b      	strh	r3, [r7, #2]
    {
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 80075ee:	687e      	ldr	r6, [r7, #4]
 80075f0:	687b      	ldr	r3, [r7, #4]
 80075f2:	681b      	ldr	r3, [r3, #0]
 80075f4:	3330      	adds	r3, #48	; 0x30
 80075f6:	681c      	ldr	r4, [r3, #0]
 80075f8:	887d      	ldrh	r5, [r7, #2]
 80075fa:	6878      	ldr	r0, [r7, #4]
 80075fc:	f000 f845 	bl	800768a <_ZNK8touchgfx8TextArea12getTypedTextEv>
 8007600:	4603      	mov	r3, r0
 8007602:	81bb      	strh	r3, [r7, #12]
 8007604:	f107 030c 	add.w	r3, r7, #12
 8007608:	4618      	mov	r0, r3
 800760a:	f7fe fd37 	bl	800607c <_ZNK8touchgfx9TypedText7getFontEv>
 800760e:	4602      	mov	r2, r0
 8007610:	6813      	ldr	r3, [r2, #0]
 8007612:	332c      	adds	r3, #44	; 0x2c
 8007614:	681b      	ldr	r3, [r3, #0]
 8007616:	4610      	mov	r0, r2
 8007618:	4798      	blx	r3
 800761a:	4603      	mov	r3, r0
 800761c:	1aeb      	subs	r3, r5, r3
 800761e:	b29b      	uxth	r3, r3
 8007620:	b21b      	sxth	r3, r3
 8007622:	4619      	mov	r1, r3
 8007624:	4630      	mov	r0, r6
 8007626:	47a0      	blx	r4
    }
 8007628:	bf00      	nop
 800762a:	3714      	adds	r7, #20
 800762c:	46bd      	mov	sp, r7
 800762e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007630 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     *        coordinate of the TextArea.
     *
     * @param x         The x coordinate of the TextArea.
     * @param baselineY The y coordinate of the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8007630:	b580      	push	{r7, lr}
 8007632:	b082      	sub	sp, #8
 8007634:	af00      	add	r7, sp, #0
 8007636:	6078      	str	r0, [r7, #4]
 8007638:	460b      	mov	r3, r1
 800763a:	807b      	strh	r3, [r7, #2]
 800763c:	4613      	mov	r3, r2
 800763e:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 8007640:	687a      	ldr	r2, [r7, #4]
 8007642:	687b      	ldr	r3, [r7, #4]
 8007644:	681b      	ldr	r3, [r3, #0]
 8007646:	332c      	adds	r3, #44	; 0x2c
 8007648:	681b      	ldr	r3, [r3, #0]
 800764a:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 800764e:	4610      	mov	r0, r2
 8007650:	4798      	blx	r3
        setBaselineY(baselineY);
 8007652:	687b      	ldr	r3, [r7, #4]
 8007654:	681b      	ldr	r3, [r3, #0]
 8007656:	3360      	adds	r3, #96	; 0x60
 8007658:	681b      	ldr	r3, [r3, #0]
 800765a:	f9b7 2000 	ldrsh.w	r2, [r7]
 800765e:	4611      	mov	r1, r2
 8007660:	6878      	ldr	r0, [r7, #4]
 8007662:	4798      	blx	r3
    }
 8007664:	bf00      	nop
 8007666:	3708      	adds	r7, #8
 8007668:	46bd      	mov	sp, r7
 800766a:	bd80      	pop	{r7, pc}

0800766c <_ZN8touchgfx8TextArea14setLinespacingEs>:
     *
     *        Sets the line spacing of the TextArea.
     *
     * @param space The line spacing of use in the TextArea.
     */
    inline void setLinespacing(int16_t space)
 800766c:	b480      	push	{r7}
 800766e:	b083      	sub	sp, #12
 8007670:	af00      	add	r7, sp, #0
 8007672:	6078      	str	r0, [r7, #4]
 8007674:	460b      	mov	r3, r1
 8007676:	807b      	strh	r3, [r7, #2]
    {
        linespace = space;
 8007678:	687b      	ldr	r3, [r7, #4]
 800767a:	887a      	ldrh	r2, [r7, #2]
 800767c:	859a      	strh	r2, [r3, #44]	; 0x2c
    }
 800767e:	bf00      	nop
 8007680:	370c      	adds	r7, #12
 8007682:	46bd      	mov	sp, r7
 8007684:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007688:	4770      	bx	lr

0800768a <_ZNK8touchgfx8TextArea12getTypedTextEv>:
     *
     *        Gets the TypedText of the text area.
     *
     * @return The currently used TypedText.
     */
    TypedText getTypedText() const
 800768a:	b480      	push	{r7}
 800768c:	b083      	sub	sp, #12
 800768e:	af00      	add	r7, sp, #0
 8007690:	6078      	str	r0, [r7, #4]
    {
        return typedText;
 8007692:	687b      	ldr	r3, [r7, #4]
 8007694:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
    }
 8007696:	4618      	mov	r0, r3
 8007698:	370c      	adds	r7, #12
 800769a:	46bd      	mov	sp, r7
 800769c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076a0:	4770      	bx	lr
	...

080076a4 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 80076a4:	b580      	push	{r7, lr}
 80076a6:	b082      	sub	sp, #8
 80076a8:	af00      	add	r7, sp, #0
 80076aa:	6078      	str	r0, [r7, #4]
 80076ac:	4a05      	ldr	r2, [pc, #20]	; (80076c4 <_ZN8touchgfx8TextAreaD1Ev+0x20>)
 80076ae:	687b      	ldr	r3, [r7, #4]
 80076b0:	601a      	str	r2, [r3, #0]
 80076b2:	687b      	ldr	r3, [r7, #4]
 80076b4:	4618      	mov	r0, r3
 80076b6:	f7ff fe95 	bl	80073e4 <_ZN8touchgfx6WidgetD1Ev>
 80076ba:	687b      	ldr	r3, [r7, #4]
 80076bc:	4618      	mov	r0, r3
 80076be:	3708      	adds	r7, #8
 80076c0:	46bd      	mov	sp, r7
 80076c2:	bd80      	pop	{r7, pc}
 80076c4:	0801e1e4 	.word	0x0801e1e4

080076c8 <_ZN8touchgfx8TextAreaD0Ev>:
 80076c8:	b580      	push	{r7, lr}
 80076ca:	b082      	sub	sp, #8
 80076cc:	af00      	add	r7, sp, #0
 80076ce:	6078      	str	r0, [r7, #4]
 80076d0:	6878      	ldr	r0, [r7, #4]
 80076d2:	f7ff ffe7 	bl	80076a4 <_ZN8touchgfx8TextAreaD1Ev>
 80076d6:	2134      	movs	r1, #52	; 0x34
 80076d8:	6878      	ldr	r0, [r7, #4]
 80076da:	f013 fd37 	bl	801b14c <_ZdlPvj>
 80076de:	687b      	ldr	r3, [r7, #4]
 80076e0:	4618      	mov	r0, r3
 80076e2:	3708      	adds	r7, #8
 80076e4:	46bd      	mov	sp, r7
 80076e6:	bd80      	pop	{r7, pc}

080076e8 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>:
     *
     *        Create an empty text area.
     *
     * @note No text can be displayed until a font is set. Default color is black.
     */
    TextAreaWithWildcardBase()
 80076e8:	b580      	push	{r7, lr}
 80076ea:	b082      	sub	sp, #8
 80076ec:	af00      	add	r7, sp, #0
 80076ee:	6078      	str	r0, [r7, #4]
        : TextArea()
 80076f0:	687b      	ldr	r3, [r7, #4]
 80076f2:	4618      	mov	r0, r3
 80076f4:	f7ff ff14 	bl	8007520 <_ZN8touchgfx8TextAreaC1Ev>
 80076f8:	4a03      	ldr	r2, [pc, #12]	; (8007708 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev+0x20>)
 80076fa:	687b      	ldr	r3, [r7, #4]
 80076fc:	601a      	str	r2, [r3, #0]
    {
    }
 80076fe:	687b      	ldr	r3, [r7, #4]
 8007700:	4618      	mov	r0, r3
 8007702:	3708      	adds	r7, #8
 8007704:	46bd      	mov	sp, r7
 8007706:	bd80      	pop	{r7, pc}
 8007708:	0801caac 	.word	0x0801caac

0800770c <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>:
class TextAreaWithWildcardBase : public TextArea
 800770c:	b580      	push	{r7, lr}
 800770e:	b082      	sub	sp, #8
 8007710:	af00      	add	r7, sp, #0
 8007712:	6078      	str	r0, [r7, #4]
 8007714:	4a05      	ldr	r2, [pc, #20]	; (800772c <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev+0x20>)
 8007716:	687b      	ldr	r3, [r7, #4]
 8007718:	601a      	str	r2, [r3, #0]
 800771a:	687b      	ldr	r3, [r7, #4]
 800771c:	4618      	mov	r0, r3
 800771e:	f7ff ffc1 	bl	80076a4 <_ZN8touchgfx8TextAreaD1Ev>
 8007722:	687b      	ldr	r3, [r7, #4]
 8007724:	4618      	mov	r0, r3
 8007726:	3708      	adds	r7, #8
 8007728:	46bd      	mov	sp, r7
 800772a:	bd80      	pop	{r7, pc}
 800772c:	0801caac 	.word	0x0801caac

08007730 <_ZN8touchgfx24TextAreaWithWildcardBaseD0Ev>:
 8007730:	b580      	push	{r7, lr}
 8007732:	b082      	sub	sp, #8
 8007734:	af00      	add	r7, sp, #0
 8007736:	6078      	str	r0, [r7, #4]
 8007738:	6878      	ldr	r0, [r7, #4]
 800773a:	f7ff ffe7 	bl	800770c <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800773e:	2134      	movs	r1, #52	; 0x34
 8007740:	6878      	ldr	r0, [r7, #4]
 8007742:	f013 fd03 	bl	801b14c <_ZdlPvj>
 8007746:	687b      	ldr	r3, [r7, #4]
 8007748:	4618      	mov	r0, r3
 800774a:	3708      	adds	r7, #8
 800774c:	46bd      	mov	sp, r7
 800774e:	bd80      	pop	{r7, pc}

08007750 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
     *
     *        Create an empty text area.
     *
     * @note No text can be displayed until a font is set. Default color is black.
     */
    TextAreaWithOneWildcard()
 8007750:	b580      	push	{r7, lr}
 8007752:	b082      	sub	sp, #8
 8007754:	af00      	add	r7, sp, #0
 8007756:	6078      	str	r0, [r7, #4]
        : TextAreaWithWildcardBase(), wildcard(0)
 8007758:	687b      	ldr	r3, [r7, #4]
 800775a:	4618      	mov	r0, r3
 800775c:	f7ff ffc4 	bl	80076e8 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>
 8007760:	4a05      	ldr	r2, [pc, #20]	; (8007778 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
 8007762:	687b      	ldr	r3, [r7, #4]
 8007764:	601a      	str	r2, [r3, #0]
 8007766:	687b      	ldr	r3, [r7, #4]
 8007768:	2200      	movs	r2, #0
 800776a:	635a      	str	r2, [r3, #52]	; 0x34
    {
    }
 800776c:	687b      	ldr	r3, [r7, #4]
 800776e:	4618      	mov	r0, r3
 8007770:	3708      	adds	r7, #8
 8007772:	46bd      	mov	sp, r7
 8007774:	bd80      	pop	{r7, pc}
 8007776:	bf00      	nop
 8007778:	0801e368 	.word	0x0801e368

0800777c <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     *
     *        Sets the wildcard in the text.Must be a zero-terminated UnicodeChar array.
     *
     * @param value A pointer to the UnicodeChar to set the wildcard to.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
 800777c:	b480      	push	{r7}
 800777e:	b083      	sub	sp, #12
 8007780:	af00      	add	r7, sp, #0
 8007782:	6078      	str	r0, [r7, #4]
 8007784:	6039      	str	r1, [r7, #0]
    {
        wildcard = value;
 8007786:	687b      	ldr	r3, [r7, #4]
 8007788:	683a      	ldr	r2, [r7, #0]
 800778a:	635a      	str	r2, [r3, #52]	; 0x34
    }
 800778c:	bf00      	nop
 800778e:	370c      	adds	r7, #12
 8007790:	46bd      	mov	sp, r7
 8007792:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007796:	4770      	bx	lr

08007798 <_ZN8touchgfx14AbstractButtonD1Ev>:
 *        clickable element that has two states - pressed or released - and executes an action
 *        when the pressed->released transition is made.
 *
 * @see Widget
 */
class AbstractButton : public Widget
 8007798:	b580      	push	{r7, lr}
 800779a:	b082      	sub	sp, #8
 800779c:	af00      	add	r7, sp, #0
 800779e:	6078      	str	r0, [r7, #4]
 80077a0:	4a05      	ldr	r2, [pc, #20]	; (80077b8 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 80077a2:	687b      	ldr	r3, [r7, #4]
 80077a4:	601a      	str	r2, [r3, #0]
 80077a6:	687b      	ldr	r3, [r7, #4]
 80077a8:	4618      	mov	r0, r3
 80077aa:	f7ff fe1b 	bl	80073e4 <_ZN8touchgfx6WidgetD1Ev>
 80077ae:	687b      	ldr	r3, [r7, #4]
 80077b0:	4618      	mov	r0, r3
 80077b2:	3708      	adds	r7, #8
 80077b4:	46bd      	mov	sp, r7
 80077b6:	bd80      	pop	{r7, pc}
 80077b8:	0801e108 	.word	0x0801e108

080077bc <_ZN8touchgfx14AbstractButtonD0Ev>:
 80077bc:	b580      	push	{r7, lr}
 80077be:	b082      	sub	sp, #8
 80077c0:	af00      	add	r7, sp, #0
 80077c2:	6078      	str	r0, [r7, #4]
 80077c4:	6878      	ldr	r0, [r7, #4]
 80077c6:	f7ff ffe7 	bl	8007798 <_ZN8touchgfx14AbstractButtonD1Ev>
 80077ca:	2130      	movs	r1, #48	; 0x30
 80077cc:	6878      	ldr	r0, [r7, #4]
 80077ce:	f013 fcbd 	bl	801b14c <_ZdlPvj>
 80077d2:	687b      	ldr	r3, [r7, #4]
 80077d4:	4618      	mov	r0, r3
 80077d6:	3708      	adds	r7, #8
 80077d8:	46bd      	mov	sp, r7
 80077da:	bd80      	pop	{r7, pc}

080077dc <_ZN8touchgfx6ButtonD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Button() { }
 80077dc:	b580      	push	{r7, lr}
 80077de:	b082      	sub	sp, #8
 80077e0:	af00      	add	r7, sp, #0
 80077e2:	6078      	str	r0, [r7, #4]
 80077e4:	4a05      	ldr	r2, [pc, #20]	; (80077fc <_ZN8touchgfx6ButtonD1Ev+0x20>)
 80077e6:	687b      	ldr	r3, [r7, #4]
 80077e8:	601a      	str	r2, [r3, #0]
 80077ea:	687b      	ldr	r3, [r7, #4]
 80077ec:	4618      	mov	r0, r3
 80077ee:	f7ff ffd3 	bl	8007798 <_ZN8touchgfx14AbstractButtonD1Ev>
 80077f2:	687b      	ldr	r3, [r7, #4]
 80077f4:	4618      	mov	r0, r3
 80077f6:	3708      	adds	r7, #8
 80077f8:	46bd      	mov	sp, r7
 80077fa:	bd80      	pop	{r7, pc}
 80077fc:	0801e2c4 	.word	0x0801e2c4

08007800 <_ZN8touchgfx6ButtonD0Ev>:
 8007800:	b580      	push	{r7, lr}
 8007802:	b082      	sub	sp, #8
 8007804:	af00      	add	r7, sp, #0
 8007806:	6078      	str	r0, [r7, #4]
 8007808:	6878      	ldr	r0, [r7, #4]
 800780a:	f7ff ffe7 	bl	80077dc <_ZN8touchgfx6ButtonD1Ev>
 800780e:	2134      	movs	r1, #52	; 0x34
 8007810:	6878      	ldr	r0, [r7, #4]
 8007812:	f013 fc9b 	bl	801b14c <_ZdlPvj>
 8007816:	687b      	ldr	r3, [r7, #4]
 8007818:	4618      	mov	r0, r3
 800781a:	3708      	adds	r7, #8
 800781c:	46bd      	mov	sp, r7
 800781e:	bd80      	pop	{r7, pc}

08007820 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
     * @param bmpReleased The bitmap to show in the "normal" state, ie when button is not pressed.
     * @param bmpPressed  The bitmap to show when the button is pressed.
     *
     * @see Button::setBitmaps
     */
    virtual void setBitmaps(const Bitmap& bmpReleased, const Bitmap& bmpPressed)
 8007820:	b580      	push	{r7, lr}
 8007822:	b084      	sub	sp, #16
 8007824:	af00      	add	r7, sp, #0
 8007826:	60f8      	str	r0, [r7, #12]
 8007828:	60b9      	str	r1, [r7, #8]
 800782a:	607a      	str	r2, [r7, #4]
    {
        originalPressed = bmpPressed;
 800782c:	68fb      	ldr	r3, [r7, #12]
 800782e:	687a      	ldr	r2, [r7, #4]
 8007830:	8812      	ldrh	r2, [r2, #0]
 8007832:	869a      	strh	r2, [r3, #52]	; 0x34
        Button::setBitmaps(bmpReleased, bmpPressed);
 8007834:	68fb      	ldr	r3, [r7, #12]
 8007836:	687a      	ldr	r2, [r7, #4]
 8007838:	68b9      	ldr	r1, [r7, #8]
 800783a:	4618      	mov	r0, r3
 800783c:	f004 fd98 	bl	800c370 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    }
 8007840:	bf00      	nop
 8007842:	3710      	adds	r7, #16
 8007844:	46bd      	mov	sp, r7
 8007846:	bd80      	pop	{r7, pc}

08007848 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>:
class View : public Screen
 8007848:	b580      	push	{r7, lr}
 800784a:	b082      	sub	sp, #8
 800784c:	af00      	add	r7, sp, #0
 800784e:	6078      	str	r0, [r7, #4]
 8007850:	4a05      	ldr	r2, [pc, #20]	; (8007868 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev+0x20>)
 8007852:	687b      	ldr	r3, [r7, #4]
 8007854:	601a      	str	r2, [r3, #0]
 8007856:	687b      	ldr	r3, [r7, #4]
 8007858:	4618      	mov	r0, r3
 800785a:	f7ff fd49 	bl	80072f0 <_ZN8touchgfx6ScreenD1Ev>
 800785e:	687b      	ldr	r3, [r7, #4]
 8007860:	4618      	mov	r0, r3
 8007862:	3708      	adds	r7, #8
 8007864:	46bd      	mov	sp, r7
 8007866:	bd80      	pop	{r7, pc}
 8007868:	0801ca78 	.word	0x0801ca78

0800786c <_ZN8touchgfx4ViewI16Screen1PresenterED0Ev>:
 800786c:	b580      	push	{r7, lr}
 800786e:	b082      	sub	sp, #8
 8007870:	af00      	add	r7, sp, #0
 8007872:	6078      	str	r0, [r7, #4]
 8007874:	6878      	ldr	r0, [r7, #4]
 8007876:	f7ff ffe7 	bl	8007848 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 800787a:	2140      	movs	r1, #64	; 0x40
 800787c:	6878      	ldr	r0, [r7, #4]
 800787e:	f013 fc65 	bl	801b14c <_ZdlPvj>
 8007882:	687b      	ldr	r3, [r7, #4]
 8007884:	4618      	mov	r0, r3
 8007886:	3708      	adds	r7, #8
 8007888:	46bd      	mov	sp, r7
 800788a:	bd80      	pop	{r7, pc}

0800788c <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 800788c:	b580      	push	{r7, lr}
 800788e:	b082      	sub	sp, #8
 8007890:	af00      	add	r7, sp, #0
 8007892:	6078      	str	r0, [r7, #4]
 8007894:	4a37      	ldr	r2, [pc, #220]	; (8007974 <_ZN15Screen1ViewBaseD1Ev+0xe8>)
 8007896:	687b      	ldr	r3, [r7, #4]
 8007898:	601a      	str	r2, [r3, #0]
 800789a:	687b      	ldr	r3, [r7, #4]
 800789c:	f203 53dc 	addw	r3, r3, #1500	; 0x5dc
 80078a0:	4618      	mov	r0, r3
 80078a2:	f000 fe05 	bl	80084b0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_6SliderEivED1Ev>
 80078a6:	687b      	ldr	r3, [r7, #4]
 80078a8:	f203 538c 	addw	r3, r3, #1420	; 0x58c
 80078ac:	4618      	mov	r0, r3
 80078ae:	f000 fe65 	bl	800857c <_ZN8touchgfx12ToggleButtonD1Ev>
 80078b2:	687b      	ldr	r3, [r7, #4]
 80078b4:	f503 63ab 	add.w	r3, r3, #1368	; 0x558
 80078b8:	4618      	mov	r0, r3
 80078ba:	f7ff fef3 	bl	80076a4 <_ZN8touchgfx8TextAreaD1Ev>
 80078be:	687b      	ldr	r3, [r7, #4]
 80078c0:	f203 435c 	addw	r3, r3, #1116	; 0x45c
 80078c4:	4618      	mov	r0, r3
 80078c6:	f003 fa53 	bl	800ad70 <_ZN8touchgfx6SliderD1Ev>
 80078ca:	687b      	ldr	r3, [r7, #4]
 80078cc:	f503 6386 	add.w	r3, r3, #1072	; 0x430
 80078d0:	4618      	mov	r0, r3
 80078d2:	f000 fe0f 	bl	80084f4 <_ZN8touchgfx5ImageD1Ev>
 80078d6:	687b      	ldr	r3, [r7, #4]
 80078d8:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 80078dc:	4618      	mov	r0, r3
 80078de:	f7ff fee1 	bl	80076a4 <_ZN8touchgfx8TextAreaD1Ev>
 80078e2:	687b      	ldr	r3, [r7, #4]
 80078e4:	f503 7371 	add.w	r3, r3, #964	; 0x3c4
 80078e8:	4618      	mov	r0, r3
 80078ea:	f000 fe25 	bl	8008538 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 80078ee:	687b      	ldr	r3, [r7, #4]
 80078f0:	f503 7363 	add.w	r3, r3, #908	; 0x38c
 80078f4:	4618      	mov	r0, r3
 80078f6:	f000 fe1f 	bl	8008538 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 80078fa:	687b      	ldr	r3, [r7, #4]
 80078fc:	f503 7324 	add.w	r3, r3, #656	; 0x290
 8007900:	4618      	mov	r0, r3
 8007902:	f003 fa35 	bl	800ad70 <_ZN8touchgfx6SliderD1Ev>
 8007906:	687b      	ldr	r3, [r7, #4]
 8007908:	f503 7319 	add.w	r3, r3, #612	; 0x264
 800790c:	4618      	mov	r0, r3
 800790e:	f7ff fccd 	bl	80072ac <_ZN8touchgfx9ContainerD1Ev>
 8007912:	687b      	ldr	r3, [r7, #4]
 8007914:	f503 730e 	add.w	r3, r3, #568	; 0x238
 8007918:	4618      	mov	r0, r3
 800791a:	f000 fdeb 	bl	80084f4 <_ZN8touchgfx5ImageD1Ev>
 800791e:	687b      	ldr	r3, [r7, #4]
 8007920:	f503 7301 	add.w	r3, r3, #516	; 0x204
 8007924:	4618      	mov	r0, r3
 8007926:	f7ff febd 	bl	80076a4 <_ZN8touchgfx8TextAreaD1Ev>
 800792a:	687b      	ldr	r3, [r7, #4]
 800792c:	f503 73e6 	add.w	r3, r3, #460	; 0x1cc
 8007930:	4618      	mov	r0, r3
 8007932:	f000 fe01 	bl	8008538 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 8007936:	687b      	ldr	r3, [r7, #4]
 8007938:	f503 73ca 	add.w	r3, r3, #404	; 0x194
 800793c:	4618      	mov	r0, r3
 800793e:	f000 fdfb 	bl	8008538 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 8007942:	687b      	ldr	r3, [r7, #4]
 8007944:	3398      	adds	r3, #152	; 0x98
 8007946:	4618      	mov	r0, r3
 8007948:	f003 fa12 	bl	800ad70 <_ZN8touchgfx6SliderD1Ev>
 800794c:	687b      	ldr	r3, [r7, #4]
 800794e:	336c      	adds	r3, #108	; 0x6c
 8007950:	4618      	mov	r0, r3
 8007952:	f7ff fcab 	bl	80072ac <_ZN8touchgfx9ContainerD1Ev>
 8007956:	687b      	ldr	r3, [r7, #4]
 8007958:	3340      	adds	r3, #64	; 0x40
 800795a:	4618      	mov	r0, r3
 800795c:	f000 fdca 	bl	80084f4 <_ZN8touchgfx5ImageD1Ev>
 8007960:	687b      	ldr	r3, [r7, #4]
 8007962:	4618      	mov	r0, r3
 8007964:	f7ff ff70 	bl	8007848 <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 8007968:	687b      	ldr	r3, [r7, #4]
 800796a:	4618      	mov	r0, r3
 800796c:	3708      	adds	r7, #8
 800796e:	46bd      	mov	sp, r7
 8007970:	bd80      	pop	{r7, pc}
 8007972:	bf00      	nop
 8007974:	0801ca2c 	.word	0x0801ca2c

08007978 <_ZN15Screen1ViewBaseD0Ev>:
 8007978:	b580      	push	{r7, lr}
 800797a:	b082      	sub	sp, #8
 800797c:	af00      	add	r7, sp, #0
 800797e:	6078      	str	r0, [r7, #4]
 8007980:	6878      	ldr	r0, [r7, #4]
 8007982:	f7ff ff83 	bl	800788c <_ZN15Screen1ViewBaseD1Ev>
 8007986:	f240 51ec 	movw	r1, #1516	; 0x5ec
 800798a:	6878      	ldr	r0, [r7, #4]
 800798c:	f013 fbde 	bl	801b14c <_ZdlPvj>
 8007990:	687b      	ldr	r3, [r7, #4]
 8007992:	4618      	mov	r0, r3
 8007994:	3708      	adds	r7, #8
 8007996:	46bd      	mov	sp, r7
 8007998:	bd80      	pop	{r7, pc}
	...

0800799c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     * @param green Value of the green part (0-255).
     * @param blue  Value of the blue part (0-255).
     *
     * @return The color representation depending on LCD color format.
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 800799c:	b590      	push	{r4, r7, lr}
 800799e:	b083      	sub	sp, #12
 80079a0:	af00      	add	r7, sp, #0
 80079a2:	4603      	mov	r3, r0
 80079a4:	71fb      	strb	r3, [r7, #7]
 80079a6:	460b      	mov	r3, r1
 80079a8:	71bb      	strb	r3, [r7, #6]
 80079aa:	4613      	mov	r3, r2
 80079ac:	717b      	strb	r3, [r7, #5]
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 80079ae:	f7fe fe73 	bl	8006698 <_ZN8touchgfx3HAL11getInstanceEv>
 80079b2:	4603      	mov	r3, r0
 80079b4:	2b00      	cmp	r3, #0
 80079b6:	d105      	bne.n	80079c4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x28>
 80079b8:	4b0a      	ldr	r3, [pc, #40]	; (80079e4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x48>)
 80079ba:	4a0b      	ldr	r2, [pc, #44]	; (80079e8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x4c>)
 80079bc:	2138      	movs	r1, #56	; 0x38
 80079be:	480b      	ldr	r0, [pc, #44]	; (80079ec <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x50>)
 80079c0:	f013 fbf0 	bl	801b1a4 <__assert_func>
 80079c4:	bf00      	nop
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 80079c6:	f7fe fe73 	bl	80066b0 <_ZN8touchgfx3HAL3lcdEv>
 80079ca:	6803      	ldr	r3, [r0, #0]
 80079cc:	332c      	adds	r3, #44	; 0x2c
 80079ce:	681c      	ldr	r4, [r3, #0]
 80079d0:	797b      	ldrb	r3, [r7, #5]
 80079d2:	79ba      	ldrb	r2, [r7, #6]
 80079d4:	79f9      	ldrb	r1, [r7, #7]
 80079d6:	47a0      	blx	r4
 80079d8:	4603      	mov	r3, r0
    }
 80079da:	4618      	mov	r0, r3
 80079dc:	370c      	adds	r7, #12
 80079de:	46bd      	mov	sp, r7
 80079e0:	bd90      	pop	{r4, r7, pc}
 80079e2:	bf00      	nop
 80079e4:	0801c59c 	.word	0x0801c59c
 80079e8:	0801cba0 	.word	0x0801cba0
 80079ec:	0801c5e0 	.word	0x0801c5e0

080079f0 <_ZN15Screen1ViewBaseC1Ev>:
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

Screen1ViewBase::Screen1ViewBase() :
 80079f0:	b590      	push	{r4, r7, lr}
 80079f2:	b0a3      	sub	sp, #140	; 0x8c
 80079f4:	af02      	add	r7, sp, #8
 80079f6:	6078      	str	r0, [r7, #4]
    sliderValueChangedCallback(this, &Screen1ViewBase::sliderValueChangedCallbackHandler)
 80079f8:	687b      	ldr	r3, [r7, #4]
 80079fa:	4618      	mov	r0, r3
 80079fc:	f000 fcf2 	bl	80083e4 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>
 8007a00:	4adc      	ldr	r2, [pc, #880]	; (8007d74 <_ZN15Screen1ViewBaseC1Ev+0x384>)
 8007a02:	687b      	ldr	r3, [r7, #4]
 8007a04:	601a      	str	r2, [r3, #0]
 8007a06:	687b      	ldr	r3, [r7, #4]
 8007a08:	f103 0440 	add.w	r4, r3, #64	; 0x40
 8007a0c:	f107 0308 	add.w	r3, r7, #8
 8007a10:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8007a14:	4618      	mov	r0, r3
 8007a16:	f7ff fab1 	bl	8006f7c <_ZN8touchgfx6BitmapC1Et>
 8007a1a:	f107 0308 	add.w	r3, r7, #8
 8007a1e:	4619      	mov	r1, r3
 8007a20:	4620      	mov	r0, r4
 8007a22:	f7ff fd25 	bl	8007470 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8007a26:	687b      	ldr	r3, [r7, #4]
 8007a28:	336c      	adds	r3, #108	; 0x6c
 8007a2a:	4618      	mov	r0, r3
 8007a2c:	f7ff fc28 	bl	8007280 <_ZN8touchgfx9ContainerC1Ev>
 8007a30:	687b      	ldr	r3, [r7, #4]
 8007a32:	3398      	adds	r3, #152	; 0x98
 8007a34:	4618      	mov	r0, r3
 8007a36:	f003 fbdd 	bl	800b1f4 <_ZN8touchgfx6SliderC1Ev>
 8007a3a:	687b      	ldr	r3, [r7, #4]
 8007a3c:	f503 73ca 	add.w	r3, r3, #404	; 0x194
 8007a40:	4618      	mov	r0, r3
 8007a42:	f7ff fe85 	bl	8007750 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8007a46:	687b      	ldr	r3, [r7, #4]
 8007a48:	f503 73e6 	add.w	r3, r3, #460	; 0x1cc
 8007a4c:	4618      	mov	r0, r3
 8007a4e:	f7ff fe7f 	bl	8007750 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8007a52:	687b      	ldr	r3, [r7, #4]
 8007a54:	f503 7301 	add.w	r3, r3, #516	; 0x204
 8007a58:	4618      	mov	r0, r3
 8007a5a:	f7ff fd61 	bl	8007520 <_ZN8touchgfx8TextAreaC1Ev>
 8007a5e:	687b      	ldr	r3, [r7, #4]
 8007a60:	f503 740e 	add.w	r4, r3, #568	; 0x238
 8007a64:	f107 030c 	add.w	r3, r7, #12
 8007a68:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8007a6c:	4618      	mov	r0, r3
 8007a6e:	f7ff fa85 	bl	8006f7c <_ZN8touchgfx6BitmapC1Et>
 8007a72:	f107 030c 	add.w	r3, r7, #12
 8007a76:	4619      	mov	r1, r3
 8007a78:	4620      	mov	r0, r4
 8007a7a:	f7ff fcf9 	bl	8007470 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8007a7e:	687b      	ldr	r3, [r7, #4]
 8007a80:	f503 7319 	add.w	r3, r3, #612	; 0x264
 8007a84:	4618      	mov	r0, r3
 8007a86:	f7ff fbfb 	bl	8007280 <_ZN8touchgfx9ContainerC1Ev>
 8007a8a:	687b      	ldr	r3, [r7, #4]
 8007a8c:	f503 7324 	add.w	r3, r3, #656	; 0x290
 8007a90:	4618      	mov	r0, r3
 8007a92:	f003 fbaf 	bl	800b1f4 <_ZN8touchgfx6SliderC1Ev>
 8007a96:	687b      	ldr	r3, [r7, #4]
 8007a98:	f503 7363 	add.w	r3, r3, #908	; 0x38c
 8007a9c:	4618      	mov	r0, r3
 8007a9e:	f7ff fe57 	bl	8007750 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8007aa2:	687b      	ldr	r3, [r7, #4]
 8007aa4:	f503 7371 	add.w	r3, r3, #964	; 0x3c4
 8007aa8:	4618      	mov	r0, r3
 8007aaa:	f7ff fe51 	bl	8007750 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8007aae:	687b      	ldr	r3, [r7, #4]
 8007ab0:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 8007ab4:	4618      	mov	r0, r3
 8007ab6:	f7ff fd33 	bl	8007520 <_ZN8touchgfx8TextAreaC1Ev>
 8007aba:	687b      	ldr	r3, [r7, #4]
 8007abc:	f503 6486 	add.w	r4, r3, #1072	; 0x430
 8007ac0:	f107 0310 	add.w	r3, r7, #16
 8007ac4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8007ac8:	4618      	mov	r0, r3
 8007aca:	f7ff fa57 	bl	8006f7c <_ZN8touchgfx6BitmapC1Et>
 8007ace:	f107 0310 	add.w	r3, r7, #16
 8007ad2:	4619      	mov	r1, r3
 8007ad4:	4620      	mov	r0, r4
 8007ad6:	f7ff fccb 	bl	8007470 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8007ada:	687b      	ldr	r3, [r7, #4]
 8007adc:	f203 435c 	addw	r3, r3, #1116	; 0x45c
 8007ae0:	4618      	mov	r0, r3
 8007ae2:	f003 fb87 	bl	800b1f4 <_ZN8touchgfx6SliderC1Ev>
 8007ae6:	687b      	ldr	r3, [r7, #4]
 8007ae8:	f503 63ab 	add.w	r3, r3, #1368	; 0x558
 8007aec:	4618      	mov	r0, r3
 8007aee:	f7ff fd17 	bl	8007520 <_ZN8touchgfx8TextAreaC1Ev>
 8007af2:	687b      	ldr	r3, [r7, #4]
 8007af4:	f203 538c 	addw	r3, r3, #1420	; 0x58c
 8007af8:	4618      	mov	r0, r3
 8007afa:	f004 fb05 	bl	800c108 <_ZN8touchgfx12ToggleButtonC1Ev>
 8007afe:	687b      	ldr	r3, [r7, #4]
 8007b00:	f203 50dc 	addw	r0, r3, #1500	; 0x5dc
 8007b04:	4b9c      	ldr	r3, [pc, #624]	; (8007d78 <_ZN15Screen1ViewBaseC1Ev+0x388>)
 8007b06:	617b      	str	r3, [r7, #20]
 8007b08:	2300      	movs	r3, #0
 8007b0a:	61bb      	str	r3, [r7, #24]
 8007b0c:	f107 0314 	add.w	r3, r7, #20
 8007b10:	cb0c      	ldmia	r3, {r2, r3}
 8007b12:	6879      	ldr	r1, [r7, #4]
 8007b14:	f000 fc8c 	bl	8008430 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_6SliderEivEC1EPS1_MS1_FvS4_iE>
{

    image1.setXY(0, 0);
 8007b18:	687b      	ldr	r3, [r7, #4]
 8007b1a:	3340      	adds	r3, #64	; 0x40
 8007b1c:	2200      	movs	r2, #0
 8007b1e:	2100      	movs	r1, #0
 8007b20:	4618      	mov	r0, r3
 8007b22:	f7ff fad4 	bl	80070ce <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BG_IMAGE_ID));
 8007b26:	687b      	ldr	r3, [r7, #4]
 8007b28:	f103 0440 	add.w	r4, r3, #64	; 0x40
 8007b2c:	f107 031c 	add.w	r3, r7, #28
 8007b30:	2100      	movs	r1, #0
 8007b32:	4618      	mov	r0, r3
 8007b34:	f7ff fa22 	bl	8006f7c <_ZN8touchgfx6BitmapC1Et>
 8007b38:	f107 031c 	add.w	r3, r7, #28
 8007b3c:	4619      	mov	r1, r3
 8007b3e:	4620      	mov	r0, r4
 8007b40:	f004 fd5a 	bl	800c5f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>

    container1.setPosition(137, 83, 82, 148);
 8007b44:	687b      	ldr	r3, [r7, #4]
 8007b46:	f103 006c 	add.w	r0, r3, #108	; 0x6c
 8007b4a:	2394      	movs	r3, #148	; 0x94
 8007b4c:	9300      	str	r3, [sp, #0]
 8007b4e:	2352      	movs	r3, #82	; 0x52
 8007b50:	2253      	movs	r2, #83	; 0x53
 8007b52:	2189      	movs	r1, #137	; 0x89
 8007b54:	f7ff fa70 	bl	8007038 <_ZN8touchgfx8Drawable11setPositionEssss>

    slider_strength.setXY(0, 4);
 8007b58:	687b      	ldr	r3, [r7, #4]
 8007b5a:	3398      	adds	r3, #152	; 0x98
 8007b5c:	2204      	movs	r2, #4
 8007b5e:	2100      	movs	r1, #0
 8007b60:	4618      	mov	r0, r3
 8007b62:	f7ff fab4 	bl	80070ce <_ZN8touchgfx8Drawable5setXYEss>
    slider_strength.setBitmaps(touchgfx::Bitmap(BITMAP_CUSTOM_SLIDER_SPEED_BG_ID), touchgfx::Bitmap(BITMAP_SLIDER_SPEED_FRONT_ID), touchgfx::Bitmap(BITMAP_CUSTOM_SLIDER_SPEED_BUTTON_ID));
 8007b66:	687b      	ldr	r3, [r7, #4]
 8007b68:	f103 0498 	add.w	r4, r3, #152	; 0x98
 8007b6c:	f107 0320 	add.w	r3, r7, #32
 8007b70:	2104      	movs	r1, #4
 8007b72:	4618      	mov	r0, r3
 8007b74:	f7ff fa02 	bl	8006f7c <_ZN8touchgfx6BitmapC1Et>
 8007b78:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8007b7c:	210e      	movs	r1, #14
 8007b7e:	4618      	mov	r0, r3
 8007b80:	f7ff f9fc 	bl	8006f7c <_ZN8touchgfx6BitmapC1Et>
 8007b84:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8007b88:	2105      	movs	r1, #5
 8007b8a:	4618      	mov	r0, r3
 8007b8c:	f7ff f9f6 	bl	8006f7c <_ZN8touchgfx6BitmapC1Et>
 8007b90:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8007b94:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8007b98:	f107 0120 	add.w	r1, r7, #32
 8007b9c:	4620      	mov	r0, r4
 8007b9e:	f003 fb7d 	bl	800b29c <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    slider_strength.setupVerticalSlider(2, 3, 5, 0, 142);
 8007ba2:	687b      	ldr	r3, [r7, #4]
 8007ba4:	f103 0098 	add.w	r0, r3, #152	; 0x98
 8007ba8:	238e      	movs	r3, #142	; 0x8e
 8007baa:	9301      	str	r3, [sp, #4]
 8007bac:	2300      	movs	r3, #0
 8007bae:	9300      	str	r3, [sp, #0]
 8007bb0:	2305      	movs	r3, #5
 8007bb2:	2203      	movs	r2, #3
 8007bb4:	2102      	movs	r1, #2
 8007bb6:	f003 fa4f 	bl	800b058 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt>
    slider_strength.setValueRange(0, 50);
 8007bba:	687b      	ldr	r3, [r7, #4]
 8007bbc:	3398      	adds	r3, #152	; 0x98
 8007bbe:	2232      	movs	r2, #50	; 0x32
 8007bc0:	2100      	movs	r1, #0
 8007bc2:	4618      	mov	r0, r3
 8007bc4:	f003 f949 	bl	800ae5a <_ZN8touchgfx6Slider13setValueRangeEii>
    slider_strength.setValue(0);
 8007bc8:	687b      	ldr	r3, [r7, #4]
 8007bca:	3398      	adds	r3, #152	; 0x98
 8007bcc:	2100      	movs	r1, #0
 8007bce:	4618      	mov	r0, r3
 8007bd0:	f003 f8cf 	bl	800ad72 <_ZN8touchgfx6Slider8setValueEi>
    slider_strength.setNewValueCallback(sliderValueChangedCallback);
 8007bd4:	687b      	ldr	r3, [r7, #4]
 8007bd6:	f103 0298 	add.w	r2, r3, #152	; 0x98
 8007bda:	687b      	ldr	r3, [r7, #4]
 8007bdc:	f203 53dc 	addw	r3, r3, #1500	; 0x5dc
 8007be0:	4619      	mov	r1, r3
 8007be2:	4610      	mov	r0, r2
 8007be4:	f7ff fc66 	bl	80074b4 <_ZN8touchgfx6Slider19setNewValueCallbackERNS_15GenericCallbackIRKS0_ivEE>
    container1.add(slider_strength);
 8007be8:	687b      	ldr	r3, [r7, #4]
 8007bea:	f103 026c 	add.w	r2, r3, #108	; 0x6c
 8007bee:	687b      	ldr	r3, [r7, #4]
 8007bf0:	3398      	adds	r3, #152	; 0x98
 8007bf2:	4619      	mov	r1, r3
 8007bf4:	4610      	mov	r0, r2
 8007bf6:	f002 ff7d 	bl	800aaf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    textArea_strength_low.setXY(29, 77);
 8007bfa:	687b      	ldr	r3, [r7, #4]
 8007bfc:	f503 73ca 	add.w	r3, r3, #404	; 0x194
 8007c00:	224d      	movs	r2, #77	; 0x4d
 8007c02:	211d      	movs	r1, #29
 8007c04:	4618      	mov	r0, r3
 8007c06:	f7ff fa62 	bl	80070ce <_ZN8touchgfx8Drawable5setXYEss>
    textArea_strength_low.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8007c0a:	687b      	ldr	r3, [r7, #4]
 8007c0c:	f503 74ca 	add.w	r4, r3, #404	; 0x194
 8007c10:	22ff      	movs	r2, #255	; 0xff
 8007c12:	21ff      	movs	r1, #255	; 0xff
 8007c14:	20ff      	movs	r0, #255	; 0xff
 8007c16:	f7ff fec1 	bl	800799c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8007c1a:	4603      	mov	r3, r0
 8007c1c:	4619      	mov	r1, r3
 8007c1e:	4620      	mov	r0, r4
 8007c20:	f7ff fcc1 	bl	80075a6 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea_strength_low.setLinespacing(0);
 8007c24:	687b      	ldr	r3, [r7, #4]
 8007c26:	f503 73ca 	add.w	r3, r3, #404	; 0x194
 8007c2a:	2100      	movs	r1, #0
 8007c2c:	4618      	mov	r0, r3
 8007c2e:	f7ff fd1d 	bl	800766c <_ZN8touchgfx8TextArea14setLinespacingEs>
    Unicode::snprintf(textArea_strength_lowBuffer, TEXTAREA_STRENGTH_LOW_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID13).getText());
 8007c32:	687b      	ldr	r3, [r7, #4]
 8007c34:	f203 54c4 	addw	r4, r3, #1476	; 0x5c4
 8007c38:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8007c3c:	2109      	movs	r1, #9
 8007c3e:	4618      	mov	r0, r3
 8007c40:	f7ff fc47 	bl	80074d2 <_ZN8touchgfx9TypedTextC1Et>
 8007c44:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8007c48:	4618      	mov	r0, r3
 8007c4a:	f7ff fc53 	bl	80074f4 <_ZNK8touchgfx9TypedText7getTextEv>
 8007c4e:	4603      	mov	r3, r0
 8007c50:	4a4a      	ldr	r2, [pc, #296]	; (8007d7c <_ZN15Screen1ViewBaseC1Ev+0x38c>)
 8007c52:	2103      	movs	r1, #3
 8007c54:	4620      	mov	r0, r4
 8007c56:	f007 fd19 	bl	800f68c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_strength_low.setWildcard(textArea_strength_lowBuffer);
 8007c5a:	687b      	ldr	r3, [r7, #4]
 8007c5c:	f503 72ca 	add.w	r2, r3, #404	; 0x194
 8007c60:	687b      	ldr	r3, [r7, #4]
 8007c62:	f203 53c4 	addw	r3, r3, #1476	; 0x5c4
 8007c66:	4619      	mov	r1, r3
 8007c68:	4610      	mov	r0, r2
 8007c6a:	f7ff fd87 	bl	800777c <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    textArea_strength_low.resizeToCurrentText();
 8007c6e:	687b      	ldr	r3, [r7, #4]
 8007c70:	f503 73ca 	add.w	r3, r3, #404	; 0x194
 8007c74:	4618      	mov	r0, r3
 8007c76:	f004 fb47 	bl	800c308 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    textArea_strength_low.setTypedText(touchgfx::TypedText(T_SINGLEUSEID6));
 8007c7a:	687b      	ldr	r3, [r7, #4]
 8007c7c:	f503 74ca 	add.w	r4, r3, #404	; 0x194
 8007c80:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8007c84:	2102      	movs	r1, #2
 8007c86:	4618      	mov	r0, r3
 8007c88:	f7ff fc23 	bl	80074d2 <_ZN8touchgfx9TypedTextC1Et>
 8007c8c:	8e39      	ldrh	r1, [r7, #48]	; 0x30
 8007c8e:	4620      	mov	r0, r4
 8007c90:	f004 fb64 	bl	800c35c <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container1.add(textArea_strength_low);
 8007c94:	687b      	ldr	r3, [r7, #4]
 8007c96:	f103 026c 	add.w	r2, r3, #108	; 0x6c
 8007c9a:	687b      	ldr	r3, [r7, #4]
 8007c9c:	f503 73ca 	add.w	r3, r3, #404	; 0x194
 8007ca0:	4619      	mov	r1, r3
 8007ca2:	4610      	mov	r0, r2
 8007ca4:	f002 ff26 	bl	800aaf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    textArea_strength_height.setXY(6, 67);
 8007ca8:	687b      	ldr	r3, [r7, #4]
 8007caa:	f503 73e6 	add.w	r3, r3, #460	; 0x1cc
 8007cae:	2243      	movs	r2, #67	; 0x43
 8007cb0:	2106      	movs	r1, #6
 8007cb2:	4618      	mov	r0, r3
 8007cb4:	f7ff fa0b 	bl	80070ce <_ZN8touchgfx8Drawable5setXYEss>
    textArea_strength_height.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8007cb8:	687b      	ldr	r3, [r7, #4]
 8007cba:	f503 74e6 	add.w	r4, r3, #460	; 0x1cc
 8007cbe:	22ff      	movs	r2, #255	; 0xff
 8007cc0:	21ff      	movs	r1, #255	; 0xff
 8007cc2:	20ff      	movs	r0, #255	; 0xff
 8007cc4:	f7ff fe6a 	bl	800799c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8007cc8:	4603      	mov	r3, r0
 8007cca:	4619      	mov	r1, r3
 8007ccc:	4620      	mov	r0, r4
 8007cce:	f7ff fc6a 	bl	80075a6 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea_strength_height.setLinespacing(0);
 8007cd2:	687b      	ldr	r3, [r7, #4]
 8007cd4:	f503 73e6 	add.w	r3, r3, #460	; 0x1cc
 8007cd8:	2100      	movs	r1, #0
 8007cda:	4618      	mov	r0, r3
 8007cdc:	f7ff fcc6 	bl	800766c <_ZN8touchgfx8TextArea14setLinespacingEs>
    Unicode::snprintf(textArea_strength_heightBuffer, TEXTAREA_STRENGTH_HEIGHT_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID12).getText());
 8007ce0:	687b      	ldr	r3, [r7, #4]
 8007ce2:	f203 54ca 	addw	r4, r3, #1482	; 0x5ca
 8007ce6:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8007cea:	2108      	movs	r1, #8
 8007cec:	4618      	mov	r0, r3
 8007cee:	f7ff fbf0 	bl	80074d2 <_ZN8touchgfx9TypedTextC1Et>
 8007cf2:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8007cf6:	4618      	mov	r0, r3
 8007cf8:	f7ff fbfc 	bl	80074f4 <_ZNK8touchgfx9TypedText7getTextEv>
 8007cfc:	4603      	mov	r3, r0
 8007cfe:	4a1f      	ldr	r2, [pc, #124]	; (8007d7c <_ZN15Screen1ViewBaseC1Ev+0x38c>)
 8007d00:	2103      	movs	r1, #3
 8007d02:	4620      	mov	r0, r4
 8007d04:	f007 fcc2 	bl	800f68c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_strength_height.setWildcard(textArea_strength_heightBuffer);
 8007d08:	687b      	ldr	r3, [r7, #4]
 8007d0a:	f503 72e6 	add.w	r2, r3, #460	; 0x1cc
 8007d0e:	687b      	ldr	r3, [r7, #4]
 8007d10:	f203 53ca 	addw	r3, r3, #1482	; 0x5ca
 8007d14:	4619      	mov	r1, r3
 8007d16:	4610      	mov	r0, r2
 8007d18:	f7ff fd30 	bl	800777c <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    textArea_strength_height.resizeToCurrentText();
 8007d1c:	687b      	ldr	r3, [r7, #4]
 8007d1e:	f503 73e6 	add.w	r3, r3, #460	; 0x1cc
 8007d22:	4618      	mov	r0, r3
 8007d24:	f004 faf0 	bl	800c308 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    textArea_strength_height.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));
 8007d28:	687b      	ldr	r3, [r7, #4]
 8007d2a:	f503 74e6 	add.w	r4, r3, #460	; 0x1cc
 8007d2e:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8007d32:	2101      	movs	r1, #1
 8007d34:	4618      	mov	r0, r3
 8007d36:	f7ff fbcc 	bl	80074d2 <_ZN8touchgfx9TypedTextC1Et>
 8007d3a:	8f39      	ldrh	r1, [r7, #56]	; 0x38
 8007d3c:	4620      	mov	r0, r4
 8007d3e:	f004 fb0d 	bl	800c35c <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container1.add(textArea_strength_height);
 8007d42:	687b      	ldr	r3, [r7, #4]
 8007d44:	f103 026c 	add.w	r2, r3, #108	; 0x6c
 8007d48:	687b      	ldr	r3, [r7, #4]
 8007d4a:	f503 73e6 	add.w	r3, r3, #460	; 0x1cc
 8007d4e:	4619      	mov	r1, r3
 8007d50:	4610      	mov	r0, r2
 8007d52:	f002 fecf 	bl	800aaf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    textArea3.setXY(6, 45);
 8007d56:	687b      	ldr	r3, [r7, #4]
 8007d58:	f503 7301 	add.w	r3, r3, #516	; 0x204
 8007d5c:	222d      	movs	r2, #45	; 0x2d
 8007d5e:	2106      	movs	r1, #6
 8007d60:	4618      	mov	r0, r3
 8007d62:	f7ff f9b4 	bl	80070ce <_ZN8touchgfx8Drawable5setXYEss>
    textArea3.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8007d66:	687b      	ldr	r3, [r7, #4]
 8007d68:	f503 7401 	add.w	r4, r3, #516	; 0x204
 8007d6c:	22ff      	movs	r2, #255	; 0xff
 8007d6e:	21ff      	movs	r1, #255	; 0xff
 8007d70:	20ff      	movs	r0, #255	; 0xff
 8007d72:	e005      	b.n	8007d80 <_ZN15Screen1ViewBaseC1Ev+0x390>
 8007d74:	0801ca2c 	.word	0x0801ca2c
 8007d78:	08008285 	.word	0x08008285
 8007d7c:	0801c620 	.word	0x0801c620
 8007d80:	f7ff fe0c 	bl	800799c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8007d84:	4603      	mov	r3, r0
 8007d86:	4619      	mov	r1, r3
 8007d88:	4620      	mov	r0, r4
 8007d8a:	f7ff fc0c 	bl	80075a6 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea3.setLinespacing(0);
 8007d8e:	687b      	ldr	r3, [r7, #4]
 8007d90:	f503 7301 	add.w	r3, r3, #516	; 0x204
 8007d94:	2100      	movs	r1, #0
 8007d96:	4618      	mov	r0, r3
 8007d98:	f7ff fc68 	bl	800766c <_ZN8touchgfx8TextArea14setLinespacingEs>
    textArea3.setAlpha(219);
 8007d9c:	687b      	ldr	r3, [r7, #4]
 8007d9e:	f503 7301 	add.w	r3, r3, #516	; 0x204
 8007da2:	21db      	movs	r1, #219	; 0xdb
 8007da4:	4618      	mov	r0, r3
 8007da6:	f7ff fc0c 	bl	80075c2 <_ZN8touchgfx8TextArea8setAlphaEh>
    textArea3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID4));
 8007daa:	687b      	ldr	r3, [r7, #4]
 8007dac:	f503 7401 	add.w	r4, r3, #516	; 0x204
 8007db0:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8007db4:	2100      	movs	r1, #0
 8007db6:	4618      	mov	r0, r3
 8007db8:	f7ff fb8b 	bl	80074d2 <_ZN8touchgfx9TypedTextC1Et>
 8007dbc:	8fb9      	ldrh	r1, [r7, #60]	; 0x3c
 8007dbe:	4620      	mov	r0, r4
 8007dc0:	f004 facc 	bl	800c35c <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container1.add(textArea3);
 8007dc4:	687b      	ldr	r3, [r7, #4]
 8007dc6:	f103 026c 	add.w	r2, r3, #108	; 0x6c
 8007dca:	687b      	ldr	r3, [r7, #4]
 8007dcc:	f503 7301 	add.w	r3, r3, #516	; 0x204
 8007dd0:	4619      	mov	r1, r3
 8007dd2:	4610      	mov	r0, r2
 8007dd4:	f002 fe8e 	bl	800aaf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    image2.setXY(6, 24);
 8007dd8:	687b      	ldr	r3, [r7, #4]
 8007dda:	f503 730e 	add.w	r3, r3, #568	; 0x238
 8007dde:	2218      	movs	r2, #24
 8007de0:	2106      	movs	r1, #6
 8007de2:	4618      	mov	r0, r3
 8007de4:	f7ff f973 	bl	80070ce <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_PLAY_IC_ID));
 8007de8:	687b      	ldr	r3, [r7, #4]
 8007dea:	f503 740e 	add.w	r4, r3, #568	; 0x238
 8007dee:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8007df2:	2109      	movs	r1, #9
 8007df4:	4618      	mov	r0, r3
 8007df6:	f7ff f8c1 	bl	8006f7c <_ZN8touchgfx6BitmapC1Et>
 8007dfa:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8007dfe:	4619      	mov	r1, r3
 8007e00:	4620      	mov	r0, r4
 8007e02:	f004 fbf9 	bl	800c5f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    container1.add(image2);
 8007e06:	687b      	ldr	r3, [r7, #4]
 8007e08:	f103 026c 	add.w	r2, r3, #108	; 0x6c
 8007e0c:	687b      	ldr	r3, [r7, #4]
 8007e0e:	f503 730e 	add.w	r3, r3, #568	; 0x238
 8007e12:	4619      	mov	r1, r3
 8007e14:	4610      	mov	r0, r2
 8007e16:	f002 fe6d 	bl	800aaf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    container1_1.setPosition(30, 83, 81, 148);
 8007e1a:	687b      	ldr	r3, [r7, #4]
 8007e1c:	f503 7019 	add.w	r0, r3, #612	; 0x264
 8007e20:	2394      	movs	r3, #148	; 0x94
 8007e22:	9300      	str	r3, [sp, #0]
 8007e24:	2351      	movs	r3, #81	; 0x51
 8007e26:	2253      	movs	r2, #83	; 0x53
 8007e28:	211e      	movs	r1, #30
 8007e2a:	f7ff f905 	bl	8007038 <_ZN8touchgfx8Drawable11setPositionEssss>

    slider_speed.setXY(0, 3);
 8007e2e:	687b      	ldr	r3, [r7, #4]
 8007e30:	f503 7324 	add.w	r3, r3, #656	; 0x290
 8007e34:	2203      	movs	r2, #3
 8007e36:	2100      	movs	r1, #0
 8007e38:	4618      	mov	r0, r3
 8007e3a:	f7ff f948 	bl	80070ce <_ZN8touchgfx8Drawable5setXYEss>
    slider_speed.setBitmaps(touchgfx::Bitmap(BITMAP_CUSTOM_SLIDER_SPEED_BG_ID), touchgfx::Bitmap(BITMAP_CUSTOM_SLIDER_SPEED_FRONT_ID), touchgfx::Bitmap(BITMAP_CUSTOM_SLIDER_SPEED_BUTTON_ID));
 8007e3e:	687b      	ldr	r3, [r7, #4]
 8007e40:	f503 7424 	add.w	r4, r3, #656	; 0x290
 8007e44:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8007e48:	2104      	movs	r1, #4
 8007e4a:	4618      	mov	r0, r3
 8007e4c:	f7ff f896 	bl	8006f7c <_ZN8touchgfx6BitmapC1Et>
 8007e50:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8007e54:	2106      	movs	r1, #6
 8007e56:	4618      	mov	r0, r3
 8007e58:	f7ff f890 	bl	8006f7c <_ZN8touchgfx6BitmapC1Et>
 8007e5c:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8007e60:	2105      	movs	r1, #5
 8007e62:	4618      	mov	r0, r3
 8007e64:	f7ff f88a 	bl	8006f7c <_ZN8touchgfx6BitmapC1Et>
 8007e68:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8007e6c:	f107 0248 	add.w	r2, r7, #72	; 0x48
 8007e70:	f107 0144 	add.w	r1, r7, #68	; 0x44
 8007e74:	4620      	mov	r0, r4
 8007e76:	f003 fa11 	bl	800b29c <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    slider_speed.setupVerticalSlider(0, 3, 5, 0, 143);
 8007e7a:	687b      	ldr	r3, [r7, #4]
 8007e7c:	f503 7024 	add.w	r0, r3, #656	; 0x290
 8007e80:	238f      	movs	r3, #143	; 0x8f
 8007e82:	9301      	str	r3, [sp, #4]
 8007e84:	2300      	movs	r3, #0
 8007e86:	9300      	str	r3, [sp, #0]
 8007e88:	2305      	movs	r3, #5
 8007e8a:	2203      	movs	r2, #3
 8007e8c:	2100      	movs	r1, #0
 8007e8e:	f003 f8e3 	bl	800b058 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt>
    slider_speed.setValueRange(0, 50);
 8007e92:	687b      	ldr	r3, [r7, #4]
 8007e94:	f503 7324 	add.w	r3, r3, #656	; 0x290
 8007e98:	2232      	movs	r2, #50	; 0x32
 8007e9a:	2100      	movs	r1, #0
 8007e9c:	4618      	mov	r0, r3
 8007e9e:	f002 ffdc 	bl	800ae5a <_ZN8touchgfx6Slider13setValueRangeEii>
    slider_speed.setValue(0);
 8007ea2:	687b      	ldr	r3, [r7, #4]
 8007ea4:	f503 7324 	add.w	r3, r3, #656	; 0x290
 8007ea8:	2100      	movs	r1, #0
 8007eaa:	4618      	mov	r0, r3
 8007eac:	f002 ff61 	bl	800ad72 <_ZN8touchgfx6Slider8setValueEi>
    slider_speed.setNewValueCallback(sliderValueChangedCallback);
 8007eb0:	687b      	ldr	r3, [r7, #4]
 8007eb2:	f503 7224 	add.w	r2, r3, #656	; 0x290
 8007eb6:	687b      	ldr	r3, [r7, #4]
 8007eb8:	f203 53dc 	addw	r3, r3, #1500	; 0x5dc
 8007ebc:	4619      	mov	r1, r3
 8007ebe:	4610      	mov	r0, r2
 8007ec0:	f7ff faf8 	bl	80074b4 <_ZN8touchgfx6Slider19setNewValueCallbackERNS_15GenericCallbackIRKS0_ivEE>
    container1_1.add(slider_speed);
 8007ec4:	687b      	ldr	r3, [r7, #4]
 8007ec6:	f503 7219 	add.w	r2, r3, #612	; 0x264
 8007eca:	687b      	ldr	r3, [r7, #4]
 8007ecc:	f503 7324 	add.w	r3, r3, #656	; 0x290
 8007ed0:	4619      	mov	r1, r3
 8007ed2:	4610      	mov	r0, r2
 8007ed4:	f002 fe0e 	bl	800aaf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    textArea_speed_low.setXY(29, 77);
 8007ed8:	687b      	ldr	r3, [r7, #4]
 8007eda:	f503 7363 	add.w	r3, r3, #908	; 0x38c
 8007ede:	224d      	movs	r2, #77	; 0x4d
 8007ee0:	211d      	movs	r1, #29
 8007ee2:	4618      	mov	r0, r3
 8007ee4:	f7ff f8f3 	bl	80070ce <_ZN8touchgfx8Drawable5setXYEss>
    textArea_speed_low.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8007ee8:	687b      	ldr	r3, [r7, #4]
 8007eea:	f503 7463 	add.w	r4, r3, #908	; 0x38c
 8007eee:	22ff      	movs	r2, #255	; 0xff
 8007ef0:	21ff      	movs	r1, #255	; 0xff
 8007ef2:	20ff      	movs	r0, #255	; 0xff
 8007ef4:	f7ff fd52 	bl	800799c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8007ef8:	4603      	mov	r3, r0
 8007efa:	4619      	mov	r1, r3
 8007efc:	4620      	mov	r0, r4
 8007efe:	f7ff fb52 	bl	80075a6 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea_speed_low.setLinespacing(0);
 8007f02:	687b      	ldr	r3, [r7, #4]
 8007f04:	f503 7363 	add.w	r3, r3, #908	; 0x38c
 8007f08:	2100      	movs	r1, #0
 8007f0a:	4618      	mov	r0, r3
 8007f0c:	f7ff fbae 	bl	800766c <_ZN8touchgfx8TextArea14setLinespacingEs>
    Unicode::snprintf(textArea_speed_lowBuffer, TEXTAREA_SPEED_LOW_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID11).getText());
 8007f10:	687b      	ldr	r3, [r7, #4]
 8007f12:	f503 64ba 	add.w	r4, r3, #1488	; 0x5d0
 8007f16:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8007f1a:	2107      	movs	r1, #7
 8007f1c:	4618      	mov	r0, r3
 8007f1e:	f7ff fad8 	bl	80074d2 <_ZN8touchgfx9TypedTextC1Et>
 8007f22:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8007f26:	4618      	mov	r0, r3
 8007f28:	f7ff fae4 	bl	80074f4 <_ZNK8touchgfx9TypedText7getTextEv>
 8007f2c:	4603      	mov	r3, r0
 8007f2e:	4acf      	ldr	r2, [pc, #828]	; (800826c <_ZN15Screen1ViewBaseC1Ev+0x87c>)
 8007f30:	2103      	movs	r1, #3
 8007f32:	4620      	mov	r0, r4
 8007f34:	f007 fbaa 	bl	800f68c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_speed_low.setWildcard(textArea_speed_lowBuffer);
 8007f38:	687b      	ldr	r3, [r7, #4]
 8007f3a:	f503 7263 	add.w	r2, r3, #908	; 0x38c
 8007f3e:	687b      	ldr	r3, [r7, #4]
 8007f40:	f503 63ba 	add.w	r3, r3, #1488	; 0x5d0
 8007f44:	4619      	mov	r1, r3
 8007f46:	4610      	mov	r0, r2
 8007f48:	f7ff fc18 	bl	800777c <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    textArea_speed_low.resizeToCurrentText();
 8007f4c:	687b      	ldr	r3, [r7, #4]
 8007f4e:	f503 7363 	add.w	r3, r3, #908	; 0x38c
 8007f52:	4618      	mov	r0, r3
 8007f54:	f004 f9d8 	bl	800c308 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    textArea_speed_low.setTypedText(touchgfx::TypedText(T_SINGLEUSEID7));
 8007f58:	687b      	ldr	r3, [r7, #4]
 8007f5a:	f503 7463 	add.w	r4, r3, #908	; 0x38c
 8007f5e:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8007f62:	2103      	movs	r1, #3
 8007f64:	4618      	mov	r0, r3
 8007f66:	f7ff fab4 	bl	80074d2 <_ZN8touchgfx9TypedTextC1Et>
 8007f6a:	f8b7 1054 	ldrh.w	r1, [r7, #84]	; 0x54
 8007f6e:	4620      	mov	r0, r4
 8007f70:	f004 f9f4 	bl	800c35c <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container1_1.add(textArea_speed_low);
 8007f74:	687b      	ldr	r3, [r7, #4]
 8007f76:	f503 7219 	add.w	r2, r3, #612	; 0x264
 8007f7a:	687b      	ldr	r3, [r7, #4]
 8007f7c:	f503 7363 	add.w	r3, r3, #908	; 0x38c
 8007f80:	4619      	mov	r1, r3
 8007f82:	4610      	mov	r0, r2
 8007f84:	f002 fdb6 	bl	800aaf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    textArea_speed_height.setXY(6, 67);
 8007f88:	687b      	ldr	r3, [r7, #4]
 8007f8a:	f503 7371 	add.w	r3, r3, #964	; 0x3c4
 8007f8e:	2243      	movs	r2, #67	; 0x43
 8007f90:	2106      	movs	r1, #6
 8007f92:	4618      	mov	r0, r3
 8007f94:	f7ff f89b 	bl	80070ce <_ZN8touchgfx8Drawable5setXYEss>
    textArea_speed_height.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8007f98:	687b      	ldr	r3, [r7, #4]
 8007f9a:	f503 7471 	add.w	r4, r3, #964	; 0x3c4
 8007f9e:	22ff      	movs	r2, #255	; 0xff
 8007fa0:	21ff      	movs	r1, #255	; 0xff
 8007fa2:	20ff      	movs	r0, #255	; 0xff
 8007fa4:	f7ff fcfa 	bl	800799c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8007fa8:	4603      	mov	r3, r0
 8007faa:	4619      	mov	r1, r3
 8007fac:	4620      	mov	r0, r4
 8007fae:	f7ff fafa 	bl	80075a6 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea_speed_height.setLinespacing(0);
 8007fb2:	687b      	ldr	r3, [r7, #4]
 8007fb4:	f503 7371 	add.w	r3, r3, #964	; 0x3c4
 8007fb8:	2100      	movs	r1, #0
 8007fba:	4618      	mov	r0, r3
 8007fbc:	f7ff fb56 	bl	800766c <_ZN8touchgfx8TextArea14setLinespacingEs>
    Unicode::snprintf(textArea_speed_heightBuffer, TEXTAREA_SPEED_HEIGHT_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID10).getText());
 8007fc0:	687b      	ldr	r3, [r7, #4]
 8007fc2:	f203 54d6 	addw	r4, r3, #1494	; 0x5d6
 8007fc6:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8007fca:	2106      	movs	r1, #6
 8007fcc:	4618      	mov	r0, r3
 8007fce:	f7ff fa80 	bl	80074d2 <_ZN8touchgfx9TypedTextC1Et>
 8007fd2:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8007fd6:	4618      	mov	r0, r3
 8007fd8:	f7ff fa8c 	bl	80074f4 <_ZNK8touchgfx9TypedText7getTextEv>
 8007fdc:	4603      	mov	r3, r0
 8007fde:	4aa3      	ldr	r2, [pc, #652]	; (800826c <_ZN15Screen1ViewBaseC1Ev+0x87c>)
 8007fe0:	2103      	movs	r1, #3
 8007fe2:	4620      	mov	r0, r4
 8007fe4:	f007 fb52 	bl	800f68c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea_speed_height.setWildcard(textArea_speed_heightBuffer);
 8007fe8:	687b      	ldr	r3, [r7, #4]
 8007fea:	f503 7271 	add.w	r2, r3, #964	; 0x3c4
 8007fee:	687b      	ldr	r3, [r7, #4]
 8007ff0:	f203 53d6 	addw	r3, r3, #1494	; 0x5d6
 8007ff4:	4619      	mov	r1, r3
 8007ff6:	4610      	mov	r0, r2
 8007ff8:	f7ff fbc0 	bl	800777c <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    textArea_speed_height.resizeToCurrentText();
 8007ffc:	687b      	ldr	r3, [r7, #4]
 8007ffe:	f503 7371 	add.w	r3, r3, #964	; 0x3c4
 8008002:	4618      	mov	r0, r3
 8008004:	f004 f980 	bl	800c308 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    textArea_speed_height.setTypedText(touchgfx::TypedText(T_SINGLEUSEID8));
 8008008:	687b      	ldr	r3, [r7, #4]
 800800a:	f503 7471 	add.w	r4, r3, #964	; 0x3c4
 800800e:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8008012:	2104      	movs	r1, #4
 8008014:	4618      	mov	r0, r3
 8008016:	f7ff fa5c 	bl	80074d2 <_ZN8touchgfx9TypedTextC1Et>
 800801a:	f8b7 105c 	ldrh.w	r1, [r7, #92]	; 0x5c
 800801e:	4620      	mov	r0, r4
 8008020:	f004 f99c 	bl	800c35c <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container1_1.add(textArea_speed_height);
 8008024:	687b      	ldr	r3, [r7, #4]
 8008026:	f503 7219 	add.w	r2, r3, #612	; 0x264
 800802a:	687b      	ldr	r3, [r7, #4]
 800802c:	f503 7371 	add.w	r3, r3, #964	; 0x3c4
 8008030:	4619      	mov	r1, r3
 8008032:	4610      	mov	r0, r2
 8008034:	f002 fd5e 	bl	800aaf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    textArea3_1.setXY(6, 45);
 8008038:	687b      	ldr	r3, [r7, #4]
 800803a:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 800803e:	222d      	movs	r2, #45	; 0x2d
 8008040:	2106      	movs	r1, #6
 8008042:	4618      	mov	r0, r3
 8008044:	f7ff f843 	bl	80070ce <_ZN8touchgfx8Drawable5setXYEss>
    textArea3_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8008048:	687b      	ldr	r3, [r7, #4]
 800804a:	f503 747f 	add.w	r4, r3, #1020	; 0x3fc
 800804e:	22ff      	movs	r2, #255	; 0xff
 8008050:	21ff      	movs	r1, #255	; 0xff
 8008052:	20ff      	movs	r0, #255	; 0xff
 8008054:	f7ff fca2 	bl	800799c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8008058:	4603      	mov	r3, r0
 800805a:	4619      	mov	r1, r3
 800805c:	4620      	mov	r0, r4
 800805e:	f7ff faa2 	bl	80075a6 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea3_1.setLinespacing(0);
 8008062:	687b      	ldr	r3, [r7, #4]
 8008064:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 8008068:	2100      	movs	r1, #0
 800806a:	4618      	mov	r0, r3
 800806c:	f7ff fafe 	bl	800766c <_ZN8touchgfx8TextArea14setLinespacingEs>
    textArea3_1.setAlpha(219);
 8008070:	687b      	ldr	r3, [r7, #4]
 8008072:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 8008076:	21db      	movs	r1, #219	; 0xdb
 8008078:	4618      	mov	r0, r3
 800807a:	f7ff faa2 	bl	80075c2 <_ZN8touchgfx8TextArea8setAlphaEh>
    textArea3_1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID9));
 800807e:	687b      	ldr	r3, [r7, #4]
 8008080:	f503 747f 	add.w	r4, r3, #1020	; 0x3fc
 8008084:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8008088:	2105      	movs	r1, #5
 800808a:	4618      	mov	r0, r3
 800808c:	f7ff fa21 	bl	80074d2 <_ZN8touchgfx9TypedTextC1Et>
 8008090:	f8b7 1060 	ldrh.w	r1, [r7, #96]	; 0x60
 8008094:	4620      	mov	r0, r4
 8008096:	f004 f961 	bl	800c35c <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
    container1_1.add(textArea3_1);
 800809a:	687b      	ldr	r3, [r7, #4]
 800809c:	f503 7219 	add.w	r2, r3, #612	; 0x264
 80080a0:	687b      	ldr	r3, [r7, #4]
 80080a2:	f503 737f 	add.w	r3, r3, #1020	; 0x3fc
 80080a6:	4619      	mov	r1, r3
 80080a8:	4610      	mov	r0, r2
 80080aa:	f002 fd23 	bl	800aaf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    image2_1.setXY(6, 24);
 80080ae:	687b      	ldr	r3, [r7, #4]
 80080b0:	f503 6386 	add.w	r3, r3, #1072	; 0x430
 80080b4:	2218      	movs	r2, #24
 80080b6:	2106      	movs	r1, #6
 80080b8:	4618      	mov	r0, r3
 80080ba:	f7ff f808 	bl	80070ce <_ZN8touchgfx8Drawable5setXYEss>
    image2_1.setBitmap(touchgfx::Bitmap(BITMAP_PLAY_IC_ID));
 80080be:	687b      	ldr	r3, [r7, #4]
 80080c0:	f503 6486 	add.w	r4, r3, #1072	; 0x430
 80080c4:	f107 0364 	add.w	r3, r7, #100	; 0x64
 80080c8:	2109      	movs	r1, #9
 80080ca:	4618      	mov	r0, r3
 80080cc:	f7fe ff56 	bl	8006f7c <_ZN8touchgfx6BitmapC1Et>
 80080d0:	f107 0364 	add.w	r3, r7, #100	; 0x64
 80080d4:	4619      	mov	r1, r3
 80080d6:	4620      	mov	r0, r4
 80080d8:	f004 fa8e 	bl	800c5f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    container1_1.add(image2_1);
 80080dc:	687b      	ldr	r3, [r7, #4]
 80080de:	f503 7219 	add.w	r2, r3, #612	; 0x264
 80080e2:	687b      	ldr	r3, [r7, #4]
 80080e4:	f503 6386 	add.w	r3, r3, #1072	; 0x430
 80080e8:	4619      	mov	r1, r3
 80080ea:	4610      	mov	r0, r2
 80080ec:	f002 fd02 	bl	800aaf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>

    slider1.setXY(29, 261);
 80080f0:	687b      	ldr	r3, [r7, #4]
 80080f2:	f203 435c 	addw	r3, r3, #1116	; 0x45c
 80080f6:	f240 1205 	movw	r2, #261	; 0x105
 80080fa:	211d      	movs	r1, #29
 80080fc:	4618      	mov	r0, r3
 80080fe:	f7fe ffe6 	bl	80070ce <_ZN8touchgfx8Drawable5setXYEss>
    slider1.setBitmaps(touchgfx::Bitmap(BITMAP_CUSTOM_SLIDER_LUX_BG_ID), touchgfx::Bitmap(BITMAP_CUSTOM_SLIDER_LUX_FRONT_ID), touchgfx::Bitmap(BITMAP_CUSTOM_SLIDER_LUX_BUTTON_ID));
 8008102:	687b      	ldr	r3, [r7, #4]
 8008104:	f203 445c 	addw	r4, r3, #1116	; 0x45c
 8008108:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800810c:	2101      	movs	r1, #1
 800810e:	4618      	mov	r0, r3
 8008110:	f7fe ff34 	bl	8006f7c <_ZN8touchgfx6BitmapC1Et>
 8008114:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 8008118:	2103      	movs	r1, #3
 800811a:	4618      	mov	r0, r3
 800811c:	f7fe ff2e 	bl	8006f7c <_ZN8touchgfx6BitmapC1Et>
 8008120:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8008124:	2102      	movs	r1, #2
 8008126:	4618      	mov	r0, r3
 8008128:	f7fe ff28 	bl	8006f7c <_ZN8touchgfx6BitmapC1Et>
 800812c:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8008130:	f107 026c 	add.w	r2, r7, #108	; 0x6c
 8008134:	f107 0168 	add.w	r1, r7, #104	; 0x68
 8008138:	4620      	mov	r0, r4
 800813a:	f003 f8af 	bl	800b29c <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    slider1.setupHorizontalSlider(3, 0, 0, 0, 151);
 800813e:	687b      	ldr	r3, [r7, #4]
 8008140:	f203 405c 	addw	r0, r3, #1116	; 0x45c
 8008144:	2397      	movs	r3, #151	; 0x97
 8008146:	9301      	str	r3, [sp, #4]
 8008148:	2300      	movs	r3, #0
 800814a:	9300      	str	r3, [sp, #0]
 800814c:	2300      	movs	r3, #0
 800814e:	2200      	movs	r2, #0
 8008150:	2103      	movs	r1, #3
 8008152:	f002 ff1d 	bl	800af90 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt>
    slider1.setValueRange(0, 100);
 8008156:	687b      	ldr	r3, [r7, #4]
 8008158:	f203 435c 	addw	r3, r3, #1116	; 0x45c
 800815c:	2264      	movs	r2, #100	; 0x64
 800815e:	2100      	movs	r1, #0
 8008160:	4618      	mov	r0, r3
 8008162:	f002 fe7a 	bl	800ae5a <_ZN8touchgfx6Slider13setValueRangeEii>
    slider1.setValue(31);
 8008166:	687b      	ldr	r3, [r7, #4]
 8008168:	f203 435c 	addw	r3, r3, #1116	; 0x45c
 800816c:	211f      	movs	r1, #31
 800816e:	4618      	mov	r0, r3
 8008170:	f002 fdff 	bl	800ad72 <_ZN8touchgfx6Slider8setValueEi>

    textArea4.setXY(77, 32);
 8008174:	687b      	ldr	r3, [r7, #4]
 8008176:	f503 63ab 	add.w	r3, r3, #1368	; 0x558
 800817a:	2220      	movs	r2, #32
 800817c:	214d      	movs	r1, #77	; 0x4d
 800817e:	4618      	mov	r0, r3
 8008180:	f7fe ffa5 	bl	80070ce <_ZN8touchgfx8Drawable5setXYEss>
    textArea4.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 8008184:	687b      	ldr	r3, [r7, #4]
 8008186:	f503 64ab 	add.w	r4, r3, #1368	; 0x558
 800818a:	22ff      	movs	r2, #255	; 0xff
 800818c:	21ff      	movs	r1, #255	; 0xff
 800818e:	20ff      	movs	r0, #255	; 0xff
 8008190:	f7ff fc04 	bl	800799c <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8008194:	4603      	mov	r3, r0
 8008196:	4619      	mov	r1, r3
 8008198:	4620      	mov	r0, r4
 800819a:	f7ff fa04 	bl	80075a6 <_ZN8touchgfx8TextArea8setColorENS_9colortypeE>
    textArea4.setLinespacing(0);
 800819e:	687b      	ldr	r3, [r7, #4]
 80081a0:	f503 63ab 	add.w	r3, r3, #1368	; 0x558
 80081a4:	2100      	movs	r1, #0
 80081a6:	4618      	mov	r0, r3
 80081a8:	f7ff fa60 	bl	800766c <_ZN8touchgfx8TextArea14setLinespacingEs>
    textArea4.setTypedText(touchgfx::TypedText(T_SINGLEUSEID14));
 80081ac:	687b      	ldr	r3, [r7, #4]
 80081ae:	f503 64ab 	add.w	r4, r3, #1368	; 0x558
 80081b2:	f107 0374 	add.w	r3, r7, #116	; 0x74
 80081b6:	210a      	movs	r1, #10
 80081b8:	4618      	mov	r0, r3
 80081ba:	f7ff f98a 	bl	80074d2 <_ZN8touchgfx9TypedTextC1Et>
 80081be:	f8b7 1074 	ldrh.w	r1, [r7, #116]	; 0x74
 80081c2:	4620      	mov	r0, r4
 80081c4:	f004 f8ca 	bl	800c35c <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>

    toggleButton1.setXY(29, 27);
 80081c8:	687b      	ldr	r3, [r7, #4]
 80081ca:	f203 538c 	addw	r3, r3, #1420	; 0x58c
 80081ce:	221b      	movs	r2, #27
 80081d0:	211d      	movs	r1, #29
 80081d2:	4618      	mov	r0, r3
 80081d4:	f7fe ff7b 	bl	80070ce <_ZN8touchgfx8Drawable5setXYEss>
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_CHECK_BUTTONS_CHECK_ROUND_MARK_INACTIVE_ID), touchgfx::Bitmap(BITMAP_DARK_CHECK_BUTTONS_CHECK_ROUND_MARK_ACTIVE_ID));
 80081d8:	687b      	ldr	r3, [r7, #4]
 80081da:	f203 548c 	addw	r4, r3, #1420	; 0x58c
 80081de:	f107 0378 	add.w	r3, r7, #120	; 0x78
 80081e2:	2108      	movs	r1, #8
 80081e4:	4618      	mov	r0, r3
 80081e6:	f7fe fec9 	bl	8006f7c <_ZN8touchgfx6BitmapC1Et>
 80081ea:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 80081ee:	2107      	movs	r1, #7
 80081f0:	4618      	mov	r0, r3
 80081f2:	f7fe fec3 	bl	8006f7c <_ZN8touchgfx6BitmapC1Et>
 80081f6:	f107 027c 	add.w	r2, r7, #124	; 0x7c
 80081fa:	f107 0378 	add.w	r3, r7, #120	; 0x78
 80081fe:	4619      	mov	r1, r3
 8008200:	4620      	mov	r0, r4
 8008202:	f7ff fb0d 	bl	8007820 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>

    add(image1);
 8008206:	687a      	ldr	r2, [r7, #4]
 8008208:	687b      	ldr	r3, [r7, #4]
 800820a:	3340      	adds	r3, #64	; 0x40
 800820c:	4619      	mov	r1, r3
 800820e:	4610      	mov	r0, r2
 8008210:	f7ff f8c6 	bl	80073a0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(container1);
 8008214:	687a      	ldr	r2, [r7, #4]
 8008216:	687b      	ldr	r3, [r7, #4]
 8008218:	336c      	adds	r3, #108	; 0x6c
 800821a:	4619      	mov	r1, r3
 800821c:	4610      	mov	r0, r2
 800821e:	f7ff f8bf 	bl	80073a0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(container1_1);
 8008222:	687a      	ldr	r2, [r7, #4]
 8008224:	687b      	ldr	r3, [r7, #4]
 8008226:	f503 7319 	add.w	r3, r3, #612	; 0x264
 800822a:	4619      	mov	r1, r3
 800822c:	4610      	mov	r0, r2
 800822e:	f7ff f8b7 	bl	80073a0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(slider1);
 8008232:	687a      	ldr	r2, [r7, #4]
 8008234:	687b      	ldr	r3, [r7, #4]
 8008236:	f203 435c 	addw	r3, r3, #1116	; 0x45c
 800823a:	4619      	mov	r1, r3
 800823c:	4610      	mov	r0, r2
 800823e:	f7ff f8af 	bl	80073a0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(textArea4);
 8008242:	687a      	ldr	r2, [r7, #4]
 8008244:	687b      	ldr	r3, [r7, #4]
 8008246:	f503 63ab 	add.w	r3, r3, #1368	; 0x558
 800824a:	4619      	mov	r1, r3
 800824c:	4610      	mov	r0, r2
 800824e:	f7ff f8a7 	bl	80073a0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(toggleButton1);
 8008252:	687a      	ldr	r2, [r7, #4]
 8008254:	687b      	ldr	r3, [r7, #4]
 8008256:	f203 538c 	addw	r3, r3, #1420	; 0x58c
 800825a:	4619      	mov	r1, r3
 800825c:	4610      	mov	r0, r2
 800825e:	f7ff f89f 	bl	80073a0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 8008262:	687b      	ldr	r3, [r7, #4]
 8008264:	4618      	mov	r0, r3
 8008266:	3784      	adds	r7, #132	; 0x84
 8008268:	46bd      	mov	sp, r7
 800826a:	bd90      	pop	{r4, r7, pc}
 800826c:	0801c620 	.word	0x0801c620

08008270 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{
 8008270:	b480      	push	{r7}
 8008272:	b083      	sub	sp, #12
 8008274:	af00      	add	r7, sp, #0
 8008276:	6078      	str	r0, [r7, #4]

}
 8008278:	bf00      	nop
 800827a:	370c      	adds	r7, #12
 800827c:	46bd      	mov	sp, r7
 800827e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008282:	4770      	bx	lr

08008284 <_ZN15Screen1ViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi>:

void Screen1ViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
 8008284:	b580      	push	{r7, lr}
 8008286:	b084      	sub	sp, #16
 8008288:	af00      	add	r7, sp, #0
 800828a:	60f8      	str	r0, [r7, #12]
 800828c:	60b9      	str	r1, [r7, #8]
 800828e:	607a      	str	r2, [r7, #4]
    if (&src == &slider_strength)
 8008290:	68fb      	ldr	r3, [r7, #12]
 8008292:	3398      	adds	r3, #152	; 0x98
 8008294:	68ba      	ldr	r2, [r7, #8]
 8008296:	429a      	cmp	r2, r3
 8008298:	d14b      	bne.n	8008332 <_ZN15Screen1ViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0xae>
    {
        //Interaction2
        //When slider_strength value changed execute C++ code
        //Execute C++ code
        memset(&textArea_strength_heightBuffer,0,TEXTAREA_STRENGTH_HEIGHT_SIZE);
 800829a:	68fb      	ldr	r3, [r7, #12]
 800829c:	f203 53ca 	addw	r3, r3, #1482	; 0x5ca
 80082a0:	2203      	movs	r2, #3
 80082a2:	2100      	movs	r1, #0
 80082a4:	4618      	mov	r0, r3
 80082a6:	f005 ff36 	bl	800e116 <_ZN8touchgfx6memsetEPvhm>
        Unicode::snprintf(textArea_strength_heightBuffer, TEXTAREA_STRENGTH_HEIGHT_SIZE, "%d", (value - (value%10))/10 );
 80082aa:	68fb      	ldr	r3, [r7, #12]
 80082ac:	f203 50ca 	addw	r0, r3, #1482	; 0x5ca
 80082b0:	6879      	ldr	r1, [r7, #4]
 80082b2:	4b4a      	ldr	r3, [pc, #296]	; (80083dc <_ZN15Screen1ViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x158>)
 80082b4:	fb83 2301 	smull	r2, r3, r3, r1
 80082b8:	109a      	asrs	r2, r3, #2
 80082ba:	17cb      	asrs	r3, r1, #31
 80082bc:	1ad2      	subs	r2, r2, r3
 80082be:	4613      	mov	r3, r2
 80082c0:	009b      	lsls	r3, r3, #2
 80082c2:	4413      	add	r3, r2
 80082c4:	005b      	lsls	r3, r3, #1
 80082c6:	1aca      	subs	r2, r1, r3
 80082c8:	687b      	ldr	r3, [r7, #4]
 80082ca:	1a9b      	subs	r3, r3, r2
 80082cc:	4a43      	ldr	r2, [pc, #268]	; (80083dc <_ZN15Screen1ViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x158>)
 80082ce:	fb82 1203 	smull	r1, r2, r2, r3
 80082d2:	1092      	asrs	r2, r2, #2
 80082d4:	17db      	asrs	r3, r3, #31
 80082d6:	1ad3      	subs	r3, r2, r3
 80082d8:	4a41      	ldr	r2, [pc, #260]	; (80083e0 <_ZN15Screen1ViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x15c>)
 80082da:	2103      	movs	r1, #3
 80082dc:	f007 f9d6 	bl	800f68c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        textArea_strength_height.invalidate();
 80082e0:	68fb      	ldr	r3, [r7, #12]
 80082e2:	f503 73e6 	add.w	r3, r3, #460	; 0x1cc
 80082e6:	4618      	mov	r0, r3
 80082e8:	f005 fdfc 	bl	800dee4 <_ZNK8touchgfx8Drawable10invalidateEv>
        
        memset(&textArea_strength_lowBuffer,0,TEXTAREA_STRENGTH_LOW_SIZE);
 80082ec:	68fb      	ldr	r3, [r7, #12]
 80082ee:	f203 53c4 	addw	r3, r3, #1476	; 0x5c4
 80082f2:	2203      	movs	r2, #3
 80082f4:	2100      	movs	r1, #0
 80082f6:	4618      	mov	r0, r3
 80082f8:	f005 ff0d 	bl	800e116 <_ZN8touchgfx6memsetEPvhm>
        Unicode::snprintf(textArea_strength_lowBuffer, TEXTAREA_STRENGTH_LOW_SIZE, "%d", (value%10));
 80082fc:	68fb      	ldr	r3, [r7, #12]
 80082fe:	f203 50c4 	addw	r0, r3, #1476	; 0x5c4
 8008302:	687a      	ldr	r2, [r7, #4]
 8008304:	4b35      	ldr	r3, [pc, #212]	; (80083dc <_ZN15Screen1ViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x158>)
 8008306:	fb83 1302 	smull	r1, r3, r3, r2
 800830a:	1099      	asrs	r1, r3, #2
 800830c:	17d3      	asrs	r3, r2, #31
 800830e:	1ac9      	subs	r1, r1, r3
 8008310:	460b      	mov	r3, r1
 8008312:	009b      	lsls	r3, r3, #2
 8008314:	440b      	add	r3, r1
 8008316:	005b      	lsls	r3, r3, #1
 8008318:	1ad1      	subs	r1, r2, r3
 800831a:	460b      	mov	r3, r1
 800831c:	4a30      	ldr	r2, [pc, #192]	; (80083e0 <_ZN15Screen1ViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x15c>)
 800831e:	2103      	movs	r1, #3
 8008320:	f007 f9b4 	bl	800f68c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        textArea_strength_low.invalidate();
 8008324:	68fb      	ldr	r3, [r7, #12]
 8008326:	f503 73ca 	add.w	r3, r3, #404	; 0x194
 800832a:	4618      	mov	r0, r3
 800832c:	f005 fdda 	bl	800dee4 <_ZNK8touchgfx8Drawable10invalidateEv>
        
        memset(&textArea_speed_lowBuffer,0,TEXTAREA_SPEED_LOW_SIZE);
        Unicode::snprintf(textArea_speed_lowBuffer, TEXTAREA_SPEED_LOW_SIZE, "%d", (value%10));
        textArea_speed_low.invalidate();
    }
}
 8008330:	e050      	b.n	80083d4 <_ZN15Screen1ViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x150>
    else if (&src == &slider_speed)
 8008332:	68fb      	ldr	r3, [r7, #12]
 8008334:	f503 7324 	add.w	r3, r3, #656	; 0x290
 8008338:	68ba      	ldr	r2, [r7, #8]
 800833a:	429a      	cmp	r2, r3
 800833c:	d14a      	bne.n	80083d4 <_ZN15Screen1ViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x150>
        memset(&textArea_speed_heightBuffer,0,TEXTAREA_SPEED_HEIGHT_SIZE);
 800833e:	68fb      	ldr	r3, [r7, #12]
 8008340:	f203 53d6 	addw	r3, r3, #1494	; 0x5d6
 8008344:	2203      	movs	r2, #3
 8008346:	2100      	movs	r1, #0
 8008348:	4618      	mov	r0, r3
 800834a:	f005 fee4 	bl	800e116 <_ZN8touchgfx6memsetEPvhm>
        Unicode::snprintf(textArea_speed_heightBuffer, TEXTAREA_SPEED_HEIGHT_SIZE, "%d", (value - (value%10))/10 );
 800834e:	68fb      	ldr	r3, [r7, #12]
 8008350:	f203 50d6 	addw	r0, r3, #1494	; 0x5d6
 8008354:	6879      	ldr	r1, [r7, #4]
 8008356:	4b21      	ldr	r3, [pc, #132]	; (80083dc <_ZN15Screen1ViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x158>)
 8008358:	fb83 2301 	smull	r2, r3, r3, r1
 800835c:	109a      	asrs	r2, r3, #2
 800835e:	17cb      	asrs	r3, r1, #31
 8008360:	1ad2      	subs	r2, r2, r3
 8008362:	4613      	mov	r3, r2
 8008364:	009b      	lsls	r3, r3, #2
 8008366:	4413      	add	r3, r2
 8008368:	005b      	lsls	r3, r3, #1
 800836a:	1aca      	subs	r2, r1, r3
 800836c:	687b      	ldr	r3, [r7, #4]
 800836e:	1a9b      	subs	r3, r3, r2
 8008370:	4a1a      	ldr	r2, [pc, #104]	; (80083dc <_ZN15Screen1ViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x158>)
 8008372:	fb82 1203 	smull	r1, r2, r2, r3
 8008376:	1092      	asrs	r2, r2, #2
 8008378:	17db      	asrs	r3, r3, #31
 800837a:	1ad3      	subs	r3, r2, r3
 800837c:	4a18      	ldr	r2, [pc, #96]	; (80083e0 <_ZN15Screen1ViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x15c>)
 800837e:	2103      	movs	r1, #3
 8008380:	f007 f984 	bl	800f68c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        textArea_speed_height.invalidate();
 8008384:	68fb      	ldr	r3, [r7, #12]
 8008386:	f503 7371 	add.w	r3, r3, #964	; 0x3c4
 800838a:	4618      	mov	r0, r3
 800838c:	f005 fdaa 	bl	800dee4 <_ZNK8touchgfx8Drawable10invalidateEv>
        memset(&textArea_speed_lowBuffer,0,TEXTAREA_SPEED_LOW_SIZE);
 8008390:	68fb      	ldr	r3, [r7, #12]
 8008392:	f503 63ba 	add.w	r3, r3, #1488	; 0x5d0
 8008396:	2203      	movs	r2, #3
 8008398:	2100      	movs	r1, #0
 800839a:	4618      	mov	r0, r3
 800839c:	f005 febb 	bl	800e116 <_ZN8touchgfx6memsetEPvhm>
        Unicode::snprintf(textArea_speed_lowBuffer, TEXTAREA_SPEED_LOW_SIZE, "%d", (value%10));
 80083a0:	68fb      	ldr	r3, [r7, #12]
 80083a2:	f503 60ba 	add.w	r0, r3, #1488	; 0x5d0
 80083a6:	687a      	ldr	r2, [r7, #4]
 80083a8:	4b0c      	ldr	r3, [pc, #48]	; (80083dc <_ZN15Screen1ViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x158>)
 80083aa:	fb83 1302 	smull	r1, r3, r3, r2
 80083ae:	1099      	asrs	r1, r3, #2
 80083b0:	17d3      	asrs	r3, r2, #31
 80083b2:	1ac9      	subs	r1, r1, r3
 80083b4:	460b      	mov	r3, r1
 80083b6:	009b      	lsls	r3, r3, #2
 80083b8:	440b      	add	r3, r1
 80083ba:	005b      	lsls	r3, r3, #1
 80083bc:	1ad1      	subs	r1, r2, r3
 80083be:	460b      	mov	r3, r1
 80083c0:	4a07      	ldr	r2, [pc, #28]	; (80083e0 <_ZN15Screen1ViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x15c>)
 80083c2:	2103      	movs	r1, #3
 80083c4:	f007 f962 	bl	800f68c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        textArea_speed_low.invalidate();
 80083c8:	68fb      	ldr	r3, [r7, #12]
 80083ca:	f503 7363 	add.w	r3, r3, #908	; 0x38c
 80083ce:	4618      	mov	r0, r3
 80083d0:	f005 fd88 	bl	800dee4 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80083d4:	bf00      	nop
 80083d6:	3710      	adds	r7, #16
 80083d8:	46bd      	mov	sp, r7
 80083da:	bd80      	pop	{r7, pc}
 80083dc:	66666667 	.word	0x66666667
 80083e0:	0801c624 	.word	0x0801c624

080083e4 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>:
    View() : presenter(0)
 80083e4:	b580      	push	{r7, lr}
 80083e6:	b082      	sub	sp, #8
 80083e8:	af00      	add	r7, sp, #0
 80083ea:	6078      	str	r0, [r7, #4]
 80083ec:	687b      	ldr	r3, [r7, #4]
 80083ee:	4618      	mov	r0, r3
 80083f0:	f006 f884 	bl	800e4fc <_ZN8touchgfx6ScreenC1Ev>
 80083f4:	4a05      	ldr	r2, [pc, #20]	; (800840c <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev+0x28>)
 80083f6:	687b      	ldr	r3, [r7, #4]
 80083f8:	601a      	str	r2, [r3, #0]
 80083fa:	687b      	ldr	r3, [r7, #4]
 80083fc:	2200      	movs	r2, #0
 80083fe:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 8008400:	687b      	ldr	r3, [r7, #4]
 8008402:	4618      	mov	r0, r3
 8008404:	3708      	adds	r7, #8
 8008406:	46bd      	mov	sp, r7
 8008408:	bd80      	pop	{r7, pc}
 800840a:	bf00      	nop
 800840c:	0801ca78 	.word	0x0801ca78

08008410 <_ZN8touchgfx15GenericCallbackIRKNS_6SliderEivEC1Ev>:
class GenericCallback<T1, T2, void>
 8008410:	b480      	push	{r7}
 8008412:	b083      	sub	sp, #12
 8008414:	af00      	add	r7, sp, #0
 8008416:	6078      	str	r0, [r7, #4]
 8008418:	4a04      	ldr	r2, [pc, #16]	; (800842c <_ZN8touchgfx15GenericCallbackIRKNS_6SliderEivEC1Ev+0x1c>)
 800841a:	687b      	ldr	r3, [r7, #4]
 800841c:	601a      	str	r2, [r3, #0]
 800841e:	687b      	ldr	r3, [r7, #4]
 8008420:	4618      	mov	r0, r3
 8008422:	370c      	adds	r7, #12
 8008424:	46bd      	mov	sp, r7
 8008426:	f85d 7b04 	ldr.w	r7, [sp], #4
 800842a:	4770      	bx	lr
 800842c:	0801cb28 	.word	0x0801cb28

08008430 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_6SliderEivEC1EPS1_MS1_FvS4_iE>:
    Callback(dest_type* pobject, void (dest_type::*pmemfun_2)(T1, T2))
 8008430:	b580      	push	{r7, lr}
 8008432:	b084      	sub	sp, #16
 8008434:	af00      	add	r7, sp, #0
 8008436:	60f8      	str	r0, [r7, #12]
 8008438:	60b9      	str	r1, [r7, #8]
 800843a:	4639      	mov	r1, r7
 800843c:	e881 000c 	stmia.w	r1, {r2, r3}
    {
 8008440:	68fb      	ldr	r3, [r7, #12]
 8008442:	4618      	mov	r0, r3
 8008444:	f7ff ffe4 	bl	8008410 <_ZN8touchgfx15GenericCallbackIRKNS_6SliderEivEC1Ev>
 8008448:	4a08      	ldr	r2, [pc, #32]	; (800846c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_6SliderEivEC1EPS1_MS1_FvS4_iE+0x3c>)
 800844a:	68fb      	ldr	r3, [r7, #12]
 800844c:	601a      	str	r2, [r3, #0]
        this->pobject = pobject;
 800844e:	68fb      	ldr	r3, [r7, #12]
 8008450:	68ba      	ldr	r2, [r7, #8]
 8008452:	605a      	str	r2, [r3, #4]
        this->pmemfun_2 = pmemfun_2;
 8008454:	68fb      	ldr	r3, [r7, #12]
 8008456:	3308      	adds	r3, #8
 8008458:	463a      	mov	r2, r7
 800845a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800845e:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 8008462:	68fb      	ldr	r3, [r7, #12]
 8008464:	4618      	mov	r0, r3
 8008466:	3710      	adds	r7, #16
 8008468:	46bd      	mov	sp, r7
 800846a:	bd80      	pop	{r7, pc}
 800846c:	0801ca60 	.word	0x0801ca60

08008470 <_ZN8touchgfx15GenericCallbackIRKNS_6SliderEivED1Ev>:
    virtual ~GenericCallback()
 8008470:	b480      	push	{r7}
 8008472:	b083      	sub	sp, #12
 8008474:	af00      	add	r7, sp, #0
 8008476:	6078      	str	r0, [r7, #4]
    }
 8008478:	4a04      	ldr	r2, [pc, #16]	; (800848c <_ZN8touchgfx15GenericCallbackIRKNS_6SliderEivED1Ev+0x1c>)
 800847a:	687b      	ldr	r3, [r7, #4]
 800847c:	601a      	str	r2, [r3, #0]
 800847e:	687b      	ldr	r3, [r7, #4]
 8008480:	4618      	mov	r0, r3
 8008482:	370c      	adds	r7, #12
 8008484:	46bd      	mov	sp, r7
 8008486:	f85d 7b04 	ldr.w	r7, [sp], #4
 800848a:	4770      	bx	lr
 800848c:	0801cb28 	.word	0x0801cb28

08008490 <_ZN8touchgfx15GenericCallbackIRKNS_6SliderEivED0Ev>:
    virtual ~GenericCallback()
 8008490:	b580      	push	{r7, lr}
 8008492:	b082      	sub	sp, #8
 8008494:	af00      	add	r7, sp, #0
 8008496:	6078      	str	r0, [r7, #4]
    }
 8008498:	6878      	ldr	r0, [r7, #4]
 800849a:	f7ff ffe9 	bl	8008470 <_ZN8touchgfx15GenericCallbackIRKNS_6SliderEivED1Ev>
 800849e:	2104      	movs	r1, #4
 80084a0:	6878      	ldr	r0, [r7, #4]
 80084a2:	f012 fe53 	bl	801b14c <_ZdlPvj>
 80084a6:	687b      	ldr	r3, [r7, #4]
 80084a8:	4618      	mov	r0, r3
 80084aa:	3708      	adds	r7, #8
 80084ac:	46bd      	mov	sp, r7
 80084ae:	bd80      	pop	{r7, pc}

080084b0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_6SliderEivED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 80084b0:	b580      	push	{r7, lr}
 80084b2:	b082      	sub	sp, #8
 80084b4:	af00      	add	r7, sp, #0
 80084b6:	6078      	str	r0, [r7, #4]
 80084b8:	4a05      	ldr	r2, [pc, #20]	; (80084d0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_6SliderEivED1Ev+0x20>)
 80084ba:	687b      	ldr	r3, [r7, #4]
 80084bc:	601a      	str	r2, [r3, #0]
 80084be:	687b      	ldr	r3, [r7, #4]
 80084c0:	4618      	mov	r0, r3
 80084c2:	f7ff ffd5 	bl	8008470 <_ZN8touchgfx15GenericCallbackIRKNS_6SliderEivED1Ev>
 80084c6:	687b      	ldr	r3, [r7, #4]
 80084c8:	4618      	mov	r0, r3
 80084ca:	3708      	adds	r7, #8
 80084cc:	46bd      	mov	sp, r7
 80084ce:	bd80      	pop	{r7, pc}
 80084d0:	0801ca60 	.word	0x0801ca60

080084d4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_6SliderEivED0Ev>:
 80084d4:	b580      	push	{r7, lr}
 80084d6:	b082      	sub	sp, #8
 80084d8:	af00      	add	r7, sp, #0
 80084da:	6078      	str	r0, [r7, #4]
 80084dc:	6878      	ldr	r0, [r7, #4]
 80084de:	f7ff ffe7 	bl	80084b0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_6SliderEivED1Ev>
 80084e2:	2110      	movs	r1, #16
 80084e4:	6878      	ldr	r0, [r7, #4]
 80084e6:	f012 fe31 	bl	801b14c <_ZdlPvj>
 80084ea:	687b      	ldr	r3, [r7, #4]
 80084ec:	4618      	mov	r0, r3
 80084ee:	3708      	adds	r7, #8
 80084f0:	46bd      	mov	sp, r7
 80084f2:	bd80      	pop	{r7, pc}

080084f4 <_ZN8touchgfx5ImageD1Ev>:
class Image : public Widget
 80084f4:	b580      	push	{r7, lr}
 80084f6:	b082      	sub	sp, #8
 80084f8:	af00      	add	r7, sp, #0
 80084fa:	6078      	str	r0, [r7, #4]
 80084fc:	4a05      	ldr	r2, [pc, #20]	; (8008514 <_ZN8touchgfx5ImageD1Ev+0x20>)
 80084fe:	687b      	ldr	r3, [r7, #4]
 8008500:	601a      	str	r2, [r3, #0]
 8008502:	687b      	ldr	r3, [r7, #4]
 8008504:	4618      	mov	r0, r3
 8008506:	f7fe ff6d 	bl	80073e4 <_ZN8touchgfx6WidgetD1Ev>
 800850a:	687b      	ldr	r3, [r7, #4]
 800850c:	4618      	mov	r0, r3
 800850e:	3708      	adds	r7, #8
 8008510:	46bd      	mov	sp, r7
 8008512:	bd80      	pop	{r7, pc}
 8008514:	0801e3e4 	.word	0x0801e3e4

08008518 <_ZN8touchgfx5ImageD0Ev>:
 8008518:	b580      	push	{r7, lr}
 800851a:	b082      	sub	sp, #8
 800851c:	af00      	add	r7, sp, #0
 800851e:	6078      	str	r0, [r7, #4]
 8008520:	6878      	ldr	r0, [r7, #4]
 8008522:	f7ff ffe7 	bl	80084f4 <_ZN8touchgfx5ImageD1Ev>
 8008526:	212c      	movs	r1, #44	; 0x2c
 8008528:	6878      	ldr	r0, [r7, #4]
 800852a:	f012 fe0f 	bl	801b14c <_ZdlPvj>
 800852e:	687b      	ldr	r3, [r7, #4]
 8008530:	4618      	mov	r0, r3
 8008532:	3708      	adds	r7, #8
 8008534:	46bd      	mov	sp, r7
 8008536:	bd80      	pop	{r7, pc}

08008538 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8008538:	b580      	push	{r7, lr}
 800853a:	b082      	sub	sp, #8
 800853c:	af00      	add	r7, sp, #0
 800853e:	6078      	str	r0, [r7, #4]
 8008540:	4a05      	ldr	r2, [pc, #20]	; (8008558 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 8008542:	687b      	ldr	r3, [r7, #4]
 8008544:	601a      	str	r2, [r3, #0]
 8008546:	687b      	ldr	r3, [r7, #4]
 8008548:	4618      	mov	r0, r3
 800854a:	f7ff f8df 	bl	800770c <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800854e:	687b      	ldr	r3, [r7, #4]
 8008550:	4618      	mov	r0, r3
 8008552:	3708      	adds	r7, #8
 8008554:	46bd      	mov	sp, r7
 8008556:	bd80      	pop	{r7, pc}
 8008558:	0801e368 	.word	0x0801e368

0800855c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800855c:	b580      	push	{r7, lr}
 800855e:	b082      	sub	sp, #8
 8008560:	af00      	add	r7, sp, #0
 8008562:	6078      	str	r0, [r7, #4]
 8008564:	6878      	ldr	r0, [r7, #4]
 8008566:	f7ff ffe7 	bl	8008538 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800856a:	2138      	movs	r1, #56	; 0x38
 800856c:	6878      	ldr	r0, [r7, #4]
 800856e:	f012 fded 	bl	801b14c <_ZdlPvj>
 8008572:	687b      	ldr	r3, [r7, #4]
 8008574:	4618      	mov	r0, r3
 8008576:	3708      	adds	r7, #8
 8008578:	46bd      	mov	sp, r7
 800857a:	bd80      	pop	{r7, pc}

0800857c <_ZN8touchgfx12ToggleButtonD1Ev>:
class ToggleButton : public Button
 800857c:	b580      	push	{r7, lr}
 800857e:	b082      	sub	sp, #8
 8008580:	af00      	add	r7, sp, #0
 8008582:	6078      	str	r0, [r7, #4]
 8008584:	4a05      	ldr	r2, [pc, #20]	; (800859c <_ZN8touchgfx12ToggleButtonD1Ev+0x20>)
 8008586:	687b      	ldr	r3, [r7, #4]
 8008588:	601a      	str	r2, [r3, #0]
 800858a:	687b      	ldr	r3, [r7, #4]
 800858c:	4618      	mov	r0, r3
 800858e:	f7ff f925 	bl	80077dc <_ZN8touchgfx6ButtonD1Ev>
 8008592:	687b      	ldr	r3, [r7, #4]
 8008594:	4618      	mov	r0, r3
 8008596:	3708      	adds	r7, #8
 8008598:	46bd      	mov	sp, r7
 800859a:	bd80      	pop	{r7, pc}
 800859c:	0801e174 	.word	0x0801e174

080085a0 <_ZN8touchgfx12ToggleButtonD0Ev>:
 80085a0:	b580      	push	{r7, lr}
 80085a2:	b082      	sub	sp, #8
 80085a4:	af00      	add	r7, sp, #0
 80085a6:	6078      	str	r0, [r7, #4]
 80085a8:	6878      	ldr	r0, [r7, #4]
 80085aa:	f7ff ffe7 	bl	800857c <_ZN8touchgfx12ToggleButtonD1Ev>
 80085ae:	2138      	movs	r1, #56	; 0x38
 80085b0:	6878      	ldr	r0, [r7, #4]
 80085b2:	f012 fdcb 	bl	801b14c <_ZdlPvj>
 80085b6:	687b      	ldr	r3, [r7, #4]
 80085b8:	4618      	mov	r0, r3
 80085ba:	3708      	adds	r7, #8
 80085bc:	46bd      	mov	sp, r7
 80085be:	bd80      	pop	{r7, pc}

080085c0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_6SliderEivE7executeES4_i>:
    virtual void execute(T1 t1, T2 t2)
 80085c0:	b580      	push	{r7, lr}
 80085c2:	b084      	sub	sp, #16
 80085c4:	af00      	add	r7, sp, #0
 80085c6:	60f8      	str	r0, [r7, #12]
 80085c8:	60b9      	str	r1, [r7, #8]
 80085ca:	607a      	str	r2, [r7, #4]
        (pobject->*pmemfun_2)(t1, t2);
 80085cc:	68fb      	ldr	r3, [r7, #12]
 80085ce:	685b      	ldr	r3, [r3, #4]
 80085d0:	68fa      	ldr	r2, [r7, #12]
 80085d2:	68d2      	ldr	r2, [r2, #12]
 80085d4:	1052      	asrs	r2, r2, #1
 80085d6:	1898      	adds	r0, r3, r2
 80085d8:	68fb      	ldr	r3, [r7, #12]
 80085da:	68db      	ldr	r3, [r3, #12]
 80085dc:	f003 0301 	and.w	r3, r3, #1
 80085e0:	2b00      	cmp	r3, #0
 80085e2:	d102      	bne.n	80085ea <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_6SliderEivE7executeES4_i+0x2a>
 80085e4:	68fb      	ldr	r3, [r7, #12]
 80085e6:	689b      	ldr	r3, [r3, #8]
 80085e8:	e00a      	b.n	8008600 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_6SliderEivE7executeES4_i+0x40>
 80085ea:	68fb      	ldr	r3, [r7, #12]
 80085ec:	685b      	ldr	r3, [r3, #4]
 80085ee:	68fa      	ldr	r2, [r7, #12]
 80085f0:	68d2      	ldr	r2, [r2, #12]
 80085f2:	1052      	asrs	r2, r2, #1
 80085f4:	4413      	add	r3, r2
 80085f6:	681b      	ldr	r3, [r3, #0]
 80085f8:	68fa      	ldr	r2, [r7, #12]
 80085fa:	6892      	ldr	r2, [r2, #8]
 80085fc:	4413      	add	r3, r2
 80085fe:	681b      	ldr	r3, [r3, #0]
 8008600:	687a      	ldr	r2, [r7, #4]
 8008602:	68b9      	ldr	r1, [r7, #8]
 8008604:	4798      	blx	r3
    }
 8008606:	bf00      	nop
 8008608:	3710      	adds	r7, #16
 800860a:	46bd      	mov	sp, r7
 800860c:	bd80      	pop	{r7, pc}

0800860e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_6SliderEivE7isValidEv>:
    virtual bool isValid() const
 800860e:	b480      	push	{r7}
 8008610:	b083      	sub	sp, #12
 8008612:	af00      	add	r7, sp, #0
 8008614:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun_2 != 0);
 8008616:	687b      	ldr	r3, [r7, #4]
 8008618:	685b      	ldr	r3, [r3, #4]
 800861a:	2b00      	cmp	r3, #0
 800861c:	d010      	beq.n	8008640 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_6SliderEivE7isValidEv+0x32>
 800861e:	687b      	ldr	r3, [r7, #4]
 8008620:	689b      	ldr	r3, [r3, #8]
 8008622:	2b00      	cmp	r3, #0
 8008624:	d107      	bne.n	8008636 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_6SliderEivE7isValidEv+0x28>
 8008626:	687b      	ldr	r3, [r7, #4]
 8008628:	68db      	ldr	r3, [r3, #12]
 800862a:	f003 0301 	and.w	r3, r3, #1
 800862e:	2b00      	cmp	r3, #0
 8008630:	d101      	bne.n	8008636 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_6SliderEivE7isValidEv+0x28>
 8008632:	2301      	movs	r3, #1
 8008634:	e000      	b.n	8008638 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_6SliderEivE7isValidEv+0x2a>
 8008636:	2300      	movs	r3, #0
 8008638:	2b01      	cmp	r3, #1
 800863a:	d001      	beq.n	8008640 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_6SliderEivE7isValidEv+0x32>
 800863c:	2301      	movs	r3, #1
 800863e:	e000      	b.n	8008642 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_6SliderEivE7isValidEv+0x34>
 8008640:	2300      	movs	r3, #0
    }
 8008642:	4618      	mov	r0, r3
 8008644:	370c      	adds	r7, #12
 8008646:	46bd      	mov	sp, r7
 8008648:	f85d 7b04 	ldr.w	r7, [sp], #4
 800864c:	4770      	bx	lr
	...

08008650 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 8008650:	b480      	push	{r7}
 8008652:	af00      	add	r7, sp, #0
    return bitmap_database;
 8008654:	4b02      	ldr	r3, [pc, #8]	; (8008660 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 8008656:	4618      	mov	r0, r3
 8008658:	46bd      	mov	sp, r7
 800865a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800865e:	4770      	bx	lr
 8008660:	0801cbfc 	.word	0x0801cbfc

08008664 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 8008664:	b480      	push	{r7}
 8008666:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 8008668:	230f      	movs	r3, #15
}
 800866a:	4618      	mov	r0, r3
 800866c:	46bd      	mov	sp, r7
 800866e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008672:	4770      	bx	lr

08008674 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 8008674:	b480      	push	{r7}
 8008676:	b085      	sub	sp, #20
 8008678:	af00      	add	r7, sp, #0
 800867a:	60f8      	str	r0, [r7, #12]
 800867c:	60b9      	str	r1, [r7, #8]
 800867e:	4613      	mov	r3, r2
 8008680:	80fb      	strh	r3, [r7, #6]
        typedTexts = data;
 8008682:	4a07      	ldr	r2, [pc, #28]	; (80086a0 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 8008684:	68fb      	ldr	r3, [r7, #12]
 8008686:	6013      	str	r3, [r2, #0]
        fonts = f;
 8008688:	4a06      	ldr	r2, [pc, #24]	; (80086a4 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800868a:	68bb      	ldr	r3, [r7, #8]
 800868c:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800868e:	4a06      	ldr	r2, [pc, #24]	; (80086a8 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 8008690:	88fb      	ldrh	r3, [r7, #6]
 8008692:	8013      	strh	r3, [r2, #0]
    }
 8008694:	bf00      	nop
 8008696:	3714      	adds	r7, #20
 8008698:	46bd      	mov	sp, r7
 800869a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800869e:	4770      	bx	lr
 80086a0:	20026f20 	.word	0x20026f20
 80086a4:	20026f28 	.word	0x20026f28
 80086a8:	20026f24 	.word	0x20026f24

080086ac <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80086ac:	b590      	push	{r4, r7, lr}
 80086ae:	b085      	sub	sp, #20
 80086b0:	af00      	add	r7, sp, #0
 80086b2:	4603      	mov	r3, r0
 80086b4:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 80086b6:	2300      	movs	r3, #0
 80086b8:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 80086ba:	88fb      	ldrh	r3, [r7, #6]
 80086bc:	2b00      	cmp	r3, #0
 80086be:	d127      	bne.n	8008710 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 80086c0:	88fb      	ldrh	r3, [r7, #6]
 80086c2:	4a1e      	ldr	r2, [pc, #120]	; (800873c <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 80086c4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80086c8:	2b00      	cmp	r3, #0
 80086ca:	d016      	beq.n	80086fa <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 80086cc:	88fb      	ldrh	r3, [r7, #6]
 80086ce:	4a1b      	ldr	r2, [pc, #108]	; (800873c <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 80086d0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80086d4:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80086d6:	68bb      	ldr	r3, [r7, #8]
 80086d8:	681b      	ldr	r3, [r3, #0]
 80086da:	68ba      	ldr	r2, [r7, #8]
 80086dc:	4413      	add	r3, r2
 80086de:	4a18      	ldr	r2, [pc, #96]	; (8008740 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 80086e0:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80086e2:	68bb      	ldr	r3, [r7, #8]
 80086e4:	685b      	ldr	r3, [r3, #4]
 80086e6:	68ba      	ldr	r2, [r7, #8]
 80086e8:	4413      	add	r3, r2
 80086ea:	4a16      	ldr	r2, [pc, #88]	; (8008744 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 80086ec:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80086ee:	68bb      	ldr	r3, [r7, #8]
 80086f0:	689b      	ldr	r3, [r3, #8]
 80086f2:	68ba      	ldr	r2, [r7, #8]
 80086f4:	4413      	add	r3, r2
 80086f6:	60fb      	str	r3, [r7, #12]
 80086f8:	e00a      	b.n	8008710 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            //compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 80086fa:	4b11      	ldr	r3, [pc, #68]	; (8008740 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 80086fc:	4a12      	ldr	r2, [pc, #72]	; (8008748 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 80086fe:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8008700:	4a12      	ldr	r2, [pc, #72]	; (800874c <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 8008702:	4b10      	ldr	r3, [pc, #64]	; (8008744 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 8008704:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8008706:	88fb      	ldrh	r3, [r7, #6]
 8008708:	4a11      	ldr	r2, [pc, #68]	; (8008750 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800870a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800870e:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 8008710:	68fb      	ldr	r3, [r7, #12]
 8008712:	2b00      	cmp	r3, #0
 8008714:	d00d      	beq.n	8008732 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 8008716:	4a0f      	ldr	r2, [pc, #60]	; (8008754 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 8008718:	88fb      	ldrh	r3, [r7, #6]
 800871a:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800871c:	f000 f83e 	bl	800879c <_ZN17TypedTextDatabase8getFontsEv>
 8008720:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8008722:	f000 f833 	bl	800878c <_ZN17TypedTextDatabase15getInstanceSizeEv>
 8008726:	4603      	mov	r3, r0
 8008728:	461a      	mov	r2, r3
 800872a:	4621      	mov	r1, r4
 800872c:	68f8      	ldr	r0, [r7, #12]
 800872e:	f7ff ffa1 	bl	8008674 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 8008732:	bf00      	nop
 8008734:	3714      	adds	r7, #20
 8008736:	46bd      	mov	sp, r7
 8008738:	bd90      	pop	{r4, r7, pc}
 800873a:	bf00      	nop
 800873c:	200259d4 	.word	0x200259d4
 8008740:	200259dc 	.word	0x200259dc
 8008744:	200259e0 	.word	0x200259e0
 8008748:	08093b54 	.word	0x08093b54
 800874c:	08093b28 	.word	0x08093b28
 8008750:	08093ba4 	.word	0x08093ba4
 8008754:	200259d8 	.word	0x200259d8

08008758 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 8008758:	b480      	push	{r7}
 800875a:	b083      	sub	sp, #12
 800875c:	af00      	add	r7, sp, #0
 800875e:	6078      	str	r0, [r7, #4]
 8008760:	460b      	mov	r3, r1
 8008762:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8008764:	4b07      	ldr	r3, [pc, #28]	; (8008784 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 8008766:	681a      	ldr	r2, [r3, #0]
 8008768:	4b07      	ldr	r3, [pc, #28]	; (8008788 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800876a:	6819      	ldr	r1, [r3, #0]
 800876c:	887b      	ldrh	r3, [r7, #2]
 800876e:	009b      	lsls	r3, r3, #2
 8008770:	440b      	add	r3, r1
 8008772:	681b      	ldr	r3, [r3, #0]
 8008774:	005b      	lsls	r3, r3, #1
 8008776:	4413      	add	r3, r2
}
 8008778:	4618      	mov	r0, r3
 800877a:	370c      	adds	r7, #12
 800877c:	46bd      	mov	sp, r7
 800877e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008782:	4770      	bx	lr
 8008784:	200259dc 	.word	0x200259dc
 8008788:	200259e0 	.word	0x200259e0

0800878c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800878c:	b480      	push	{r7}
 800878e:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 8008790:	230b      	movs	r3, #11
}
 8008792:	4618      	mov	r0, r3
 8008794:	46bd      	mov	sp, r7
 8008796:	f85d 7b04 	ldr.w	r7, [sp], #4
 800879a:	4770      	bx	lr

0800879c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800879c:	b480      	push	{r7}
 800879e:	af00      	add	r7, sp, #0
    return _fonts;
 80087a0:	4b02      	ldr	r3, [pc, #8]	; (80087ac <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 80087a2:	4618      	mov	r0, r3
 80087a4:	46bd      	mov	sp, r7
 80087a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087aa:	4770      	bx	lr
 80087ac:	200259e4 	.word	0x200259e4

080087b0 <_Z41__static_initialization_and_destruction_0ii>:
    case 3:
        _fonts[3] = &(getFont_verdana_28_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 80087b0:	b580      	push	{r7, lr}
 80087b2:	b082      	sub	sp, #8
 80087b4:	af00      	add	r7, sp, #0
 80087b6:	6078      	str	r0, [r7, #4]
 80087b8:	6039      	str	r1, [r7, #0]
 80087ba:	687b      	ldr	r3, [r7, #4]
 80087bc:	2b01      	cmp	r3, #1
 80087be:	d118      	bne.n	80087f2 <_Z41__static_initialization_and_destruction_0ii+0x42>
 80087c0:	683b      	ldr	r3, [r7, #0]
 80087c2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80087c6:	4293      	cmp	r3, r2
 80087c8:	d113      	bne.n	80087f2 <_Z41__static_initialization_and_destruction_0ii+0x42>
    &(getFont_verdana_13_4bpp()),
 80087ca:	f7fd fd69 	bl	80062a0 <_Z23getFont_verdana_13_4bppv>
 80087ce:	4602      	mov	r2, r0
};
 80087d0:	4b0a      	ldr	r3, [pc, #40]	; (80087fc <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 80087d2:	601a      	str	r2, [r3, #0]
    &(getFont_verdana_36_4bpp()),
 80087d4:	f7fd fe2a 	bl	800642c <_Z23getFont_verdana_36_4bppv>
 80087d8:	4602      	mov	r2, r0
};
 80087da:	4b08      	ldr	r3, [pc, #32]	; (80087fc <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 80087dc:	605a      	str	r2, [r3, #4]
    &(getFont_verdana_25_4bpp()),
 80087de:	f7fd fda1 	bl	8006324 <_Z23getFont_verdana_25_4bppv>
 80087e2:	4602      	mov	r2, r0
};
 80087e4:	4b05      	ldr	r3, [pc, #20]	; (80087fc <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 80087e6:	609a      	str	r2, [r3, #8]
    &(getFont_verdana_28_4bpp())
 80087e8:	f7fd fdde 	bl	80063a8 <_Z23getFont_verdana_28_4bppv>
 80087ec:	4602      	mov	r2, r0
};
 80087ee:	4b03      	ldr	r3, [pc, #12]	; (80087fc <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 80087f0:	60da      	str	r2, [r3, #12]
}  // namespace TypedTextDatabase
 80087f2:	bf00      	nop
 80087f4:	3708      	adds	r7, #8
 80087f6:	46bd      	mov	sp, r7
 80087f8:	bd80      	pop	{r7, pc}
 80087fa:	bf00      	nop
 80087fc:	200259e4 	.word	0x200259e4

08008800 <_GLOBAL__sub_I__fonts>:
 8008800:	b580      	push	{r7, lr}
 8008802:	af00      	add	r7, sp, #0
 8008804:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8008808:	2001      	movs	r0, #1
 800880a:	f7ff ffd1 	bl	80087b0 <_Z41__static_initialization_and_destruction_0ii>
 800880e:	bd80      	pop	{r7, pc}

08008810 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8008810:	b580      	push	{r7, lr}
 8008812:	b082      	sub	sp, #8
 8008814:	af00      	add	r7, sp, #0
 8008816:	6078      	str	r0, [r7, #4]
 8008818:	4a05      	ldr	r2, [pc, #20]	; (8008830 <_ZN19FrontendApplicationD1Ev+0x20>)
 800881a:	687b      	ldr	r3, [r7, #4]
 800881c:	601a      	str	r2, [r3, #0]
 800881e:	687b      	ldr	r3, [r7, #4]
 8008820:	4618      	mov	r0, r3
 8008822:	f7fe f893 	bl	800694c <_ZN23FrontendApplicationBaseD1Ev>
 8008826:	687b      	ldr	r3, [r7, #4]
 8008828:	4618      	mov	r0, r3
 800882a:	3708      	adds	r7, #8
 800882c:	46bd      	mov	sp, r7
 800882e:	bd80      	pop	{r7, pc}
 8008830:	0801cd30 	.word	0x0801cd30

08008834 <_ZN19FrontendApplicationD0Ev>:
 8008834:	b580      	push	{r7, lr}
 8008836:	b082      	sub	sp, #8
 8008838:	af00      	add	r7, sp, #0
 800883a:	6078      	str	r0, [r7, #4]
 800883c:	6878      	ldr	r0, [r7, #4]
 800883e:	f7ff ffe7 	bl	8008810 <_ZN19FrontendApplicationD1Ev>
 8008842:	f44f 71a8 	mov.w	r1, #336	; 0x150
 8008846:	6878      	ldr	r0, [r7, #4]
 8008848:	f012 fc80 	bl	801b14c <_ZdlPvj>
 800884c:	687b      	ldr	r3, [r7, #4]
 800884e:	4618      	mov	r0, r3
 8008850:	3708      	adds	r7, #8
 8008852:	46bd      	mov	sp, r7
 8008854:	bd80      	pop	{r7, pc}

08008856 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8008856:	b580      	push	{r7, lr}
 8008858:	b082      	sub	sp, #8
 800885a:	af00      	add	r7, sp, #0
 800885c:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800885e:	687b      	ldr	r3, [r7, #4]
 8008860:	f8d3 314c 	ldr.w	r3, [r3, #332]	; 0x14c
 8008864:	4618      	mov	r0, r3
 8008866:	f000 f82d 	bl	80088c4 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800886a:	687b      	ldr	r3, [r7, #4]
 800886c:	4618      	mov	r0, r3
 800886e:	f004 fde3 	bl	800d438 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 8008872:	bf00      	nop
 8008874:	3708      	adds	r7, #8
 8008876:	46bd      	mov	sp, r7
 8008878:	bd80      	pop	{r7, pc}
	...

0800887c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800887c:	b580      	push	{r7, lr}
 800887e:	b084      	sub	sp, #16
 8008880:	af00      	add	r7, sp, #0
 8008882:	60f8      	str	r0, [r7, #12]
 8008884:	60b9      	str	r1, [r7, #8]
 8008886:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 8008888:	68fb      	ldr	r3, [r7, #12]
 800888a:	687a      	ldr	r2, [r7, #4]
 800888c:	68b9      	ldr	r1, [r7, #8]
 800888e:	4618      	mov	r0, r3
 8008890:	f7fe f8d6 	bl	8006a40 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8008894:	4a03      	ldr	r2, [pc, #12]	; (80088a4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 8008896:	68fb      	ldr	r3, [r7, #12]
 8008898:	601a      	str	r2, [r3, #0]
{

}
 800889a:	68fb      	ldr	r3, [r7, #12]
 800889c:	4618      	mov	r0, r3
 800889e:	3710      	adds	r7, #16
 80088a0:	46bd      	mov	sp, r7
 80088a2:	bd80      	pop	{r7, pc}
 80088a4:	0801cd30 	.word	0x0801cd30

080088a8 <_ZN5ModelC1Ev>:
#include <gui/model/ModelListener.hpp>
#include "main.h"

extern uint16_t value_update;

Model::Model() : modelListener(0)
 80088a8:	b480      	push	{r7}
 80088aa:	b083      	sub	sp, #12
 80088ac:	af00      	add	r7, sp, #0
 80088ae:	6078      	str	r0, [r7, #4]
 80088b0:	687b      	ldr	r3, [r7, #4]
 80088b2:	2200      	movs	r2, #0
 80088b4:	601a      	str	r2, [r3, #0]
{
}
 80088b6:	687b      	ldr	r3, [r7, #4]
 80088b8:	4618      	mov	r0, r3
 80088ba:	370c      	adds	r7, #12
 80088bc:	46bd      	mov	sp, r7
 80088be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088c2:	4770      	bx	lr

080088c4 <_ZN5Model4tickEv>:

void Model::tick()
{
 80088c4:	b580      	push	{r7, lr}
 80088c6:	b082      	sub	sp, #8
 80088c8:	af00      	add	r7, sp, #0
 80088ca:	6078      	str	r0, [r7, #4]
	UpdateValue();
 80088cc:	6878      	ldr	r0, [r7, #4]
 80088ce:	f000 f805 	bl	80088dc <_ZN5Model11UpdateValueEv>
}
 80088d2:	bf00      	nop
 80088d4:	3708      	adds	r7, #8
 80088d6:	46bd      	mov	sp, r7
 80088d8:	bd80      	pop	{r7, pc}
	...

080088dc <_ZN5Model11UpdateValueEv>:

void Model::UpdateValue (){
 80088dc:	b580      	push	{r7, lr}
 80088de:	b082      	sub	sp, #8
 80088e0:	af00      	add	r7, sp, #0
 80088e2:	6078      	str	r0, [r7, #4]
	value_update ++;
 80088e4:	4b0a      	ldr	r3, [pc, #40]	; (8008910 <_ZN5Model11UpdateValueEv+0x34>)
 80088e6:	881b      	ldrh	r3, [r3, #0]
 80088e8:	3301      	adds	r3, #1
 80088ea:	b29a      	uxth	r2, r3
 80088ec:	4b08      	ldr	r3, [pc, #32]	; (8008910 <_ZN5Model11UpdateValueEv+0x34>)
 80088ee:	801a      	strh	r2, [r3, #0]
	modelListener->UpdateValue(value_update);
 80088f0:	687b      	ldr	r3, [r7, #4]
 80088f2:	6818      	ldr	r0, [r3, #0]
 80088f4:	687b      	ldr	r3, [r7, #4]
 80088f6:	681b      	ldr	r3, [r3, #0]
 80088f8:	681b      	ldr	r3, [r3, #0]
 80088fa:	3308      	adds	r3, #8
 80088fc:	681b      	ldr	r3, [r3, #0]
 80088fe:	4a04      	ldr	r2, [pc, #16]	; (8008910 <_ZN5Model11UpdateValueEv+0x34>)
 8008900:	8812      	ldrh	r2, [r2, #0]
 8008902:	4611      	mov	r1, r2
 8008904:	4798      	blx	r3
}
 8008906:	bf00      	nop
 8008908:	3708      	adds	r7, #8
 800890a:	46bd      	mov	sp, r7
 800890c:	bd80      	pop	{r7, pc}
 800890e:	bf00      	nop
 8008910:	2002591c 	.word	0x2002591c

08008914 <_ZN8touchgfx9Presenter8activateEv>:
     * @brief Place initialization code for the Presenter here.
     *
     *        The activate function is called automatically when a screen transition causes
     *        this Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 8008914:	b480      	push	{r7}
 8008916:	b083      	sub	sp, #12
 8008918:	af00      	add	r7, sp, #0
 800891a:	6078      	str	r0, [r7, #4]
    {
    }
 800891c:	bf00      	nop
 800891e:	370c      	adds	r7, #12
 8008920:	46bd      	mov	sp, r7
 8008922:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008926:	4770      	bx	lr

08008928 <_ZN8touchgfx9Presenter10deactivateEv>:
     * @brief Place cleanup code for the Presenter here.
     *
     *        The deactivate function is called automatically when a screen transition causes
     *        this Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 8008928:	b480      	push	{r7}
 800892a:	b083      	sub	sp, #12
 800892c:	af00      	add	r7, sp, #0
 800892e:	6078      	str	r0, [r7, #4]
    {
    }
 8008930:	bf00      	nop
 8008932:	370c      	adds	r7, #12
 8008934:	46bd      	mov	sp, r7
 8008936:	f85d 7b04 	ldr.w	r7, [sp], #4
 800893a:	4770      	bx	lr

0800893c <_ZN8touchgfx9PresenterD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Presenter()
 800893c:	b480      	push	{r7}
 800893e:	b083      	sub	sp, #12
 8008940:	af00      	add	r7, sp, #0
 8008942:	6078      	str	r0, [r7, #4]
    {
 8008944:	4a04      	ldr	r2, [pc, #16]	; (8008958 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 8008946:	687b      	ldr	r3, [r7, #4]
 8008948:	601a      	str	r2, [r3, #0]
    }
 800894a:	687b      	ldr	r3, [r7, #4]
 800894c:	4618      	mov	r0, r3
 800894e:	370c      	adds	r7, #12
 8008950:	46bd      	mov	sp, r7
 8008952:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008956:	4770      	bx	lr
 8008958:	0801cdb0 	.word	0x0801cdb0

0800895c <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800895c:	b580      	push	{r7, lr}
 800895e:	b082      	sub	sp, #8
 8008960:	af00      	add	r7, sp, #0
 8008962:	6078      	str	r0, [r7, #4]
    }
 8008964:	6878      	ldr	r0, [r7, #4]
 8008966:	f7ff ffe9 	bl	800893c <_ZN8touchgfx9PresenterD1Ev>
 800896a:	2104      	movs	r1, #4
 800896c:	6878      	ldr	r0, [r7, #4]
 800896e:	f012 fbed 	bl	801b14c <_ZdlPvj>
 8008972:	687b      	ldr	r3, [r7, #4]
 8008974:	4618      	mov	r0, r3
 8008976:	3708      	adds	r7, #8
 8008978:	46bd      	mov	sp, r7
 800897a:	bd80      	pop	{r7, pc}

0800897c <_ZN8touchgfx9PresenterC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Presenter()
 800897c:	b480      	push	{r7}
 800897e:	b083      	sub	sp, #12
 8008980:	af00      	add	r7, sp, #0
 8008982:	6078      	str	r0, [r7, #4]
    {
 8008984:	4a04      	ldr	r2, [pc, #16]	; (8008998 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 8008986:	687b      	ldr	r3, [r7, #4]
 8008988:	601a      	str	r2, [r3, #0]
    }
 800898a:	687b      	ldr	r3, [r7, #4]
 800898c:	4618      	mov	r0, r3
 800898e:	370c      	adds	r7, #12
 8008990:	46bd      	mov	sp, r7
 8008992:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008996:	4770      	bx	lr
 8008998:	0801cdb0 	.word	0x0801cdb0

0800899c <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800899c:	b480      	push	{r7}
 800899e:	b083      	sub	sp, #12
 80089a0:	af00      	add	r7, sp, #0
 80089a2:	6078      	str	r0, [r7, #4]
 80089a4:	4a06      	ldr	r2, [pc, #24]	; (80089c0 <_ZN13ModelListenerC1Ev+0x24>)
 80089a6:	687b      	ldr	r3, [r7, #4]
 80089a8:	601a      	str	r2, [r3, #0]
 80089aa:	687b      	ldr	r3, [r7, #4]
 80089ac:	2200      	movs	r2, #0
 80089ae:	605a      	str	r2, [r3, #4]
 80089b0:	687b      	ldr	r3, [r7, #4]
 80089b2:	4618      	mov	r0, r3
 80089b4:	370c      	adds	r7, #12
 80089b6:	46bd      	mov	sp, r7
 80089b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089bc:	4770      	bx	lr
 80089be:	bf00      	nop
 80089c0:	0801cd9c 	.word	0x0801cd9c

080089c4 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 80089c4:	b480      	push	{r7}
 80089c6:	b083      	sub	sp, #12
 80089c8:	af00      	add	r7, sp, #0
 80089ca:	6078      	str	r0, [r7, #4]
 80089cc:	4a04      	ldr	r2, [pc, #16]	; (80089e0 <_ZN13ModelListenerD1Ev+0x1c>)
 80089ce:	687b      	ldr	r3, [r7, #4]
 80089d0:	601a      	str	r2, [r3, #0]
 80089d2:	687b      	ldr	r3, [r7, #4]
 80089d4:	4618      	mov	r0, r3
 80089d6:	370c      	adds	r7, #12
 80089d8:	46bd      	mov	sp, r7
 80089da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089de:	4770      	bx	lr
 80089e0:	0801cd9c 	.word	0x0801cd9c

080089e4 <_ZN13ModelListenerD0Ev>:
 80089e4:	b580      	push	{r7, lr}
 80089e6:	b082      	sub	sp, #8
 80089e8:	af00      	add	r7, sp, #0
 80089ea:	6078      	str	r0, [r7, #4]
 80089ec:	6878      	ldr	r0, [r7, #4]
 80089ee:	f7ff ffe9 	bl	80089c4 <_ZN13ModelListenerD1Ev>
 80089f2:	2108      	movs	r1, #8
 80089f4:	6878      	ldr	r0, [r7, #4]
 80089f6:	f012 fba9 	bl	801b14c <_ZdlPvj>
 80089fa:	687b      	ldr	r3, [r7, #4]
 80089fc:	4618      	mov	r0, r3
 80089fe:	3708      	adds	r7, #8
 8008a00:	46bd      	mov	sp, r7
 8008a02:	bd80      	pop	{r7, pc}

08008a04 <_ZN13ModelListener11UpdateValueEt>:
    virtual void UpdateValue(uint16_t value){}
 8008a04:	b480      	push	{r7}
 8008a06:	b083      	sub	sp, #12
 8008a08:	af00      	add	r7, sp, #0
 8008a0a:	6078      	str	r0, [r7, #4]
 8008a0c:	460b      	mov	r3, r1
 8008a0e:	807b      	strh	r3, [r7, #2]
 8008a10:	bf00      	nop
 8008a12:	370c      	adds	r7, #12
 8008a14:	46bd      	mov	sp, r7
 8008a16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a1a:	4770      	bx	lr

08008a1c <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8008a1c:	b580      	push	{r7, lr}
 8008a1e:	b082      	sub	sp, #8
 8008a20:	af00      	add	r7, sp, #0
 8008a22:	6078      	str	r0, [r7, #4]
 8008a24:	4a09      	ldr	r2, [pc, #36]	; (8008a4c <_ZN16Screen1PresenterD1Ev+0x30>)
 8008a26:	687b      	ldr	r3, [r7, #4]
 8008a28:	601a      	str	r2, [r3, #0]
 8008a2a:	4a09      	ldr	r2, [pc, #36]	; (8008a50 <_ZN16Screen1PresenterD1Ev+0x34>)
 8008a2c:	687b      	ldr	r3, [r7, #4]
 8008a2e:	605a      	str	r2, [r3, #4]
 8008a30:	687b      	ldr	r3, [r7, #4]
 8008a32:	3304      	adds	r3, #4
 8008a34:	4618      	mov	r0, r3
 8008a36:	f7ff ffc5 	bl	80089c4 <_ZN13ModelListenerD1Ev>
 8008a3a:	687b      	ldr	r3, [r7, #4]
 8008a3c:	4618      	mov	r0, r3
 8008a3e:	f7ff ff7d 	bl	800893c <_ZN8touchgfx9PresenterD1Ev>
 8008a42:	687b      	ldr	r3, [r7, #4]
 8008a44:	4618      	mov	r0, r3
 8008a46:	3708      	adds	r7, #8
 8008a48:	46bd      	mov	sp, r7
 8008a4a:	bd80      	pop	{r7, pc}
 8008a4c:	0801cd6c 	.word	0x0801cd6c
 8008a50:	0801cd88 	.word	0x0801cd88

08008a54 <_ZThn4_N16Screen1PresenterD1Ev>:
 8008a54:	f1a0 0004 	sub.w	r0, r0, #4
 8008a58:	e7e0      	b.n	8008a1c <_ZN16Screen1PresenterD1Ev>
 8008a5a:	bf00      	nop

08008a5c <_ZN16Screen1PresenterD0Ev>:
 8008a5c:	b580      	push	{r7, lr}
 8008a5e:	b082      	sub	sp, #8
 8008a60:	af00      	add	r7, sp, #0
 8008a62:	6078      	str	r0, [r7, #4]
 8008a64:	6878      	ldr	r0, [r7, #4]
 8008a66:	f7ff ffd9 	bl	8008a1c <_ZN16Screen1PresenterD1Ev>
 8008a6a:	2110      	movs	r1, #16
 8008a6c:	6878      	ldr	r0, [r7, #4]
 8008a6e:	f012 fb6d 	bl	801b14c <_ZdlPvj>
 8008a72:	687b      	ldr	r3, [r7, #4]
 8008a74:	4618      	mov	r0, r3
 8008a76:	3708      	adds	r7, #8
 8008a78:	46bd      	mov	sp, r7
 8008a7a:	bd80      	pop	{r7, pc}

08008a7c <_ZThn4_N16Screen1PresenterD0Ev>:
 8008a7c:	f1a0 0004 	sub.w	r0, r0, #4
 8008a80:	e7ec      	b.n	8008a5c <_ZN16Screen1PresenterD0Ev>
	...

08008a84 <_ZN16Screen1PresenterC1ER11Screen1View>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

Screen1Presenter::Screen1Presenter(Screen1View& v)
 8008a84:	b580      	push	{r7, lr}
 8008a86:	b082      	sub	sp, #8
 8008a88:	af00      	add	r7, sp, #0
 8008a8a:	6078      	str	r0, [r7, #4]
 8008a8c:	6039      	str	r1, [r7, #0]
    : view(v)
 8008a8e:	687b      	ldr	r3, [r7, #4]
 8008a90:	4618      	mov	r0, r3
 8008a92:	f7ff ff73 	bl	800897c <_ZN8touchgfx9PresenterC1Ev>
 8008a96:	687b      	ldr	r3, [r7, #4]
 8008a98:	3304      	adds	r3, #4
 8008a9a:	4618      	mov	r0, r3
 8008a9c:	f7ff ff7e 	bl	800899c <_ZN13ModelListenerC1Ev>
 8008aa0:	4a06      	ldr	r2, [pc, #24]	; (8008abc <_ZN16Screen1PresenterC1ER11Screen1View+0x38>)
 8008aa2:	687b      	ldr	r3, [r7, #4]
 8008aa4:	601a      	str	r2, [r3, #0]
 8008aa6:	4a06      	ldr	r2, [pc, #24]	; (8008ac0 <_ZN16Screen1PresenterC1ER11Screen1View+0x3c>)
 8008aa8:	687b      	ldr	r3, [r7, #4]
 8008aaa:	605a      	str	r2, [r3, #4]
 8008aac:	687b      	ldr	r3, [r7, #4]
 8008aae:	683a      	ldr	r2, [r7, #0]
 8008ab0:	60da      	str	r2, [r3, #12]
{

}
 8008ab2:	687b      	ldr	r3, [r7, #4]
 8008ab4:	4618      	mov	r0, r3
 8008ab6:	3708      	adds	r7, #8
 8008ab8:	46bd      	mov	sp, r7
 8008aba:	bd80      	pop	{r7, pc}
 8008abc:	0801cd6c 	.word	0x0801cd6c
 8008ac0:	0801cd88 	.word	0x0801cd88

08008ac4 <_ZN16Screen1Presenter8activateEv>:

void Screen1Presenter::activate()
{
 8008ac4:	b480      	push	{r7}
 8008ac6:	b083      	sub	sp, #12
 8008ac8:	af00      	add	r7, sp, #0
 8008aca:	6078      	str	r0, [r7, #4]

}
 8008acc:	bf00      	nop
 8008ace:	370c      	adds	r7, #12
 8008ad0:	46bd      	mov	sp, r7
 8008ad2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ad6:	4770      	bx	lr

08008ad8 <_ZN16Screen1Presenter10deactivateEv>:

void Screen1Presenter::deactivate()
{
 8008ad8:	b480      	push	{r7}
 8008ada:	b083      	sub	sp, #12
 8008adc:	af00      	add	r7, sp, #0
 8008ade:	6078      	str	r0, [r7, #4]

}
 8008ae0:	bf00      	nop
 8008ae2:	370c      	adds	r7, #12
 8008ae4:	46bd      	mov	sp, r7
 8008ae6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008aea:	4770      	bx	lr

08008aec <_ZN16Screen1Presenter11UpdateValueEt>:

void Screen1Presenter::UpdateValue(uint16_t value){
 8008aec:	b580      	push	{r7, lr}
 8008aee:	b082      	sub	sp, #8
 8008af0:	af00      	add	r7, sp, #0
 8008af2:	6078      	str	r0, [r7, #4]
 8008af4:	460b      	mov	r3, r1
 8008af6:	807b      	strh	r3, [r7, #2]
	view.UpdateValue(value);
 8008af8:	687b      	ldr	r3, [r7, #4]
 8008afa:	68da      	ldr	r2, [r3, #12]
 8008afc:	687b      	ldr	r3, [r7, #4]
 8008afe:	68db      	ldr	r3, [r3, #12]
 8008b00:	681b      	ldr	r3, [r3, #0]
 8008b02:	332c      	adds	r3, #44	; 0x2c
 8008b04:	681b      	ldr	r3, [r3, #0]
 8008b06:	8879      	ldrh	r1, [r7, #2]
 8008b08:	4610      	mov	r0, r2
 8008b0a:	4798      	blx	r3
}
 8008b0c:	bf00      	nop
 8008b0e:	3708      	adds	r7, #8
 8008b10:	46bd      	mov	sp, r7
 8008b12:	bd80      	pop	{r7, pc}

08008b14 <_ZThn4_N16Screen1Presenter11UpdateValueEt>:

    virtual void UpdateValue(uint16_t value);
 8008b14:	f1a0 0004 	sub.w	r0, r0, #4
 8008b18:	f7ff bfe8 	b.w	8008aec <_ZN16Screen1Presenter11UpdateValueEt>

08008b1c <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8008b1c:	b580      	push	{r7, lr}
 8008b1e:	b082      	sub	sp, #8
 8008b20:	af00      	add	r7, sp, #0
 8008b22:	6078      	str	r0, [r7, #4]
 8008b24:	4a05      	ldr	r2, [pc, #20]	; (8008b3c <_ZN11Screen1ViewD1Ev+0x20>)
 8008b26:	687b      	ldr	r3, [r7, #4]
 8008b28:	601a      	str	r2, [r3, #0]
 8008b2a:	687b      	ldr	r3, [r7, #4]
 8008b2c:	4618      	mov	r0, r3
 8008b2e:	f7fe fead 	bl	800788c <_ZN15Screen1ViewBaseD1Ev>
 8008b32:	687b      	ldr	r3, [r7, #4]
 8008b34:	4618      	mov	r0, r3
 8008b36:	3708      	adds	r7, #8
 8008b38:	46bd      	mov	sp, r7
 8008b3a:	bd80      	pop	{r7, pc}
 8008b3c:	0801cdc8 	.word	0x0801cdc8

08008b40 <_ZN11Screen1ViewD0Ev>:
 8008b40:	b580      	push	{r7, lr}
 8008b42:	b082      	sub	sp, #8
 8008b44:	af00      	add	r7, sp, #0
 8008b46:	6078      	str	r0, [r7, #4]
 8008b48:	6878      	ldr	r0, [r7, #4]
 8008b4a:	f7ff ffe7 	bl	8008b1c <_ZN11Screen1ViewD1Ev>
 8008b4e:	f240 51ec 	movw	r1, #1516	; 0x5ec
 8008b52:	6878      	ldr	r0, [r7, #4]
 8008b54:	f012 fafa 	bl	801b14c <_ZdlPvj>
 8008b58:	687b      	ldr	r3, [r7, #4]
 8008b5a:	4618      	mov	r0, r3
 8008b5c:	3708      	adds	r7, #8
 8008b5e:	46bd      	mov	sp, r7
 8008b60:	bd80      	pop	{r7, pc}
	...

08008b64 <_ZN11Screen1ViewC1Ev>:
#include <gui/screen1_screen/Screen1View.hpp>
#include "string.h"
Screen1View::Screen1View()
 8008b64:	b580      	push	{r7, lr}
 8008b66:	b082      	sub	sp, #8
 8008b68:	af00      	add	r7, sp, #0
 8008b6a:	6078      	str	r0, [r7, #4]
 8008b6c:	687b      	ldr	r3, [r7, #4]
 8008b6e:	4618      	mov	r0, r3
 8008b70:	f7fe ff3e 	bl	80079f0 <_ZN15Screen1ViewBaseC1Ev>
 8008b74:	4a03      	ldr	r2, [pc, #12]	; (8008b84 <_ZN11Screen1ViewC1Ev+0x20>)
 8008b76:	687b      	ldr	r3, [r7, #4]
 8008b78:	601a      	str	r2, [r3, #0]
{

}
 8008b7a:	687b      	ldr	r3, [r7, #4]
 8008b7c:	4618      	mov	r0, r3
 8008b7e:	3708      	adds	r7, #8
 8008b80:	46bd      	mov	sp, r7
 8008b82:	bd80      	pop	{r7, pc}
 8008b84:	0801cdc8 	.word	0x0801cdc8

08008b88 <_ZN11Screen1View11setupScreenEv>:

void Screen1View::setupScreen()
{
 8008b88:	b580      	push	{r7, lr}
 8008b8a:	b082      	sub	sp, #8
 8008b8c:	af00      	add	r7, sp, #0
 8008b8e:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::setupScreen();
 8008b90:	687b      	ldr	r3, [r7, #4]
 8008b92:	4618      	mov	r0, r3
 8008b94:	f7ff fb6c 	bl	8008270 <_ZN15Screen1ViewBase11setupScreenEv>
}
 8008b98:	bf00      	nop
 8008b9a:	3708      	adds	r7, #8
 8008b9c:	46bd      	mov	sp, r7
 8008b9e:	bd80      	pop	{r7, pc}

08008ba0 <_ZN11Screen1View14tearDownScreenEv>:

void Screen1View::tearDownScreen()
{
 8008ba0:	b580      	push	{r7, lr}
 8008ba2:	b082      	sub	sp, #8
 8008ba4:	af00      	add	r7, sp, #0
 8008ba6:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::tearDownScreen();
 8008ba8:	687b      	ldr	r3, [r7, #4]
 8008baa:	4618      	mov	r0, r3
 8008bac:	f7fe fbd8 	bl	8007360 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 8008bb0:	bf00      	nop
 8008bb2:	3708      	adds	r7, #8
 8008bb4:	46bd      	mov	sp, r7
 8008bb6:	bd80      	pop	{r7, pc}

08008bb8 <_ZN11Screen1View11UpdateValueEt>:
void Screen1View::UpdateValue(uint16_t value){
 8008bb8:	b480      	push	{r7}
 8008bba:	b083      	sub	sp, #12
 8008bbc:	af00      	add	r7, sp, #0
 8008bbe:	6078      	str	r0, [r7, #4]
 8008bc0:	460b      	mov	r3, r1
 8008bc2:	807b      	strh	r3, [r7, #2]
	/*
	memset(&textArea2Buffer,0,TEXTAREA2_SIZE);
    Unicode::snprintf(textArea2Buffer, TEXTAREA2_SIZE, "%d", value);
	textArea2.invalidate();
	*/
}
 8008bc4:	bf00      	nop
 8008bc6:	370c      	adds	r7, #12
 8008bc8:	46bd      	mov	sp, r7
 8008bca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bce:	4770      	bx	lr

08008bd0 <_ZN8touchgfx15TouchControllerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~TouchController()
 8008bd0:	b480      	push	{r7}
 8008bd2:	b083      	sub	sp, #12
 8008bd4:	af00      	add	r7, sp, #0
 8008bd6:	6078      	str	r0, [r7, #4]
    {
 8008bd8:	4a04      	ldr	r2, [pc, #16]	; (8008bec <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 8008bda:	687b      	ldr	r3, [r7, #4]
 8008bdc:	601a      	str	r2, [r3, #0]
    }
 8008bde:	687b      	ldr	r3, [r7, #4]
 8008be0:	4618      	mov	r0, r3
 8008be2:	370c      	adds	r7, #12
 8008be4:	46bd      	mov	sp, r7
 8008be6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bea:	4770      	bx	lr
 8008bec:	0801ce18 	.word	0x0801ce18

08008bf0 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 8008bf0:	b580      	push	{r7, lr}
 8008bf2:	b082      	sub	sp, #8
 8008bf4:	af00      	add	r7, sp, #0
 8008bf6:	6078      	str	r0, [r7, #4]
    }
 8008bf8:	6878      	ldr	r0, [r7, #4]
 8008bfa:	f7ff ffe9 	bl	8008bd0 <_ZN8touchgfx15TouchControllerD1Ev>
 8008bfe:	2104      	movs	r1, #4
 8008c00:	6878      	ldr	r0, [r7, #4]
 8008c02:	f012 faa3 	bl	801b14c <_ZdlPvj>
 8008c06:	687b      	ldr	r3, [r7, #4]
 8008c08:	4618      	mov	r0, r3
 8008c0a:	3708      	adds	r7, #8
 8008c0c:	46bd      	mov	sp, r7
 8008c0e:	bd80      	pop	{r7, pc}

08008c10 <_ZN20STM32TouchController4initEv>:
extern "C" {
#include "touch_screen_ft6236.h"
}

void STM32TouchController::init()
{
 8008c10:	b480      	push	{r7}
 8008c12:	b083      	sub	sp, #12
 8008c14:	af00      	add	r7, sp, #0
 8008c16:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 8008c18:	bf00      	nop
 8008c1a:	370c      	adds	r7, #12
 8008c1c:	46bd      	mov	sp, r7
 8008c1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c22:	4770      	bx	lr

08008c24 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8008c24:	b580      	push	{r7, lr}
 8008c26:	b086      	sub	sp, #24
 8008c28:	af00      	add	r7, sp, #0
 8008c2a:	60f8      	str	r0, [r7, #12]
 8008c2c:	60b9      	str	r1, [r7, #8]
 8008c2e:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     */
	TS_StateTypeDef state;
	BSP_TS_GetState(&state);
 8008c30:	f107 0310 	add.w	r3, r7, #16
 8008c34:	4618      	mov	r0, r3
 8008c36:	f7f8 ff3b 	bl	8001ab0 <BSP_TS_GetState>
	if (state.TouchDetected)
 8008c3a:	8a3b      	ldrh	r3, [r7, #16]
 8008c3c:	2b00      	cmp	r3, #0
 8008c3e:	d009      	beq.n	8008c54 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>
	{
		x = state.X;
 8008c40:	8a7b      	ldrh	r3, [r7, #18]
 8008c42:	461a      	mov	r2, r3
 8008c44:	68bb      	ldr	r3, [r7, #8]
 8008c46:	601a      	str	r2, [r3, #0]
		y = state.Y;
 8008c48:	8abb      	ldrh	r3, [r7, #20]
 8008c4a:	461a      	mov	r2, r3
 8008c4c:	687b      	ldr	r3, [r7, #4]
 8008c4e:	601a      	str	r2, [r3, #0]
		return true;
 8008c50:	2301      	movs	r3, #1
 8008c52:	e000      	b.n	8008c56 <_ZN20STM32TouchController11sampleTouchERlS0_+0x32>
	}
	return false;
 8008c54:	2300      	movs	r3, #0
}
 8008c56:	4618      	mov	r0, r3
 8008c58:	3718      	adds	r7, #24
 8008c5a:	46bd      	mov	sp, r7
 8008c5c:	bd80      	pop	{r7, pc}
	...

08008c60 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8008c60:	b580      	push	{r7, lr}
 8008c62:	b082      	sub	sp, #8
 8008c64:	af00      	add	r7, sp, #0
 8008c66:	6078      	str	r0, [r7, #4]
 8008c68:	4a05      	ldr	r2, [pc, #20]	; (8008c80 <_ZN20STM32TouchControllerD1Ev+0x20>)
 8008c6a:	687b      	ldr	r3, [r7, #4]
 8008c6c:	601a      	str	r2, [r3, #0]
 8008c6e:	687b      	ldr	r3, [r7, #4]
 8008c70:	4618      	mov	r0, r3
 8008c72:	f7ff ffad 	bl	8008bd0 <_ZN8touchgfx15TouchControllerD1Ev>
 8008c76:	687b      	ldr	r3, [r7, #4]
 8008c78:	4618      	mov	r0, r3
 8008c7a:	3708      	adds	r7, #8
 8008c7c:	46bd      	mov	sp, r7
 8008c7e:	bd80      	pop	{r7, pc}
 8008c80:	0801ce00 	.word	0x0801ce00

08008c84 <_ZN20STM32TouchControllerD0Ev>:
 8008c84:	b580      	push	{r7, lr}
 8008c86:	b082      	sub	sp, #8
 8008c88:	af00      	add	r7, sp, #0
 8008c8a:	6078      	str	r0, [r7, #4]
 8008c8c:	6878      	ldr	r0, [r7, #4]
 8008c8e:	f7ff ffe7 	bl	8008c60 <_ZN20STM32TouchControllerD1Ev>
 8008c92:	2104      	movs	r1, #4
 8008c94:	6878      	ldr	r0, [r7, #4]
 8008c96:	f012 fa59 	bl	801b14c <_ZdlPvj>
 8008c9a:	687b      	ldr	r3, [r7, #4]
 8008c9c:	4618      	mov	r0, r3
 8008c9e:	3708      	adds	r7, #8
 8008ca0:	46bd      	mov	sp, r7
 8008ca2:	bd80      	pop	{r7, pc}

08008ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 8008ca4:	b480      	push	{r7}
 8008ca6:	b083      	sub	sp, #12
 8008ca8:	af00      	add	r7, sp, #0
 8008caa:	4603      	mov	r3, r0
 8008cac:	71fb      	strb	r3, [r7, #7]

}
 8008cae:	bf00      	nop
 8008cb0:	370c      	adds	r7, #12
 8008cb2:	46bd      	mov	sp, r7
 8008cb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cb8:	4770      	bx	lr

08008cba <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 8008cba:	b480      	push	{r7}
 8008cbc:	b083      	sub	sp, #12
 8008cbe:	af00      	add	r7, sp, #0
 8008cc0:	4603      	mov	r3, r0
 8008cc2:	71fb      	strb	r3, [r7, #7]

}
 8008cc4:	bf00      	nop
 8008cc6:	370c      	adds	r7, #12
 8008cc8:	46bd      	mov	sp, r7
 8008cca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cce:	4770      	bx	lr

08008cd0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 8008cd0:	b480      	push	{r7}
 8008cd2:	b083      	sub	sp, #12
 8008cd4:	af00      	add	r7, sp, #0
 8008cd6:	4603      	mov	r3, r0
 8008cd8:	71fb      	strb	r3, [r7, #7]

}
 8008cda:	bf00      	nop
 8008cdc:	370c      	adds	r7, #12
 8008cde:	46bd      	mov	sp, r7
 8008ce0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ce4:	4770      	bx	lr
	...

08008ce8 <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 8008ce8:	b480      	push	{r7}
 8008cea:	b083      	sub	sp, #12
 8008cec:	af00      	add	r7, sp, #0
 8008cee:	6078      	str	r0, [r7, #4]
    {
 8008cf0:	4a04      	ldr	r2, [pc, #16]	; (8008d04 <_ZN8touchgfx3HALD1Ev+0x1c>)
 8008cf2:	687b      	ldr	r3, [r7, #4]
 8008cf4:	601a      	str	r2, [r3, #0]
    }
 8008cf6:	687b      	ldr	r3, [r7, #4]
 8008cf8:	4618      	mov	r0, r3
 8008cfa:	370c      	adds	r7, #12
 8008cfc:	46bd      	mov	sp, r7
 8008cfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d02:	4770      	bx	lr
 8008d04:	0801dba0 	.word	0x0801dba0

08008d08 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 8008d08:	b580      	push	{r7, lr}
 8008d0a:	b082      	sub	sp, #8
 8008d0c:	af00      	add	r7, sp, #0
 8008d0e:	6078      	str	r0, [r7, #4]
    }
 8008d10:	6878      	ldr	r0, [r7, #4]
 8008d12:	f7ff ffe9 	bl	8008ce8 <_ZN8touchgfx3HALD1Ev>
 8008d16:	2178      	movs	r1, #120	; 0x78
 8008d18:	6878      	ldr	r0, [r7, #4]
 8008d1a:	f012 fa17 	bl	801b14c <_ZdlPvj>
 8008d1e:	687b      	ldr	r3, [r7, #4]
 8008d20:	4618      	mov	r0, r3
 8008d22:	3708      	adds	r7, #8
 8008d24:	46bd      	mov	sp, r7
 8008d26:	bd80      	pop	{r7, pc}

08008d28 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 8008d28:	b480      	push	{r7}
 8008d2a:	b083      	sub	sp, #12
 8008d2c:	af00      	add	r7, sp, #0
 8008d2e:	6078      	str	r0, [r7, #4]
 8008d30:	460b      	mov	r3, r1
 8008d32:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 8008d34:	687b      	ldr	r3, [r7, #4]
 8008d36:	78fa      	ldrb	r2, [r7, #3]
 8008d38:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8008d3c:	687b      	ldr	r3, [r7, #4]
 8008d3e:	2201      	movs	r2, #1
 8008d40:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
    }
 8008d44:	bf00      	nop
 8008d46:	370c      	adds	r7, #12
 8008d48:	46bd      	mov	sp, r7
 8008d4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d4e:	4770      	bx	lr

08008d50 <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *        As default, will return whatever blitcaps are reported by the associated DMA
     *        object.
     *
     * @return a bitmask of the supported blitcaps.
     */
    virtual BlitOperations getBlitCaps()
 8008d50:	b580      	push	{r7, lr}
 8008d52:	b082      	sub	sp, #8
 8008d54:	af00      	add	r7, sp, #0
 8008d56:	6078      	str	r0, [r7, #4]
    {
        return dma.getBlitCaps();
 8008d58:	687b      	ldr	r3, [r7, #4]
 8008d5a:	685a      	ldr	r2, [r3, #4]
 8008d5c:	687b      	ldr	r3, [r7, #4]
 8008d5e:	685b      	ldr	r3, [r3, #4]
 8008d60:	681b      	ldr	r3, [r3, #0]
 8008d62:	681b      	ldr	r3, [r3, #0]
 8008d64:	4610      	mov	r0, r2
 8008d66:	4798      	blx	r3
 8008d68:	4603      	mov	r3, r0
    }
 8008d6a:	4618      	mov	r0, r3
 8008d6c:	3708      	adds	r7, #8
 8008d6e:	46bd      	mov	sp, r7
 8008d70:	bd80      	pop	{r7, pc}

08008d72 <_ZN8touchgfx3HAL15backPorchExitedEv>:
     * @brief Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     *        Has to be called from within the LCD IRQ rutine when the Back Porch Exit is
     *        reached.
     */
    virtual void backPorchExited()
 8008d72:	b580      	push	{r7, lr}
 8008d74:	b082      	sub	sp, #8
 8008d76:	af00      	add	r7, sp, #0
 8008d78:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 8008d7a:	6878      	ldr	r0, [r7, #4]
 8008d7c:	f003 f858 	bl	800be30 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8008d80:	687b      	ldr	r3, [r7, #4]
 8008d82:	681b      	ldr	r3, [r3, #0]
 8008d84:	3390      	adds	r3, #144	; 0x90
 8008d86:	681b      	ldr	r3, [r3, #0]
 8008d88:	6878      	ldr	r0, [r7, #4]
 8008d8a:	4798      	blx	r3
    }
 8008d8c:	bf00      	nop
 8008d8e:	3708      	adds	r7, #8
 8008d90:	46bd      	mov	sp, r7
 8008d92:	bd80      	pop	{r7, pc}

08008d94 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 8008d94:	b480      	push	{r7}
 8008d96:	b083      	sub	sp, #12
 8008d98:	af00      	add	r7, sp, #0
 8008d9a:	6078      	str	r0, [r7, #4]
 8008d9c:	6039      	str	r1, [r7, #0]
    {
        return false;
 8008d9e:	2300      	movs	r3, #0
    }
 8008da0:	4618      	mov	r0, r3
 8008da2:	370c      	adds	r7, #12
 8008da4:	46bd      	mov	sp, r7
 8008da6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008daa:	4770      	bx	lr

08008dac <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb>:
     * @param      useDoubleBuffering  (Optional) If true, reserve memory for an extra frame buffer.
     * @param      useAnimationStorage (Optional) If true, reserve memory for animation storage.
     *
     * @deprecated Use the setFramaBufferStartAddress with 'format' parameter instead of 'depth'
     */
    virtual void setFrameBufferStartAddress(void* adr, uint16_t depth = 16, bool useDoubleBuffering = true, bool useAnimationStorage = true)
 8008dac:	b590      	push	{r4, r7, lr}
 8008dae:	b08b      	sub	sp, #44	; 0x2c
 8008db0:	af00      	add	r7, sp, #0
 8008db2:	60f8      	str	r0, [r7, #12]
 8008db4:	60b9      	str	r1, [r7, #8]
 8008db6:	4611      	mov	r1, r2
 8008db8:	461a      	mov	r2, r3
 8008dba:	460b      	mov	r3, r1
 8008dbc:	80fb      	strh	r3, [r7, #6]
 8008dbe:	4613      	mov	r3, r2
 8008dc0:	717b      	strb	r3, [r7, #5]
    {
        uint16_t stride = lcd().framebufferStride();
 8008dc2:	f7fd fc75 	bl	80066b0 <_ZN8touchgfx3HAL3lcdEv>
 8008dc6:	4602      	mov	r2, r0
 8008dc8:	6813      	ldr	r3, [r2, #0]
 8008dca:	3328      	adds	r3, #40	; 0x28
 8008dcc:	681b      	ldr	r3, [r3, #0]
 8008dce:	4610      	mov	r0, r2
 8008dd0:	4798      	blx	r3
 8008dd2:	4603      	mov	r3, r0
 8008dd4:	837b      	strh	r3, [r7, #26]
        uint32_t bufferSizeInBytes = stride * FRAME_BUFFER_HEIGHT;
 8008dd6:	8b7b      	ldrh	r3, [r7, #26]
 8008dd8:	4a3d      	ldr	r2, [pc, #244]	; (8008ed0 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x124>)
 8008dda:	8812      	ldrh	r2, [r2, #0]
 8008ddc:	fb02 f303 	mul.w	r3, r2, r3
 8008de0:	617b      	str	r3, [r7, #20]
        uint8_t* ptr = (uint8_t*)adr;
 8008de2:	68bb      	ldr	r3, [r7, #8]
 8008de4:	627b      	str	r3, [r7, #36]	; 0x24
        void* double_buf = 0;
 8008de6:	2300      	movs	r3, #0
 8008de8:	623b      	str	r3, [r7, #32]
        void* anim_store = 0;
 8008dea:	2300      	movs	r3, #0
 8008dec:	61fb      	str	r3, [r7, #28]
        if (useDoubleBuffering)
 8008dee:	797b      	ldrb	r3, [r7, #5]
 8008df0:	2b00      	cmp	r3, #0
 8008df2:	d005      	beq.n	8008e00 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x54>
        {
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer)
 8008df4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8008df6:	697b      	ldr	r3, [r7, #20]
 8008df8:	4413      	add	r3, r2
 8008dfa:	627b      	str	r3, [r7, #36]	; 0x24
            double_buf = (void*)ptr;
 8008dfc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008dfe:	623b      	str	r3, [r7, #32]
        }
        if (useAnimationStorage)
 8008e00:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
 8008e04:	2b00      	cmp	r3, #0
 8008e06:	d005      	beq.n	8008e14 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x68>
        {
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer and possibly double buffer)
 8008e08:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8008e0a:	697b      	ldr	r3, [r7, #20]
 8008e0c:	4413      	add	r3, r2
 8008e0e:	627b      	str	r3, [r7, #36]	; 0x24
            anim_store = (void*)ptr;
 8008e10:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008e12:	61fb      	str	r3, [r7, #28]
        }
        switch (depth)
 8008e14:	88fb      	ldrh	r3, [r7, #6]
 8008e16:	3b01      	subs	r3, #1
 8008e18:	2b1f      	cmp	r3, #31
 8008e1a:	d84d      	bhi.n	8008eb8 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x10c>
 8008e1c:	a201      	add	r2, pc, #4	; (adr r2, 8008e24 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x78>)
 8008e1e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008e22:	bf00      	nop
 8008e24:	08008ea5 	.word	0x08008ea5
 8008e28:	08008ea5 	.word	0x08008ea5
 8008e2c:	08008eb9 	.word	0x08008eb9
 8008e30:	08008ea5 	.word	0x08008ea5
 8008e34:	08008eb9 	.word	0x08008eb9
 8008e38:	08008eb9 	.word	0x08008eb9
 8008e3c:	08008eb9 	.word	0x08008eb9
 8008e40:	08008ea5 	.word	0x08008ea5
 8008e44:	08008eb9 	.word	0x08008eb9
 8008e48:	08008eb9 	.word	0x08008eb9
 8008e4c:	08008eb9 	.word	0x08008eb9
 8008e50:	08008eb9 	.word	0x08008eb9
 8008e54:	08008eb9 	.word	0x08008eb9
 8008e58:	08008eb9 	.word	0x08008eb9
 8008e5c:	08008eb9 	.word	0x08008eb9
 8008e60:	08008ea5 	.word	0x08008ea5
 8008e64:	08008eb9 	.word	0x08008eb9
 8008e68:	08008eb9 	.word	0x08008eb9
 8008e6c:	08008eb9 	.word	0x08008eb9
 8008e70:	08008eb9 	.word	0x08008eb9
 8008e74:	08008eb9 	.word	0x08008eb9
 8008e78:	08008eb9 	.word	0x08008eb9
 8008e7c:	08008eb9 	.word	0x08008eb9
 8008e80:	08008ea5 	.word	0x08008ea5
 8008e84:	08008eb9 	.word	0x08008eb9
 8008e88:	08008eb9 	.word	0x08008eb9
 8008e8c:	08008eb9 	.word	0x08008eb9
 8008e90:	08008eb9 	.word	0x08008eb9
 8008e94:	08008eb9 	.word	0x08008eb9
 8008e98:	08008eb9 	.word	0x08008eb9
 8008e9c:	08008eb9 	.word	0x08008eb9
 8008ea0:	08008ea5 	.word	0x08008ea5
        case 16:
        case 8:
        case 4:
        case 2:
        case 1:
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 8008ea4:	68fb      	ldr	r3, [r7, #12]
 8008ea6:	681b      	ldr	r3, [r3, #0]
 8008ea8:	3374      	adds	r3, #116	; 0x74
 8008eaa:	681c      	ldr	r4, [r3, #0]
 8008eac:	69fb      	ldr	r3, [r7, #28]
 8008eae:	6a3a      	ldr	r2, [r7, #32]
 8008eb0:	68b9      	ldr	r1, [r7, #8]
 8008eb2:	68f8      	ldr	r0, [r7, #12]
 8008eb4:	47a0      	blx	r4
            break;
 8008eb6:	e006      	b.n	8008ec6 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x11a>
        default:
            assert(0 && "Unsupported bit depth");
 8008eb8:	4b06      	ldr	r3, [pc, #24]	; (8008ed4 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x128>)
 8008eba:	4a07      	ldr	r2, [pc, #28]	; (8008ed8 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x12c>)
 8008ebc:	f240 3125 	movw	r1, #805	; 0x325
 8008ec0:	4806      	ldr	r0, [pc, #24]	; (8008edc <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x130>)
 8008ec2:	f012 f96f 	bl	801b1a4 <__assert_func>
            break;
        }
    }
 8008ec6:	bf00      	nop
 8008ec8:	372c      	adds	r7, #44	; 0x2c
 8008eca:	46bd      	mov	sp, r7
 8008ecc:	bd90      	pop	{r4, r7, pc}
 8008ece:	bf00      	nop
 8008ed0:	20026eac 	.word	0x20026eac
 8008ed4:	0801c628 	.word	0x0801c628
 8008ed8:	0801cf2c 	.word	0x0801cf2c
 8008edc:	0801c648 	.word	0x0801c648

08008ee0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     *
     * @param [in] frameBuffer      Buffer for frame buffer data, must be non-null.
     * @param [in] doubleBuffer     If non-null, buffer for double buffer data. If null double buffering is disabled.
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage is disabled.
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8008ee0:	b580      	push	{r7, lr}
 8008ee2:	b084      	sub	sp, #16
 8008ee4:	af00      	add	r7, sp, #0
 8008ee6:	60f8      	str	r0, [r7, #12]
 8008ee8:	60b9      	str	r1, [r7, #8]
 8008eea:	607a      	str	r2, [r7, #4]
 8008eec:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8008eee:	68bb      	ldr	r3, [r7, #8]
 8008ef0:	2b00      	cmp	r3, #0
 8008ef2:	d106      	bne.n	8008f02 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 8008ef4:	4b11      	ldr	r3, [pc, #68]	; (8008f3c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 8008ef6:	4a12      	ldr	r2, [pc, #72]	; (8008f40 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 8008ef8:	f240 3137 	movw	r1, #823	; 0x337
 8008efc:	4811      	ldr	r0, [pc, #68]	; (8008f44 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x64>)
 8008efe:	f012 f951 	bl	801b1a4 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 8008f02:	68fb      	ldr	r3, [r7, #12]
 8008f04:	68ba      	ldr	r2, [r7, #8]
 8008f06:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8008f08:	68fb      	ldr	r3, [r7, #12]
 8008f0a:	687a      	ldr	r2, [r7, #4]
 8008f0c:	641a      	str	r2, [r3, #64]	; 0x40
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8008f0e:	68fb      	ldr	r3, [r7, #12]
 8008f10:	683a      	ldr	r2, [r7, #0]
 8008f12:	645a      	str	r2, [r3, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8008f14:	687b      	ldr	r3, [r7, #4]
 8008f16:	2b00      	cmp	r3, #0
 8008f18:	bf14      	ite	ne
 8008f1a:	2301      	movne	r3, #1
 8008f1c:	2300      	moveq	r3, #0
 8008f1e:	b2da      	uxtb	r2, r3
 8008f20:	4b09      	ldr	r3, [pc, #36]	; (8008f48 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x68>)
 8008f22:	701a      	strb	r2, [r3, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8008f24:	683b      	ldr	r3, [r7, #0]
 8008f26:	2b00      	cmp	r3, #0
 8008f28:	bf14      	ite	ne
 8008f2a:	2301      	movne	r3, #1
 8008f2c:	2300      	moveq	r3, #0
 8008f2e:	b2da      	uxtb	r2, r3
 8008f30:	4b06      	ldr	r3, [pc, #24]	; (8008f4c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x6c>)
 8008f32:	701a      	strb	r2, [r3, #0]
    }
 8008f34:	bf00      	nop
 8008f36:	3710      	adds	r7, #16
 8008f38:	46bd      	mov	sp, r7
 8008f3a:	bd80      	pop	{r7, pc}
 8008f3c:	0801c68c 	.word	0x0801c68c
 8008f40:	0801cedc 	.word	0x0801cedc
 8008f44:	0801c648 	.word	0x0801c648
 8008f48:	20026eae 	.word	0x20026eae
 8008f4c:	20026eaf 	.word	0x20026eaf

08008f50 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param ms Number of milliseconds to wait.
     *
     * @see void registerTaskDelayFunction(void (*delayF)(uint16_t))
     */
    virtual void taskDelay(uint16_t ms)
 8008f50:	b580      	push	{r7, lr}
 8008f52:	b082      	sub	sp, #8
 8008f54:	af00      	add	r7, sp, #0
 8008f56:	6078      	str	r0, [r7, #4]
 8008f58:	460b      	mov	r3, r1
 8008f5a:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 8008f5c:	687b      	ldr	r3, [r7, #4]
 8008f5e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008f60:	2b00      	cmp	r3, #0
 8008f62:	d004      	beq.n	8008f6e <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 8008f64:	687b      	ldr	r3, [r7, #4]
 8008f66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008f68:	887a      	ldrh	r2, [r7, #2]
 8008f6a:	4610      	mov	r0, r2
 8008f6c:	4798      	blx	r3
        }
    }
 8008f6e:	bf00      	nop
 8008f70:	3708      	adds	r7, #8
 8008f72:	46bd      	mov	sp, r7
 8008f74:	bd80      	pop	{r7, pc}

08008f76 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA implementation.
     *        As default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 8008f76:	b580      	push	{r7, lr}
 8008f78:	b082      	sub	sp, #8
 8008f7a:	af00      	add	r7, sp, #0
 8008f7c:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 8008f7e:	687b      	ldr	r3, [r7, #4]
 8008f80:	685a      	ldr	r2, [r3, #4]
 8008f82:	687b      	ldr	r3, [r7, #4]
 8008f84:	685b      	ldr	r3, [r3, #4]
 8008f86:	681b      	ldr	r3, [r3, #0]
 8008f88:	3318      	adds	r3, #24
 8008f8a:	681b      	ldr	r3, [r3, #0]
 8008f8c:	4610      	mov	r0, r2
 8008f8e:	4798      	blx	r3
 8008f90:	4603      	mov	r3, r0
    }
 8008f92:	4618      	mov	r0, r3
 8008f94:	3708      	adds	r7, #8
 8008f96:	46bd      	mov	sp, r7
 8008f98:	bd80      	pop	{r7, pc}
	...

08008f9c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
     *
     * @brief Perform the actual display orientation change.
     *
     *        Perform the actual display orientation change.
     */
    virtual void performDisplayOrientationChange()
 8008f9c:	b480      	push	{r7}
 8008f9e:	b083      	sub	sp, #12
 8008fa0:	af00      	add	r7, sp, #0
 8008fa2:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 8008fa4:	687b      	ldr	r3, [r7, #4]
 8008fa6:	f893 2074 	ldrb.w	r2, [r3, #116]	; 0x74
 8008faa:	687b      	ldr	r3, [r7, #4]
 8008fac:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8008fb0:	429a      	cmp	r2, r3
 8008fb2:	d017      	beq.n	8008fe4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x48>
        {
            if (DISPLAY_ROTATION == rotate0)
 8008fb4:	4b1a      	ldr	r3, [pc, #104]	; (8009020 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 8008fb6:	781b      	ldrb	r3, [r3, #0]
 8008fb8:	2b00      	cmp	r3, #0
 8008fba:	d12a      	bne.n	8009012 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
            {
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8008fbc:	4b19      	ldr	r3, [pc, #100]	; (8009024 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 8008fbe:	881a      	ldrh	r2, [r3, #0]
 8008fc0:	4b19      	ldr	r3, [pc, #100]	; (8009028 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 8008fc2:	801a      	strh	r2, [r3, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8008fc4:	4b19      	ldr	r3, [pc, #100]	; (800902c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 8008fc6:	881a      	ldrh	r2, [r3, #0]
 8008fc8:	4b19      	ldr	r3, [pc, #100]	; (8009030 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 8008fca:	801a      	strh	r2, [r3, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 8008fcc:	4b16      	ldr	r3, [pc, #88]	; (8009028 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 8008fce:	881a      	ldrh	r2, [r3, #0]
 8008fd0:	4b16      	ldr	r3, [pc, #88]	; (800902c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 8008fd2:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 8008fd4:	4b16      	ldr	r3, [pc, #88]	; (8009030 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 8008fd6:	881a      	ldrh	r2, [r3, #0]
 8008fd8:	4b12      	ldr	r3, [pc, #72]	; (8009024 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 8008fda:	801a      	strh	r2, [r3, #0]
                DISPLAY_ROTATION = rotate90;
 8008fdc:	4b10      	ldr	r3, [pc, #64]	; (8009020 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 8008fde:	2201      	movs	r2, #1
 8008fe0:	701a      	strb	r2, [r3, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
            DISPLAY_ROTATION = rotate0;
        }
    }
 8008fe2:	e016      	b.n	8009012 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
        else if (DISPLAY_ROTATION != rotate0)
 8008fe4:	4b0e      	ldr	r3, [pc, #56]	; (8009020 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 8008fe6:	781b      	ldrb	r3, [r3, #0]
 8008fe8:	2b00      	cmp	r3, #0
 8008fea:	d012      	beq.n	8009012 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 8008fec:	4b0f      	ldr	r3, [pc, #60]	; (800902c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 8008fee:	881a      	ldrh	r2, [r3, #0]
 8008ff0:	4b0d      	ldr	r3, [pc, #52]	; (8009028 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 8008ff2:	801a      	strh	r2, [r3, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 8008ff4:	4b0b      	ldr	r3, [pc, #44]	; (8009024 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 8008ff6:	881a      	ldrh	r2, [r3, #0]
 8008ff8:	4b0d      	ldr	r3, [pc, #52]	; (8009030 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 8008ffa:	801a      	strh	r2, [r3, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 8008ffc:	4b0c      	ldr	r3, [pc, #48]	; (8009030 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 8008ffe:	881a      	ldrh	r2, [r3, #0]
 8009000:	4b0a      	ldr	r3, [pc, #40]	; (800902c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 8009002:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 8009004:	4b08      	ldr	r3, [pc, #32]	; (8009028 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 8009006:	881a      	ldrh	r2, [r3, #0]
 8009008:	4b06      	ldr	r3, [pc, #24]	; (8009024 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800900a:	801a      	strh	r2, [r3, #0]
            DISPLAY_ROTATION = rotate0;
 800900c:	4b04      	ldr	r3, [pc, #16]	; (8009020 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800900e:	2200      	movs	r2, #0
 8009010:	701a      	strb	r2, [r3, #0]
    }
 8009012:	bf00      	nop
 8009014:	370c      	adds	r7, #12
 8009016:	46bd      	mov	sp, r7
 8009018:	f85d 7b04 	ldr.w	r7, [sp], #4
 800901c:	4770      	bx	lr
 800901e:	bf00      	nop
 8009020:	20026ea8 	.word	0x20026ea8
 8009024:	20026ea4 	.word	0x20026ea4
 8009028:	20026eaa 	.word	0x20026eaa
 800902c:	20026ea6 	.word	0x20026ea6
 8009030:	20026eac 	.word	0x20026eac

08009034 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 8009034:	b580      	push	{r7, lr}
 8009036:	b082      	sub	sp, #8
 8009038:	af00      	add	r7, sp, #0
 800903a:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 800903c:	687b      	ldr	r3, [r7, #4]
 800903e:	4618      	mov	r0, r3
 8009040:	f002 f978 	bl	800b334 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 8009044:	bf00      	nop
 8009046:	3708      	adds	r7, #8
 8009048:	46bd      	mov	sp, r7
 800904a:	bd80      	pop	{r7, pc}

0800904c <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 800904c:	b580      	push	{r7, lr}
 800904e:	b082      	sub	sp, #8
 8009050:	af00      	add	r7, sp, #0
 8009052:	6078      	str	r0, [r7, #4]
 8009054:	4a05      	ldr	r2, [pc, #20]	; (800906c <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 8009056:	687b      	ldr	r3, [r7, #4]
 8009058:	601a      	str	r2, [r3, #0]
 800905a:	687b      	ldr	r3, [r7, #4]
 800905c:	4618      	mov	r0, r3
 800905e:	f7ff fe43 	bl	8008ce8 <_ZN8touchgfx3HALD1Ev>
 8009062:	687b      	ldr	r3, [r7, #4]
 8009064:	4618      	mov	r0, r3
 8009066:	3708      	adds	r7, #8
 8009068:	46bd      	mov	sp, r7
 800906a:	bd80      	pop	{r7, pc}
 800906c:	0801d104 	.word	0x0801d104

08009070 <_ZN20TouchGFXGeneratedHALD0Ev>:
 8009070:	b580      	push	{r7, lr}
 8009072:	b082      	sub	sp, #8
 8009074:	af00      	add	r7, sp, #0
 8009076:	6078      	str	r0, [r7, #4]
 8009078:	6878      	ldr	r0, [r7, #4]
 800907a:	f7ff ffe7 	bl	800904c <_ZN20TouchGFXGeneratedHALD1Ev>
 800907e:	2178      	movs	r1, #120	; 0x78
 8009080:	6878      	ldr	r0, [r7, #4]
 8009082:	f012 f863 	bl	801b14c <_ZdlPvj>
 8009086:	687b      	ldr	r3, [r7, #4]
 8009088:	4618      	mov	r0, r3
 800908a:	3708      	adds	r7, #8
 800908c:	46bd      	mov	sp, r7
 800908e:	bd80      	pop	{r7, pc}

08009090 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 8009090:	b580      	push	{r7, lr}
 8009092:	b082      	sub	sp, #8
 8009094:	af00      	add	r7, sp, #0
 8009096:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 8009098:	687b      	ldr	r3, [r7, #4]
 800909a:	4618      	mov	r0, r3
 800909c:	f7ff ffca 	bl	8009034 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 80090a0:	bf00      	nop
 80090a2:	3708      	adds	r7, #8
 80090a4:	46bd      	mov	sp, r7
 80090a6:	bd80      	pop	{r7, pc}

080090a8 <_ZN11TouchGFXHAL10initializeEv>:
#include "stm32f4xx.h"

using namespace touchgfx;

void TouchGFXHAL::initialize()
{
 80090a8:	b580      	push	{r7, lr}
 80090aa:	b082      	sub	sp, #8
 80090ac:	af00      	add	r7, sp, #0
 80090ae:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80090b0:	687b      	ldr	r3, [r7, #4]
 80090b2:	4618      	mov	r0, r3
 80090b4:	f001 fad6 	bl	800a664 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 80090b8:	bf00      	nop
 80090ba:	3708      	adds	r7, #8
 80090bc:	46bd      	mov	sp, r7
 80090be:	bd80      	pop	{r7, pc}

080090c0 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 80090c0:	b580      	push	{r7, lr}
 80090c2:	b082      	sub	sp, #8
 80090c4:	af00      	add	r7, sp, #0
 80090c6:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80090c8:	687b      	ldr	r3, [r7, #4]
 80090ca:	4618      	mov	r0, r3
 80090cc:	f001 fb58 	bl	800a780 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 80090d0:	4603      	mov	r3, r0
}
 80090d2:	4618      	mov	r0, r3
 80090d4:	3708      	adds	r7, #8
 80090d6:	46bd      	mov	sp, r7
 80090d8:	bd80      	pop	{r7, pc}

080090da <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 80090da:	b580      	push	{r7, lr}
 80090dc:	b082      	sub	sp, #8
 80090de:	af00      	add	r7, sp, #0
 80090e0:	6078      	str	r0, [r7, #4]
 80090e2:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80090e4:	687b      	ldr	r3, [r7, #4]
 80090e6:	6839      	ldr	r1, [r7, #0]
 80090e8:	4618      	mov	r0, r3
 80090ea:	f001 fb57 	bl	800a79c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 80090ee:	bf00      	nop
 80090f0:	3708      	adds	r7, #8
 80090f2:	46bd      	mov	sp, r7
 80090f4:	bd80      	pop	{r7, pc}

080090f6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 80090f6:	b580      	push	{r7, lr}
 80090f8:	b082      	sub	sp, #8
 80090fa:	af00      	add	r7, sp, #0
 80090fc:	6078      	str	r0, [r7, #4]
 80090fe:	6039      	str	r1, [r7, #0]
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8009100:	687b      	ldr	r3, [r7, #4]
 8009102:	6839      	ldr	r1, [r7, #0]
 8009104:	4618      	mov	r0, r3
 8009106:	f001 fb5f 	bl	800a7c8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 800910a:	bf00      	nop
 800910c:	3708      	adds	r7, #8
 800910e:	46bd      	mov	sp, r7
 8009110:	bd80      	pop	{r7, pc}

08009112 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 8009112:	b580      	push	{r7, lr}
 8009114:	b082      	sub	sp, #8
 8009116:	af00      	add	r7, sp, #0
 8009118:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800911a:	687b      	ldr	r3, [r7, #4]
 800911c:	4618      	mov	r0, r3
 800911e:	f001 fad5 	bl	800a6cc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 8009122:	bf00      	nop
 8009124:	3708      	adds	r7, #8
 8009126:	46bd      	mov	sp, r7
 8009128:	bd80      	pop	{r7, pc}

0800912a <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800912a:	b580      	push	{r7, lr}
 800912c:	b082      	sub	sp, #8
 800912e:	af00      	add	r7, sp, #0
 8009130:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8009132:	687b      	ldr	r3, [r7, #4]
 8009134:	4618      	mov	r0, r3
 8009136:	f001 fad9 	bl	800a6ec <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800913a:	bf00      	nop
 800913c:	3708      	adds	r7, #8
 800913e:	46bd      	mov	sp, r7
 8009140:	bd80      	pop	{r7, pc}

08009142 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 8009142:	b580      	push	{r7, lr}
 8009144:	b082      	sub	sp, #8
 8009146:	af00      	add	r7, sp, #0
 8009148:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800914a:	687b      	ldr	r3, [r7, #4]
 800914c:	4618      	mov	r0, r3
 800914e:	f001 fadb 	bl	800a708 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 8009152:	bf00      	nop
 8009154:	3708      	adds	r7, #8
 8009156:	46bd      	mov	sp, r7
 8009158:	bd80      	pop	{r7, pc}

0800915a <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800915a:	b580      	push	{r7, lr}
 800915c:	b082      	sub	sp, #8
 800915e:	af00      	add	r7, sp, #0
 8009160:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8009162:	687b      	ldr	r3, [r7, #4]
 8009164:	4618      	mov	r0, r3
 8009166:	f001 fadd 	bl	800a724 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800916a:	bf00      	nop
 800916c:	3708      	adds	r7, #8
 800916e:	46bd      	mov	sp, r7
 8009170:	bd80      	pop	{r7, pc}
	...

08009174 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8009174:	b580      	push	{r7, lr}
 8009176:	b082      	sub	sp, #8
 8009178:	af00      	add	r7, sp, #0
 800917a:	6078      	str	r0, [r7, #4]
 800917c:	4a05      	ldr	r2, [pc, #20]	; (8009194 <_ZN11TouchGFXHALD1Ev+0x20>)
 800917e:	687b      	ldr	r3, [r7, #4]
 8009180:	601a      	str	r2, [r3, #0]
 8009182:	687b      	ldr	r3, [r7, #4]
 8009184:	4618      	mov	r0, r3
 8009186:	f7ff ff61 	bl	800904c <_ZN20TouchGFXGeneratedHALD1Ev>
 800918a:	687b      	ldr	r3, [r7, #4]
 800918c:	4618      	mov	r0, r3
 800918e:	3708      	adds	r7, #8
 8009190:	46bd      	mov	sp, r7
 8009192:	bd80      	pop	{r7, pc}
 8009194:	0801ce30 	.word	0x0801ce30

08009198 <_ZN11TouchGFXHALD0Ev>:
 8009198:	b580      	push	{r7, lr}
 800919a:	b082      	sub	sp, #8
 800919c:	af00      	add	r7, sp, #0
 800919e:	6078      	str	r0, [r7, #4]
 80091a0:	6878      	ldr	r0, [r7, #4]
 80091a2:	f7ff ffe7 	bl	8009174 <_ZN11TouchGFXHALD1Ev>
 80091a6:	2178      	movs	r1, #120	; 0x78
 80091a8:	6878      	ldr	r0, [r7, #4]
 80091aa:	f011 ffcf 	bl	801b14c <_ZdlPvj>
 80091ae:	687b      	ldr	r3, [r7, #4]
 80091b0:	4618      	mov	r0, r3
 80091b2:	3708      	adds	r7, #8
 80091b4:	46bd      	mov	sp, r7
 80091b6:	bd80      	pop	{r7, pc}

080091b8 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 80091b8:	b480      	push	{r7}
 80091ba:	af00      	add	r7, sp, #0
  fb_sem = 0;
 80091bc:	4b05      	ldr	r3, [pc, #20]	; (80091d4 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 80091be:	2200      	movs	r2, #0
 80091c0:	601a      	str	r2, [r3, #0]
  vsync_sem = 0;
 80091c2:	4b05      	ldr	r3, [pc, #20]	; (80091d8 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 80091c4:	2200      	movs	r2, #0
 80091c6:	601a      	str	r2, [r3, #0]
}
 80091c8:	bf00      	nop
 80091ca:	46bd      	mov	sp, r7
 80091cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091d0:	4770      	bx	lr
 80091d2:	bf00      	nop
 80091d4:	200259f4 	.word	0x200259f4
 80091d8:	200259f8 	.word	0x200259f8

080091dc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 80091dc:	b480      	push	{r7}
 80091de:	af00      	add	r7, sp, #0
  while(fb_sem);
 80091e0:	4b08      	ldr	r3, [pc, #32]	; (8009204 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 80091e2:	681b      	ldr	r3, [r3, #0]
 80091e4:	2b00      	cmp	r3, #0
 80091e6:	bf14      	ite	ne
 80091e8:	2301      	movne	r3, #1
 80091ea:	2300      	moveq	r3, #0
 80091ec:	b2db      	uxtb	r3, r3
 80091ee:	2b00      	cmp	r3, #0
 80091f0:	d000      	beq.n	80091f4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x18>
 80091f2:	e7f5      	b.n	80091e0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x4>
  fb_sem = 1;
 80091f4:	4b03      	ldr	r3, [pc, #12]	; (8009204 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 80091f6:	2201      	movs	r2, #1
 80091f8:	601a      	str	r2, [r3, #0]
}
 80091fa:	bf00      	nop
 80091fc:	46bd      	mov	sp, r7
 80091fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009202:	4770      	bx	lr
 8009204:	200259f4 	.word	0x200259f4

08009208 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 8009208:	b480      	push	{r7}
 800920a:	af00      	add	r7, sp, #0
  fb_sem = 0;
 800920c:	4b03      	ldr	r3, [pc, #12]	; (800921c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800920e:	2200      	movs	r2, #0
 8009210:	601a      	str	r2, [r3, #0]
}
 8009212:	bf00      	nop
 8009214:	46bd      	mov	sp, r7
 8009216:	f85d 7b04 	ldr.w	r7, [sp], #4
 800921a:	4770      	bx	lr
 800921c:	200259f4 	.word	0x200259f4

08009220 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 8009220:	b480      	push	{r7}
 8009222:	af00      	add	r7, sp, #0
  fb_sem = 1;
 8009224:	4b03      	ldr	r3, [pc, #12]	; (8009234 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 8009226:	2201      	movs	r2, #1
 8009228:	601a      	str	r2, [r3, #0]
}
 800922a:	bf00      	nop
 800922c:	46bd      	mov	sp, r7
 800922e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009232:	4770      	bx	lr
 8009234:	200259f4 	.word	0x200259f4

08009238 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 8009238:	b480      	push	{r7}
 800923a:	af00      	add	r7, sp, #0
  fb_sem = 0;
 800923c:	4b03      	ldr	r3, [pc, #12]	; (800924c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800923e:	2200      	movs	r2, #0
 8009240:	601a      	str	r2, [r3, #0]
}
 8009242:	bf00      	nop
 8009244:	46bd      	mov	sp, r7
 8009246:	f85d 7b04 	ldr.w	r7, [sp], #4
 800924a:	4770      	bx	lr
 800924c:	200259f4 	.word	0x200259f4

08009250 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 8009250:	b480      	push	{r7}
 8009252:	af00      	add	r7, sp, #0
  vsync_sem = 1;
 8009254:	4b03      	ldr	r3, [pc, #12]	; (8009264 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8009256:	2201      	movs	r2, #1
 8009258:	601a      	str	r2, [r3, #0]
}
 800925a:	bf00      	nop
 800925c:	46bd      	mov	sp, r7
 800925e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009262:	4770      	bx	lr
 8009264:	200259f8 	.word	0x200259f8

08009268 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 8009268:	b580      	push	{r7, lr}
 800926a:	af00      	add	r7, sp, #0
  if(vsync_sem)
 800926c:	4b0a      	ldr	r3, [pc, #40]	; (8009298 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800926e:	681b      	ldr	r3, [r3, #0]
 8009270:	2b00      	cmp	r3, #0
 8009272:	bf14      	ite	ne
 8009274:	2301      	movne	r3, #1
 8009276:	2300      	moveq	r3, #0
 8009278:	b2db      	uxtb	r3, r3
 800927a:	2b00      	cmp	r3, #0
 800927c:	d00a      	beq.n	8009294 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
  {
    vsync_sem = 0;
 800927e:	4b06      	ldr	r3, [pc, #24]	; (8009298 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 8009280:	2200      	movs	r2, #0
 8009282:	601a      	str	r2, [r3, #0]
    HAL::getInstance()->backPorchExited();
 8009284:	f7fd fa08 	bl	8006698 <_ZN8touchgfx3HAL11getInstanceEv>
 8009288:	4602      	mov	r2, r0
 800928a:	6813      	ldr	r3, [r2, #0]
 800928c:	3358      	adds	r3, #88	; 0x58
 800928e:	681b      	ldr	r3, [r3, #0]
 8009290:	4610      	mov	r0, r2
 8009292:	4798      	blx	r3
  }
}
 8009294:	bf00      	nop
 8009296:	bd80      	pop	{r7, pc}
 8009298:	200259f8 	.word	0x200259f8

0800929c <_ZN8touchgfx10OSWrappers9taskDelayEt>:
 *
 * see HAL::setFrameRefreshStrategy(FrameRefreshStrategy s)
 * see HAL::registerTaskDelayFunction(void (*delayF)(uint16_t))
 */
void OSWrappers::taskDelay(uint16_t ms)
{
 800929c:	b580      	push	{r7, lr}
 800929e:	b082      	sub	sp, #8
 80092a0:	af00      	add	r7, sp, #0
 80092a2:	4603      	mov	r3, r0
 80092a4:	80fb      	strh	r3, [r7, #6]
    HAL_Delay(ms);
 80092a6:	88fb      	ldrh	r3, [r7, #6]
 80092a8:	4618      	mov	r0, r3
 80092aa:	f7f8 fc87 	bl	8001bbc <HAL_Delay>
}
 80092ae:	bf00      	nop
 80092b0:	3708      	adds	r7, #8
 80092b2:	46bd      	mov	sp, r7
 80092b4:	bd80      	pop	{r7, pc}
	...

080092b8 <__NVIC_EnableIRQ>:
{
 80092b8:	b480      	push	{r7}
 80092ba:	b083      	sub	sp, #12
 80092bc:	af00      	add	r7, sp, #0
 80092be:	4603      	mov	r3, r0
 80092c0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80092c2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80092c6:	2b00      	cmp	r3, #0
 80092c8:	db0d      	blt.n	80092e6 <__NVIC_EnableIRQ+0x2e>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80092ca:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80092ce:	b2db      	uxtb	r3, r3
 80092d0:	f003 021f 	and.w	r2, r3, #31
 80092d4:	4907      	ldr	r1, [pc, #28]	; (80092f4 <__NVIC_EnableIRQ+0x3c>)
 80092d6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80092da:	095b      	lsrs	r3, r3, #5
 80092dc:	2001      	movs	r0, #1
 80092de:	fa00 f202 	lsl.w	r2, r0, r2
 80092e2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80092e6:	bf00      	nop
 80092e8:	370c      	adds	r7, #12
 80092ea:	46bd      	mov	sp, r7
 80092ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092f0:	4770      	bx	lr
 80092f2:	bf00      	nop
 80092f4:	e000e100 	.word	0xe000e100

080092f8 <__NVIC_DisableIRQ>:
{
 80092f8:	b480      	push	{r7}
 80092fa:	b083      	sub	sp, #12
 80092fc:	af00      	add	r7, sp, #0
 80092fe:	4603      	mov	r3, r0
 8009300:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8009302:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8009306:	2b00      	cmp	r3, #0
 8009308:	db12      	blt.n	8009330 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800930a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800930e:	b2db      	uxtb	r3, r3
 8009310:	f003 021f 	and.w	r2, r3, #31
 8009314:	4909      	ldr	r1, [pc, #36]	; (800933c <__NVIC_DisableIRQ+0x44>)
 8009316:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800931a:	095b      	lsrs	r3, r3, #5
 800931c:	2001      	movs	r0, #1
 800931e:	fa00 f202 	lsl.w	r2, r0, r2
 8009322:	3320      	adds	r3, #32
 8009324:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8009328:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800932c:	f3bf 8f6f 	isb	sy
}
 8009330:	bf00      	nop
 8009332:	370c      	adds	r7, #12
 8009334:	46bd      	mov	sp, r7
 8009336:	f85d 7b04 	ldr.w	r7, [sp], #4
 800933a:	4770      	bx	lr
 800933c:	e000e100 	.word	0xe000e100

08009340 <_ZN8touchgfx9colortypeC1Ev>:
    colortype() : color(0) {}
 8009340:	b480      	push	{r7}
 8009342:	b083      	sub	sp, #12
 8009344:	af00      	add	r7, sp, #0
 8009346:	6078      	str	r0, [r7, #4]
 8009348:	687b      	ldr	r3, [r7, #4]
 800934a:	2200      	movs	r2, #0
 800934c:	601a      	str	r2, [r3, #0]
 800934e:	687b      	ldr	r3, [r7, #4]
 8009350:	4618      	mov	r0, r3
 8009352:	370c      	adds	r7, #12
 8009354:	46bd      	mov	sp, r7
 8009356:	f85d 7b04 	ldr.w	r7, [sp], #4
 800935a:	4770      	bx	lr

0800935c <_ZNK8touchgfx9colortype10getColor32Ev>:
    inline uint32_t getColor32() const
 800935c:	b480      	push	{r7}
 800935e:	b083      	sub	sp, #12
 8009360:	af00      	add	r7, sp, #0
 8009362:	6078      	str	r0, [r7, #4]
        return color;
 8009364:	687b      	ldr	r3, [r7, #4]
 8009366:	681b      	ldr	r3, [r3, #0]
    }
 8009368:	4618      	mov	r0, r3
 800936a:	370c      	adds	r7, #12
 800936c:	46bd      	mov	sp, r7
 800936e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009372:	4770      	bx	lr

08009374 <_ZNK8touchgfx9colortypecvtEv>:
    operator uint16_t() const
 8009374:	b480      	push	{r7}
 8009376:	b083      	sub	sp, #12
 8009378:	af00      	add	r7, sp, #0
 800937a:	6078      	str	r0, [r7, #4]
        return (uint16_t)color;
 800937c:	687b      	ldr	r3, [r7, #4]
 800937e:	681b      	ldr	r3, [r3, #0]
 8009380:	b29b      	uxth	r3, r3
    }
 8009382:	4618      	mov	r0, r3
 8009384:	370c      	adds	r7, #12
 8009386:	46bd      	mov	sp, r7
 8009388:	f85d 7b04 	ldr.w	r7, [sp], #4
 800938c:	4770      	bx	lr
	...

08009390 <_ZN8touchgfx9DMA_QueueD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~DMA_Queue()
 8009390:	b480      	push	{r7}
 8009392:	b083      	sub	sp, #12
 8009394:	af00      	add	r7, sp, #0
 8009396:	6078      	str	r0, [r7, #4]
    {
 8009398:	4a04      	ldr	r2, [pc, #16]	; (80093ac <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800939a:	687b      	ldr	r3, [r7, #4]
 800939c:	601a      	str	r2, [r3, #0]
    }
 800939e:	687b      	ldr	r3, [r7, #4]
 80093a0:	4618      	mov	r0, r3
 80093a2:	370c      	adds	r7, #12
 80093a4:	46bd      	mov	sp, r7
 80093a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093aa:	4770      	bx	lr
 80093ac:	0801cfd8 	.word	0x0801cfd8

080093b0 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 80093b0:	b580      	push	{r7, lr}
 80093b2:	b082      	sub	sp, #8
 80093b4:	af00      	add	r7, sp, #0
 80093b6:	6078      	str	r0, [r7, #4]
    }
 80093b8:	6878      	ldr	r0, [r7, #4]
 80093ba:	f7ff ffe9 	bl	8009390 <_ZN8touchgfx9DMA_QueueD1Ev>
 80093be:	2104      	movs	r1, #4
 80093c0:	6878      	ldr	r0, [r7, #4]
 80093c2:	f011 fec3 	bl	801b14c <_ZdlPvj>
 80093c6:	687b      	ldr	r3, [r7, #4]
 80093c8:	4618      	mov	r0, r3
 80093ca:	3708      	adds	r7, #8
 80093cc:	46bd      	mov	sp, r7
 80093ce:	bd80      	pop	{r7, pc}

080093d0 <_ZN8touchgfx13DMA_Interface5flushEv>:
     *
     * @brief This function blocks until all DMA transfers in the queue have been completed.
     *
     *        This function blocks until all DMA transfers in the queue have been completed.
     */
    virtual void flush()
 80093d0:	b580      	push	{r7, lr}
 80093d2:	b082      	sub	sp, #8
 80093d4:	af00      	add	r7, sp, #0
 80093d6:	6078      	str	r0, [r7, #4]
    {
        waitForFrameBufferSemaphore();
 80093d8:	687b      	ldr	r3, [r7, #4]
 80093da:	681b      	ldr	r3, [r3, #0]
 80093dc:	3344      	adds	r3, #68	; 0x44
 80093de:	681b      	ldr	r3, [r3, #0]
 80093e0:	6878      	ldr	r0, [r7, #4]
 80093e2:	4798      	blx	r3
    }
 80093e4:	bf00      	nop
 80093e6:	3708      	adds	r7, #8
 80093e8:	46bd      	mov	sp, r7
 80093ea:	bd80      	pop	{r7, pc}

080093ec <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA_Interface implementation.
     *        As default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType(void)
 80093ec:	b480      	push	{r7}
 80093ee:	b083      	sub	sp, #12
 80093f0:	af00      	add	r7, sp, #0
 80093f2:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 80093f4:	2300      	movs	r3, #0
    }
 80093f6:	4618      	mov	r0, r3
 80093f8:	370c      	adds	r7, #12
 80093fa:	46bd      	mov	sp, r7
 80093fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009400:	4770      	bx	lr
	...

08009404 <_ZN8touchgfx13DMA_InterfaceD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~DMA_Interface()
 8009404:	b480      	push	{r7}
 8009406:	b083      	sub	sp, #12
 8009408:	af00      	add	r7, sp, #0
 800940a:	6078      	str	r0, [r7, #4]
    {
 800940c:	4a04      	ldr	r2, [pc, #16]	; (8009420 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800940e:	687b      	ldr	r3, [r7, #4]
 8009410:	601a      	str	r2, [r3, #0]
    }
 8009412:	687b      	ldr	r3, [r7, #4]
 8009414:	4618      	mov	r0, r3
 8009416:	370c      	adds	r7, #12
 8009418:	46bd      	mov	sp, r7
 800941a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800941e:	4770      	bx	lr
 8009420:	0801dfe4 	.word	0x0801dfe4

08009424 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 8009424:	b580      	push	{r7, lr}
 8009426:	b082      	sub	sp, #8
 8009428:	af00      	add	r7, sp, #0
 800942a:	6078      	str	r0, [r7, #4]
    }
 800942c:	6878      	ldr	r0, [r7, #4]
 800942e:	f7ff ffe9 	bl	8009404 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 8009432:	210c      	movs	r1, #12
 8009434:	6878      	ldr	r0, [r7, #4]
 8009436:	f011 fe89 	bl	801b14c <_ZdlPvj>
 800943a:	687b      	ldr	r3, [r7, #4]
 800943c:	4618      	mov	r0, r3
 800943e:	3708      	adds	r7, #8
 8009440:	46bd      	mov	sp, r7
 8009442:	bd80      	pop	{r7, pc}

08009444 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
     *
     *        Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 8009444:	b480      	push	{r7}
 8009446:	b083      	sub	sp, #12
 8009448:	af00      	add	r7, sp, #0
 800944a:	6078      	str	r0, [r7, #4]
 800944c:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800944e:	4a09      	ldr	r2, [pc, #36]	; (8009474 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 8009450:	687b      	ldr	r3, [r7, #4]
 8009452:	601a      	str	r2, [r3, #0]
 8009454:	687b      	ldr	r3, [r7, #4]
 8009456:	683a      	ldr	r2, [r7, #0]
 8009458:	605a      	str	r2, [r3, #4]
 800945a:	687b      	ldr	r3, [r7, #4]
 800945c:	2200      	movs	r2, #0
 800945e:	721a      	strb	r2, [r3, #8]
 8009460:	687b      	ldr	r3, [r7, #4]
 8009462:	2200      	movs	r2, #0
 8009464:	725a      	strb	r2, [r3, #9]
    {
    }
 8009466:	687b      	ldr	r3, [r7, #4]
 8009468:	4618      	mov	r0, r3
 800946a:	370c      	adds	r7, #12
 800946c:	46bd      	mov	sp, r7
 800946e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009472:	4770      	bx	lr
 8009474:	0801dfe4 	.word	0x0801dfe4

08009478 <_ZN8touchgfx3HAL18signalDMAInterruptEv>:
    void signalDMAInterrupt()
 8009478:	b580      	push	{r7, lr}
 800947a:	b082      	sub	sp, #8
 800947c:	af00      	add	r7, sp, #0
 800947e:	6078      	str	r0, [r7, #4]
        dma.signalDMAInterrupt();
 8009480:	687b      	ldr	r3, [r7, #4]
 8009482:	685a      	ldr	r2, [r3, #4]
 8009484:	687b      	ldr	r3, [r7, #4]
 8009486:	685b      	ldr	r3, [r3, #4]
 8009488:	681b      	ldr	r3, [r3, #0]
 800948a:	3314      	adds	r3, #20
 800948c:	681b      	ldr	r3, [r3, #0]
 800948e:	4610      	mov	r0, r2
 8009490:	4798      	blx	r3
    }
 8009492:	bf00      	nop
 8009494:	3708      	adds	r7, #8
 8009496:	46bd      	mov	sp, r7
 8009498:	bd80      	pop	{r7, pc}

0800949a <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     * @brief Raises a DMA interrupt signal.
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
 800949a:	b580      	push	{r7, lr}
 800949c:	b082      	sub	sp, #8
 800949e:	af00      	add	r7, sp, #0
 80094a0:	6078      	str	r0, [r7, #4]
    {
        executeCompleted();
 80094a2:	687a      	ldr	r2, [r7, #4]
 80094a4:	687b      	ldr	r3, [r7, #4]
 80094a6:	681b      	ldr	r3, [r3, #0]
 80094a8:	3328      	adds	r3, #40	; 0x28
 80094aa:	681b      	ldr	r3, [r3, #0]
 80094ac:	4610      	mov	r0, r2
 80094ae:	4798      	blx	r3
    }
 80094b0:	bf00      	nop
 80094b2:	3708      	adds	r7, #8
 80094b4:	46bd      	mov	sp, r7
 80094b6:	bd80      	pop	{r7, pc}

080094b8 <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>:
/* USER CODE END user includes */

extern DMA2D_HandleTypeDef hdma2d;

static HAL_StatusTypeDef HAL_DMA2D_SetMode(DMA2D_HandleTypeDef *hdma2d, uint32_t mode, uint32_t color, uint32_t offset)
{
 80094b8:	b480      	push	{r7}
 80094ba:	b085      	sub	sp, #20
 80094bc:	af00      	add	r7, sp, #0
 80094be:	60f8      	str	r0, [r7, #12]
 80094c0:	60b9      	str	r1, [r7, #8]
 80094c2:	607a      	str	r2, [r7, #4]
 80094c4:	603b      	str	r3, [r7, #0]
    assert_param(IS_DMA2D_ALL_INSTANCE(hdma2d->Instance));

    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 80094c6:	68fb      	ldr	r3, [r7, #12]
 80094c8:	681b      	ldr	r3, [r3, #0]
 80094ca:	681b      	ldr	r3, [r3, #0]
 80094cc:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 80094d0:	68ba      	ldr	r2, [r7, #8]
 80094d2:	68fb      	ldr	r3, [r7, #12]
 80094d4:	681b      	ldr	r3, [r3, #0]
 80094d6:	430a      	orrs	r2, r1
 80094d8:	601a      	str	r2, [r3, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 80094da:	68fb      	ldr	r3, [r7, #12]
 80094dc:	681b      	ldr	r3, [r3, #0]
 80094de:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80094e0:	f023 0107 	bic.w	r1, r3, #7
 80094e4:	687a      	ldr	r2, [r7, #4]
 80094e6:	68fb      	ldr	r3, [r7, #12]
 80094e8:	681b      	ldr	r3, [r3, #0]
 80094ea:	430a      	orrs	r2, r1
 80094ec:	635a      	str	r2, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 80094ee:	68fb      	ldr	r3, [r7, #12]
 80094f0:	681b      	ldr	r3, [r3, #0]
 80094f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80094f4:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80094f8:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80094fc:	6839      	ldr	r1, [r7, #0]
 80094fe:	68fa      	ldr	r2, [r7, #12]
 8009500:	6812      	ldr	r2, [r2, #0]
 8009502:	430b      	orrs	r3, r1
 8009504:	6413      	str	r3, [r2, #64]	; 0x40

    return HAL_OK;
 8009506:	2300      	movs	r3, #0
}
 8009508:	4618      	mov	r0, r3
 800950a:	3714      	adds	r7, #20
 800950c:	46bd      	mov	sp, r7
 800950e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009512:	4770      	bx	lr

08009514 <DMA2D_XferCpltCallback>:

extern "C" {

static void DMA2D_XferCpltCallback(DMA2D_HandleTypeDef* handle)
{
 8009514:	b580      	push	{r7, lr}
 8009516:	b082      	sub	sp, #8
 8009518:	af00      	add	r7, sp, #0
 800951a:	6078      	str	r0, [r7, #4]
    touchgfx::HAL::getInstance()->signalDMAInterrupt();
 800951c:	f7fd f8bc 	bl	8006698 <_ZN8touchgfx3HAL11getInstanceEv>
 8009520:	4603      	mov	r3, r0
 8009522:	4618      	mov	r0, r3
 8009524:	f7ff ffa8 	bl	8009478 <_ZN8touchgfx3HAL18signalDMAInterruptEv>
}
 8009528:	bf00      	nop
 800952a:	3708      	adds	r7, #8
 800952c:	46bd      	mov	sp, r7
 800952e:	bd80      	pop	{r7, pc}

08009530 <DMA2D_XferErrorCallback>:

static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
{
 8009530:	b580      	push	{r7, lr}
 8009532:	b082      	sub	sp, #8
 8009534:	af00      	add	r7, sp, #0
 8009536:	6078      	str	r0, [r7, #4]
    assert(0);
 8009538:	4b02      	ldr	r3, [pc, #8]	; (8009544 <DMA2D_XferErrorCallback+0x14>)
 800953a:	4a03      	ldr	r2, [pc, #12]	; (8009548 <DMA2D_XferErrorCallback+0x18>)
 800953c:	2136      	movs	r1, #54	; 0x36
 800953e:	4803      	ldr	r0, [pc, #12]	; (800954c <DMA2D_XferErrorCallback+0x1c>)
 8009540:	f011 fe30 	bl	801b1a4 <__assert_func>
 8009544:	0801c6c4 	.word	0x0801c6c4
 8009548:	0801cff4 	.word	0x0801cff4
 800954c:	0801c6c8 	.word	0x0801c6c8

08009550 <_ZN8touchgfx6BlitOpC1Ev>:
 *        (frame buffer) using DMA.
 *
 *        BlitOp instances carry the required information for performing operations on the LCD
 *        (frame buffer) using DMA.
 */
struct BlitOp
 8009550:	b580      	push	{r7, lr}
 8009552:	b082      	sub	sp, #8
 8009554:	af00      	add	r7, sp, #0
 8009556:	6078      	str	r0, [r7, #4]
 8009558:	687b      	ldr	r3, [r7, #4]
 800955a:	3318      	adds	r3, #24
 800955c:	4618      	mov	r0, r3
 800955e:	f7ff feef 	bl	8009340 <_ZN8touchgfx9colortypeC1Ev>
 8009562:	687b      	ldr	r3, [r7, #4]
 8009564:	4618      	mov	r0, r3
 8009566:	3708      	adds	r7, #8
 8009568:	46bd      	mov	sp, r7
 800956a:	bd80      	pop	{r7, pc}

0800956c <_ZN10STM32F4DMAC1Ev>:
}

}

STM32F4DMA::STM32F4DMA()
 800956c:	b5b0      	push	{r4, r5, r7, lr}
 800956e:	b082      	sub	sp, #8
 8009570:	af00      	add	r7, sp, #0
 8009572:	6078      	str	r0, [r7, #4]
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8009574:	687a      	ldr	r2, [r7, #4]
 8009576:	687b      	ldr	r3, [r7, #4]
 8009578:	330c      	adds	r3, #12
 800957a:	4619      	mov	r1, r3
 800957c:	4610      	mov	r0, r2
 800957e:	f7ff ff61 	bl	8009444 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 8009582:	4a0e      	ldr	r2, [pc, #56]	; (80095bc <_ZN10STM32F4DMAC1Ev+0x50>)
 8009584:	687b      	ldr	r3, [r7, #4]
 8009586:	601a      	str	r2, [r3, #0]
 8009588:	687b      	ldr	r3, [r7, #4]
 800958a:	f103 000c 	add.w	r0, r3, #12
 800958e:	687b      	ldr	r3, [r7, #4]
 8009590:	3320      	adds	r3, #32
 8009592:	2260      	movs	r2, #96	; 0x60
 8009594:	4619      	mov	r1, r3
 8009596:	f002 fd71 	bl	800c07c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800959a:	687b      	ldr	r3, [r7, #4]
 800959c:	3320      	adds	r3, #32
 800959e:	245f      	movs	r4, #95	; 0x5f
 80095a0:	461d      	mov	r5, r3
 80095a2:	2c00      	cmp	r4, #0
 80095a4:	db05      	blt.n	80095b2 <_ZN10STM32F4DMAC1Ev+0x46>
 80095a6:	4628      	mov	r0, r5
 80095a8:	f7ff ffd2 	bl	8009550 <_ZN8touchgfx6BlitOpC1Ev>
 80095ac:	3520      	adds	r5, #32
 80095ae:	3c01      	subs	r4, #1
 80095b0:	e7f7      	b.n	80095a2 <_ZN10STM32F4DMAC1Ev+0x36>
{}
 80095b2:	687b      	ldr	r3, [r7, #4]
 80095b4:	4618      	mov	r0, r3
 80095b6:	3708      	adds	r7, #8
 80095b8:	46bd      	mov	sp, r7
 80095ba:	bdb0      	pop	{r4, r5, r7, pc}
 80095bc:	0801cf88 	.word	0x0801cf88

080095c0 <_ZN10STM32F4DMAD1Ev>:

STM32F4DMA::~STM32F4DMA()
 80095c0:	b580      	push	{r7, lr}
 80095c2:	b082      	sub	sp, #8
 80095c4:	af00      	add	r7, sp, #0
 80095c6:	6078      	str	r0, [r7, #4]
 80095c8:	4a0b      	ldr	r2, [pc, #44]	; (80095f8 <_ZN10STM32F4DMAD1Ev+0x38>)
 80095ca:	687b      	ldr	r3, [r7, #4]
 80095cc:	601a      	str	r2, [r3, #0]
{
    HAL_DMA2D_DeInit(&hdma2d);
 80095ce:	480b      	ldr	r0, [pc, #44]	; (80095fc <_ZN10STM32F4DMAD1Ev+0x3c>)
 80095d0:	f7f8 fc8e 	bl	8001ef0 <HAL_DMA2D_DeInit>
    NVIC_DisableIRQ(DMA2D_IRQn);
 80095d4:	205a      	movs	r0, #90	; 0x5a
 80095d6:	f7ff fe8f 	bl	80092f8 <__NVIC_DisableIRQ>
STM32F4DMA::~STM32F4DMA()
 80095da:	687b      	ldr	r3, [r7, #4]
 80095dc:	330c      	adds	r3, #12
 80095de:	4618      	mov	r0, r3
 80095e0:	f000 faa0 	bl	8009b24 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 80095e4:	687b      	ldr	r3, [r7, #4]
 80095e6:	4618      	mov	r0, r3
 80095e8:	f7ff ff0c 	bl	8009404 <_ZN8touchgfx13DMA_InterfaceD1Ev>
}
 80095ec:	687b      	ldr	r3, [r7, #4]
 80095ee:	4618      	mov	r0, r3
 80095f0:	3708      	adds	r7, #8
 80095f2:	46bd      	mov	sp, r7
 80095f4:	bd80      	pop	{r7, pc}
 80095f6:	bf00      	nop
 80095f8:	0801cf88 	.word	0x0801cf88
 80095fc:	20027348 	.word	0x20027348

08009600 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 8009600:	b580      	push	{r7, lr}
 8009602:	b082      	sub	sp, #8
 8009604:	af00      	add	r7, sp, #0
 8009606:	6078      	str	r0, [r7, #4]
}
 8009608:	6878      	ldr	r0, [r7, #4]
 800960a:	f7ff ffd9 	bl	80095c0 <_ZN10STM32F4DMAD1Ev>
 800960e:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8009612:	6878      	ldr	r0, [r7, #4]
 8009614:	f011 fd9a 	bl	801b14c <_ZdlPvj>
 8009618:	687b      	ldr	r3, [r7, #4]
 800961a:	4618      	mov	r0, r3
 800961c:	3708      	adds	r7, #8
 800961e:	46bd      	mov	sp, r7
 8009620:	bd80      	pop	{r7, pc}
	...

08009624 <_ZN10STM32F4DMA10initializeEv>:

void STM32F4DMA::initialize()
{
 8009624:	b580      	push	{r7, lr}
 8009626:	b082      	sub	sp, #8
 8009628:	af00      	add	r7, sp, #0
 800962a:	6078      	str	r0, [r7, #4]
    hdma2d.Instance = DMA2D;
 800962c:	4b09      	ldr	r3, [pc, #36]	; (8009654 <_ZN10STM32F4DMA10initializeEv+0x30>)
 800962e:	4a0a      	ldr	r2, [pc, #40]	; (8009658 <_ZN10STM32F4DMA10initializeEv+0x34>)
 8009630:	601a      	str	r2, [r3, #0]
    HAL_DMA2D_Init(&hdma2d);
 8009632:	4808      	ldr	r0, [pc, #32]	; (8009654 <_ZN10STM32F4DMA10initializeEv+0x30>)
 8009634:	f7f8 fc12 	bl	8001e5c <HAL_DMA2D_Init>

    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8009638:	4b06      	ldr	r3, [pc, #24]	; (8009654 <_ZN10STM32F4DMA10initializeEv+0x30>)
 800963a:	4a08      	ldr	r2, [pc, #32]	; (800965c <_ZN10STM32F4DMA10initializeEv+0x38>)
 800963c:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 800963e:	4b05      	ldr	r3, [pc, #20]	; (8009654 <_ZN10STM32F4DMA10initializeEv+0x30>)
 8009640:	4a07      	ldr	r2, [pc, #28]	; (8009660 <_ZN10STM32F4DMA10initializeEv+0x3c>)
 8009642:	615a      	str	r2, [r3, #20]

    NVIC_EnableIRQ(DMA2D_IRQn);
 8009644:	205a      	movs	r0, #90	; 0x5a
 8009646:	f7ff fe37 	bl	80092b8 <__NVIC_EnableIRQ>
}
 800964a:	bf00      	nop
 800964c:	3708      	adds	r7, #8
 800964e:	46bd      	mov	sp, r7
 8009650:	bd80      	pop	{r7, pc}
 8009652:	bf00      	nop
 8009654:	20027348 	.word	0x20027348
 8009658:	4002b000 	.word	0x4002b000
 800965c:	08009515 	.word	0x08009515
 8009660:	08009531 	.word	0x08009531

08009664 <_ZN10STM32F4DMA11getBlitCapsEv>:

BlitOperations STM32F4DMA::getBlitCaps()
{
 8009664:	b480      	push	{r7}
 8009666:	b083      	sub	sp, #12
 8009668:	af00      	add	r7, sp, #0
 800966a:	6078      	str	r0, [r7, #4]
                                        | BLIT_OP_COPY
                                        | BLIT_OP_COPY_WITH_ALPHA
                                        | BLIT_OP_COPY_ARGB8888
                                        | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                        | BLIT_OP_COPY_A4
                                        | BLIT_OP_COPY_A8);
 800966c:	f240 13ef 	movw	r3, #495	; 0x1ef
}
 8009670:	4618      	mov	r0, r3
 8009672:	370c      	adds	r7, #12
 8009674:	46bd      	mov	sp, r7
 8009676:	f85d 7b04 	ldr.w	r7, [sp], #4
 800967a:	4770      	bx	lr

0800967c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 800967c:	b590      	push	{r4, r7, lr}
 800967e:	b08d      	sub	sp, #52	; 0x34
 8009680:	af02      	add	r7, sp, #8
 8009682:	6078      	str	r0, [r7, #4]
 8009684:	6039      	str	r1, [r7, #0]
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
 8009686:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800968a:	627b      	str	r3, [r7, #36]	; 0x24
    uint32_t dma2dColorMode = 0;
 800968c:	2300      	movs	r3, #0
 800968e:	623b      	str	r3, [r7, #32]

    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 8009690:	683b      	ldr	r3, [r7, #0]
 8009692:	681b      	ldr	r3, [r3, #0]
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8009694:	2b20      	cmp	r3, #32
 8009696:	d007      	beq.n	80096a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 8009698:	683b      	ldr	r3, [r7, #0]
 800969a:	681b      	ldr	r3, [r3, #0]
 800969c:	2b40      	cmp	r3, #64	; 0x40
 800969e:	d003      	beq.n	80096a8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 80096a0:	683b      	ldr	r3, [r7, #0]
 80096a2:	681b      	ldr	r3, [r3, #0]
 80096a4:	2b04      	cmp	r3, #4
 80096a6:	d101      	bne.n	80096ac <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x30>
 80096a8:	2301      	movs	r3, #1
 80096aa:	e000      	b.n	80096ae <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x32>
 80096ac:	2300      	movs	r3, #0
    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 80096ae:	77fb      	strb	r3, [r7, #31]

    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
 80096b0:	683b      	ldr	r3, [r7, #0]
 80096b2:	681b      	ldr	r3, [r3, #0]
                         || blitOp.operation == BLIT_OP_COPY_A8);
 80096b4:	2b80      	cmp	r3, #128	; 0x80
 80096b6:	d004      	beq.n	80096c2 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x46>
 80096b8:	683b      	ldr	r3, [r7, #0]
 80096ba:	681b      	ldr	r3, [r3, #0]
 80096bc:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80096c0:	d101      	bne.n	80096c6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4a>
 80096c2:	2301      	movs	r3, #1
 80096c4:	e000      	b.n	80096c8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4c>
 80096c6:	2300      	movs	r3, #0
    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
 80096c8:	77bb      	strb	r3, [r7, #30]

    uint8_t bitDepth = HAL::lcd().bitDepth();
 80096ca:	f7fc fff1 	bl	80066b0 <_ZN8touchgfx3HAL3lcdEv>
 80096ce:	4602      	mov	r2, r0
 80096d0:	6813      	ldr	r3, [r2, #0]
 80096d2:	3320      	adds	r3, #32
 80096d4:	681b      	ldr	r3, [r3, #0]
 80096d6:	4610      	mov	r0, r2
 80096d8:	4798      	blx	r3
 80096da:	4603      	mov	r3, r0
 80096dc:	777b      	strb	r3, [r7, #29]

    switch (blitOp.operation)
 80096de:	683b      	ldr	r3, [r7, #0]
 80096e0:	681b      	ldr	r3, [r3, #0]
 80096e2:	2b40      	cmp	r3, #64	; 0x40
 80096e4:	d01d      	beq.n	8009722 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 80096e6:	2b40      	cmp	r3, #64	; 0x40
 80096e8:	d804      	bhi.n	80096f4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x78>
 80096ea:	2b04      	cmp	r3, #4
 80096ec:	d00e      	beq.n	800970c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x90>
 80096ee:	2b20      	cmp	r3, #32
 80096f0:	d017      	beq.n	8009722 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 80096f2:	e019      	b.n	8009728 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xac>
 80096f4:	2b80      	cmp	r3, #128	; 0x80
 80096f6:	d003      	beq.n	8009700 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x84>
 80096f8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80096fc:	d003      	beq.n	8009706 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8a>
 80096fe:	e013      	b.n	8009728 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xac>
    {
    case BLIT_OP_COPY_A4:
        dma2dColorMode = CM_A4;
 8009700:	230a      	movs	r3, #10
 8009702:	623b      	str	r3, [r7, #32]
        break;
 8009704:	e01a      	b.n	800973c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
    case BLIT_OP_COPY_A8:
        dma2dColorMode = CM_A8;
 8009706:	2309      	movs	r3, #9
 8009708:	623b      	str	r3, [r7, #32]
        break;
 800970a:	e017      	b.n	800973c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
    case BLIT_OP_COPY_WITH_ALPHA:
        dma2dTransferMode = DMA2D_M2M_BLEND;
 800970c:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8009710:	627b      	str	r3, [r7, #36]	; 0x24
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8009712:	7f7b      	ldrb	r3, [r7, #29]
 8009714:	2b10      	cmp	r3, #16
 8009716:	d101      	bne.n	800971c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa0>
 8009718:	2302      	movs	r3, #2
 800971a:	e000      	b.n	800971e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
 800971c:	2301      	movs	r3, #1
 800971e:	623b      	str	r3, [r7, #32]
        break;
 8009720:	e00c      	b.n	800973c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
    case BLIT_OP_COPY_ARGB8888:
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        dma2dColorMode = CM_ARGB8888;
 8009722:	2300      	movs	r3, #0
 8009724:	623b      	str	r3, [r7, #32]
        break;
 8009726:	e009      	b.n	800973c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
    default:
        dma2dTransferMode = DMA2D_M2M;
 8009728:	2300      	movs	r3, #0
 800972a:	627b      	str	r3, [r7, #36]	; 0x24
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 800972c:	7f7b      	ldrb	r3, [r7, #29]
 800972e:	2b10      	cmp	r3, #16
 8009730:	d101      	bne.n	8009736 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xba>
 8009732:	2302      	movs	r3, #2
 8009734:	e000      	b.n	8009738 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbc>
 8009736:	2301      	movs	r3, #1
 8009738:	623b      	str	r3, [r7, #32]
        break;
 800973a:	bf00      	nop
    }

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 800973c:	4a76      	ldr	r2, [pc, #472]	; (8009918 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800973e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009740:	6053      	str	r3, [r2, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8009742:	7f7b      	ldrb	r3, [r7, #29]
 8009744:	2b10      	cmp	r3, #16
 8009746:	d101      	bne.n	800974c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8009748:	2302      	movs	r3, #2
 800974a:	e000      	b.n	800974e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 800974c:	2301      	movs	r3, #1
 800974e:	4a72      	ldr	r2, [pc, #456]	; (8009918 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8009750:	6093      	str	r3, [r2, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8009752:	683b      	ldr	r3, [r7, #0]
 8009754:	8adb      	ldrh	r3, [r3, #22]
 8009756:	461a      	mov	r2, r3
 8009758:	683b      	ldr	r3, [r7, #0]
 800975a:	8a1b      	ldrh	r3, [r3, #16]
 800975c:	1ad3      	subs	r3, r2, r3
 800975e:	461a      	mov	r2, r3
 8009760:	4b6d      	ldr	r3, [pc, #436]	; (8009918 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8009762:	60da      	str	r2, [r3, #12]

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 8009764:	7f7b      	ldrb	r3, [r7, #29]
 8009766:	2b10      	cmp	r3, #16
 8009768:	d101      	bne.n	800976e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
 800976a:	2202      	movs	r2, #2
 800976c:	e000      	b.n	8009770 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf4>
 800976e:	2201      	movs	r2, #1
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);
 8009770:	683b      	ldr	r3, [r7, #0]
 8009772:	8adb      	ldrh	r3, [r3, #22]
 8009774:	4619      	mov	r1, r3
 8009776:	683b      	ldr	r3, [r7, #0]
 8009778:	8a1b      	ldrh	r3, [r3, #16]
 800977a:	1acb      	subs	r3, r1, r3
    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 800977c:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800977e:	4866      	ldr	r0, [pc, #408]	; (8009918 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8009780:	f7ff fe9a 	bl	80094b8 <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>

    hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8009784:	4a64      	ldr	r2, [pc, #400]	; (8009918 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8009786:	6a3b      	ldr	r3, [r7, #32]
 8009788:	62d3      	str	r3, [r2, #44]	; 0x2c
    hdma2d.LayerCfg[1].InputOffset = blitOp.srcLoopStride - blitOp.nSteps;
 800978a:	683b      	ldr	r3, [r7, #0]
 800978c:	8a9b      	ldrh	r3, [r3, #20]
 800978e:	461a      	mov	r2, r3
 8009790:	683b      	ldr	r3, [r7, #0]
 8009792:	8a1b      	ldrh	r3, [r3, #16]
 8009794:	1ad3      	subs	r3, r2, r3
 8009796:	461a      	mov	r2, r3
 8009798:	4b5f      	ldr	r3, [pc, #380]	; (8009918 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800979a:	629a      	str	r2, [r3, #40]	; 0x28

    if (blendingImage || blendingText)
 800979c:	7ffb      	ldrb	r3, [r7, #31]
 800979e:	2b00      	cmp	r3, #0
 80097a0:	d103      	bne.n	80097aa <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12e>
 80097a2:	7fbb      	ldrb	r3, [r7, #30]
 80097a4:	2b00      	cmp	r3, #0
 80097a6:	f000 8082 	beq.w	80098ae <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x232>
    {
        if (blitOp.alpha < 255)
 80097aa:	683b      	ldr	r3, [r7, #0]
 80097ac:	7f1b      	ldrb	r3, [r3, #28]
 80097ae:	2bff      	cmp	r3, #255	; 0xff
 80097b0:	d008      	beq.n	80097c4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_COMBINE_ALPHA;
 80097b2:	4b59      	ldr	r3, [pc, #356]	; (8009918 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 80097b4:	2202      	movs	r2, #2
 80097b6:	631a      	str	r2, [r3, #48]	; 0x30
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
 80097b8:	683b      	ldr	r3, [r7, #0]
 80097ba:	7f1b      	ldrb	r3, [r3, #28]
 80097bc:	461a      	mov	r2, r3
 80097be:	4b56      	ldr	r3, [pc, #344]	; (8009918 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 80097c0:	635a      	str	r2, [r3, #52]	; 0x34
 80097c2:	e002      	b.n	80097ca <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14e>
        }
        else
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 80097c4:	4b54      	ldr	r3, [pc, #336]	; (8009918 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 80097c6:	2200      	movs	r2, #0
 80097c8:	631a      	str	r2, [r3, #48]	; 0x30
        }

        if (blendingText)
 80097ca:	7fbb      	ldrb	r3, [r7, #30]
 80097cc:	2b00      	cmp	r3, #0
 80097ce:	d059      	beq.n	8009884 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x208>
        {
            if (bitDepth == 16)
 80097d0:	7f7b      	ldrb	r3, [r7, #29]
 80097d2:	2b10      	cmp	r3, #16
 80097d4:	d14a      	bne.n	800986c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1f0>
            {
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 80097d6:	683b      	ldr	r3, [r7, #0]
 80097d8:	3318      	adds	r3, #24
 80097da:	4618      	mov	r0, r3
 80097dc:	f7ff fdca 	bl	8009374 <_ZNK8touchgfx9colortypecvtEv>
 80097e0:	4603      	mov	r3, r0
 80097e2:	12db      	asrs	r3, r3, #11
 80097e4:	f003 021f 	and.w	r2, r3, #31
 80097e8:	4613      	mov	r3, r2
 80097ea:	021b      	lsls	r3, r3, #8
 80097ec:	1a9b      	subs	r3, r3, r2
 80097ee:	4a4b      	ldr	r2, [pc, #300]	; (800991c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a0>)
 80097f0:	fb82 1203 	smull	r1, r2, r2, r3
 80097f4:	441a      	add	r2, r3
 80097f6:	1112      	asrs	r2, r2, #4
 80097f8:	17db      	asrs	r3, r3, #31
 80097fa:	1ad3      	subs	r3, r2, r3
 80097fc:	61bb      	str	r3, [r7, #24]
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 80097fe:	683b      	ldr	r3, [r7, #0]
 8009800:	3318      	adds	r3, #24
 8009802:	4618      	mov	r0, r3
 8009804:	f7ff fdb6 	bl	8009374 <_ZNK8touchgfx9colortypecvtEv>
 8009808:	4603      	mov	r3, r0
 800980a:	115b      	asrs	r3, r3, #5
 800980c:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8009810:	4613      	mov	r3, r2
 8009812:	021b      	lsls	r3, r3, #8
 8009814:	1a9b      	subs	r3, r3, r2
 8009816:	4a42      	ldr	r2, [pc, #264]	; (8009920 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a4>)
 8009818:	fb82 1203 	smull	r1, r2, r2, r3
 800981c:	441a      	add	r2, r3
 800981e:	1152      	asrs	r2, r2, #5
 8009820:	17db      	asrs	r3, r3, #31
 8009822:	1ad3      	subs	r3, r2, r3
 8009824:	617b      	str	r3, [r7, #20]
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8009826:	683b      	ldr	r3, [r7, #0]
 8009828:	3318      	adds	r3, #24
 800982a:	4618      	mov	r0, r3
 800982c:	f7ff fda2 	bl	8009374 <_ZNK8touchgfx9colortypecvtEv>
 8009830:	4603      	mov	r3, r0
 8009832:	f003 021f 	and.w	r2, r3, #31
 8009836:	4613      	mov	r3, r2
 8009838:	021b      	lsls	r3, r3, #8
 800983a:	1a9b      	subs	r3, r3, r2
 800983c:	4a37      	ldr	r2, [pc, #220]	; (800991c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a0>)
 800983e:	fb82 1203 	smull	r1, r2, r2, r3
 8009842:	441a      	add	r2, r3
 8009844:	1112      	asrs	r2, r2, #4
 8009846:	17db      	asrs	r3, r3, #31
 8009848:	1ad3      	subs	r3, r2, r3
 800984a:	613b      	str	r3, [r7, #16]
                uint32_t alpha = blitOp.alpha;
 800984c:	683b      	ldr	r3, [r7, #0]
 800984e:	7f1b      	ldrb	r3, [r3, #28]
 8009850:	60fb      	str	r3, [r7, #12]
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8009852:	68fb      	ldr	r3, [r7, #12]
 8009854:	061a      	lsls	r2, r3, #24
 8009856:	69bb      	ldr	r3, [r7, #24]
 8009858:	041b      	lsls	r3, r3, #16
 800985a:	431a      	orrs	r2, r3
 800985c:	697b      	ldr	r3, [r7, #20]
 800985e:	021b      	lsls	r3, r3, #8
 8009860:	431a      	orrs	r2, r3
 8009862:	693b      	ldr	r3, [r7, #16]
 8009864:	4313      	orrs	r3, r2
 8009866:	4a2c      	ldr	r2, [pc, #176]	; (8009918 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8009868:	6353      	str	r3, [r2, #52]	; 0x34
 800986a:	e00b      	b.n	8009884 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x208>
            }
            else
            {
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
 800986c:	683b      	ldr	r3, [r7, #0]
 800986e:	3318      	adds	r3, #24
 8009870:	4618      	mov	r0, r3
 8009872:	f7ff fd73 	bl	800935c <_ZNK8touchgfx9colortype10getColor32Ev>
 8009876:	4602      	mov	r2, r0
 8009878:	683b      	ldr	r3, [r7, #0]
 800987a:	7f1b      	ldrb	r3, [r3, #28]
 800987c:	061b      	lsls	r3, r3, #24
 800987e:	4313      	orrs	r3, r2
 8009880:	4a25      	ldr	r2, [pc, #148]	; (8009918 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8009882:	6353      	str	r3, [r2, #52]	; 0x34
            }
        }

        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8009884:	683b      	ldr	r3, [r7, #0]
 8009886:	8adb      	ldrh	r3, [r3, #22]
 8009888:	461a      	mov	r2, r3
 800988a:	683b      	ldr	r3, [r7, #0]
 800988c:	8a1b      	ldrh	r3, [r3, #16]
 800988e:	1ad3      	subs	r3, r2, r3
 8009890:	461a      	mov	r2, r3
 8009892:	4b21      	ldr	r3, [pc, #132]	; (8009918 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8009894:	619a      	str	r2, [r3, #24]
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8009896:	7f7b      	ldrb	r3, [r7, #29]
 8009898:	2b10      	cmp	r3, #16
 800989a:	d101      	bne.n	80098a0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x224>
 800989c:	2302      	movs	r3, #2
 800989e:	e000      	b.n	80098a2 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x226>
 80098a0:	2301      	movs	r3, #1
 80098a2:	4a1d      	ldr	r2, [pc, #116]	; (8009918 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 80098a4:	61d3      	str	r3, [r2, #28]

        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 80098a6:	2100      	movs	r1, #0
 80098a8:	481b      	ldr	r0, [pc, #108]	; (8009918 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 80098aa:	f7f8 fda1 	bl	80023f0 <HAL_DMA2D_ConfigLayer>
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 80098ae:	2101      	movs	r1, #1
 80098b0:	4819      	ldr	r0, [pc, #100]	; (8009918 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 80098b2:	f7f8 fd9d 	bl	80023f0 <HAL_DMA2D_ConfigLayer>

    if (blendingImage || blendingText)
 80098b6:	7ffb      	ldrb	r3, [r7, #31]
 80098b8:	2b00      	cmp	r3, #0
 80098ba:	d102      	bne.n	80098c2 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x246>
 80098bc:	7fbb      	ldrb	r3, [r7, #30]
 80098be:	2b00      	cmp	r3, #0
 80098c0:	d015      	beq.n	80098ee <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x272>
    {
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
                                   (unsigned int)blitOp.pSrc,
 80098c2:	683b      	ldr	r3, [r7, #0]
 80098c4:	685b      	ldr	r3, [r3, #4]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 80098c6:	4619      	mov	r1, r3
                                   (unsigned int)blitOp.pDst,
 80098c8:	683b      	ldr	r3, [r7, #0]
 80098ca:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 80098cc:	4618      	mov	r0, r3
                                   (unsigned int)blitOp.pDst,
 80098ce:	683b      	ldr	r3, [r7, #0]
 80098d0:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 80098d2:	461c      	mov	r4, r3
                                   blitOp.nSteps, blitOp.nLoops);
 80098d4:	683b      	ldr	r3, [r7, #0]
 80098d6:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 80098d8:	461a      	mov	r2, r3
                                   blitOp.nSteps, blitOp.nLoops);
 80098da:	683b      	ldr	r3, [r7, #0]
 80098dc:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 80098de:	9301      	str	r3, [sp, #4]
 80098e0:	9200      	str	r2, [sp, #0]
 80098e2:	4623      	mov	r3, r4
 80098e4:	4602      	mov	r2, r0
 80098e6:	480c      	ldr	r0, [pc, #48]	; (8009918 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 80098e8:	f7f8 fba5 	bl	8002036 <HAL_DMA2D_BlendingStart_IT>
 80098ec:	e00f      	b.n	800990e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x292>
    }
    else
    {
        HAL_DMA2D_Start_IT(&hdma2d,
                           (unsigned int)blitOp.pSrc,
 80098ee:	683b      	ldr	r3, [r7, #0]
 80098f0:	685b      	ldr	r3, [r3, #4]
        HAL_DMA2D_Start_IT(&hdma2d,
 80098f2:	4619      	mov	r1, r3
                           (unsigned int)blitOp.pDst,
 80098f4:	683b      	ldr	r3, [r7, #0]
 80098f6:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_Start_IT(&hdma2d,
 80098f8:	461a      	mov	r2, r3
                           blitOp.nSteps, blitOp.nLoops);
 80098fa:	683b      	ldr	r3, [r7, #0]
 80098fc:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_Start_IT(&hdma2d,
 80098fe:	4618      	mov	r0, r3
                           blitOp.nSteps, blitOp.nLoops);
 8009900:	683b      	ldr	r3, [r7, #0]
 8009902:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_Start_IT(&hdma2d,
 8009904:	9300      	str	r3, [sp, #0]
 8009906:	4603      	mov	r3, r0
 8009908:	4803      	ldr	r0, [pc, #12]	; (8009918 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800990a:	f7f8 fb61 	bl	8001fd0 <HAL_DMA2D_Start_IT>
    }
}
 800990e:	bf00      	nop
 8009910:	372c      	adds	r7, #44	; 0x2c
 8009912:	46bd      	mov	sp, r7
 8009914:	bd90      	pop	{r4, r7, pc}
 8009916:	bf00      	nop
 8009918:	20027348 	.word	0x20027348
 800991c:	84210843 	.word	0x84210843
 8009920:	82082083 	.word	0x82082083

08009924 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 8009924:	b590      	push	{r4, r7, lr}
 8009926:	b08d      	sub	sp, #52	; 0x34
 8009928:	af02      	add	r7, sp, #8
 800992a:	6078      	str	r0, [r7, #4]
 800992c:	6039      	str	r1, [r7, #0]
    uint8_t bitDepth = HAL::lcd().bitDepth();
 800992e:	f7fc febf 	bl	80066b0 <_ZN8touchgfx3HAL3lcdEv>
 8009932:	4602      	mov	r2, r0
 8009934:	6813      	ldr	r3, [r2, #0]
 8009936:	3320      	adds	r3, #32
 8009938:	681b      	ldr	r3, [r3, #0]
 800993a:	4610      	mov	r0, r2
 800993c:	4798      	blx	r3
 800993e:	4603      	mov	r3, r0
 8009940:	77fb      	strb	r3, [r7, #31]
    uint32_t dma2dTransferMode;
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8009942:	7ffb      	ldrb	r3, [r7, #31]
 8009944:	2b10      	cmp	r3, #16
 8009946:	d101      	bne.n	800994c <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x28>
 8009948:	2302      	movs	r3, #2
 800994a:	e000      	b.n	800994e <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x2a>
 800994c:	2301      	movs	r3, #1
 800994e:	61bb      	str	r3, [r7, #24]

    uint32_t color = 0;
 8009950:	2300      	movs	r3, #0
 8009952:	623b      	str	r3, [r7, #32]
    if (bitDepth == 16)
 8009954:	7ffb      	ldrb	r3, [r7, #31]
 8009956:	2b10      	cmp	r3, #16
 8009958:	d149      	bne.n	80099ee <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xca>
    {
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 800995a:	683b      	ldr	r3, [r7, #0]
 800995c:	3318      	adds	r3, #24
 800995e:	4618      	mov	r0, r3
 8009960:	f7ff fd08 	bl	8009374 <_ZNK8touchgfx9colortypecvtEv>
 8009964:	4603      	mov	r3, r0
 8009966:	12db      	asrs	r3, r3, #11
 8009968:	f003 021f 	and.w	r2, r3, #31
 800996c:	4613      	mov	r3, r2
 800996e:	021b      	lsls	r3, r3, #8
 8009970:	1a9b      	subs	r3, r3, r2
 8009972:	4a69      	ldr	r2, [pc, #420]	; (8009b18 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f4>)
 8009974:	fb82 1203 	smull	r1, r2, r2, r3
 8009978:	441a      	add	r2, r3
 800997a:	1112      	asrs	r2, r2, #4
 800997c:	17db      	asrs	r3, r3, #31
 800997e:	1ad3      	subs	r3, r2, r3
 8009980:	617b      	str	r3, [r7, #20]
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8009982:	683b      	ldr	r3, [r7, #0]
 8009984:	3318      	adds	r3, #24
 8009986:	4618      	mov	r0, r3
 8009988:	f7ff fcf4 	bl	8009374 <_ZNK8touchgfx9colortypecvtEv>
 800998c:	4603      	mov	r3, r0
 800998e:	115b      	asrs	r3, r3, #5
 8009990:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8009994:	4613      	mov	r3, r2
 8009996:	021b      	lsls	r3, r3, #8
 8009998:	1a9b      	subs	r3, r3, r2
 800999a:	4a60      	ldr	r2, [pc, #384]	; (8009b1c <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f8>)
 800999c:	fb82 1203 	smull	r1, r2, r2, r3
 80099a0:	441a      	add	r2, r3
 80099a2:	1152      	asrs	r2, r2, #5
 80099a4:	17db      	asrs	r3, r3, #31
 80099a6:	1ad3      	subs	r3, r2, r3
 80099a8:	613b      	str	r3, [r7, #16]
        uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 80099aa:	683b      	ldr	r3, [r7, #0]
 80099ac:	3318      	adds	r3, #24
 80099ae:	4618      	mov	r0, r3
 80099b0:	f7ff fce0 	bl	8009374 <_ZNK8touchgfx9colortypecvtEv>
 80099b4:	4603      	mov	r3, r0
 80099b6:	f003 021f 	and.w	r2, r3, #31
 80099ba:	4613      	mov	r3, r2
 80099bc:	021b      	lsls	r3, r3, #8
 80099be:	1a9b      	subs	r3, r3, r2
 80099c0:	4a55      	ldr	r2, [pc, #340]	; (8009b18 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f4>)
 80099c2:	fb82 1203 	smull	r1, r2, r2, r3
 80099c6:	441a      	add	r2, r3
 80099c8:	1112      	asrs	r2, r2, #4
 80099ca:	17db      	asrs	r3, r3, #31
 80099cc:	1ad3      	subs	r3, r2, r3
 80099ce:	60fb      	str	r3, [r7, #12]
        uint32_t alpha = blitOp.alpha;
 80099d0:	683b      	ldr	r3, [r7, #0]
 80099d2:	7f1b      	ldrb	r3, [r3, #28]
 80099d4:	60bb      	str	r3, [r7, #8]
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 80099d6:	68bb      	ldr	r3, [r7, #8]
 80099d8:	061a      	lsls	r2, r3, #24
 80099da:	697b      	ldr	r3, [r7, #20]
 80099dc:	041b      	lsls	r3, r3, #16
 80099de:	431a      	orrs	r2, r3
 80099e0:	693b      	ldr	r3, [r7, #16]
 80099e2:	021b      	lsls	r3, r3, #8
 80099e4:	4313      	orrs	r3, r2
 80099e6:	68fa      	ldr	r2, [r7, #12]
 80099e8:	4313      	orrs	r3, r2
 80099ea:	623b      	str	r3, [r7, #32]
 80099ec:	e00b      	b.n	8009a06 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe2>
    }
    else
    {
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
 80099ee:	683b      	ldr	r3, [r7, #0]
 80099f0:	7f1b      	ldrb	r3, [r3, #28]
 80099f2:	061b      	lsls	r3, r3, #24
 80099f4:	461c      	mov	r4, r3
 80099f6:	683b      	ldr	r3, [r7, #0]
 80099f8:	3318      	adds	r3, #24
 80099fa:	4618      	mov	r0, r3
 80099fc:	f7ff fcae 	bl	800935c <_ZNK8touchgfx9colortype10getColor32Ev>
 8009a00:	4603      	mov	r3, r0
 8009a02:	4323      	orrs	r3, r4
 8009a04:	623b      	str	r3, [r7, #32]
    }

    switch (blitOp.operation)
 8009a06:	683b      	ldr	r3, [r7, #0]
 8009a08:	681b      	ldr	r3, [r3, #0]
 8009a0a:	2b08      	cmp	r3, #8
 8009a0c:	d103      	bne.n	8009a16 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf2>
    {
    case BLIT_OP_FILL_WITH_ALPHA:
        dma2dTransferMode = DMA2D_M2M_BLEND;
 8009a0e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8009a12:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 8009a14:	e003      	b.n	8009a1e <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xfa>
    default:
        dma2dTransferMode = DMA2D_R2M;
 8009a16:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 8009a1a:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 8009a1c:	bf00      	nop
    };

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8009a1e:	4a40      	ldr	r2, [pc, #256]	; (8009b20 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8009a20:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009a22:	6053      	str	r3, [r2, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8009a24:	7ffb      	ldrb	r3, [r7, #31]
 8009a26:	2b10      	cmp	r3, #16
 8009a28:	d101      	bne.n	8009a2e <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10a>
 8009a2a:	2302      	movs	r3, #2
 8009a2c:	e000      	b.n	8009a30 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10c>
 8009a2e:	2301      	movs	r3, #1
 8009a30:	4a3b      	ldr	r2, [pc, #236]	; (8009b20 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8009a32:	6093      	str	r3, [r2, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8009a34:	683b      	ldr	r3, [r7, #0]
 8009a36:	8adb      	ldrh	r3, [r3, #22]
 8009a38:	461a      	mov	r2, r3
 8009a3a:	683b      	ldr	r3, [r7, #0]
 8009a3c:	8a1b      	ldrh	r3, [r3, #16]
 8009a3e:	1ad3      	subs	r3, r2, r3
 8009a40:	461a      	mov	r2, r3
 8009a42:	4b37      	ldr	r3, [pc, #220]	; (8009b20 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8009a44:	60da      	str	r2, [r3, #12]

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 8009a46:	7ffb      	ldrb	r3, [r7, #31]
 8009a48:	2b10      	cmp	r3, #16
 8009a4a:	d101      	bne.n	8009a50 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x12c>
 8009a4c:	2202      	movs	r2, #2
 8009a4e:	e000      	b.n	8009a52 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x12e>
 8009a50:	2201      	movs	r2, #1
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);
 8009a52:	683b      	ldr	r3, [r7, #0]
 8009a54:	8adb      	ldrh	r3, [r3, #22]
 8009a56:	4619      	mov	r1, r3
 8009a58:	683b      	ldr	r3, [r7, #0]
 8009a5a:	8a1b      	ldrh	r3, [r3, #16]
 8009a5c:	1acb      	subs	r3, r1, r3
    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 8009a5e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8009a60:	482f      	ldr	r0, [pc, #188]	; (8009b20 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8009a62:	f7ff fd29 	bl	80094b8 <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>

    if (dma2dTransferMode == DMA2D_M2M_BLEND) {
 8009a66:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009a68:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009a6c:	d11e      	bne.n	8009aac <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x188>
        hdma2d.LayerCfg[1].AlphaMode = DMA2D_REPLACE_ALPHA;
 8009a6e:	4b2c      	ldr	r3, [pc, #176]	; (8009b20 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8009a70:	2201      	movs	r2, #1
 8009a72:	631a      	str	r2, [r3, #48]	; 0x30
        hdma2d.LayerCfg[1].InputAlpha = color;
 8009a74:	4a2a      	ldr	r2, [pc, #168]	; (8009b20 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8009a76:	6a3b      	ldr	r3, [r7, #32]
 8009a78:	6353      	str	r3, [r2, #52]	; 0x34
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 8009a7a:	4b29      	ldr	r3, [pc, #164]	; (8009b20 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8009a7c:	2209      	movs	r2, #9
 8009a7e:	62da      	str	r2, [r3, #44]	; 0x2c
        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8009a80:	683b      	ldr	r3, [r7, #0]
 8009a82:	8adb      	ldrh	r3, [r3, #22]
 8009a84:	461a      	mov	r2, r3
 8009a86:	683b      	ldr	r3, [r7, #0]
 8009a88:	8a1b      	ldrh	r3, [r3, #16]
 8009a8a:	1ad3      	subs	r3, r2, r3
 8009a8c:	461a      	mov	r2, r3
 8009a8e:	4b24      	ldr	r3, [pc, #144]	; (8009b20 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8009a90:	619a      	str	r2, [r3, #24]
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8009a92:	7ffb      	ldrb	r3, [r7, #31]
 8009a94:	2b10      	cmp	r3, #16
 8009a96:	d101      	bne.n	8009a9c <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x178>
 8009a98:	2302      	movs	r3, #2
 8009a9a:	e000      	b.n	8009a9e <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x17a>
 8009a9c:	2301      	movs	r3, #1
 8009a9e:	4a20      	ldr	r2, [pc, #128]	; (8009b20 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8009aa0:	61d3      	str	r3, [r2, #28]
        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 8009aa2:	2100      	movs	r1, #0
 8009aa4:	481e      	ldr	r0, [pc, #120]	; (8009b20 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8009aa6:	f7f8 fca3 	bl	80023f0 <HAL_DMA2D_ConfigLayer>
 8009aaa:	e005      	b.n	8009ab8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x194>
    } else {
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8009aac:	4a1c      	ldr	r2, [pc, #112]	; (8009b20 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8009aae:	69bb      	ldr	r3, [r7, #24]
 8009ab0:	62d3      	str	r3, [r2, #44]	; 0x2c
        hdma2d.LayerCfg[1].InputOffset = 0;
 8009ab2:	4b1b      	ldr	r3, [pc, #108]	; (8009b20 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8009ab4:	2200      	movs	r2, #0
 8009ab6:	629a      	str	r2, [r3, #40]	; 0x28
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8009ab8:	2101      	movs	r1, #1
 8009aba:	4819      	ldr	r0, [pc, #100]	; (8009b20 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8009abc:	f7f8 fc98 	bl	80023f0 <HAL_DMA2D_ConfigLayer>

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8009ac0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009ac2:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009ac6:	d115      	bne.n	8009af4 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1d0>
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
                                   (unsigned int)blitOp.pDst,
 8009ac8:	683b      	ldr	r3, [r7, #0]
 8009aca:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8009acc:	4619      	mov	r1, r3
                                   (unsigned int)blitOp.pDst,
 8009ace:	683b      	ldr	r3, [r7, #0]
 8009ad0:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8009ad2:	4618      	mov	r0, r3
                                   (unsigned int)blitOp.pDst,
 8009ad4:	683b      	ldr	r3, [r7, #0]
 8009ad6:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8009ad8:	461c      	mov	r4, r3
                                   blitOp.nSteps, blitOp.nLoops);
 8009ada:	683b      	ldr	r3, [r7, #0]
 8009adc:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8009ade:	461a      	mov	r2, r3
                                   blitOp.nSteps, blitOp.nLoops);
 8009ae0:	683b      	ldr	r3, [r7, #0]
 8009ae2:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8009ae4:	9301      	str	r3, [sp, #4]
 8009ae6:	9200      	str	r2, [sp, #0]
 8009ae8:	4623      	mov	r3, r4
 8009aea:	4602      	mov	r2, r0
 8009aec:	480c      	ldr	r0, [pc, #48]	; (8009b20 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8009aee:	f7f8 faa2 	bl	8002036 <HAL_DMA2D_BlendingStart_IT>
    else
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
}
 8009af2:	e00d      	b.n	8009b10 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1ec>
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 8009af4:	683b      	ldr	r3, [r7, #0]
 8009af6:	68db      	ldr	r3, [r3, #12]
 8009af8:	461a      	mov	r2, r3
                           blitOp.nSteps, blitOp.nLoops);
 8009afa:	683b      	ldr	r3, [r7, #0]
 8009afc:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 8009afe:	4619      	mov	r1, r3
                           blitOp.nSteps, blitOp.nLoops);
 8009b00:	683b      	ldr	r3, [r7, #0]
 8009b02:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 8009b04:	9300      	str	r3, [sp, #0]
 8009b06:	460b      	mov	r3, r1
 8009b08:	6a39      	ldr	r1, [r7, #32]
 8009b0a:	4805      	ldr	r0, [pc, #20]	; (8009b20 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8009b0c:	f7f8 fa60 	bl	8001fd0 <HAL_DMA2D_Start_IT>
}
 8009b10:	bf00      	nop
 8009b12:	372c      	adds	r7, #44	; 0x2c
 8009b14:	46bd      	mov	sp, r7
 8009b16:	bd90      	pop	{r4, r7, pc}
 8009b18:	84210843 	.word	0x84210843
 8009b1c:	82082083 	.word	0x82082083
 8009b20:	20027348 	.word	0x20027348

08009b24 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 8009b24:	b580      	push	{r7, lr}
 8009b26:	b082      	sub	sp, #8
 8009b28:	af00      	add	r7, sp, #0
 8009b2a:	6078      	str	r0, [r7, #4]
 8009b2c:	4a05      	ldr	r2, [pc, #20]	; (8009b44 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 8009b2e:	687b      	ldr	r3, [r7, #4]
 8009b30:	601a      	str	r2, [r3, #0]
 8009b32:	687b      	ldr	r3, [r7, #4]
 8009b34:	4618      	mov	r0, r3
 8009b36:	f7ff fc2b 	bl	8009390 <_ZN8touchgfx9DMA_QueueD1Ev>
 8009b3a:	687b      	ldr	r3, [r7, #4]
 8009b3c:	4618      	mov	r0, r3
 8009b3e:	3708      	adds	r7, #8
 8009b40:	46bd      	mov	sp, r7
 8009b42:	bd80      	pop	{r7, pc}
 8009b44:	0801e034 	.word	0x0801e034

08009b48 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8009b48:	b580      	push	{r7, lr}
 8009b4a:	b082      	sub	sp, #8
 8009b4c:	af00      	add	r7, sp, #0
 8009b4e:	6078      	str	r0, [r7, #4]
 8009b50:	6878      	ldr	r0, [r7, #4]
 8009b52:	f7ff ffe7 	bl	8009b24 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 8009b56:	2114      	movs	r1, #20
 8009b58:	6878      	ldr	r0, [r7, #4]
 8009b5a:	f011 faf7 	bl	801b14c <_ZdlPvj>
 8009b5e:	687b      	ldr	r3, [r7, #4]
 8009b60:	4618      	mov	r0, r3
 8009b62:	3708      	adds	r7, #8
 8009b64:	46bd      	mov	sp, r7
 8009b66:	bd80      	pop	{r7, pc}

08009b68 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
    static void registerTexts(const Texts* t)
 8009b68:	b480      	push	{r7}
 8009b6a:	b083      	sub	sp, #12
 8009b6c:	af00      	add	r7, sp, #0
 8009b6e:	6078      	str	r0, [r7, #4]
        texts = t;
 8009b70:	4a04      	ldr	r2, [pc, #16]	; (8009b84 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 8009b72:	687b      	ldr	r3, [r7, #4]
 8009b74:	6013      	str	r3, [r2, #0]
    }
 8009b76:	bf00      	nop
 8009b78:	370c      	adds	r7, #12
 8009b7a:	46bd      	mov	sp, r7
 8009b7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b80:	4770      	bx	lr
 8009b82:	bf00      	nop
 8009b84:	20026f2c 	.word	0x20026f2c

08009b88 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 8009b88:	b480      	push	{r7}
 8009b8a:	b085      	sub	sp, #20
 8009b8c:	af00      	add	r7, sp, #0
 8009b8e:	60f8      	str	r0, [r7, #12]
 8009b90:	60b9      	str	r1, [r7, #8]
 8009b92:	607a      	str	r2, [r7, #4]
 8009b94:	603b      	str	r3, [r7, #0]
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app) : presenterStorage(pres),
        screenStorage(scr),
        transitionStorage(tra),
        frontendApplication(app)
 8009b96:	4a0b      	ldr	r2, [pc, #44]	; (8009bc4 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 8009b98:	68fb      	ldr	r3, [r7, #12]
 8009b9a:	601a      	str	r2, [r3, #0]
 8009b9c:	68fb      	ldr	r3, [r7, #12]
 8009b9e:	68ba      	ldr	r2, [r7, #8]
 8009ba0:	605a      	str	r2, [r3, #4]
 8009ba2:	68fb      	ldr	r3, [r7, #12]
 8009ba4:	687a      	ldr	r2, [r7, #4]
 8009ba6:	609a      	str	r2, [r3, #8]
 8009ba8:	68fb      	ldr	r3, [r7, #12]
 8009baa:	683a      	ldr	r2, [r7, #0]
 8009bac:	60da      	str	r2, [r3, #12]
 8009bae:	68fb      	ldr	r3, [r7, #12]
 8009bb0:	69ba      	ldr	r2, [r7, #24]
 8009bb2:	611a      	str	r2, [r3, #16]
    {
    }
 8009bb4:	68fb      	ldr	r3, [r7, #12]
 8009bb6:	4618      	mov	r0, r3
 8009bb8:	3714      	adds	r7, #20
 8009bba:	46bd      	mov	sp, r7
 8009bbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bc0:	4770      	bx	lr
 8009bc2:	bf00      	nop
 8009bc4:	0801d0f4 	.word	0x0801d0f4

08009bc8 <_ZN8touchgfx7MVPHeapD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~MVPHeap()
 8009bc8:	b480      	push	{r7}
 8009bca:	b083      	sub	sp, #12
 8009bcc:	af00      	add	r7, sp, #0
 8009bce:	6078      	str	r0, [r7, #4]
    {
 8009bd0:	4a04      	ldr	r2, [pc, #16]	; (8009be4 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 8009bd2:	687b      	ldr	r3, [r7, #4]
 8009bd4:	601a      	str	r2, [r3, #0]
    }
 8009bd6:	687b      	ldr	r3, [r7, #4]
 8009bd8:	4618      	mov	r0, r3
 8009bda:	370c      	adds	r7, #12
 8009bdc:	46bd      	mov	sp, r7
 8009bde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009be2:	4770      	bx	lr
 8009be4:	0801d0f4 	.word	0x0801d0f4

08009be8 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 8009be8:	b580      	push	{r7, lr}
 8009bea:	b082      	sub	sp, #8
 8009bec:	af00      	add	r7, sp, #0
 8009bee:	6078      	str	r0, [r7, #4]
    }
 8009bf0:	6878      	ldr	r0, [r7, #4]
 8009bf2:	f7ff ffe9 	bl	8009bc8 <_ZN8touchgfx7MVPHeapD1Ev>
 8009bf6:	2114      	movs	r1, #20
 8009bf8:	6878      	ldr	r0, [r7, #4]
 8009bfa:	f011 faa7 	bl	801b14c <_ZdlPvj>
 8009bfe:	687b      	ldr	r3, [r7, #4]
 8009c00:	4618      	mov	r0, r3
 8009c02:	3708      	adds	r7, #8
 8009c04:	46bd      	mov	sp, r7
 8009c06:	bd80      	pop	{r7, pc}

08009c08 <_ZN8touchgfx3LCDD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~LCD()
 8009c08:	b480      	push	{r7}
 8009c0a:	b083      	sub	sp, #12
 8009c0c:	af00      	add	r7, sp, #0
 8009c0e:	6078      	str	r0, [r7, #4]
    {
 8009c10:	4a04      	ldr	r2, [pc, #16]	; (8009c24 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 8009c12:	687b      	ldr	r3, [r7, #4]
 8009c14:	601a      	str	r2, [r3, #0]
    }
 8009c16:	687b      	ldr	r3, [r7, #4]
 8009c18:	4618      	mov	r0, r3
 8009c1a:	370c      	adds	r7, #12
 8009c1c:	46bd      	mov	sp, r7
 8009c1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c22:	4770      	bx	lr
 8009c24:	0801e450 	.word	0x0801e450

08009c28 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 8009c28:	b580      	push	{r7, lr}
 8009c2a:	b082      	sub	sp, #8
 8009c2c:	af00      	add	r7, sp, #0
 8009c2e:	6078      	str	r0, [r7, #4]
    }
 8009c30:	6878      	ldr	r0, [r7, #4]
 8009c32:	f7ff ffe9 	bl	8009c08 <_ZN8touchgfx3LCDD1Ev>
 8009c36:	2108      	movs	r1, #8
 8009c38:	6878      	ldr	r0, [r7, #4]
 8009c3a:	f011 fa87 	bl	801b14c <_ZdlPvj>
 8009c3e:	687b      	ldr	r3, [r7, #4]
 8009c40:	4618      	mov	r0, r3
 8009c42:	3708      	adds	r7, #8
 8009c44:	46bd      	mov	sp, r7
 8009c46:	bd80      	pop	{r7, pc}

08009c48 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
     *
     *        Defines the state of a drag.
     */
    struct DragState
    {
        DragState() : startX(0),
 8009c48:	b480      	push	{r7}
 8009c4a:	b083      	sub	sp, #12
 8009c4c:	af00      	add	r7, sp, #0
 8009c4e:	6078      	str	r0, [r7, #4]
            downX(0),
            downY(0),
            tickCount(0),
            velocityX(0),
            velocityY(0),
            inProgress(false)
 8009c50:	687b      	ldr	r3, [r7, #4]
 8009c52:	2200      	movs	r2, #0
 8009c54:	801a      	strh	r2, [r3, #0]
 8009c56:	687b      	ldr	r3, [r7, #4]
 8009c58:	2200      	movs	r2, #0
 8009c5a:	805a      	strh	r2, [r3, #2]
 8009c5c:	687b      	ldr	r3, [r7, #4]
 8009c5e:	2200      	movs	r2, #0
 8009c60:	809a      	strh	r2, [r3, #4]
 8009c62:	687b      	ldr	r3, [r7, #4]
 8009c64:	2200      	movs	r2, #0
 8009c66:	80da      	strh	r2, [r3, #6]
 8009c68:	687b      	ldr	r3, [r7, #4]
 8009c6a:	2200      	movs	r2, #0
 8009c6c:	811a      	strh	r2, [r3, #8]
 8009c6e:	687b      	ldr	r3, [r7, #4]
 8009c70:	2200      	movs	r2, #0
 8009c72:	815a      	strh	r2, [r3, #10]
 8009c74:	687b      	ldr	r3, [r7, #4]
 8009c76:	2200      	movs	r2, #0
 8009c78:	819a      	strh	r2, [r3, #12]
 8009c7a:	687b      	ldr	r3, [r7, #4]
 8009c7c:	2200      	movs	r2, #0
 8009c7e:	739a      	strb	r2, [r3, #14]
        {
        }
 8009c80:	687b      	ldr	r3, [r7, #4]
 8009c82:	4618      	mov	r0, r3
 8009c84:	370c      	adds	r7, #12
 8009c86:	46bd      	mov	sp, r7
 8009c88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c8c:	4770      	bx	lr

08009c8e <_ZN8touchgfx8GesturesC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor. Does nothing.
     */
    Gestures() : listener(0), dragThresholdValue(0) { }
 8009c8e:	b580      	push	{r7, lr}
 8009c90:	b082      	sub	sp, #8
 8009c92:	af00      	add	r7, sp, #0
 8009c94:	6078      	str	r0, [r7, #4]
 8009c96:	687b      	ldr	r3, [r7, #4]
 8009c98:	4618      	mov	r0, r3
 8009c9a:	f7ff ffd5 	bl	8009c48 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 8009c9e:	687b      	ldr	r3, [r7, #4]
 8009ca0:	2200      	movs	r2, #0
 8009ca2:	611a      	str	r2, [r3, #16]
 8009ca4:	687b      	ldr	r3, [r7, #4]
 8009ca6:	2200      	movs	r2, #0
 8009ca8:	829a      	strh	r2, [r3, #20]
 8009caa:	687b      	ldr	r3, [r7, #4]
 8009cac:	4618      	mov	r0, r3
 8009cae:	3708      	adds	r7, #8
 8009cb0:	46bd      	mov	sp, r7
 8009cb2:	bd80      	pop	{r7, pc}

08009cb4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height) :
 8009cb4:	b580      	push	{r7, lr}
 8009cb6:	b084      	sub	sp, #16
 8009cb8:	af00      	add	r7, sp, #0
 8009cba:	60f8      	str	r0, [r7, #12]
 8009cbc:	60b9      	str	r1, [r7, #8]
 8009cbe:	607a      	str	r2, [r7, #4]
 8009cc0:	603b      	str	r3, [r7, #0]
        displayOrientationChangeRequested(false)
 8009cc2:	4a44      	ldr	r2, [pc, #272]	; (8009dd4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x120>)
 8009cc4:	68fb      	ldr	r3, [r7, #12]
 8009cc6:	601a      	str	r2, [r3, #0]
 8009cc8:	68fb      	ldr	r3, [r7, #12]
 8009cca:	68ba      	ldr	r2, [r7, #8]
 8009ccc:	605a      	str	r2, [r3, #4]
 8009cce:	68fb      	ldr	r3, [r7, #12]
 8009cd0:	687a      	ldr	r2, [r7, #4]
 8009cd2:	609a      	str	r2, [r3, #8]
 8009cd4:	68fb      	ldr	r3, [r7, #12]
 8009cd6:	683a      	ldr	r2, [r7, #0]
 8009cd8:	60da      	str	r2, [r3, #12]
 8009cda:	68fb      	ldr	r3, [r7, #12]
 8009cdc:	2200      	movs	r2, #0
 8009cde:	611a      	str	r2, [r3, #16]
 8009ce0:	68fb      	ldr	r3, [r7, #12]
 8009ce2:	2200      	movs	r2, #0
 8009ce4:	615a      	str	r2, [r3, #20]
 8009ce6:	68fb      	ldr	r3, [r7, #12]
 8009ce8:	2200      	movs	r2, #0
 8009cea:	619a      	str	r2, [r3, #24]
 8009cec:	68fb      	ldr	r3, [r7, #12]
 8009cee:	331c      	adds	r3, #28
 8009cf0:	4618      	mov	r0, r3
 8009cf2:	f7ff ffcc 	bl	8009c8e <_ZN8touchgfx8GesturesC1Ev>
 8009cf6:	68fb      	ldr	r3, [r7, #12]
 8009cf8:	2200      	movs	r2, #0
 8009cfa:	639a      	str	r2, [r3, #56]	; 0x38
 8009cfc:	68fb      	ldr	r3, [r7, #12]
 8009cfe:	2200      	movs	r2, #0
 8009d00:	63da      	str	r2, [r3, #60]	; 0x3c
 8009d02:	68fb      	ldr	r3, [r7, #12]
 8009d04:	2200      	movs	r2, #0
 8009d06:	641a      	str	r2, [r3, #64]	; 0x40
 8009d08:	68fb      	ldr	r3, [r7, #12]
 8009d0a:	2200      	movs	r2, #0
 8009d0c:	645a      	str	r2, [r3, #68]	; 0x44
 8009d0e:	68fb      	ldr	r3, [r7, #12]
 8009d10:	2200      	movs	r2, #0
 8009d12:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8009d16:	68fb      	ldr	r3, [r7, #12]
 8009d18:	2201      	movs	r2, #1
 8009d1a:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
 8009d1e:	68fb      	ldr	r3, [r7, #12]
 8009d20:	2201      	movs	r2, #1
 8009d22:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
 8009d26:	68fb      	ldr	r3, [r7, #12]
 8009d28:	2200      	movs	r2, #0
 8009d2a:	64da      	str	r2, [r3, #76]	; 0x4c
 8009d2c:	68fb      	ldr	r3, [r7, #12]
 8009d2e:	3350      	adds	r3, #80	; 0x50
 8009d30:	4618      	mov	r0, r3
 8009d32:	f7fd f8ec 	bl	8006f0e <_ZN8touchgfx4RectC1Ev>
 8009d36:	68fb      	ldr	r3, [r7, #12]
 8009d38:	2201      	movs	r2, #1
 8009d3a:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 8009d3e:	68fb      	ldr	r3, [r7, #12]
 8009d40:	2200      	movs	r2, #0
 8009d42:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
 8009d46:	68fb      	ldr	r3, [r7, #12]
 8009d48:	2200      	movs	r2, #0
 8009d4a:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
 8009d4e:	68fb      	ldr	r3, [r7, #12]
 8009d50:	2201      	movs	r2, #1
 8009d52:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
 8009d56:	68fb      	ldr	r3, [r7, #12]
 8009d58:	2200      	movs	r2, #0
 8009d5a:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 8009d5e:	68fb      	ldr	r3, [r7, #12]
 8009d60:	2200      	movs	r2, #0
 8009d62:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
 8009d66:	68fb      	ldr	r3, [r7, #12]
 8009d68:	2200      	movs	r2, #0
 8009d6a:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
 8009d6e:	68fb      	ldr	r3, [r7, #12]
 8009d70:	2200      	movs	r2, #0
 8009d72:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
 8009d76:	68fb      	ldr	r3, [r7, #12]
 8009d78:	2200      	movs	r2, #0
 8009d7a:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8009d7e:	68fb      	ldr	r3, [r7, #12]
 8009d80:	2200      	movs	r2, #0
 8009d82:	671a      	str	r2, [r3, #112]	; 0x70
 8009d84:	68fb      	ldr	r3, [r7, #12]
 8009d86:	2200      	movs	r2, #0
 8009d88:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
        instance = this;
 8009d8c:	4a12      	ldr	r2, [pc, #72]	; (8009dd8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x124>)
 8009d8e:	68fb      	ldr	r3, [r7, #12]
 8009d90:	6013      	str	r3, [r2, #0]
        DISPLAY_WIDTH = width;
 8009d92:	4a12      	ldr	r2, [pc, #72]	; (8009ddc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x128>)
 8009d94:	8b3b      	ldrh	r3, [r7, #24]
 8009d96:	8013      	strh	r3, [r2, #0]
        DISPLAY_HEIGHT = height;
 8009d98:	4a11      	ldr	r2, [pc, #68]	; (8009de0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x12c>)
 8009d9a:	8bbb      	ldrh	r3, [r7, #28]
 8009d9c:	8013      	strh	r3, [r2, #0]
        DISPLAY_ROTATION = rotate0;
 8009d9e:	4b11      	ldr	r3, [pc, #68]	; (8009de4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x130>)
 8009da0:	2200      	movs	r2, #0
 8009da2:	701a      	strb	r2, [r3, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8009da4:	4b0d      	ldr	r3, [pc, #52]	; (8009ddc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x128>)
 8009da6:	881a      	ldrh	r2, [r3, #0]
 8009da8:	4b0f      	ldr	r3, [pc, #60]	; (8009de8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x134>)
 8009daa:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8009dac:	4b0c      	ldr	r3, [pc, #48]	; (8009de0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x12c>)
 8009dae:	881a      	ldrh	r2, [r3, #0]
 8009db0:	4b0e      	ldr	r3, [pc, #56]	; (8009dec <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x138>)
 8009db2:	801a      	strh	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8009db4:	8b3a      	ldrh	r2, [r7, #24]
 8009db6:	8bbb      	ldrh	r3, [r7, #28]
 8009db8:	429a      	cmp	r2, r3
 8009dba:	d301      	bcc.n	8009dc0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x10c>
 8009dbc:	2200      	movs	r2, #0
 8009dbe:	e000      	b.n	8009dc2 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x10e>
 8009dc0:	2201      	movs	r2, #1
 8009dc2:	68fb      	ldr	r3, [r7, #12]
 8009dc4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 8009dc8:	68fb      	ldr	r3, [r7, #12]
 8009dca:	4618      	mov	r0, r3
 8009dcc:	3710      	adds	r7, #16
 8009dce:	46bd      	mov	sp, r7
 8009dd0:	bd80      	pop	{r7, pc}
 8009dd2:	bf00      	nop
 8009dd4:	0801dba0 	.word	0x0801dba0
 8009dd8:	20026eb0 	.word	0x20026eb0
 8009ddc:	20026ea4 	.word	0x20026ea4
 8009de0:	20026ea6 	.word	0x20026ea6
 8009de4:	20026ea8 	.word	0x20026ea8
 8009de8:	20026eaa 	.word	0x20026eaa
 8009dec:	20026eac 	.word	0x20026eac

08009df0 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 8009df0:	b580      	push	{r7, lr}
 8009df2:	b082      	sub	sp, #8
 8009df4:	af00      	add	r7, sp, #0
 8009df6:	6078      	str	r0, [r7, #4]
 8009df8:	6039      	str	r1, [r7, #0]
    {
        app.gotoScreen1ScreenNoTransition();
 8009dfa:	683b      	ldr	r3, [r7, #0]
 8009dfc:	4618      	mov	r0, r3
 8009dfe:	f7fc fe7b 	bl	8006af8 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
 8009e02:	bf00      	nop
 8009e04:	3708      	adds	r7, #8
 8009e06:	46bd      	mov	sp, r7
 8009e08:	bd80      	pop	{r7, pc}
	...

08009e0c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 8009e0c:	b580      	push	{r7, lr}
 8009e0e:	b086      	sub	sp, #24
 8009e10:	af02      	add	r7, sp, #8
 8009e12:	60f8      	str	r0, [r7, #12]
 8009e14:	60b9      	str	r1, [r7, #8]
 8009e16:	607a      	str	r2, [r7, #4]
 8009e18:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 8009e1a:	68f8      	ldr	r0, [r7, #12]
 8009e1c:	69bb      	ldr	r3, [r7, #24]
 8009e1e:	9300      	str	r3, [sp, #0]
 8009e20:	683b      	ldr	r3, [r7, #0]
 8009e22:	687a      	ldr	r2, [r7, #4]
 8009e24:	68b9      	ldr	r1, [r7, #8]
 8009e26:	f7ff feaf 	bl	8009b88 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 8009e2a:	4a04      	ldr	r2, [pc, #16]	; (8009e3c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 8009e2c:	68fb      	ldr	r3, [r7, #12]
 8009e2e:	601a      	str	r2, [r3, #0]
    {

    }
 8009e30:	68fb      	ldr	r3, [r7, #12]
 8009e32:	4618      	mov	r0, r3
 8009e34:	3710      	adds	r7, #16
 8009e36:	46bd      	mov	sp, r7
 8009e38:	bd80      	pop	{r7, pc}
 8009e3a:	bf00      	nop
 8009e3c:	0801d0e0 	.word	0x0801d0e0

08009e40 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8009e40:	b580      	push	{r7, lr}
 8009e42:	af00      	add	r7, sp, #0
 8009e44:	4801      	ldr	r0, [pc, #4]	; (8009e4c <__tcf_0+0xc>)
 8009e46:	f000 f9d7 	bl	800a1f8 <_ZN12FrontendHeapD1Ev>
 8009e4a:	bd80      	pop	{r7, pc}
 8009e4c:	200259fc 	.word	0x200259fc

08009e50 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 8009e50:	b580      	push	{r7, lr}
 8009e52:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 8009e54:	4b08      	ldr	r3, [pc, #32]	; (8009e78 <_ZN12FrontendHeap11getInstanceEv+0x28>)
 8009e56:	681b      	ldr	r3, [r3, #0]
 8009e58:	f003 0301 	and.w	r3, r3, #1
 8009e5c:	2b00      	cmp	r3, #0
 8009e5e:	d108      	bne.n	8009e72 <_ZN12FrontendHeap11getInstanceEv+0x22>
 8009e60:	4806      	ldr	r0, [pc, #24]	; (8009e7c <_ZN12FrontendHeap11getInstanceEv+0x2c>)
 8009e62:	f000 f831 	bl	8009ec8 <_ZN12FrontendHeapC1Ev>
 8009e66:	4b04      	ldr	r3, [pc, #16]	; (8009e78 <_ZN12FrontendHeap11getInstanceEv+0x28>)
 8009e68:	2201      	movs	r2, #1
 8009e6a:	601a      	str	r2, [r3, #0]
 8009e6c:	4804      	ldr	r0, [pc, #16]	; (8009e80 <_ZN12FrontendHeap11getInstanceEv+0x30>)
 8009e6e:	f011 f9b7 	bl	801b1e0 <atexit>
        return instance;
 8009e72:	4b02      	ldr	r3, [pc, #8]	; (8009e7c <_ZN12FrontendHeap11getInstanceEv+0x2c>)
    }
 8009e74:	4618      	mov	r0, r3
 8009e76:	bd80      	pop	{r7, pc}
 8009e78:	20026184 	.word	0x20026184
 8009e7c:	200259fc 	.word	0x200259fc
 8009e80:	08009e41 	.word	0x08009e41

08009e84 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 8009e84:	b580      	push	{r7, lr}
 8009e86:	b082      	sub	sp, #8
 8009e88:	af00      	add	r7, sp, #0
 8009e8a:	6078      	str	r0, [r7, #4]
 8009e8c:	4a05      	ldr	r2, [pc, #20]	; (8009ea4 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 8009e8e:	687b      	ldr	r3, [r7, #4]
 8009e90:	601a      	str	r2, [r3, #0]
 8009e92:	687b      	ldr	r3, [r7, #4]
 8009e94:	4618      	mov	r0, r3
 8009e96:	f7ff fe97 	bl	8009bc8 <_ZN8touchgfx7MVPHeapD1Ev>
 8009e9a:	687b      	ldr	r3, [r7, #4]
 8009e9c:	4618      	mov	r0, r3
 8009e9e:	3708      	adds	r7, #8
 8009ea0:	46bd      	mov	sp, r7
 8009ea2:	bd80      	pop	{r7, pc}
 8009ea4:	0801d0e0 	.word	0x0801d0e0

08009ea8 <_ZN16FrontendHeapBaseD0Ev>:
 8009ea8:	b580      	push	{r7, lr}
 8009eaa:	b082      	sub	sp, #8
 8009eac:	af00      	add	r7, sp, #0
 8009eae:	6078      	str	r0, [r7, #4]
 8009eb0:	6878      	ldr	r0, [r7, #4]
 8009eb2:	f7ff ffe7 	bl	8009e84 <_ZN16FrontendHeapBaseD1Ev>
 8009eb6:	2114      	movs	r1, #20
 8009eb8:	6878      	ldr	r0, [r7, #4]
 8009eba:	f011 f947 	bl	801b14c <_ZdlPvj>
 8009ebe:	687b      	ldr	r3, [r7, #4]
 8009ec0:	4618      	mov	r0, r3
 8009ec2:	3708      	adds	r7, #8
 8009ec4:	46bd      	mov	sp, r7
 8009ec6:	bd80      	pop	{r7, pc}

08009ec8 <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    FrontendApplication app;
    Model model;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 8009ec8:	b590      	push	{r4, r7, lr}
 8009eca:	b085      	sub	sp, #20
 8009ecc:	af02      	add	r7, sp, #8
 8009ece:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 8009ed0:	6878      	ldr	r0, [r7, #4]
 8009ed2:	687b      	ldr	r3, [r7, #4]
 8009ed4:	f103 0114 	add.w	r1, r3, #20
 8009ed8:	687b      	ldr	r3, [r7, #4]
 8009eda:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 8009ede:	687b      	ldr	r3, [r7, #4]
 8009ee0:	f503 64c4 	add.w	r4, r3, #1568	; 0x620
 8009ee4:	687b      	ldr	r3, [r7, #4]
 8009ee6:	f203 6334 	addw	r3, r3, #1588	; 0x634
 8009eea:	9300      	str	r3, [sp, #0]
 8009eec:	4623      	mov	r3, r4
 8009eee:	f7ff ff8d 	bl	8009e0c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 8009ef2:	4a18      	ldr	r2, [pc, #96]	; (8009f54 <_ZN12FrontendHeapC1Ev+0x8c>)
 8009ef4:	687b      	ldr	r3, [r7, #4]
 8009ef6:	601a      	str	r2, [r3, #0]
 8009ef8:	687b      	ldr	r3, [r7, #4]
 8009efa:	3314      	adds	r3, #20
 8009efc:	4618      	mov	r0, r3
 8009efe:	f000 f8dd 	bl	800a0bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8009f02:	687b      	ldr	r3, [r7, #4]
 8009f04:	332c      	adds	r3, #44	; 0x2c
 8009f06:	4618      	mov	r0, r3
 8009f08:	f000 f90c 	bl	800a124 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8009f0c:	687b      	ldr	r3, [r7, #4]
 8009f0e:	f503 63c4 	add.w	r3, r3, #1568	; 0x620
 8009f12:	4618      	mov	r0, r3
 8009f14:	f000 f93c 	bl	800a190 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8009f18:	687b      	ldr	r3, [r7, #4]
 8009f1a:	f203 6034 	addw	r0, r3, #1588	; 0x634
 8009f1e:	687b      	ldr	r3, [r7, #4]
 8009f20:	f203 7384 	addw	r3, r3, #1924	; 0x784
 8009f24:	687a      	ldr	r2, [r7, #4]
 8009f26:	4619      	mov	r1, r3
 8009f28:	f7fe fca8 	bl	800887c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8009f2c:	687b      	ldr	r3, [r7, #4]
 8009f2e:	f203 7384 	addw	r3, r3, #1924	; 0x784
 8009f32:	4618      	mov	r0, r3
 8009f34:	f7fe fcb8 	bl	80088a8 <_ZN5ModelC1Ev>
    {
        gotoStartScreen(app);
 8009f38:	687a      	ldr	r2, [r7, #4]
 8009f3a:	687b      	ldr	r3, [r7, #4]
 8009f3c:	f203 6334 	addw	r3, r3, #1588	; 0x634
 8009f40:	4619      	mov	r1, r3
 8009f42:	4610      	mov	r0, r2
 8009f44:	f7ff ff54 	bl	8009df0 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 8009f48:	687b      	ldr	r3, [r7, #4]
 8009f4a:	4618      	mov	r0, r3
 8009f4c:	370c      	adds	r7, #12
 8009f4e:	46bd      	mov	sp, r7
 8009f50:	bd90      	pop	{r4, r7, pc}
 8009f52:	bf00      	nop
 8009f54:	0801d030 	.word	0x0801d030

08009f58 <_ZN8touchgfx8LCD16bppD1Ev>:
class LCD16bpp : public LCD
{
public:
    LCD16bpp();

    virtual ~LCD16bpp()
 8009f58:	b580      	push	{r7, lr}
 8009f5a:	b082      	sub	sp, #8
 8009f5c:	af00      	add	r7, sp, #0
 8009f5e:	6078      	str	r0, [r7, #4]
    {
 8009f60:	4a05      	ldr	r2, [pc, #20]	; (8009f78 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 8009f62:	687b      	ldr	r3, [r7, #4]
 8009f64:	601a      	str	r2, [r3, #0]
 8009f66:	687b      	ldr	r3, [r7, #4]
 8009f68:	4618      	mov	r0, r3
 8009f6a:	f7ff fe4d 	bl	8009c08 <_ZN8touchgfx3LCDD1Ev>
    }
 8009f6e:	687b      	ldr	r3, [r7, #4]
 8009f70:	4618      	mov	r0, r3
 8009f72:	3708      	adds	r7, #8
 8009f74:	46bd      	mov	sp, r7
 8009f76:	bd80      	pop	{r7, pc}
 8009f78:	0801f7b4 	.word	0x0801f7b4

08009f7c <_ZN8touchgfx8LCD16bppD0Ev>:
    virtual ~LCD16bpp()
 8009f7c:	b580      	push	{r7, lr}
 8009f7e:	b082      	sub	sp, #8
 8009f80:	af00      	add	r7, sp, #0
 8009f82:	6078      	str	r0, [r7, #4]
    }
 8009f84:	6878      	ldr	r0, [r7, #4]
 8009f86:	f7ff ffe7 	bl	8009f58 <_ZN8touchgfx8LCD16bppD1Ev>
 8009f8a:	2178      	movs	r1, #120	; 0x78
 8009f8c:	6878      	ldr	r0, [r7, #4]
 8009f8e:	f011 f8dd 	bl	801b14c <_ZdlPvj>
 8009f92:	687b      	ldr	r3, [r7, #4]
 8009f94:	4618      	mov	r0, r3
 8009f96:	3708      	adds	r7, #8
 8009f98:	46bd      	mov	sp, r7
 8009f9a:	bd80      	pop	{r7, pc}

08009f9c <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : touchgfx::HAL(dma, display, tc, width, height)
 8009f9c:	b580      	push	{r7, lr}
 8009f9e:	b086      	sub	sp, #24
 8009fa0:	af02      	add	r7, sp, #8
 8009fa2:	60f8      	str	r0, [r7, #12]
 8009fa4:	60b9      	str	r1, [r7, #8]
 8009fa6:	607a      	str	r2, [r7, #4]
 8009fa8:	603b      	str	r3, [r7, #0]
 8009faa:	68f8      	ldr	r0, [r7, #12]
 8009fac:	8bbb      	ldrh	r3, [r7, #28]
 8009fae:	9301      	str	r3, [sp, #4]
 8009fb0:	8b3b      	ldrh	r3, [r7, #24]
 8009fb2:	9300      	str	r3, [sp, #0]
 8009fb4:	683b      	ldr	r3, [r7, #0]
 8009fb6:	687a      	ldr	r2, [r7, #4]
 8009fb8:	68b9      	ldr	r1, [r7, #8]
 8009fba:	f7ff fe7b 	bl	8009cb4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 8009fbe:	4a04      	ldr	r2, [pc, #16]	; (8009fd0 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 8009fc0:	68fb      	ldr	r3, [r7, #12]
 8009fc2:	601a      	str	r2, [r3, #0]
    }
 8009fc4:	68fb      	ldr	r3, [r7, #12]
 8009fc6:	4618      	mov	r0, r3
 8009fc8:	3710      	adds	r7, #16
 8009fca:	46bd      	mov	sp, r7
 8009fcc:	bd80      	pop	{r7, pc}
 8009fce:	bf00      	nop
 8009fd0:	0801d104 	.word	0x0801d104

08009fd4 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8009fd4:	b580      	push	{r7, lr}
 8009fd6:	b086      	sub	sp, #24
 8009fd8:	af02      	add	r7, sp, #8
 8009fda:	60f8      	str	r0, [r7, #12]
 8009fdc:	60b9      	str	r1, [r7, #8]
 8009fde:	607a      	str	r2, [r7, #4]
 8009fe0:	603b      	str	r3, [r7, #0]
 8009fe2:	68f8      	ldr	r0, [r7, #12]
 8009fe4:	8bbb      	ldrh	r3, [r7, #28]
 8009fe6:	9301      	str	r3, [sp, #4]
 8009fe8:	8b3b      	ldrh	r3, [r7, #24]
 8009fea:	9300      	str	r3, [sp, #0]
 8009fec:	683b      	ldr	r3, [r7, #0]
 8009fee:	687a      	ldr	r2, [r7, #4]
 8009ff0:	68b9      	ldr	r1, [r7, #8]
 8009ff2:	f7ff ffd3 	bl	8009f9c <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 8009ff6:	4a04      	ldr	r2, [pc, #16]	; (800a008 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 8009ff8:	68fb      	ldr	r3, [r7, #12]
 8009ffa:	601a      	str	r2, [r3, #0]
    }
 8009ffc:	68fb      	ldr	r3, [r7, #12]
 8009ffe:	4618      	mov	r0, r3
 800a000:	3710      	adds	r7, #16
 800a002:	46bd      	mov	sp, r7
 800a004:	bd80      	pop	{r7, pc}
 800a006:	bf00      	nop
 800a008:	0801ce30 	.word	0x0801ce30

0800a00c <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800a00c:	b480      	push	{r7}
 800a00e:	b083      	sub	sp, #12
 800a010:	af00      	add	r7, sp, #0
 800a012:	6078      	str	r0, [r7, #4]
 800a014:	4a04      	ldr	r2, [pc, #16]	; (800a028 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800a016:	687b      	ldr	r3, [r7, #4]
 800a018:	601a      	str	r2, [r3, #0]
 800a01a:	687b      	ldr	r3, [r7, #4]
 800a01c:	4618      	mov	r0, r3
 800a01e:	370c      	adds	r7, #12
 800a020:	46bd      	mov	sp, r7
 800a022:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a026:	4770      	bx	lr
 800a028:	0801ce18 	.word	0x0801ce18

0800a02c <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800a02c:	b580      	push	{r7, lr}
 800a02e:	b082      	sub	sp, #8
 800a030:	af00      	add	r7, sp, #0
 800a032:	6078      	str	r0, [r7, #4]
 800a034:	687b      	ldr	r3, [r7, #4]
 800a036:	4618      	mov	r0, r3
 800a038:	f7ff ffe8 	bl	800a00c <_ZN8touchgfx15TouchControllerC1Ev>
 800a03c:	4a03      	ldr	r2, [pc, #12]	; (800a04c <_ZN20STM32TouchControllerC1Ev+0x20>)
 800a03e:	687b      	ldr	r3, [r7, #4]
 800a040:	601a      	str	r2, [r3, #0]
 800a042:	687b      	ldr	r3, [r7, #4]
 800a044:	4618      	mov	r0, r3
 800a046:	3708      	adds	r7, #8
 800a048:	46bd      	mov	sp, r7
 800a04a:	bd80      	pop	{r7, pc}
 800a04c:	0801ce00 	.word	0x0801ce00

0800a050 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 800a050:	b590      	push	{r4, r7, lr}
 800a052:	b085      	sub	sp, #20
 800a054:	af02      	add	r7, sp, #8
  Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800a056:	f7fe fafb 	bl	8008650 <_ZN14BitmapDatabase11getInstanceEv>
 800a05a:	4604      	mov	r4, r0
 800a05c:	f7fe fb02 	bl	8008664 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800a060:	4603      	mov	r3, r0
 800a062:	4619      	mov	r1, r3
 800a064:	2300      	movs	r3, #0
 800a066:	9300      	str	r3, [sp, #0]
 800a068:	2300      	movs	r3, #0
 800a06a:	2200      	movs	r2, #0
 800a06c:	4620      	mov	r0, r4
 800a06e:	f005 fbcd 	bl	800f80c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
  TypedText::registerTexts(&texts);
 800a072:	480c      	ldr	r0, [pc, #48]	; (800a0a4 <touchgfx_init+0x54>)
 800a074:	f7ff fd78 	bl	8009b68 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
  Texts::setLanguage(0);
 800a078:	2000      	movs	r0, #0
 800a07a:	f7fe fb17 	bl	80086ac <_ZN8touchgfx5Texts11setLanguageEt>

  FontManager::setFontProvider(&fontProvider);
 800a07e:	480a      	ldr	r0, [pc, #40]	; (800a0a8 <touchgfx_init+0x58>)
 800a080:	f005 fb12 	bl	800f6a8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

  FrontendHeap& heap = FrontendHeap::getInstance();
 800a084:	f7ff fee4 	bl	8009e50 <_ZN12FrontendHeap11getInstanceEv>
 800a088:	6078      	str	r0, [r7, #4]
  (void)heap; // we need to obtain the reference above to initialize the frontend heap.

  hal.initialize();
 800a08a:	4808      	ldr	r0, [pc, #32]	; (800a0ac <touchgfx_init+0x5c>)
 800a08c:	f7ff f80c 	bl	80090a8 <_ZN11TouchGFXHAL10initializeEv>
  hal.enableLCDControllerInterrupt();
 800a090:	4806      	ldr	r0, [pc, #24]	; (800a0ac <touchgfx_init+0x5c>)
 800a092:	f7ff f862 	bl	800915a <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>
  hal.enableInterrupts();
 800a096:	4805      	ldr	r0, [pc, #20]	; (800a0ac <touchgfx_init+0x5c>)
 800a098:	f7ff f847 	bl	800912a <_ZN11TouchGFXHAL16enableInterruptsEv>
}
 800a09c:	bf00      	nop
 800a09e:	370c      	adds	r7, #12
 800a0a0:	46bd      	mov	sp, r7
 800a0a2:	bd90      	pop	{r4, r7, pc}
 800a0a4:	20026e24 	.word	0x20026e24
 800a0a8:	20000020 	.word	0x20000020
 800a0ac:	20026e28 	.word	0x20026e28

0800a0b0 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800a0b0:	b580      	push	{r7, lr}
 800a0b2:	af00      	add	r7, sp, #0
 /*
  * This function check if a VSYNC has occured.
  * If VSYNC has occured, signal TouchGFX to start a rendering
  */
  OSWrappers::waitForVSync();
 800a0b4:	f7ff f8d8 	bl	8009268 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
}
 800a0b8:	bf00      	nop
 800a0ba:	bd80      	pop	{r7, pc}

0800a0bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Constructs an empty Partition.
     */
    Partition() : AbstractPartition()
 800a0bc:	b580      	push	{r7, lr}
 800a0be:	b082      	sub	sp, #8
 800a0c0:	af00      	add	r7, sp, #0
 800a0c2:	6078      	str	r0, [r7, #4]
 800a0c4:	687b      	ldr	r3, [r7, #4]
 800a0c6:	4618      	mov	r0, r3
 800a0c8:	f000 fc74 	bl	800a9b4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800a0cc:	4a03      	ldr	r2, [pc, #12]	; (800a0dc <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800a0ce:	687b      	ldr	r3, [r7, #4]
 800a0d0:	601a      	str	r2, [r3, #0]
    {
    }
 800a0d2:	687b      	ldr	r3, [r7, #4]
 800a0d4:	4618      	mov	r0, r3
 800a0d6:	3708      	adds	r7, #8
 800a0d8:	46bd      	mov	sp, r7
 800a0da:	bd80      	pop	{r7, pc}
 800a0dc:	0801d0ac 	.word	0x0801d0ac

0800a0e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
    /**
     * @fn virtual Partition::~Partition()
     *
     * @brief Destructor.
     */
    virtual ~Partition()
 800a0e0:	b580      	push	{r7, lr}
 800a0e2:	b082      	sub	sp, #8
 800a0e4:	af00      	add	r7, sp, #0
 800a0e6:	6078      	str	r0, [r7, #4]
    {
    }
 800a0e8:	4a05      	ldr	r2, [pc, #20]	; (800a100 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800a0ea:	687b      	ldr	r3, [r7, #4]
 800a0ec:	601a      	str	r2, [r3, #0]
 800a0ee:	687b      	ldr	r3, [r7, #4]
 800a0f0:	4618      	mov	r0, r3
 800a0f2:	f000 fc5d 	bl	800a9b0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800a0f6:	687b      	ldr	r3, [r7, #4]
 800a0f8:	4618      	mov	r0, r3
 800a0fa:	3708      	adds	r7, #8
 800a0fc:	46bd      	mov	sp, r7
 800a0fe:	bd80      	pop	{r7, pc}
 800a100:	0801d0ac 	.word	0x0801d0ac

0800a104 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 800a104:	b580      	push	{r7, lr}
 800a106:	b082      	sub	sp, #8
 800a108:	af00      	add	r7, sp, #0
 800a10a:	6078      	str	r0, [r7, #4]
    }
 800a10c:	6878      	ldr	r0, [r7, #4]
 800a10e:	f7ff ffe7 	bl	800a0e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800a112:	2118      	movs	r1, #24
 800a114:	6878      	ldr	r0, [r7, #4]
 800a116:	f011 f819 	bl	801b14c <_ZdlPvj>
 800a11a:	687b      	ldr	r3, [r7, #4]
 800a11c:	4618      	mov	r0, r3
 800a11e:	3708      	adds	r7, #8
 800a120:	46bd      	mov	sp, r7
 800a122:	bd80      	pop	{r7, pc}

0800a124 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
    Partition() : AbstractPartition()
 800a124:	b580      	push	{r7, lr}
 800a126:	b082      	sub	sp, #8
 800a128:	af00      	add	r7, sp, #0
 800a12a:	6078      	str	r0, [r7, #4]
 800a12c:	687b      	ldr	r3, [r7, #4]
 800a12e:	4618      	mov	r0, r3
 800a130:	f000 fc40 	bl	800a9b4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800a134:	4a03      	ldr	r2, [pc, #12]	; (800a144 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800a136:	687b      	ldr	r3, [r7, #4]
 800a138:	601a      	str	r2, [r3, #0]
    }
 800a13a:	687b      	ldr	r3, [r7, #4]
 800a13c:	4618      	mov	r0, r3
 800a13e:	3708      	adds	r7, #8
 800a140:	46bd      	mov	sp, r7
 800a142:	bd80      	pop	{r7, pc}
 800a144:	0801d078 	.word	0x0801d078

0800a148 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
    virtual ~Partition()
 800a148:	b580      	push	{r7, lr}
 800a14a:	b082      	sub	sp, #8
 800a14c:	af00      	add	r7, sp, #0
 800a14e:	6078      	str	r0, [r7, #4]
    }
 800a150:	4a05      	ldr	r2, [pc, #20]	; (800a168 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800a152:	687b      	ldr	r3, [r7, #4]
 800a154:	601a      	str	r2, [r3, #0]
 800a156:	687b      	ldr	r3, [r7, #4]
 800a158:	4618      	mov	r0, r3
 800a15a:	f000 fc29 	bl	800a9b0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800a15e:	687b      	ldr	r3, [r7, #4]
 800a160:	4618      	mov	r0, r3
 800a162:	3708      	adds	r7, #8
 800a164:	46bd      	mov	sp, r7
 800a166:	bd80      	pop	{r7, pc}
 800a168:	0801d078 	.word	0x0801d078

0800a16c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 800a16c:	b580      	push	{r7, lr}
 800a16e:	b082      	sub	sp, #8
 800a170:	af00      	add	r7, sp, #0
 800a172:	6078      	str	r0, [r7, #4]
    }
 800a174:	6878      	ldr	r0, [r7, #4]
 800a176:	f7ff ffe7 	bl	800a148 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800a17a:	f240 51f4 	movw	r1, #1524	; 0x5f4
 800a17e:	6878      	ldr	r0, [r7, #4]
 800a180:	f010 ffe4 	bl	801b14c <_ZdlPvj>
 800a184:	687b      	ldr	r3, [r7, #4]
 800a186:	4618      	mov	r0, r3
 800a188:	3708      	adds	r7, #8
 800a18a:	46bd      	mov	sp, r7
 800a18c:	bd80      	pop	{r7, pc}
	...

0800a190 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
    Partition() : AbstractPartition()
 800a190:	b580      	push	{r7, lr}
 800a192:	b082      	sub	sp, #8
 800a194:	af00      	add	r7, sp, #0
 800a196:	6078      	str	r0, [r7, #4]
 800a198:	687b      	ldr	r3, [r7, #4]
 800a19a:	4618      	mov	r0, r3
 800a19c:	f000 fc0a 	bl	800a9b4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800a1a0:	4a03      	ldr	r2, [pc, #12]	; (800a1b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800a1a2:	687b      	ldr	r3, [r7, #4]
 800a1a4:	601a      	str	r2, [r3, #0]
    }
 800a1a6:	687b      	ldr	r3, [r7, #4]
 800a1a8:	4618      	mov	r0, r3
 800a1aa:	3708      	adds	r7, #8
 800a1ac:	46bd      	mov	sp, r7
 800a1ae:	bd80      	pop	{r7, pc}
 800a1b0:	0801d044 	.word	0x0801d044

0800a1b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
    virtual ~Partition()
 800a1b4:	b580      	push	{r7, lr}
 800a1b6:	b082      	sub	sp, #8
 800a1b8:	af00      	add	r7, sp, #0
 800a1ba:	6078      	str	r0, [r7, #4]
    }
 800a1bc:	4a05      	ldr	r2, [pc, #20]	; (800a1d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800a1be:	687b      	ldr	r3, [r7, #4]
 800a1c0:	601a      	str	r2, [r3, #0]
 800a1c2:	687b      	ldr	r3, [r7, #4]
 800a1c4:	4618      	mov	r0, r3
 800a1c6:	f000 fbf3 	bl	800a9b0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800a1ca:	687b      	ldr	r3, [r7, #4]
 800a1cc:	4618      	mov	r0, r3
 800a1ce:	3708      	adds	r7, #8
 800a1d0:	46bd      	mov	sp, r7
 800a1d2:	bd80      	pop	{r7, pc}
 800a1d4:	0801d044 	.word	0x0801d044

0800a1d8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 800a1d8:	b580      	push	{r7, lr}
 800a1da:	b082      	sub	sp, #8
 800a1dc:	af00      	add	r7, sp, #0
 800a1de:	6078      	str	r0, [r7, #4]
    }
 800a1e0:	6878      	ldr	r0, [r7, #4]
 800a1e2:	f7ff ffe7 	bl	800a1b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800a1e6:	2114      	movs	r1, #20
 800a1e8:	6878      	ldr	r0, [r7, #4]
 800a1ea:	f010 ffaf 	bl	801b14c <_ZdlPvj>
 800a1ee:	687b      	ldr	r3, [r7, #4]
 800a1f0:	4618      	mov	r0, r3
 800a1f2:	3708      	adds	r7, #8
 800a1f4:	46bd      	mov	sp, r7
 800a1f6:	bd80      	pop	{r7, pc}

0800a1f8 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800a1f8:	b580      	push	{r7, lr}
 800a1fa:	b082      	sub	sp, #8
 800a1fc:	af00      	add	r7, sp, #0
 800a1fe:	6078      	str	r0, [r7, #4]
 800a200:	4a10      	ldr	r2, [pc, #64]	; (800a244 <_ZN12FrontendHeapD1Ev+0x4c>)
 800a202:	687b      	ldr	r3, [r7, #4]
 800a204:	601a      	str	r2, [r3, #0]
 800a206:	687b      	ldr	r3, [r7, #4]
 800a208:	f203 6334 	addw	r3, r3, #1588	; 0x634
 800a20c:	4618      	mov	r0, r3
 800a20e:	f7fe faff 	bl	8008810 <_ZN19FrontendApplicationD1Ev>
 800a212:	687b      	ldr	r3, [r7, #4]
 800a214:	f503 63c4 	add.w	r3, r3, #1568	; 0x620
 800a218:	4618      	mov	r0, r3
 800a21a:	f7ff ffcb 	bl	800a1b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800a21e:	687b      	ldr	r3, [r7, #4]
 800a220:	332c      	adds	r3, #44	; 0x2c
 800a222:	4618      	mov	r0, r3
 800a224:	f7ff ff90 	bl	800a148 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800a228:	687b      	ldr	r3, [r7, #4]
 800a22a:	3314      	adds	r3, #20
 800a22c:	4618      	mov	r0, r3
 800a22e:	f7ff ff57 	bl	800a0e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800a232:	687b      	ldr	r3, [r7, #4]
 800a234:	4618      	mov	r0, r3
 800a236:	f7ff fe25 	bl	8009e84 <_ZN16FrontendHeapBaseD1Ev>
 800a23a:	687b      	ldr	r3, [r7, #4]
 800a23c:	4618      	mov	r0, r3
 800a23e:	3708      	adds	r7, #8
 800a240:	46bd      	mov	sp, r7
 800a242:	bd80      	pop	{r7, pc}
 800a244:	0801d030 	.word	0x0801d030

0800a248 <_ZN12FrontendHeapD0Ev>:
 800a248:	b580      	push	{r7, lr}
 800a24a:	b082      	sub	sp, #8
 800a24c:	af00      	add	r7, sp, #0
 800a24e:	6078      	str	r0, [r7, #4]
 800a250:	6878      	ldr	r0, [r7, #4]
 800a252:	f7ff ffd1 	bl	800a1f8 <_ZN12FrontendHeapD1Ev>
 800a256:	f44f 61f1 	mov.w	r1, #1928	; 0x788
 800a25a:	6878      	ldr	r0, [r7, #4]
 800a25c:	f010 ff76 	bl	801b14c <_ZdlPvj>
 800a260:	687b      	ldr	r3, [r7, #4]
 800a262:	4618      	mov	r0, r3
 800a264:	3708      	adds	r7, #8
 800a266:	46bd      	mov	sp, r7
 800a268:	bd80      	pop	{r7, pc}
	...

0800a26c <_Z41__static_initialization_and_destruction_0ii>:
 800a26c:	b580      	push	{r7, lr}
 800a26e:	b084      	sub	sp, #16
 800a270:	af02      	add	r7, sp, #8
 800a272:	6078      	str	r0, [r7, #4]
 800a274:	6039      	str	r1, [r7, #0]
 800a276:	687b      	ldr	r3, [r7, #4]
 800a278:	2b01      	cmp	r3, #1
 800a27a:	d118      	bne.n	800a2ae <_Z41__static_initialization_and_destruction_0ii+0x42>
 800a27c:	683b      	ldr	r3, [r7, #0]
 800a27e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a282:	4293      	cmp	r3, r2
 800a284:	d113      	bne.n	800a2ae <_Z41__static_initialization_and_destruction_0ii+0x42>
static STM32TouchController tc;
 800a286:	4817      	ldr	r0, [pc, #92]	; (800a2e4 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800a288:	f7ff fed0 	bl	800a02c <_ZN20STM32TouchControllerC1Ev>
static STM32F4DMA dma;
 800a28c:	4816      	ldr	r0, [pc, #88]	; (800a2e8 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800a28e:	f7ff f96d 	bl	800956c <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 800a292:	4816      	ldr	r0, [pc, #88]	; (800a2ec <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800a294:	f008 fabe 	bl	8012814 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 240, 320);
 800a298:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800a29c:	9301      	str	r3, [sp, #4]
 800a29e:	23f0      	movs	r3, #240	; 0xf0
 800a2a0:	9300      	str	r3, [sp, #0]
 800a2a2:	4b10      	ldr	r3, [pc, #64]	; (800a2e4 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800a2a4:	4a11      	ldr	r2, [pc, #68]	; (800a2ec <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800a2a6:	4910      	ldr	r1, [pc, #64]	; (800a2e8 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800a2a8:	4811      	ldr	r0, [pc, #68]	; (800a2f0 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800a2aa:	f7ff fe93 	bl	8009fd4 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800a2ae:	687b      	ldr	r3, [r7, #4]
 800a2b0:	2b00      	cmp	r3, #0
 800a2b2:	d113      	bne.n	800a2dc <_Z41__static_initialization_and_destruction_0ii+0x70>
 800a2b4:	683b      	ldr	r3, [r7, #0]
 800a2b6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a2ba:	4293      	cmp	r3, r2
 800a2bc:	d10e      	bne.n	800a2dc <_Z41__static_initialization_and_destruction_0ii+0x70>
 800a2be:	480c      	ldr	r0, [pc, #48]	; (800a2f0 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800a2c0:	f7fe ff58 	bl	8009174 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800a2c4:	480b      	ldr	r0, [pc, #44]	; (800a2f4 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800a2c6:	f7fb fde5 	bl	8005e94 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800a2ca:	4808      	ldr	r0, [pc, #32]	; (800a2ec <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800a2cc:	f7ff fe44 	bl	8009f58 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32F4DMA dma;
 800a2d0:	4805      	ldr	r0, [pc, #20]	; (800a2e8 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800a2d2:	f7ff f975 	bl	80095c0 <_ZN10STM32F4DMAD1Ev>
static STM32TouchController tc;
 800a2d6:	4803      	ldr	r0, [pc, #12]	; (800a2e4 <_Z41__static_initialization_and_destruction_0ii+0x78>)
 800a2d8:	f7fe fcc2 	bl	8008c60 <_ZN20STM32TouchControllerD1Ev>
}
 800a2dc:	bf00      	nop
 800a2de:	3708      	adds	r7, #8
 800a2e0:	46bd      	mov	sp, r7
 800a2e2:	bd80      	pop	{r7, pc}
 800a2e4:	20026188 	.word	0x20026188
 800a2e8:	2002618c 	.word	0x2002618c
 800a2ec:	20026dac 	.word	0x20026dac
 800a2f0:	20026e28 	.word	0x20026e28
 800a2f4:	20000020 	.word	0x20000020

0800a2f8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
     *
     * @return An uint16_t.
     *
     * @see touchgfx::AbstractPartition::capacity()
     */
    virtual uint16_t capacity() const
 800a2f8:	b480      	push	{r7}
 800a2fa:	b083      	sub	sp, #12
 800a2fc:	af00      	add	r7, sp, #0
 800a2fe:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800a300:	2301      	movs	r3, #1
    }
 800a302:	4618      	mov	r0, r3
 800a304:	370c      	adds	r7, #12
 800a306:	46bd      	mov	sp, r7
 800a308:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a30c:	4770      	bx	lr

0800a30e <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
     *
     * @return An uint32_t.
     *
     * @see touchgfx::AbstractPartition::element_size()
     */
    virtual uint32_t element_size()
 800a30e:	b480      	push	{r7}
 800a310:	b083      	sub	sp, #12
 800a312:	af00      	add	r7, sp, #0
 800a314:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800a316:	230c      	movs	r3, #12
    }
 800a318:	4618      	mov	r0, r3
 800a31a:	370c      	adds	r7, #12
 800a31c:	46bd      	mov	sp, r7
 800a31e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a322:	4770      	bx	lr

0800a324 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @return null if it fails, else a void*.
     *
     * @see touchgfx::AbstractPartition::element()
     */
    virtual void* element(uint16_t index)
 800a324:	b480      	push	{r7}
 800a326:	b083      	sub	sp, #12
 800a328:	af00      	add	r7, sp, #0
 800a32a:	6078      	str	r0, [r7, #4]
 800a32c:	460b      	mov	r3, r1
 800a32e:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800a330:	887a      	ldrh	r2, [r7, #2]
 800a332:	4613      	mov	r3, r2
 800a334:	005b      	lsls	r3, r3, #1
 800a336:	4413      	add	r3, r2
 800a338:	009b      	lsls	r3, r3, #2
 800a33a:	3308      	adds	r3, #8
 800a33c:	687a      	ldr	r2, [r7, #4]
 800a33e:	4413      	add	r3, r2
    }
 800a340:	4618      	mov	r0, r3
 800a342:	370c      	adds	r7, #12
 800a344:	46bd      	mov	sp, r7
 800a346:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a34a:	4770      	bx	lr

0800a34c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @return null if it fails, else a void*.
     *
     * @see touchgfx::AbstractPartition::element()
     */
    virtual const void* element(uint16_t index) const
 800a34c:	b480      	push	{r7}
 800a34e:	b083      	sub	sp, #12
 800a350:	af00      	add	r7, sp, #0
 800a352:	6078      	str	r0, [r7, #4]
 800a354:	460b      	mov	r3, r1
 800a356:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800a358:	887a      	ldrh	r2, [r7, #2]
 800a35a:	4613      	mov	r3, r2
 800a35c:	005b      	lsls	r3, r3, #1
 800a35e:	4413      	add	r3, r2
 800a360:	009b      	lsls	r3, r3, #2
 800a362:	3308      	adds	r3, #8
 800a364:	687a      	ldr	r2, [r7, #4]
 800a366:	4413      	add	r3, r2
    }
 800a368:	4618      	mov	r0, r3
 800a36a:	370c      	adds	r7, #12
 800a36c:	46bd      	mov	sp, r7
 800a36e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a372:	4770      	bx	lr

0800a374 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800a374:	b480      	push	{r7}
 800a376:	b083      	sub	sp, #12
 800a378:	af00      	add	r7, sp, #0
 800a37a:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800a37c:	2301      	movs	r3, #1
    }
 800a37e:	4618      	mov	r0, r3
 800a380:	370c      	adds	r7, #12
 800a382:	46bd      	mov	sp, r7
 800a384:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a388:	4770      	bx	lr

0800a38a <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800a38a:	b480      	push	{r7}
 800a38c:	b083      	sub	sp, #12
 800a38e:	af00      	add	r7, sp, #0
 800a390:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800a392:	f240 53ec 	movw	r3, #1516	; 0x5ec
    }
 800a396:	4618      	mov	r0, r3
 800a398:	370c      	adds	r7, #12
 800a39a:	46bd      	mov	sp, r7
 800a39c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3a0:	4770      	bx	lr

0800a3a2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800a3a2:	b480      	push	{r7}
 800a3a4:	b083      	sub	sp, #12
 800a3a6:	af00      	add	r7, sp, #0
 800a3a8:	6078      	str	r0, [r7, #4]
 800a3aa:	460b      	mov	r3, r1
 800a3ac:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800a3ae:	887b      	ldrh	r3, [r7, #2]
 800a3b0:	f240 52ec 	movw	r2, #1516	; 0x5ec
 800a3b4:	fb02 f303 	mul.w	r3, r2, r3
 800a3b8:	3308      	adds	r3, #8
 800a3ba:	687a      	ldr	r2, [r7, #4]
 800a3bc:	4413      	add	r3, r2
    }
 800a3be:	4618      	mov	r0, r3
 800a3c0:	370c      	adds	r7, #12
 800a3c2:	46bd      	mov	sp, r7
 800a3c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3c8:	4770      	bx	lr

0800a3ca <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800a3ca:	b480      	push	{r7}
 800a3cc:	b083      	sub	sp, #12
 800a3ce:	af00      	add	r7, sp, #0
 800a3d0:	6078      	str	r0, [r7, #4]
 800a3d2:	460b      	mov	r3, r1
 800a3d4:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800a3d6:	887b      	ldrh	r3, [r7, #2]
 800a3d8:	f240 52ec 	movw	r2, #1516	; 0x5ec
 800a3dc:	fb02 f303 	mul.w	r3, r2, r3
 800a3e0:	3308      	adds	r3, #8
 800a3e2:	687a      	ldr	r2, [r7, #4]
 800a3e4:	4413      	add	r3, r2
    }
 800a3e6:	4618      	mov	r0, r3
 800a3e8:	370c      	adds	r7, #12
 800a3ea:	46bd      	mov	sp, r7
 800a3ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3f0:	4770      	bx	lr

0800a3f2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800a3f2:	b480      	push	{r7}
 800a3f4:	b083      	sub	sp, #12
 800a3f6:	af00      	add	r7, sp, #0
 800a3f8:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800a3fa:	2301      	movs	r3, #1
    }
 800a3fc:	4618      	mov	r0, r3
 800a3fe:	370c      	adds	r7, #12
 800a400:	46bd      	mov	sp, r7
 800a402:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a406:	4770      	bx	lr

0800a408 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800a408:	b480      	push	{r7}
 800a40a:	b083      	sub	sp, #12
 800a40c:	af00      	add	r7, sp, #0
 800a40e:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800a410:	2310      	movs	r3, #16
    }
 800a412:	4618      	mov	r0, r3
 800a414:	370c      	adds	r7, #12
 800a416:	46bd      	mov	sp, r7
 800a418:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a41c:	4770      	bx	lr

0800a41e <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800a41e:	b480      	push	{r7}
 800a420:	b083      	sub	sp, #12
 800a422:	af00      	add	r7, sp, #0
 800a424:	6078      	str	r0, [r7, #4]
 800a426:	460b      	mov	r3, r1
 800a428:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800a42a:	887b      	ldrh	r3, [r7, #2]
 800a42c:	011b      	lsls	r3, r3, #4
 800a42e:	3308      	adds	r3, #8
 800a430:	687a      	ldr	r2, [r7, #4]
 800a432:	4413      	add	r3, r2
    }
 800a434:	4618      	mov	r0, r3
 800a436:	370c      	adds	r7, #12
 800a438:	46bd      	mov	sp, r7
 800a43a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a43e:	4770      	bx	lr

0800a440 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800a440:	b480      	push	{r7}
 800a442:	b083      	sub	sp, #12
 800a444:	af00      	add	r7, sp, #0
 800a446:	6078      	str	r0, [r7, #4]
 800a448:	460b      	mov	r3, r1
 800a44a:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800a44c:	887b      	ldrh	r3, [r7, #2]
 800a44e:	011b      	lsls	r3, r3, #4
 800a450:	3308      	adds	r3, #8
 800a452:	687a      	ldr	r2, [r7, #4]
 800a454:	4413      	add	r3, r2
    }
 800a456:	4618      	mov	r0, r3
 800a458:	370c      	adds	r7, #12
 800a45a:	46bd      	mov	sp, r7
 800a45c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a460:	4770      	bx	lr

0800a462 <_GLOBAL__sub_I_touchgfx_init>:
 800a462:	b580      	push	{r7, lr}
 800a464:	af00      	add	r7, sp, #0
 800a466:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800a46a:	2001      	movs	r0, #1
 800a46c:	f7ff fefe 	bl	800a26c <_Z41__static_initialization_and_destruction_0ii>
 800a470:	bd80      	pop	{r7, pc}

0800a472 <_GLOBAL__sub_D_touchgfx_init>:
 800a472:	b580      	push	{r7, lr}
 800a474:	af00      	add	r7, sp, #0
 800a476:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800a47a:	2000      	movs	r0, #0
 800a47c:	f7ff fef6 	bl	800a26c <_Z41__static_initialization_and_destruction_0ii>
 800a480:	bd80      	pop	{r7, pc}

0800a482 <_ZN8touchgfx3HAL17frontPorchEnteredEv>:
    void frontPorchEntered()
 800a482:	b580      	push	{r7, lr}
 800a484:	b082      	sub	sp, #8
 800a486:	af00      	add	r7, sp, #0
 800a488:	6078      	str	r0, [r7, #4]
        allowDMATransfers();
 800a48a:	687b      	ldr	r3, [r7, #4]
 800a48c:	681b      	ldr	r3, [r3, #0]
 800a48e:	3318      	adds	r3, #24
 800a490:	681b      	ldr	r3, [r3, #0]
 800a492:	6878      	ldr	r0, [r7, #4]
 800a494:	4798      	blx	r3
    }
 800a496:	bf00      	nop
 800a498:	3708      	adds	r7, #8
 800a49a:	46bd      	mov	sp, r7
 800a49c:	bd80      	pop	{r7, pc}

0800a49e <_ZN8touchgfx3HAL19lockDMAToFrontPorchEb>:
    void lockDMAToFrontPorch(bool enableLock)
 800a49e:	b480      	push	{r7}
 800a4a0:	b083      	sub	sp, #12
 800a4a2:	af00      	add	r7, sp, #0
 800a4a4:	6078      	str	r0, [r7, #4]
 800a4a6:	460b      	mov	r3, r1
 800a4a8:	70fb      	strb	r3, [r7, #3]
        lockDMAToPorch = enableLock;
 800a4aa:	687b      	ldr	r3, [r7, #4]
 800a4ac:	78fa      	ldrb	r2, [r7, #3]
 800a4ae:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
    }
 800a4b2:	bf00      	nop
 800a4b4:	370c      	adds	r7, #12
 800a4b6:	46bd      	mov	sp, r7
 800a4b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4bc:	4770      	bx	lr

0800a4be <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 800a4be:	b480      	push	{r7}
 800a4c0:	b083      	sub	sp, #12
 800a4c2:	af00      	add	r7, sp, #0
 800a4c4:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 800a4c6:	687b      	ldr	r3, [r7, #4]
 800a4c8:	f893 3066 	ldrb.w	r3, [r3, #102]	; 0x66
 800a4cc:	3301      	adds	r3, #1
 800a4ce:	b2da      	uxtb	r2, r3
 800a4d0:	687b      	ldr	r3, [r7, #4]
 800a4d2:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
    }
 800a4d6:	bf00      	nop
 800a4d8:	370c      	adds	r7, #12
 800a4da:	46bd      	mov	sp, r7
 800a4dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4e0:	4770      	bx	lr
	...

0800a4e4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800a4e4:	b580      	push	{r7, lr}
 800a4e6:	b082      	sub	sp, #8
 800a4e8:	af00      	add	r7, sp, #0
 800a4ea:	6078      	str	r0, [r7, #4]
 800a4ec:	460b      	mov	r3, r1
 800a4ee:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800a4f0:	78fb      	ldrb	r3, [r7, #3]
 800a4f2:	2b00      	cmp	r3, #0
 800a4f4:	d002      	beq.n	800a4fc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800a4f6:	78fb      	ldrb	r3, [r7, #3]
 800a4f8:	2b02      	cmp	r3, #2
 800a4fa:	d105      	bne.n	800a508 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 800a4fc:	687b      	ldr	r3, [r7, #4]
 800a4fe:	78fa      	ldrb	r2, [r7, #3]
 800a500:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 800a504:	2301      	movs	r3, #1
 800a506:	e027      	b.n	800a558 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        else if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800a508:	78fb      	ldrb	r3, [r7, #3]
 800a50a:	2b01      	cmp	r3, #1
 800a50c:	d123      	bne.n	800a556 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800a50e:	687b      	ldr	r3, [r7, #4]
 800a510:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a512:	2b00      	cmp	r3, #0
 800a514:	d014      	beq.n	800a540 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800a516:	687b      	ldr	r3, [r7, #4]
 800a518:	681b      	ldr	r3, [r3, #0]
 800a51a:	3380      	adds	r3, #128	; 0x80
 800a51c:	681b      	ldr	r3, [r3, #0]
 800a51e:	6878      	ldr	r0, [r7, #4]
 800a520:	4798      	blx	r3
 800a522:	4603      	mov	r3, r0
 800a524:	461a      	mov	r2, r3
 800a526:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a52a:	429a      	cmp	r2, r3
 800a52c:	d008      	beq.n	800a540 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800a52e:	4b0c      	ldr	r3, [pc, #48]	; (800a560 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800a530:	781b      	ldrb	r3, [r3, #0]
 800a532:	f083 0301 	eor.w	r3, r3, #1
 800a536:	b2db      	uxtb	r3, r3
 800a538:	2b00      	cmp	r3, #0
 800a53a:	d001      	beq.n	800a540 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800a53c:	2301      	movs	r3, #1
 800a53e:	e000      	b.n	800a542 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800a540:	2300      	movs	r3, #0
 800a542:	2b00      	cmp	r3, #0
 800a544:	d005      	beq.n	800a552 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 800a546:	687b      	ldr	r3, [r7, #4]
 800a548:	78fa      	ldrb	r2, [r7, #3]
 800a54a:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 800a54e:	2301      	movs	r3, #1
 800a550:	e002      	b.n	800a558 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 800a552:	2300      	movs	r3, #0
 800a554:	e000      	b.n	800a558 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 800a556:	2300      	movs	r3, #0
    }
 800a558:	4618      	mov	r0, r3
 800a55a:	3708      	adds	r7, #8
 800a55c:	46bd      	mov	sp, r7
 800a55e:	bd80      	pop	{r7, pc}
 800a560:	20026eae 	.word	0x20026eae

0800a564 <_ZN8touchgfx3HAL25registerTaskDelayFunctionEPFvtE>:
    void registerTaskDelayFunction(void(*delayF)(uint16_t))
 800a564:	b480      	push	{r7}
 800a566:	b083      	sub	sp, #12
 800a568:	af00      	add	r7, sp, #0
 800a56a:	6078      	str	r0, [r7, #4]
 800a56c:	6039      	str	r1, [r7, #0]
        taskDelayFunc = delayF;
 800a56e:	687b      	ldr	r3, [r7, #4]
 800a570:	683a      	ldr	r2, [r7, #0]
 800a572:	639a      	str	r2, [r3, #56]	; 0x38
    }
 800a574:	bf00      	nop
 800a576:	370c      	adds	r7, #12
 800a578:	46bd      	mov	sp, r7
 800a57a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a57e:	4770      	bx	lr

0800a580 <__NVIC_EnableIRQ>:
{
 800a580:	b480      	push	{r7}
 800a582:	b083      	sub	sp, #12
 800a584:	af00      	add	r7, sp, #0
 800a586:	4603      	mov	r3, r0
 800a588:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800a58a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a58e:	2b00      	cmp	r3, #0
 800a590:	db0d      	blt.n	800a5ae <__NVIC_EnableIRQ+0x2e>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800a592:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a596:	b2db      	uxtb	r3, r3
 800a598:	f003 021f 	and.w	r2, r3, #31
 800a59c:	4907      	ldr	r1, [pc, #28]	; (800a5bc <__NVIC_EnableIRQ+0x3c>)
 800a59e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a5a2:	095b      	lsrs	r3, r3, #5
 800a5a4:	2001      	movs	r0, #1
 800a5a6:	fa00 f202 	lsl.w	r2, r0, r2
 800a5aa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800a5ae:	bf00      	nop
 800a5b0:	370c      	adds	r7, #12
 800a5b2:	46bd      	mov	sp, r7
 800a5b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5b8:	4770      	bx	lr
 800a5ba:	bf00      	nop
 800a5bc:	e000e100 	.word	0xe000e100

0800a5c0 <__NVIC_DisableIRQ>:
{
 800a5c0:	b480      	push	{r7}
 800a5c2:	b083      	sub	sp, #12
 800a5c4:	af00      	add	r7, sp, #0
 800a5c6:	4603      	mov	r3, r0
 800a5c8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800a5ca:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a5ce:	2b00      	cmp	r3, #0
 800a5d0:	db12      	blt.n	800a5f8 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800a5d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a5d6:	b2db      	uxtb	r3, r3
 800a5d8:	f003 021f 	and.w	r2, r3, #31
 800a5dc:	4909      	ldr	r1, [pc, #36]	; (800a604 <__NVIC_DisableIRQ+0x44>)
 800a5de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a5e2:	095b      	lsrs	r3, r3, #5
 800a5e4:	2001      	movs	r0, #1
 800a5e6:	fa00 f202 	lsl.w	r2, r0, r2
 800a5ea:	3320      	adds	r3, #32
 800a5ec:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800a5f0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800a5f4:	f3bf 8f6f 	isb	sy
}
 800a5f8:	bf00      	nop
 800a5fa:	370c      	adds	r7, #12
 800a5fc:	46bd      	mov	sp, r7
 800a5fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a602:	4770      	bx	lr
 800a604:	e000e100 	.word	0xe000e100

0800a608 <__NVIC_SetPriority>:
{
 800a608:	b480      	push	{r7}
 800a60a:	b083      	sub	sp, #12
 800a60c:	af00      	add	r7, sp, #0
 800a60e:	4603      	mov	r3, r0
 800a610:	6039      	str	r1, [r7, #0]
 800a612:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800a614:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a618:	2b00      	cmp	r3, #0
 800a61a:	db0c      	blt.n	800a636 <__NVIC_SetPriority+0x2e>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a61c:	683b      	ldr	r3, [r7, #0]
 800a61e:	b2db      	uxtb	r3, r3
 800a620:	4a0e      	ldr	r2, [pc, #56]	; (800a65c <__NVIC_SetPriority+0x54>)
 800a622:	f997 1007 	ldrsb.w	r1, [r7, #7]
 800a626:	4608      	mov	r0, r1
 800a628:	011b      	lsls	r3, r3, #4
 800a62a:	b2d9      	uxtb	r1, r3
 800a62c:	1813      	adds	r3, r2, r0
 800a62e:	460a      	mov	r2, r1
 800a630:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 800a634:	e00c      	b.n	800a650 <__NVIC_SetPriority+0x48>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a636:	683b      	ldr	r3, [r7, #0]
 800a638:	b2da      	uxtb	r2, r3
 800a63a:	4909      	ldr	r1, [pc, #36]	; (800a660 <__NVIC_SetPriority+0x58>)
 800a63c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a640:	b2db      	uxtb	r3, r3
 800a642:	f003 030f 	and.w	r3, r3, #15
 800a646:	3b04      	subs	r3, #4
 800a648:	0112      	lsls	r2, r2, #4
 800a64a:	b2d2      	uxtb	r2, r2
 800a64c:	440b      	add	r3, r1
 800a64e:	761a      	strb	r2, [r3, #24]
}
 800a650:	bf00      	nop
 800a652:	370c      	adds	r7, #12
 800a654:	46bd      	mov	sp, r7
 800a656:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a65a:	4770      	bx	lr
 800a65c:	e000e100 	.word	0xe000e100
 800a660:	e000ed00 	.word	0xe000ed00

0800a664 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
    static uint16_t lcd_int_active_line;
    static uint16_t lcd_int_porch_line;
}

void TouchGFXGeneratedHAL::initialize()
{
 800a664:	b5b0      	push	{r4, r5, r7, lr}
 800a666:	b082      	sub	sp, #8
 800a668:	af00      	add	r7, sp, #0
 800a66a:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800a66c:	687b      	ldr	r3, [r7, #4]
 800a66e:	4618      	mov	r0, r3
 800a670:	f001 f956 	bl	800b920 <_ZN8touchgfx3HAL10initializeEv>

    registerEventListener(*(touchgfx::Application::getInstance()));
 800a674:	687d      	ldr	r5, [r7, #4]
 800a676:	687b      	ldr	r3, [r7, #4]
 800a678:	681b      	ldr	r3, [r3, #0]
 800a67a:	334c      	adds	r3, #76	; 0x4c
 800a67c:	681c      	ldr	r4, [r3, #0]
 800a67e:	f003 f807 	bl	800d690 <_ZN8touchgfx11Application11getInstanceEv>
 800a682:	4603      	mov	r3, r0
 800a684:	4619      	mov	r1, r3
 800a686:	4628      	mov	r0, r5
 800a688:	47a0      	blx	r4
    registerTaskDelayFunction(&OSWrappers::taskDelay);
 800a68a:	687b      	ldr	r3, [r7, #4]
 800a68c:	490d      	ldr	r1, [pc, #52]	; (800a6c4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x60>)
 800a68e:	4618      	mov	r0, r3
 800a690:	f7ff ff68 	bl	800a564 <_ZN8touchgfx3HAL25registerTaskDelayFunctionEPFvtE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL);
 800a694:	687b      	ldr	r3, [r7, #4]
 800a696:	2101      	movs	r1, #1
 800a698:	4618      	mov	r0, r3
 800a69a:	f7ff ff23 	bl	800a4e4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>

    setFrameBufferStartAddresses((void*)frameBuf, (void*)0, (void*)0);
 800a69e:	6878      	ldr	r0, [r7, #4]
 800a6a0:	687b      	ldr	r3, [r7, #4]
 800a6a2:	681b      	ldr	r3, [r3, #0]
 800a6a4:	3374      	adds	r3, #116	; 0x74
 800a6a6:	681c      	ldr	r4, [r3, #0]
 800a6a8:	2300      	movs	r3, #0
 800a6aa:	2200      	movs	r2, #0
 800a6ac:	4906      	ldr	r1, [pc, #24]	; (800a6c8 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x64>)
 800a6ae:	47a0      	blx	r4
     * Set whether the DMA transfers are locked to the TFT update cycle. If
     * locked, DMA transfer will not begin until the TFT controller has finished
     * updating the display. If not locked, DMA transfers will begin as soon as
     * possible. Default is true (DMA is locked with TFT).
     */
    lockDMAToFrontPorch(true);
 800a6b0:	687b      	ldr	r3, [r7, #4]
 800a6b2:	2101      	movs	r1, #1
 800a6b4:	4618      	mov	r0, r3
 800a6b6:	f7ff fef2 	bl	800a49e <_ZN8touchgfx3HAL19lockDMAToFrontPorchEb>
}
 800a6ba:	bf00      	nop
 800a6bc:	3708      	adds	r7, #8
 800a6be:	46bd      	mov	sp, r7
 800a6c0:	bdb0      	pop	{r4, r5, r7, pc}
 800a6c2:	bf00      	nop
 800a6c4:	0800929d 	.word	0x0800929d
 800a6c8:	20000100 	.word	0x20000100

0800a6cc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800a6cc:	b580      	push	{r7, lr}
 800a6ce:	b082      	sub	sp, #8
 800a6d0:	af00      	add	r7, sp, #0
 800a6d2:	6078      	str	r0, [r7, #4]
    NVIC_SetPriority(DMA2D_IRQn, 9);
 800a6d4:	2109      	movs	r1, #9
 800a6d6:	205a      	movs	r0, #90	; 0x5a
 800a6d8:	f7ff ff96 	bl	800a608 <__NVIC_SetPriority>
    NVIC_SetPriority(LTDC_IRQn, 9);
 800a6dc:	2109      	movs	r1, #9
 800a6de:	2058      	movs	r0, #88	; 0x58
 800a6e0:	f7ff ff92 	bl	800a608 <__NVIC_SetPriority>
}
 800a6e4:	bf00      	nop
 800a6e6:	3708      	adds	r7, #8
 800a6e8:	46bd      	mov	sp, r7
 800a6ea:	bd80      	pop	{r7, pc}

0800a6ec <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800a6ec:	b580      	push	{r7, lr}
 800a6ee:	b082      	sub	sp, #8
 800a6f0:	af00      	add	r7, sp, #0
 800a6f2:	6078      	str	r0, [r7, #4]
    NVIC_EnableIRQ(DMA2D_IRQn);
 800a6f4:	205a      	movs	r0, #90	; 0x5a
 800a6f6:	f7ff ff43 	bl	800a580 <__NVIC_EnableIRQ>
    NVIC_EnableIRQ(LTDC_IRQn);
 800a6fa:	2058      	movs	r0, #88	; 0x58
 800a6fc:	f7ff ff40 	bl	800a580 <__NVIC_EnableIRQ>
}
 800a700:	bf00      	nop
 800a702:	3708      	adds	r7, #8
 800a704:	46bd      	mov	sp, r7
 800a706:	bd80      	pop	{r7, pc}

0800a708 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800a708:	b580      	push	{r7, lr}
 800a70a:	b082      	sub	sp, #8
 800a70c:	af00      	add	r7, sp, #0
 800a70e:	6078      	str	r0, [r7, #4]
    NVIC_DisableIRQ(DMA2D_IRQn);
 800a710:	205a      	movs	r0, #90	; 0x5a
 800a712:	f7ff ff55 	bl	800a5c0 <__NVIC_DisableIRQ>
    NVIC_DisableIRQ(LTDC_IRQn);
 800a716:	2058      	movs	r0, #88	; 0x58
 800a718:	f7ff ff52 	bl	800a5c0 <__NVIC_DisableIRQ>
}
 800a71c:	bf00      	nop
 800a71e:	3708      	adds	r7, #8
 800a720:	46bd      	mov	sp, r7
 800a722:	bd80      	pop	{r7, pc}

0800a724 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800a724:	b480      	push	{r7}
 800a726:	b083      	sub	sp, #12
 800a728:	af00      	add	r7, sp, #0
 800a72a:	6078      	str	r0, [r7, #4]
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800a72c:	4b11      	ldr	r3, [pc, #68]	; (800a774 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800a72e:	68db      	ldr	r3, [r3, #12]
 800a730:	b29b      	uxth	r3, r3
 800a732:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800a736:	b29b      	uxth	r3, r3
 800a738:	3b01      	subs	r3, #1
 800a73a:	b29a      	uxth	r2, r3
 800a73c:	4b0e      	ldr	r3, [pc, #56]	; (800a778 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 800a73e:	801a      	strh	r2, [r3, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800a740:	4b0c      	ldr	r3, [pc, #48]	; (800a774 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800a742:	691b      	ldr	r3, [r3, #16]
 800a744:	b29b      	uxth	r3, r3
 800a746:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800a74a:	b29b      	uxth	r3, r3
 800a74c:	3b01      	subs	r3, #1
 800a74e:	b29a      	uxth	r2, r3
 800a750:	4b0a      	ldr	r3, [pc, #40]	; (800a77c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x58>)
 800a752:	801a      	strh	r2, [r3, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800a754:	4b08      	ldr	r3, [pc, #32]	; (800a778 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 800a756:	881a      	ldrh	r2, [r3, #0]
 800a758:	4b06      	ldr	r3, [pc, #24]	; (800a774 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800a75a:	641a      	str	r2, [r3, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800a75c:	4b05      	ldr	r3, [pc, #20]	; (800a774 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800a75e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a760:	4a04      	ldr	r2, [pc, #16]	; (800a774 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800a762:	f043 0301 	orr.w	r3, r3, #1
 800a766:	6353      	str	r3, [r2, #52]	; 0x34
}
 800a768:	bf00      	nop
 800a76a:	370c      	adds	r7, #12
 800a76c:	46bd      	mov	sp, r7
 800a76e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a772:	4770      	bx	lr
 800a774:	40016800 	.word	0x40016800
 800a778:	20026ea0 	.word	0x20026ea0
 800a77c:	20026ea2 	.word	0x20026ea2

0800a780 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800a780:	b480      	push	{r7}
 800a782:	b083      	sub	sp, #12
 800a784:	af00      	add	r7, sp, #0
 800a786:	6078      	str	r0, [r7, #4]
    return (uint16_t*)LTDC_Layer1->CFBAR;
 800a788:	4b03      	ldr	r3, [pc, #12]	; (800a798 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x18>)
 800a78a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
}
 800a78c:	4618      	mov	r0, r3
 800a78e:	370c      	adds	r7, #12
 800a790:	46bd      	mov	sp, r7
 800a792:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a796:	4770      	bx	lr
 800a798:	40016884 	.word	0x40016884

0800a79c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800a79c:	b480      	push	{r7}
 800a79e:	b083      	sub	sp, #12
 800a7a0:	af00      	add	r7, sp, #0
 800a7a2:	6078      	str	r0, [r7, #4]
 800a7a4:	6039      	str	r1, [r7, #0]
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800a7a6:	4a06      	ldr	r2, [pc, #24]	; (800a7c0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x24>)
 800a7a8:	683b      	ldr	r3, [r7, #0]
 800a7aa:	6293      	str	r3, [r2, #40]	; 0x28

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800a7ac:	4b05      	ldr	r3, [pc, #20]	; (800a7c4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x28>)
 800a7ae:	2201      	movs	r2, #1
 800a7b0:	625a      	str	r2, [r3, #36]	; 0x24
}
 800a7b2:	bf00      	nop
 800a7b4:	370c      	adds	r7, #12
 800a7b6:	46bd      	mov	sp, r7
 800a7b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7bc:	4770      	bx	lr
 800a7be:	bf00      	nop
 800a7c0:	40016884 	.word	0x40016884
 800a7c4:	40016800 	.word	0x40016800

0800a7c8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800a7c8:	b580      	push	{r7, lr}
 800a7ca:	b082      	sub	sp, #8
 800a7cc:	af00      	add	r7, sp, #0
 800a7ce:	6078      	str	r0, [r7, #4]
 800a7d0:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800a7d2:	687b      	ldr	r3, [r7, #4]
 800a7d4:	6839      	ldr	r1, [r7, #0]
 800a7d6:	4618      	mov	r0, r3
 800a7d8:	f000 fdb2 	bl	800b340 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
}
 800a7dc:	bf00      	nop
 800a7de:	3708      	adds	r7, #8
 800a7e0:	46bd      	mov	sp, r7
 800a7e2:	bd80      	pop	{r7, pc}

0800a7e4 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv>:

uint16_t TouchGFXGeneratedHAL::getTFTCurrentLine()
{
 800a7e4:	b480      	push	{r7}
 800a7e6:	b085      	sub	sp, #20
 800a7e8:	af00      	add	r7, sp, #0
 800a7ea:	6078      	str	r0, [r7, #4]
    // This function only requires an implementation if single buffering
    // on LTDC display is being used (REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL).

    // The CPSR register (bits 15:0) specify current line of TFT controller.
    uint16_t curr = (uint16_t)(LTDC->CPSR & 0xffff);
 800a7ec:	4b0d      	ldr	r3, [pc, #52]	; (800a824 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x40>)
 800a7ee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a7f0:	81fb      	strh	r3, [r7, #14]
    uint16_t backPorchY = (uint16_t)(LTDC->BPCR & 0x7FF) + 1;
 800a7f2:	4b0c      	ldr	r3, [pc, #48]	; (800a824 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x40>)
 800a7f4:	68db      	ldr	r3, [r3, #12]
 800a7f6:	b29b      	uxth	r3, r3
 800a7f8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800a7fc:	b29b      	uxth	r3, r3
 800a7fe:	3301      	adds	r3, #1
 800a800:	81bb      	strh	r3, [r7, #12]

    // The semantics of the getTFTCurrentLine() function is to return a value
    // in the range of 0-totalheight. If we are still in back porch area, return 0.
    if (curr < backPorchY)
 800a802:	89fa      	ldrh	r2, [r7, #14]
 800a804:	89bb      	ldrh	r3, [r7, #12]
 800a806:	429a      	cmp	r2, r3
 800a808:	d201      	bcs.n	800a80e <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x2a>
    {
        return 0;
 800a80a:	2300      	movs	r3, #0
 800a80c:	e003      	b.n	800a816 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x32>
    }
    else
    {
        return curr - backPorchY;
 800a80e:	89fa      	ldrh	r2, [r7, #14]
 800a810:	89bb      	ldrh	r3, [r7, #12]
 800a812:	1ad3      	subs	r3, r2, r3
 800a814:	b29b      	uxth	r3, r3
    }
}
 800a816:	4618      	mov	r0, r3
 800a818:	3714      	adds	r7, #20
 800a81a:	46bd      	mov	sp, r7
 800a81c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a820:	4770      	bx	lr
 800a822:	bf00      	nop
 800a824:	40016800 	.word	0x40016800

0800a828 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef *hltdc)
    {
 800a828:	b580      	push	{r7, lr}
 800a82a:	b082      	sub	sp, #8
 800a82c:	af00      	add	r7, sp, #0
 800a82e:	6078      	str	r0, [r7, #4]
        if (LTDC->LIPCR == lcd_int_active_line)
 800a830:	4b1a      	ldr	r3, [pc, #104]	; (800a89c <HAL_LTDC_LineEventCallback+0x74>)
 800a832:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a834:	4a1a      	ldr	r2, [pc, #104]	; (800a8a0 <HAL_LTDC_LineEventCallback+0x78>)
 800a836:	8812      	ldrh	r2, [r2, #0]
 800a838:	4293      	cmp	r3, r2
 800a83a:	bf0c      	ite	eq
 800a83c:	2301      	moveq	r3, #1
 800a83e:	2300      	movne	r3, #0
 800a840:	b2db      	uxtb	r3, r3
 800a842:	2b00      	cmp	r3, #0
 800a844:	d017      	beq.n	800a876 <HAL_LTDC_LineEventCallback+0x4e>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800a846:	4b17      	ldr	r3, [pc, #92]	; (800a8a4 <HAL_LTDC_LineEventCallback+0x7c>)
 800a848:	881b      	ldrh	r3, [r3, #0]
 800a84a:	4619      	mov	r1, r3
 800a84c:	6878      	ldr	r0, [r7, #4]
 800a84e:	f7f9 fac9 	bl	8003de4 <HAL_LTDC_ProgramLineEvent>
            HAL::getInstance()->vSync();
 800a852:	f7fb ff21 	bl	8006698 <_ZN8touchgfx3HAL11getInstanceEv>
 800a856:	4603      	mov	r3, r0
 800a858:	4618      	mov	r0, r3
 800a85a:	f7ff fe30 	bl	800a4be <_ZN8touchgfx3HAL5vSyncEv>
            OSWrappers::signalVSync();
 800a85e:	f7fe fcf7 	bl	8009250 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800a862:	f7fb ff19 	bl	8006698 <_ZN8touchgfx3HAL11getInstanceEv>
 800a866:	4603      	mov	r3, r0
 800a868:	4618      	mov	r0, r3
 800a86a:	f001 fae1 	bl	800be30 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 800a86e:	2000      	movs	r0, #0
 800a870:	f7fe fa18 	bl	8008ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
 800a874:	e00e      	b.n	800a894 <HAL_LTDC_LineEventCallback+0x6c>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800a876:	4b0a      	ldr	r3, [pc, #40]	; (800a8a0 <HAL_LTDC_LineEventCallback+0x78>)
 800a878:	881b      	ldrh	r3, [r3, #0]
 800a87a:	4619      	mov	r1, r3
 800a87c:	6878      	ldr	r0, [r7, #4]
 800a87e:	f7f9 fab1 	bl	8003de4 <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
 800a882:	2000      	movs	r0, #0
 800a884:	f7fe fa19 	bl	8008cba <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL::getInstance()->frontPorchEntered();
 800a888:	f7fb ff06 	bl	8006698 <_ZN8touchgfx3HAL11getInstanceEv>
 800a88c:	4603      	mov	r3, r0
 800a88e:	4618      	mov	r0, r3
 800a890:	f7ff fdf7 	bl	800a482 <_ZN8touchgfx3HAL17frontPorchEnteredEv>
    }
 800a894:	bf00      	nop
 800a896:	3708      	adds	r7, #8
 800a898:	46bd      	mov	sp, r7
 800a89a:	bd80      	pop	{r7, pc}
 800a89c:	40016800 	.word	0x40016800
 800a8a0:	20026ea0 	.word	0x20026ea0
 800a8a4:	20026ea2 	.word	0x20026ea2

0800a8a8 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a8a8:	8880      	ldrh	r0, [r0, #4]
 800a8aa:	4770      	bx	lr

0800a8ac <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a8ac:	2300      	movs	r3, #0
 800a8ae:	8083      	strh	r3, [r0, #4]
 800a8b0:	4770      	bx	lr
	...

0800a8b4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a8b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a8b6:	6803      	ldr	r3, [r0, #0]
 800a8b8:	4605      	mov	r5, r0
 800a8ba:	460e      	mov	r6, r1
 800a8bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a8be:	2100      	movs	r1, #0
 800a8c0:	4798      	blx	r3
 800a8c2:	682b      	ldr	r3, [r5, #0]
 800a8c4:	4604      	mov	r4, r0
 800a8c6:	6a1b      	ldr	r3, [r3, #32]
 800a8c8:	4628      	mov	r0, r5
 800a8ca:	4798      	blx	r3
 800a8cc:	88ab      	ldrh	r3, [r5, #4]
 800a8ce:	1b34      	subs	r4, r6, r4
 800a8d0:	b2a4      	uxth	r4, r4
 800a8d2:	fbb4 f4f0 	udiv	r4, r4, r0
 800a8d6:	42a3      	cmp	r3, r4
 800a8d8:	d805      	bhi.n	800a8e6 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 800a8da:	4b0e      	ldr	r3, [pc, #56]	; (800a914 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 800a8dc:	4a0e      	ldr	r2, [pc, #56]	; (800a918 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800a8de:	211e      	movs	r1, #30
 800a8e0:	480e      	ldr	r0, [pc, #56]	; (800a91c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 800a8e2:	f010 fc5f 	bl	801b1a4 <__assert_func>
 800a8e6:	682b      	ldr	r3, [r5, #0]
 800a8e8:	2100      	movs	r1, #0
 800a8ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a8ec:	4628      	mov	r0, r5
 800a8ee:	4798      	blx	r3
 800a8f0:	682b      	ldr	r3, [r5, #0]
 800a8f2:	4607      	mov	r7, r0
 800a8f4:	6a1b      	ldr	r3, [r3, #32]
 800a8f6:	4628      	mov	r0, r5
 800a8f8:	4798      	blx	r3
 800a8fa:	1bf3      	subs	r3, r6, r7
 800a8fc:	b29b      	uxth	r3, r3
 800a8fe:	fbb3 f2f0 	udiv	r2, r3, r0
 800a902:	fb02 3010 	mls	r0, r2, r0, r3
 800a906:	b118      	cbz	r0, 800a910 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 800a908:	4b05      	ldr	r3, [pc, #20]	; (800a920 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 800a90a:	4a03      	ldr	r2, [pc, #12]	; (800a918 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 800a90c:	211f      	movs	r1, #31
 800a90e:	e7e7      	b.n	800a8e0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 800a910:	4620      	mov	r0, r4
 800a912:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a914:	0801d1b0 	.word	0x0801d1b0
 800a918:	0801d31e 	.word	0x0801d31e
 800a91c:	0801d1c5 	.word	0x0801d1c5
 800a920:	0801d1f3 	.word	0x0801d1f3

0800a924 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a924:	b538      	push	{r3, r4, r5, lr}
 800a926:	6803      	ldr	r3, [r0, #0]
 800a928:	6a1b      	ldr	r3, [r3, #32]
 800a92a:	460d      	mov	r5, r1
 800a92c:	4604      	mov	r4, r0
 800a92e:	4798      	blx	r3
 800a930:	4285      	cmp	r5, r0
 800a932:	d905      	bls.n	800a940 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800a934:	4b0c      	ldr	r3, [pc, #48]	; (800a968 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800a936:	4a0d      	ldr	r2, [pc, #52]	; (800a96c <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800a938:	212f      	movs	r1, #47	; 0x2f
 800a93a:	480d      	ldr	r0, [pc, #52]	; (800a970 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 800a93c:	f010 fc32 	bl	801b1a4 <__assert_func>
 800a940:	6823      	ldr	r3, [r4, #0]
 800a942:	88a5      	ldrh	r5, [r4, #4]
 800a944:	69db      	ldr	r3, [r3, #28]
 800a946:	4620      	mov	r0, r4
 800a948:	4798      	blx	r3
 800a94a:	4285      	cmp	r5, r0
 800a94c:	d303      	bcc.n	800a956 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 800a94e:	4b09      	ldr	r3, [pc, #36]	; (800a974 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 800a950:	4a06      	ldr	r2, [pc, #24]	; (800a96c <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800a952:	2130      	movs	r1, #48	; 0x30
 800a954:	e7f1      	b.n	800a93a <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800a956:	6823      	ldr	r3, [r4, #0]
 800a958:	88a1      	ldrh	r1, [r4, #4]
 800a95a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a95c:	4620      	mov	r0, r4
 800a95e:	4798      	blx	r3
 800a960:	88a3      	ldrh	r3, [r4, #4]
 800a962:	3301      	adds	r3, #1
 800a964:	80a3      	strh	r3, [r4, #4]
 800a966:	bd38      	pop	{r3, r4, r5, pc}
 800a968:	0801d26d 	.word	0x0801d26d
 800a96c:	0801d361 	.word	0x0801d361
 800a970:	0801d1c5 	.word	0x0801d1c5
 800a974:	0801d284 	.word	0x0801d284

0800a978 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a978:	b570      	push	{r4, r5, r6, lr}
 800a97a:	6803      	ldr	r3, [r0, #0]
 800a97c:	6a1b      	ldr	r3, [r3, #32]
 800a97e:	4616      	mov	r6, r2
 800a980:	4604      	mov	r4, r0
 800a982:	460d      	mov	r5, r1
 800a984:	4798      	blx	r3
 800a986:	4286      	cmp	r6, r0
 800a988:	d905      	bls.n	800a996 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 800a98a:	4b06      	ldr	r3, [pc, #24]	; (800a9a4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 800a98c:	4a06      	ldr	r2, [pc, #24]	; (800a9a8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 800a98e:	4807      	ldr	r0, [pc, #28]	; (800a9ac <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 800a990:	2139      	movs	r1, #57	; 0x39
 800a992:	f010 fc07 	bl	801b1a4 <__assert_func>
 800a996:	6823      	ldr	r3, [r4, #0]
 800a998:	4629      	mov	r1, r5
 800a99a:	4620      	mov	r0, r4
 800a99c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a99e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a9a2:	4718      	bx	r3
 800a9a4:	0801d26d 	.word	0x0801d26d
 800a9a8:	0801d2d4 	.word	0x0801d2d4
 800a9ac:	0801d1c5 	.word	0x0801d1c5

0800a9b0 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a9b0:	4770      	bx	lr
	...

0800a9b4 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a9b4:	4a02      	ldr	r2, [pc, #8]	; (800a9c0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a9b6:	6002      	str	r2, [r0, #0]
 800a9b8:	2200      	movs	r2, #0
 800a9ba:	8082      	strh	r2, [r0, #4]
 800a9bc:	4770      	bx	lr
 800a9be:	bf00      	nop
 800a9c0:	0801d2a8 	.word	0x0801d2a8

0800a9c4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a9c4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a9c6:	2000      	movs	r0, #0
 800a9c8:	b12b      	cbz	r3, 800a9d6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a9ca:	b920      	cbnz	r0, 800a9d6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a9cc:	1a5a      	subs	r2, r3, r1
 800a9ce:	4250      	negs	r0, r2
 800a9d0:	4150      	adcs	r0, r2
 800a9d2:	699b      	ldr	r3, [r3, #24]
 800a9d4:	e7f8      	b.n	800a9c8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a9d6:	4770      	bx	lr

0800a9d8 <_ZN8touchgfx9Container9removeAllEv>:
 800a9d8:	2200      	movs	r2, #0
 800a9da:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a9dc:	b123      	cbz	r3, 800a9e8 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a9de:	6999      	ldr	r1, [r3, #24]
 800a9e0:	6281      	str	r1, [r0, #40]	; 0x28
 800a9e2:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a9e6:	e7f8      	b.n	800a9da <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a9e8:	4770      	bx	lr

0800a9ea <_ZN8touchgfx9Container6unlinkEv>:
 800a9ea:	2300      	movs	r3, #0
 800a9ec:	6283      	str	r3, [r0, #40]	; 0x28
 800a9ee:	4770      	bx	lr

0800a9f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a9f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a9f4:	461f      	mov	r7, r3
 800a9f6:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800a9fa:	460d      	mov	r5, r1
 800a9fc:	4616      	mov	r6, r2
 800a9fe:	b103      	cbz	r3, 800aa02 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800aa00:	6038      	str	r0, [r7, #0]
 800aa02:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aa04:	b314      	cbz	r4, 800aa4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800aa06:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800aa0a:	b1eb      	cbz	r3, 800aa48 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa0c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800aa10:	428d      	cmp	r5, r1
 800aa12:	db19      	blt.n	800aa48 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa14:	8923      	ldrh	r3, [r4, #8]
 800aa16:	b289      	uxth	r1, r1
 800aa18:	440b      	add	r3, r1
 800aa1a:	b21b      	sxth	r3, r3
 800aa1c:	429d      	cmp	r5, r3
 800aa1e:	da13      	bge.n	800aa48 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa20:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800aa24:	4296      	cmp	r6, r2
 800aa26:	db0f      	blt.n	800aa48 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa28:	8963      	ldrh	r3, [r4, #10]
 800aa2a:	b292      	uxth	r2, r2
 800aa2c:	4413      	add	r3, r2
 800aa2e:	b21b      	sxth	r3, r3
 800aa30:	429e      	cmp	r6, r3
 800aa32:	da09      	bge.n	800aa48 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aa34:	6823      	ldr	r3, [r4, #0]
 800aa36:	1ab2      	subs	r2, r6, r2
 800aa38:	1a69      	subs	r1, r5, r1
 800aa3a:	f8d3 801c 	ldr.w	r8, [r3, #28]
 800aa3e:	b212      	sxth	r2, r2
 800aa40:	463b      	mov	r3, r7
 800aa42:	b209      	sxth	r1, r1
 800aa44:	4620      	mov	r0, r4
 800aa46:	47c0      	blx	r8
 800aa48:	69a4      	ldr	r4, [r4, #24]
 800aa4a:	e7db      	b.n	800aa04 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800aa4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aa50 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800aa50:	2200      	movs	r2, #0
 800aa52:	8002      	strh	r2, [r0, #0]
 800aa54:	8042      	strh	r2, [r0, #2]
 800aa56:	8082      	strh	r2, [r0, #4]
 800aa58:	80c2      	strh	r2, [r0, #6]
 800aa5a:	4770      	bx	lr

0800aa5c <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800aa5c:	b570      	push	{r4, r5, r6, lr}
 800aa5e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aa60:	460d      	mov	r5, r1
 800aa62:	4616      	mov	r6, r2
 800aa64:	b13c      	cbz	r4, 800aa76 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800aa66:	6823      	ldr	r3, [r4, #0]
 800aa68:	4620      	mov	r0, r4
 800aa6a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800aa6c:	4632      	mov	r2, r6
 800aa6e:	4629      	mov	r1, r5
 800aa70:	4798      	blx	r3
 800aa72:	69a4      	ldr	r4, [r4, #24]
 800aa74:	e7f6      	b.n	800aa64 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800aa76:	bd70      	pop	{r4, r5, r6, pc}

0800aa78 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800aa78:	b538      	push	{r3, r4, r5, lr}
 800aa7a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aa7c:	460d      	mov	r5, r1
 800aa7e:	b134      	cbz	r4, 800aa8e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800aa80:	682b      	ldr	r3, [r5, #0]
 800aa82:	4621      	mov	r1, r4
 800aa84:	689b      	ldr	r3, [r3, #8]
 800aa86:	4628      	mov	r0, r5
 800aa88:	4798      	blx	r3
 800aa8a:	69a4      	ldr	r4, [r4, #24]
 800aa8c:	e7f7      	b.n	800aa7e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800aa8e:	bd38      	pop	{r3, r4, r5, pc}

0800aa90 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800aa90:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aa92:	b19b      	cbz	r3, 800aabc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800aa94:	428b      	cmp	r3, r1
 800aa96:	d109      	bne.n	800aaac <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800aa98:	699a      	ldr	r2, [r3, #24]
 800aa9a:	2100      	movs	r1, #0
 800aa9c:	6159      	str	r1, [r3, #20]
 800aa9e:	6282      	str	r2, [r0, #40]	; 0x28
 800aaa0:	b902      	cbnz	r2, 800aaa4 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800aaa2:	4770      	bx	lr
 800aaa4:	6199      	str	r1, [r3, #24]
 800aaa6:	4770      	bx	lr
 800aaa8:	4613      	mov	r3, r2
 800aaaa:	b13a      	cbz	r2, 800aabc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800aaac:	699a      	ldr	r2, [r3, #24]
 800aaae:	428a      	cmp	r2, r1
 800aab0:	d1fa      	bne.n	800aaa8 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800aab2:	698a      	ldr	r2, [r1, #24]
 800aab4:	619a      	str	r2, [r3, #24]
 800aab6:	2300      	movs	r3, #0
 800aab8:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800aabc:	4770      	bx	lr

0800aabe <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800aabe:	b410      	push	{r4}
 800aac0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aac2:	4604      	mov	r4, r0
 800aac4:	b92b      	cbnz	r3, 800aad2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800aac6:	6803      	ldr	r3, [r0, #0]
 800aac8:	f85d 4b04 	ldr.w	r4, [sp], #4
 800aacc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800aace:	4611      	mov	r1, r2
 800aad0:	4718      	bx	r3
 800aad2:	b941      	cbnz	r1, 800aae6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800aad4:	6193      	str	r3, [r2, #24]
 800aad6:	6282      	str	r2, [r0, #40]	; 0x28
 800aad8:	6154      	str	r4, [r2, #20]
 800aada:	f85d 4b04 	ldr.w	r4, [sp], #4
 800aade:	4770      	bx	lr
 800aae0:	4603      	mov	r3, r0
 800aae2:	2800      	cmp	r0, #0
 800aae4:	d0f9      	beq.n	800aada <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800aae6:	4299      	cmp	r1, r3
 800aae8:	6998      	ldr	r0, [r3, #24]
 800aaea:	d1f9      	bne.n	800aae0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800aaec:	6190      	str	r0, [r2, #24]
 800aaee:	618a      	str	r2, [r1, #24]
 800aaf0:	e7f2      	b.n	800aad8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

0800aaf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800aaf4:	4288      	cmp	r0, r1
 800aaf6:	b508      	push	{r3, lr}
 800aaf8:	d105      	bne.n	800ab06 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800aafa:	4b11      	ldr	r3, [pc, #68]	; (800ab40 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800aafc:	4a11      	ldr	r2, [pc, #68]	; (800ab44 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800aafe:	2123      	movs	r1, #35	; 0x23
 800ab00:	4811      	ldr	r0, [pc, #68]	; (800ab48 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800ab02:	f010 fb4f 	bl	801b1a4 <__assert_func>
 800ab06:	694b      	ldr	r3, [r1, #20]
 800ab08:	b11b      	cbz	r3, 800ab12 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800ab0a:	4b10      	ldr	r3, [pc, #64]	; (800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800ab0c:	4a0d      	ldr	r2, [pc, #52]	; (800ab44 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800ab0e:	2124      	movs	r1, #36	; 0x24
 800ab10:	e7f6      	b.n	800ab00 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800ab12:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800ab16:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ab18:	b913      	cbnz	r3, 800ab20 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800ab1a:	6281      	str	r1, [r0, #40]	; 0x28
 800ab1c:	bd08      	pop	{r3, pc}
 800ab1e:	4613      	mov	r3, r2
 800ab20:	699a      	ldr	r2, [r3, #24]
 800ab22:	b12a      	cbz	r2, 800ab30 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800ab24:	428b      	cmp	r3, r1
 800ab26:	d1fa      	bne.n	800ab1e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800ab28:	4b09      	ldr	r3, [pc, #36]	; (800ab50 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800ab2a:	4a06      	ldr	r2, [pc, #24]	; (800ab44 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800ab2c:	2135      	movs	r1, #53	; 0x35
 800ab2e:	e7e7      	b.n	800ab00 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800ab30:	428b      	cmp	r3, r1
 800ab32:	d103      	bne.n	800ab3c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800ab34:	4b06      	ldr	r3, [pc, #24]	; (800ab50 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800ab36:	4a03      	ldr	r2, [pc, #12]	; (800ab44 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800ab38:	2138      	movs	r1, #56	; 0x38
 800ab3a:	e7e1      	b.n	800ab00 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800ab3c:	6199      	str	r1, [r3, #24]
 800ab3e:	e7ed      	b.n	800ab1c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800ab40:	0801d39f 	.word	0x0801d39f
 800ab44:	0801d4f4 	.word	0x0801d4f4
 800ab48:	0801d3cb 	.word	0x0801d3cb
 800ab4c:	0801d3fe 	.word	0x0801d3fe
 800ab50:	0801d434 	.word	0x0801d434

0800ab54 <_ZN8touchgfx4RectaNERKS0_>:
 800ab54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ab58:	888b      	ldrh	r3, [r1, #4]
 800ab5a:	f9b1 9000 	ldrsh.w	r9, [r1]
 800ab5e:	f9b0 a000 	ldrsh.w	sl, [r0]
 800ab62:	444b      	add	r3, r9
 800ab64:	b29b      	uxth	r3, r3
 800ab66:	fa0f f883 	sxth.w	r8, r3
 800ab6a:	45c2      	cmp	sl, r8
 800ab6c:	da30      	bge.n	800abd0 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800ab6e:	8882      	ldrh	r2, [r0, #4]
 800ab70:	4452      	add	r2, sl
 800ab72:	b292      	uxth	r2, r2
 800ab74:	fa0f fe82 	sxth.w	lr, r2
 800ab78:	45f1      	cmp	r9, lr
 800ab7a:	da29      	bge.n	800abd0 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800ab7c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ab80:	88cc      	ldrh	r4, [r1, #6]
 800ab82:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ab86:	442c      	add	r4, r5
 800ab88:	b224      	sxth	r4, r4
 800ab8a:	42a6      	cmp	r6, r4
 800ab8c:	da20      	bge.n	800abd0 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800ab8e:	88c7      	ldrh	r7, [r0, #6]
 800ab90:	4437      	add	r7, r6
 800ab92:	b2bf      	uxth	r7, r7
 800ab94:	fa0f fc87 	sxth.w	ip, r7
 800ab98:	4565      	cmp	r5, ip
 800ab9a:	da19      	bge.n	800abd0 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800ab9c:	45ca      	cmp	sl, r9
 800ab9e:	4654      	mov	r4, sl
 800aba0:	bfb8      	it	lt
 800aba2:	464c      	movlt	r4, r9
 800aba4:	42b5      	cmp	r5, r6
 800aba6:	bfb8      	it	lt
 800aba8:	4635      	movlt	r5, r6
 800abaa:	45f0      	cmp	r8, lr
 800abac:	bfc8      	it	gt
 800abae:	4613      	movgt	r3, r2
 800abb0:	1b1b      	subs	r3, r3, r4
 800abb2:	8083      	strh	r3, [r0, #4]
 800abb4:	88ca      	ldrh	r2, [r1, #6]
 800abb6:	884b      	ldrh	r3, [r1, #2]
 800abb8:	8004      	strh	r4, [r0, #0]
 800abba:	4413      	add	r3, r2
 800abbc:	b29b      	uxth	r3, r3
 800abbe:	b21a      	sxth	r2, r3
 800abc0:	4594      	cmp	ip, r2
 800abc2:	bfb8      	it	lt
 800abc4:	463b      	movlt	r3, r7
 800abc6:	1b5b      	subs	r3, r3, r5
 800abc8:	80c3      	strh	r3, [r0, #6]
 800abca:	8045      	strh	r5, [r0, #2]
 800abcc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800abd0:	2300      	movs	r3, #0
 800abd2:	8003      	strh	r3, [r0, #0]
 800abd4:	8043      	strh	r3, [r0, #2]
 800abd6:	8083      	strh	r3, [r0, #4]
 800abd8:	80c3      	strh	r3, [r0, #6]
 800abda:	e7f7      	b.n	800abcc <_ZN8touchgfx4RectaNERKS0_+0x78>

0800abdc <_ZNK8touchgfx4Rect7isEmptyEv>:
 800abdc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800abe0:	b12b      	cbz	r3, 800abee <_ZNK8touchgfx4Rect7isEmptyEv+0x12>
 800abe2:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800abe6:	fab0 f080 	clz	r0, r0
 800abea:	0940      	lsrs	r0, r0, #5
 800abec:	4770      	bx	lr
 800abee:	2001      	movs	r0, #1
 800abf0:	4770      	bx	lr

0800abf2 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800abf2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800abf6:	2300      	movs	r3, #0
 800abf8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800abfa:	8003      	strh	r3, [r0, #0]
 800abfc:	4604      	mov	r4, r0
 800abfe:	8043      	strh	r3, [r0, #2]
 800ac00:	8083      	strh	r3, [r0, #4]
 800ac02:	80c3      	strh	r3, [r0, #6]
 800ac04:	2d00      	cmp	r5, #0
 800ac06:	d040      	beq.n	800ac8a <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800ac08:	1d28      	adds	r0, r5, #4
 800ac0a:	f7ff ffe7 	bl	800abdc <_ZNK8touchgfx4Rect7isEmptyEv>
 800ac0e:	b988      	cbnz	r0, 800ac34 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ac10:	4620      	mov	r0, r4
 800ac12:	f7ff ffe3 	bl	800abdc <_ZNK8touchgfx4Rect7isEmptyEv>
 800ac16:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800ac1a:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ac1e:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800ac22:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800ac26:	b138      	cbz	r0, 800ac38 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800ac28:	8022      	strh	r2, [r4, #0]
 800ac2a:	8063      	strh	r3, [r4, #2]
 800ac2c:	f8a4 e004 	strh.w	lr, [r4, #4]
 800ac30:	f8a4 c006 	strh.w	ip, [r4, #6]
 800ac34:	69ad      	ldr	r5, [r5, #24]
 800ac36:	e7e5      	b.n	800ac04 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800ac38:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ac3c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ac40:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ac44:	4290      	cmp	r0, r2
 800ac46:	4607      	mov	r7, r0
 800ac48:	bfa8      	it	ge
 800ac4a:	4617      	movge	r7, r2
 800ac4c:	4472      	add	r2, lr
 800ac4e:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800ac52:	8027      	strh	r7, [r4, #0]
 800ac54:	4299      	cmp	r1, r3
 800ac56:	460e      	mov	r6, r1
 800ac58:	4440      	add	r0, r8
 800ac5a:	bfa8      	it	ge
 800ac5c:	461e      	movge	r6, r3
 800ac5e:	4471      	add	r1, lr
 800ac60:	4463      	add	r3, ip
 800ac62:	b200      	sxth	r0, r0
 800ac64:	b212      	sxth	r2, r2
 800ac66:	b209      	sxth	r1, r1
 800ac68:	b21b      	sxth	r3, r3
 800ac6a:	4290      	cmp	r0, r2
 800ac6c:	bfac      	ite	ge
 800ac6e:	ebc7 0200 	rsbge	r2, r7, r0
 800ac72:	ebc7 0202 	rsblt	r2, r7, r2
 800ac76:	4299      	cmp	r1, r3
 800ac78:	bfac      	ite	ge
 800ac7a:	ebc6 0301 	rsbge	r3, r6, r1
 800ac7e:	ebc6 0303 	rsblt	r3, r6, r3
 800ac82:	8066      	strh	r6, [r4, #2]
 800ac84:	80a2      	strh	r2, [r4, #4]
 800ac86:	80e3      	strh	r3, [r4, #6]
 800ac88:	e7d4      	b.n	800ac34 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ac8a:	4620      	mov	r0, r4
 800ac8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ac90 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800ac90:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ac94:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ac98:	b383      	cbz	r3, 800acfc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ac9a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ac9c:	b374      	cbz	r4, 800acfc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ac9e:	f9b1 5000 	ldrsh.w	r5, [r1]
 800aca2:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800aca6:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800acaa:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800acae:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800acb2:	b303      	cbz	r3, 800acf6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800acb4:	4668      	mov	r0, sp
 800acb6:	1d21      	adds	r1, r4, #4
 800acb8:	f8ad 5000 	strh.w	r5, [sp]
 800acbc:	f8ad 6002 	strh.w	r6, [sp, #2]
 800acc0:	f8ad 7004 	strh.w	r7, [sp, #4]
 800acc4:	f8ad 8006 	strh.w	r8, [sp, #6]
 800acc8:	f7ff ff44 	bl	800ab54 <_ZN8touchgfx4RectaNERKS0_>
 800accc:	4668      	mov	r0, sp
 800acce:	f7ff ff85 	bl	800abdc <_ZNK8touchgfx4Rect7isEmptyEv>
 800acd2:	b980      	cbnz	r0, 800acf6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800acd4:	f8bd 3000 	ldrh.w	r3, [sp]
 800acd8:	88a2      	ldrh	r2, [r4, #4]
 800acda:	1a9b      	subs	r3, r3, r2
 800acdc:	f8ad 3000 	strh.w	r3, [sp]
 800ace0:	88e2      	ldrh	r2, [r4, #6]
 800ace2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ace6:	1a9b      	subs	r3, r3, r2
 800ace8:	f8ad 3002 	strh.w	r3, [sp, #2]
 800acec:	6823      	ldr	r3, [r4, #0]
 800acee:	4669      	mov	r1, sp
 800acf0:	689b      	ldr	r3, [r3, #8]
 800acf2:	4620      	mov	r0, r4
 800acf4:	4798      	blx	r3
 800acf6:	69a4      	ldr	r4, [r4, #24]
 800acf8:	2c00      	cmp	r4, #0
 800acfa:	d1d8      	bne.n	800acae <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800acfc:	b002      	add	sp, #8
 800acfe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ad02 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800ad02:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ad04:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ad08:	460d      	mov	r5, r1
 800ad0a:	4616      	mov	r6, r2
 800ad0c:	b323      	cbz	r3, 800ad58 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ad0e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ad10:	b314      	cbz	r4, 800ad58 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ad12:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ad16:	b1eb      	cbz	r3, 800ad54 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ad18:	6828      	ldr	r0, [r5, #0]
 800ad1a:	6869      	ldr	r1, [r5, #4]
 800ad1c:	466b      	mov	r3, sp
 800ad1e:	c303      	stmia	r3!, {r0, r1}
 800ad20:	4668      	mov	r0, sp
 800ad22:	1d21      	adds	r1, r4, #4
 800ad24:	f7ff ff16 	bl	800ab54 <_ZN8touchgfx4RectaNERKS0_>
 800ad28:	4668      	mov	r0, sp
 800ad2a:	f7ff ff57 	bl	800abdc <_ZNK8touchgfx4Rect7isEmptyEv>
 800ad2e:	b988      	cbnz	r0, 800ad54 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ad30:	f8bd 3000 	ldrh.w	r3, [sp]
 800ad34:	88a2      	ldrh	r2, [r4, #4]
 800ad36:	1a9b      	subs	r3, r3, r2
 800ad38:	f8ad 3000 	strh.w	r3, [sp]
 800ad3c:	88e2      	ldrh	r2, [r4, #6]
 800ad3e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ad42:	1a9b      	subs	r3, r3, r2
 800ad44:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ad48:	6823      	ldr	r3, [r4, #0]
 800ad4a:	4632      	mov	r2, r6
 800ad4c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ad4e:	4669      	mov	r1, sp
 800ad50:	4620      	mov	r0, r4
 800ad52:	4798      	blx	r3
 800ad54:	69a4      	ldr	r4, [r4, #24]
 800ad56:	e7db      	b.n	800ad10 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800ad58:	b002      	add	sp, #8
 800ad5a:	bd70      	pop	{r4, r5, r6, pc}

0800ad5c <_ZNK8touchgfx6Slider15getIndicatorMinEv>:
 800ad5c:	f8b0 00ee 	ldrh.w	r0, [r0, #238]	; 0xee
 800ad60:	4770      	bx	lr

0800ad62 <_ZNK8touchgfx6Slider15getIndicatorMaxEv>:
 800ad62:	f8b0 00ee 	ldrh.w	r0, [r0, #238]	; 0xee
 800ad66:	4770      	bx	lr

0800ad68 <_ZNK8touchgfx6Slider11getMinValueEv>:
 800ad68:	8e80      	ldrh	r0, [r0, #52]	; 0x34
 800ad6a:	4770      	bx	lr

0800ad6c <_ZNK8touchgfx6Slider11getMaxValueEv>:
 800ad6c:	8f00      	ldrh	r0, [r0, #56]	; 0x38
 800ad6e:	4770      	bx	lr

0800ad70 <_ZN8touchgfx6SliderD1Ev>:
 800ad70:	4770      	bx	lr

0800ad72 <_ZN8touchgfx6Slider8setValueEi>:
 800ad72:	b570      	push	{r4, r5, r6, lr}
 800ad74:	6803      	ldr	r3, [r0, #0]
 800ad76:	e9d3 532a 	ldrd	r5, r3, [r3, #168]	; 0xa8
 800ad7a:	4604      	mov	r4, r0
 800ad7c:	4798      	blx	r3
 800ad7e:	462b      	mov	r3, r5
 800ad80:	4601      	mov	r1, r0
 800ad82:	4620      	mov	r0, r4
 800ad84:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ad88:	4718      	bx	r3

0800ad8a <_ZNK8touchgfx6Slider15valueToPositionEi>:
 800ad8a:	b538      	push	{r3, r4, r5, lr}
 800ad8c:	e9d0 340d 	ldrd	r3, r4, [r0, #52]	; 0x34
 800ad90:	428c      	cmp	r4, r1
 800ad92:	bfa8      	it	ge
 800ad94:	460c      	movge	r4, r1
 800ad96:	429c      	cmp	r4, r3
 800ad98:	bfac      	ite	ge
 800ad9a:	ebc3 0404 	rsbge	r4, r3, r4
 800ad9e:	ebc3 0403 	rsblt	r4, r3, r3
 800ada2:	6803      	ldr	r3, [r0, #0]
 800ada4:	4605      	mov	r5, r0
 800ada6:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800adaa:	4798      	blx	r3
 800adac:	682b      	ldr	r3, [r5, #0]
 800adae:	fb00 4404 	mla	r4, r0, r4, r4
 800adb2:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800adb6:	4628      	mov	r0, r5
 800adb8:	4798      	blx	r3
 800adba:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 800adbe:	f9b5 30ec 	ldrsh.w	r3, [r5, #236]	; 0xec
 800adc2:	fb94 f0f0 	sdiv	r0, r4, r0
 800adc6:	2a01      	cmp	r2, #1
 800adc8:	bf08      	it	eq
 800adca:	f9b5 20ee 	ldrsheq.w	r2, [r5, #238]	; 0xee
 800adce:	4418      	add	r0, r3
 800add0:	bf04      	itt	eq
 800add2:	1a10      	subeq	r0, r2, r0
 800add4:	18c0      	addeq	r0, r0, r3
 800add6:	b200      	sxth	r0, r0
 800add8:	bd38      	pop	{r3, r4, r5, pc}

0800adda <_ZNK8touchgfx6Slider15positionToValueEs>:
 800adda:	b570      	push	{r4, r5, r6, lr}
 800addc:	f9b0 30ec 	ldrsh.w	r3, [r0, #236]	; 0xec
 800ade0:	428b      	cmp	r3, r1
 800ade2:	4605      	mov	r5, r0
 800ade4:	460c      	mov	r4, r1
 800ade6:	d109      	bne.n	800adfc <_ZNK8touchgfx6Slider15positionToValueEs+0x22>
 800ade8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800adea:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800adee:	2b01      	cmp	r3, #1
 800adf0:	bf01      	itttt	eq
 800adf2:	6bab      	ldreq	r3, [r5, #56]	; 0x38
 800adf4:	1a18      	subeq	r0, r3, r0
 800adf6:	6b6b      	ldreq	r3, [r5, #52]	; 0x34
 800adf8:	18c0      	addeq	r0, r0, r3
 800adfa:	bd70      	pop	{r4, r5, r6, pc}
 800adfc:	f9b0 30ee 	ldrsh.w	r3, [r0, #238]	; 0xee
 800ae00:	428b      	cmp	r3, r1
 800ae02:	d101      	bne.n	800ae08 <_ZNK8touchgfx6Slider15positionToValueEs+0x2e>
 800ae04:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800ae06:	e7f0      	b.n	800adea <_ZNK8touchgfx6Slider15positionToValueEs+0x10>
 800ae08:	6803      	ldr	r3, [r0, #0]
 800ae0a:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800ae0e:	4798      	blx	r3
 800ae10:	682b      	ldr	r3, [r5, #0]
 800ae12:	f9b5 10ec 	ldrsh.w	r1, [r5, #236]	; 0xec
 800ae16:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800ae1a:	4606      	mov	r6, r0
 800ae1c:	4628      	mov	r0, r5
 800ae1e:	1a64      	subs	r4, r4, r1
 800ae20:	4798      	blx	r3
 800ae22:	682b      	ldr	r3, [r5, #0]
 800ae24:	2102      	movs	r1, #2
 800ae26:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800ae2a:	fb96 f6f1 	sdiv	r6, r6, r1
 800ae2e:	fb00 6404 	mla	r4, r0, r4, r6
 800ae32:	4628      	mov	r0, r5
 800ae34:	4798      	blx	r3
 800ae36:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800ae38:	fb94 f0f0 	sdiv	r0, r4, r0
 800ae3c:	4418      	add	r0, r3
 800ae3e:	e7d4      	b.n	800adea <_ZNK8touchgfx6Slider15positionToValueEs+0x10>

0800ae40 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv>:
 800ae40:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 800ae44:	2302      	movs	r3, #2
 800ae46:	b92a      	cbnz	r2, 800ae54 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0x14>
 800ae48:	f9b0 009c 	ldrsh.w	r0, [r0, #156]	; 0x9c
 800ae4c:	fb90 f0f3 	sdiv	r0, r0, r3
 800ae50:	b280      	uxth	r0, r0
 800ae52:	4770      	bx	lr
 800ae54:	f9b0 009e 	ldrsh.w	r0, [r0, #158]	; 0x9e
 800ae58:	e7f8      	b.n	800ae4c <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0xc>

0800ae5a <_ZN8touchgfx6Slider13setValueRangeEii>:
 800ae5a:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800ae5c:	428b      	cmp	r3, r1
 800ae5e:	b410      	push	{r4}
 800ae60:	db09      	blt.n	800ae76 <_ZN8touchgfx6Slider13setValueRangeEii+0x1c>
 800ae62:	4293      	cmp	r3, r2
 800ae64:	bfa8      	it	ge
 800ae66:	4613      	movge	r3, r2
 800ae68:	6804      	ldr	r4, [r0, #0]
 800ae6a:	f8d4 4094 	ldr.w	r4, [r4, #148]	; 0x94
 800ae6e:	46a4      	mov	ip, r4
 800ae70:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ae74:	4760      	bx	ip
 800ae76:	460b      	mov	r3, r1
 800ae78:	e7f6      	b.n	800ae68 <_ZN8touchgfx6Slider13setValueRangeEii+0xe>

0800ae7a <_ZNK8touchgfx6Slider29getIndicatorPositionRangeSizeEv>:
 800ae7a:	f9b0 20ee 	ldrsh.w	r2, [r0, #238]	; 0xee
 800ae7e:	f9b0 00ec 	ldrsh.w	r0, [r0, #236]	; 0xec
 800ae82:	1a10      	subs	r0, r2, r0
 800ae84:	4770      	bx	lr

0800ae86 <_ZNK8touchgfx6Slider17getValueRangeSizeEv>:
 800ae86:	e9d0 020d 	ldrd	r0, r2, [r0, #52]	; 0x34
 800ae8a:	1a10      	subs	r0, r2, r0
 800ae8c:	4770      	bx	lr

0800ae8e <_ZN8touchgfx6Slider23updateIndicatorPositionEs>:
 800ae8e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800ae92:	f9b0 60ec 	ldrsh.w	r6, [r0, #236]	; 0xec
 800ae96:	428e      	cmp	r6, r1
 800ae98:	4604      	mov	r4, r0
 800ae9a:	bfb8      	it	lt
 800ae9c:	460e      	movlt	r6, r1
 800ae9e:	f9b0 10ee 	ldrsh.w	r1, [r0, #238]	; 0xee
 800aea2:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800aea6:	428e      	cmp	r6, r1
 800aea8:	bfa8      	it	ge
 800aeaa:	460e      	movge	r6, r1
 800aeac:	3094      	adds	r0, #148	; 0x94
 800aeae:	f104 07c0 	add.w	r7, r4, #192	; 0xc0
 800aeb2:	fa1f f886 	uxth.w	r8, r6
 800aeb6:	2b00      	cmp	r3, #0
 800aeb8:	d132      	bne.n	800af20 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x92>
 800aeba:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800aebe:	4631      	mov	r1, r6
 800aec0:	f7fc f990 	bl	80071e4 <_ZN8touchgfx8Drawable6moveToEss>
 800aec4:	4638      	mov	r0, r7
 800aec6:	f003 f80d 	bl	800dee4 <_ZNK8touchgfx8Drawable10invalidateEv>
 800aeca:	6823      	ldr	r3, [r4, #0]
 800aecc:	f8b4 20c4 	ldrh.w	r2, [r4, #196]	; 0xc4
 800aed0:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800aed4:	4620      	mov	r0, r4
 800aed6:	eba8 0802 	sub.w	r8, r8, r2
 800aeda:	4798      	blx	r3
 800aedc:	fa1f f888 	uxth.w	r8, r8
 800aee0:	4480      	add	r8, r0
 800aee2:	f8a4 80c8 	strh.w	r8, [r4, #200]	; 0xc8
 800aee6:	4638      	mov	r0, r7
 800aee8:	f002 fffc 	bl	800dee4 <_ZNK8touchgfx8Drawable10invalidateEv>
 800aeec:	6823      	ldr	r3, [r4, #0]
 800aeee:	4631      	mov	r1, r6
 800aef0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800aef4:	4620      	mov	r0, r4
 800aef6:	4798      	blx	r3
 800aef8:	6320      	str	r0, [r4, #48]	; 0x30
 800aefa:	f8d4 00f8 	ldr.w	r0, [r4, #248]	; 0xf8
 800aefe:	2800      	cmp	r0, #0
 800af00:	d03c      	beq.n	800af7c <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xee>
 800af02:	6803      	ldr	r3, [r0, #0]
 800af04:	68db      	ldr	r3, [r3, #12]
 800af06:	4798      	blx	r3
 800af08:	2800      	cmp	r0, #0
 800af0a:	d037      	beq.n	800af7c <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xee>
 800af0c:	f8d4 00f8 	ldr.w	r0, [r4, #248]	; 0xf8
 800af10:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800af12:	6803      	ldr	r3, [r0, #0]
 800af14:	689b      	ldr	r3, [r3, #8]
 800af16:	4621      	mov	r1, r4
 800af18:	b003      	add	sp, #12
 800af1a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800af1e:	4718      	bx	r3
 800af20:	4632      	mov	r2, r6
 800af22:	f9b4 1098 	ldrsh.w	r1, [r4, #152]	; 0x98
 800af26:	f7fc f95d 	bl	80071e4 <_ZN8touchgfx8Drawable6moveToEss>
 800af2a:	4638      	mov	r0, r7
 800af2c:	f002 ffda 	bl	800dee4 <_ZNK8touchgfx8Drawable10invalidateEv>
 800af30:	f8b4 0046 	ldrh.w	r0, [r4, #70]	; 0x46
 800af34:	f8b4 5042 	ldrh.w	r5, [r4, #66]	; 0x42
 800af38:	6823      	ldr	r3, [r4, #0]
 800af3a:	4405      	add	r5, r0
 800af3c:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800af40:	4620      	mov	r0, r4
 800af42:	4798      	blx	r3
 800af44:	b2ad      	uxth	r5, r5
 800af46:	6823      	ldr	r3, [r4, #0]
 800af48:	f9b4 90c4 	ldrsh.w	r9, [r4, #196]	; 0xc4
 800af4c:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800af50:	eba5 0508 	sub.w	r5, r5, r8
 800af54:	1a2d      	subs	r5, r5, r0
 800af56:	4620      	mov	r0, r4
 800af58:	4798      	blx	r3
 800af5a:	b2ad      	uxth	r5, r5
 800af5c:	b22a      	sxth	r2, r5
 800af5e:	4440      	add	r0, r8
 800af60:	9200      	str	r2, [sp, #0]
 800af62:	f9b4 30c8 	ldrsh.w	r3, [r4, #200]	; 0xc8
 800af66:	b202      	sxth	r2, r0
 800af68:	4649      	mov	r1, r9
 800af6a:	4638      	mov	r0, r7
 800af6c:	f7fc f864 	bl	8007038 <_ZN8touchgfx8Drawable11setPositionEssss>
 800af70:	f8b4 0072 	ldrh.w	r0, [r4, #114]	; 0x72
 800af74:	1a2d      	subs	r5, r5, r0
 800af76:	f8a4 506e 	strh.w	r5, [r4, #110]	; 0x6e
 800af7a:	e7b4      	b.n	800aee6 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x58>
 800af7c:	b003      	add	sp, #12
 800af7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800af82 <_ZN8touchgfx6SliderD0Ev>:
 800af82:	b510      	push	{r4, lr}
 800af84:	21fc      	movs	r1, #252	; 0xfc
 800af86:	4604      	mov	r4, r0
 800af88:	f010 f8e0 	bl	801b14c <_ZdlPvj>
 800af8c:	4620      	mov	r0, r4
 800af8e:	bd10      	pop	{r4, pc}

0800af90 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt>:
 800af90:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800af94:	f8bd 8030 	ldrh.w	r8, [sp, #48]	; 0x30
 800af98:	f8bd 7034 	ldrh.w	r7, [sp, #52]	; 0x34
 800af9c:	45b8      	cmp	r8, r7
 800af9e:	4604      	mov	r4, r0
 800afa0:	4689      	mov	r9, r1
 800afa2:	4616      	mov	r6, r2
 800afa4:	461d      	mov	r5, r3
 800afa6:	d305      	bcc.n	800afb4 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0x24>
 800afa8:	4b28      	ldr	r3, [pc, #160]	; (800b04c <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xbc>)
 800afaa:	4a29      	ldr	r2, [pc, #164]	; (800b050 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xc0>)
 800afac:	4829      	ldr	r0, [pc, #164]	; (800b054 <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt+0xc4>)
 800afae:	2147      	movs	r1, #71	; 0x47
 800afb0:	f010 f8f8 	bl	801b1a4 <__assert_func>
 800afb4:	f04f 0a00 	mov.w	sl, #0
 800afb8:	b213      	sxth	r3, r2
 800afba:	fa0f fb81 	sxth.w	fp, r1
 800afbe:	f880 a02c 	strb.w	sl, [r0, #44]	; 0x2c
 800afc2:	461a      	mov	r2, r3
 800afc4:	4659      	mov	r1, fp
 800afc6:	303c      	adds	r0, #60	; 0x3c
 800afc8:	9301      	str	r3, [sp, #4]
 800afca:	f7fc f880 	bl	80070ce <_ZN8touchgfx8Drawable5setXYEss>
 800afce:	9b01      	ldr	r3, [sp, #4]
 800afd0:	4659      	mov	r1, fp
 800afd2:	461a      	mov	r2, r3
 800afd4:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 800afd8:	f7fc f879 	bl	80070ce <_ZN8touchgfx8Drawable5setXYEss>
 800afdc:	4652      	mov	r2, sl
 800afde:	4651      	mov	r1, sl
 800afe0:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800afe4:	f7fc f873 	bl	80070ce <_ZN8touchgfx8Drawable5setXYEss>
 800afe8:	f8b4 1044 	ldrh.w	r1, [r4, #68]	; 0x44
 800afec:	f8a4 509a 	strh.w	r5, [r4, #154]	; 0x9a
 800aff0:	4449      	add	r1, r9
 800aff2:	b28b      	uxth	r3, r1
 800aff4:	f8b4 109c 	ldrh.w	r1, [r4, #156]	; 0x9c
 800aff8:	f8a4 80ec 	strh.w	r8, [r4, #236]	; 0xec
 800affc:	4439      	add	r1, r7
 800affe:	b289      	uxth	r1, r1
 800b000:	428b      	cmp	r3, r1
 800b002:	bf88      	it	hi
 800b004:	b219      	sxthhi	r1, r3
 800b006:	f8b4 3046 	ldrh.w	r3, [r4, #70]	; 0x46
 800b00a:	f8a4 70ee 	strh.w	r7, [r4, #238]	; 0xee
 800b00e:	441e      	add	r6, r3
 800b010:	f8b4 309e 	ldrh.w	r3, [r4, #158]	; 0x9e
 800b014:	441d      	add	r5, r3
 800b016:	6823      	ldr	r3, [r4, #0]
 800b018:	b2ad      	uxth	r5, r5
 800b01a:	b2b6      	uxth	r6, r6
 800b01c:	bf98      	it	ls
 800b01e:	b209      	sxthls	r1, r1
 800b020:	4620      	mov	r0, r4
 800b022:	42ae      	cmp	r6, r5
 800b024:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b026:	bf8c      	ite	hi
 800b028:	b235      	sxthhi	r5, r6
 800b02a:	b22d      	sxthls	r5, r5
 800b02c:	4798      	blx	r3
 800b02e:	6823      	ldr	r3, [r4, #0]
 800b030:	4629      	mov	r1, r5
 800b032:	4620      	mov	r0, r4
 800b034:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b036:	4798      	blx	r3
 800b038:	6823      	ldr	r3, [r4, #0]
 800b03a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b03c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800b040:	4620      	mov	r0, r4
 800b042:	b003      	add	sp, #12
 800b044:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b048:	4718      	bx	r3
 800b04a:	bf00      	nop
 800b04c:	0801d6d8 	.word	0x0801d6d8
 800b050:	0801d952 	.word	0x0801d952
 800b054:	0801d74c 	.word	0x0801d74c

0800b058 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt>:
 800b058:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b05c:	f8bd 7028 	ldrh.w	r7, [sp, #40]	; 0x28
 800b060:	f8bd 602c 	ldrh.w	r6, [sp, #44]	; 0x2c
 800b064:	42b7      	cmp	r7, r6
 800b066:	4604      	mov	r4, r0
 800b068:	4689      	mov	r9, r1
 800b06a:	4690      	mov	r8, r2
 800b06c:	461d      	mov	r5, r3
 800b06e:	d305      	bcc.n	800b07c <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0x24>
 800b070:	4b25      	ldr	r3, [pc, #148]	; (800b108 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb0>)
 800b072:	4a26      	ldr	r2, [pc, #152]	; (800b10c <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb4>)
 800b074:	4826      	ldr	r0, [pc, #152]	; (800b110 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt+0xb8>)
 800b076:	2163      	movs	r1, #99	; 0x63
 800b078:	f010 f894 	bl	801b1a4 <__assert_func>
 800b07c:	2301      	movs	r3, #1
 800b07e:	fa0f fa81 	sxth.w	sl, r1
 800b082:	fa0f fb82 	sxth.w	fp, r2
 800b086:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800b08a:	465a      	mov	r2, fp
 800b08c:	4651      	mov	r1, sl
 800b08e:	303c      	adds	r0, #60	; 0x3c
 800b090:	f7fc f81d 	bl	80070ce <_ZN8touchgfx8Drawable5setXYEss>
 800b094:	465a      	mov	r2, fp
 800b096:	4651      	mov	r1, sl
 800b098:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 800b09c:	f7fc f817 	bl	80070ce <_ZN8touchgfx8Drawable5setXYEss>
 800b0a0:	f8b4 1044 	ldrh.w	r1, [r4, #68]	; 0x44
 800b0a4:	f8a4 5098 	strh.w	r5, [r4, #152]	; 0x98
 800b0a8:	4489      	add	r9, r1
 800b0aa:	f8b4 109c 	ldrh.w	r1, [r4, #156]	; 0x9c
 800b0ae:	6823      	ldr	r3, [r4, #0]
 800b0b0:	f8a4 70ec 	strh.w	r7, [r4, #236]	; 0xec
 800b0b4:	4429      	add	r1, r5
 800b0b6:	f8b4 5046 	ldrh.w	r5, [r4, #70]	; 0x46
 800b0ba:	f8a4 60ee 	strh.w	r6, [r4, #238]	; 0xee
 800b0be:	44a8      	add	r8, r5
 800b0c0:	f8b4 509e 	ldrh.w	r5, [r4, #158]	; 0x9e
 800b0c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b0c6:	b289      	uxth	r1, r1
 800b0c8:	fa1f f989 	uxth.w	r9, r9
 800b0cc:	4435      	add	r5, r6
 800b0ce:	4589      	cmp	r9, r1
 800b0d0:	b2ad      	uxth	r5, r5
 800b0d2:	fa1f f888 	uxth.w	r8, r8
 800b0d6:	bf8c      	ite	hi
 800b0d8:	fa0f f189 	sxthhi.w	r1, r9
 800b0dc:	b209      	sxthls	r1, r1
 800b0de:	4620      	mov	r0, r4
 800b0e0:	45a8      	cmp	r8, r5
 800b0e2:	bf8c      	ite	hi
 800b0e4:	fa0f f588 	sxthhi.w	r5, r8
 800b0e8:	b22d      	sxthls	r5, r5
 800b0ea:	4798      	blx	r3
 800b0ec:	6823      	ldr	r3, [r4, #0]
 800b0ee:	4629      	mov	r1, r5
 800b0f0:	4620      	mov	r0, r4
 800b0f2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b0f4:	4798      	blx	r3
 800b0f6:	6823      	ldr	r3, [r4, #0]
 800b0f8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b0fa:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800b0fe:	4620      	mov	r0, r4
 800b100:	b001      	add	sp, #4
 800b102:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b106:	4718      	bx	r3
 800b108:	0801d666 	.word	0x0801d666
 800b10c:	0801d8ed 	.word	0x0801d8ed
 800b110:	0801d74c 	.word	0x0801d74c

0800b114 <_ZN8touchgfx6Slider13setValueRangeEiii>:
 800b114:	4291      	cmp	r1, r2
 800b116:	b510      	push	{r4, lr}
 800b118:	db06      	blt.n	800b128 <_ZN8touchgfx6Slider13setValueRangeEiii+0x14>
 800b11a:	4b08      	ldr	r3, [pc, #32]	; (800b13c <_ZN8touchgfx6Slider13setValueRangeEiii+0x28>)
 800b11c:	4a08      	ldr	r2, [pc, #32]	; (800b140 <_ZN8touchgfx6Slider13setValueRangeEiii+0x2c>)
 800b11e:	4809      	ldr	r0, [pc, #36]	; (800b144 <_ZN8touchgfx6Slider13setValueRangeEiii+0x30>)
 800b120:	f240 110b 	movw	r1, #267	; 0x10b
 800b124:	f010 f83e 	bl	801b1a4 <__assert_func>
 800b128:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 800b12c:	6802      	ldr	r2, [r0, #0]
 800b12e:	4619      	mov	r1, r3
 800b130:	f8d2 20a4 	ldr.w	r2, [r2, #164]	; 0xa4
 800b134:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b138:	4710      	bx	r2
 800b13a:	bf00      	nop
 800b13c:	0801d60e 	.word	0x0801d60e
 800b140:	0801d8b1 	.word	0x0801d8b1
 800b144:	0801d74c 	.word	0x0801d74c

0800b148 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE>:
 800b148:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b14c:	790b      	ldrb	r3, [r1, #4]
 800b14e:	4604      	mov	r4, r0
 800b150:	460d      	mov	r5, r1
 800b152:	b323      	cbz	r3, 800b19e <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x56>
 800b154:	2b01      	cmp	r3, #1
 800b156:	d135      	bne.n	800b1c4 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 800b158:	6823      	ldr	r3, [r4, #0]
 800b15a:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800b15e:	f8d3 70a8 	ldr.w	r7, [r3, #168]	; 0xa8
 800b162:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b166:	2a00      	cmp	r2, #0
 800b168:	d12a      	bne.n	800b1c0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x78>
 800b16a:	88ee      	ldrh	r6, [r5, #6]
 800b16c:	4620      	mov	r0, r4
 800b16e:	4798      	blx	r3
 800b170:	1a31      	subs	r1, r6, r0
 800b172:	b209      	sxth	r1, r1
 800b174:	4620      	mov	r0, r4
 800b176:	47b8      	blx	r7
 800b178:	792b      	ldrb	r3, [r5, #4]
 800b17a:	2b01      	cmp	r3, #1
 800b17c:	d122      	bne.n	800b1c4 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 800b17e:	f8d4 00f4 	ldr.w	r0, [r4, #244]	; 0xf4
 800b182:	b1f8      	cbz	r0, 800b1c4 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 800b184:	6803      	ldr	r3, [r0, #0]
 800b186:	68db      	ldr	r3, [r3, #12]
 800b188:	4798      	blx	r3
 800b18a:	b1d8      	cbz	r0, 800b1c4 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 800b18c:	f8d4 00f4 	ldr.w	r0, [r4, #244]	; 0xf4
 800b190:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b192:	6803      	ldr	r3, [r0, #0]
 800b194:	4621      	mov	r1, r4
 800b196:	689b      	ldr	r3, [r3, #8]
 800b198:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b19c:	4718      	bx	r3
 800b19e:	f8d0 00f0 	ldr.w	r0, [r0, #240]	; 0xf0
 800b1a2:	2800      	cmp	r0, #0
 800b1a4:	d0d8      	beq.n	800b158 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 800b1a6:	6803      	ldr	r3, [r0, #0]
 800b1a8:	68db      	ldr	r3, [r3, #12]
 800b1aa:	4798      	blx	r3
 800b1ac:	2800      	cmp	r0, #0
 800b1ae:	d0d3      	beq.n	800b158 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 800b1b0:	f8d4 00f0 	ldr.w	r0, [r4, #240]	; 0xf0
 800b1b4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800b1b6:	6803      	ldr	r3, [r0, #0]
 800b1b8:	4621      	mov	r1, r4
 800b1ba:	689b      	ldr	r3, [r3, #8]
 800b1bc:	4798      	blx	r3
 800b1be:	e7cb      	b.n	800b158 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 800b1c0:	892e      	ldrh	r6, [r5, #8]
 800b1c2:	e7d3      	b.n	800b16c <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x24>
 800b1c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b1c8 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE>:
 800b1c8:	b570      	push	{r4, r5, r6, lr}
 800b1ca:	6803      	ldr	r3, [r0, #0]
 800b1cc:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 800b1d0:	f8d3 60a8 	ldr.w	r6, [r3, #168]	; 0xa8
 800b1d4:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b1d8:	4604      	mov	r4, r0
 800b1da:	b942      	cbnz	r2, 800b1ee <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x26>
 800b1dc:	894d      	ldrh	r5, [r1, #10]
 800b1de:	4798      	blx	r3
 800b1e0:	1a29      	subs	r1, r5, r0
 800b1e2:	4633      	mov	r3, r6
 800b1e4:	4620      	mov	r0, r4
 800b1e6:	b209      	sxth	r1, r1
 800b1e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b1ec:	4718      	bx	r3
 800b1ee:	898d      	ldrh	r5, [r1, #12]
 800b1f0:	e7f5      	b.n	800b1de <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x16>
	...

0800b1f4 <_ZN8touchgfx6SliderC1Ev>:
 800b1f4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b1f8:	ae02      	add	r6, sp, #8
 800b1fa:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800b1fe:	4604      	mov	r4, r0
 800b200:	f7fc f83e 	bl	8007280 <_ZN8touchgfx9ContainerC1Ev>
 800b204:	f826 7d04 	strh.w	r7, [r6, #-4]!
 800b208:	4b23      	ldr	r3, [pc, #140]	; (800b298 <_ZN8touchgfx6SliderC1Ev+0xa4>)
 800b20a:	6023      	str	r3, [r4, #0]
 800b20c:	2500      	movs	r5, #0
 800b20e:	f04f 0b01 	mov.w	fp, #1
 800b212:	f104 093c 	add.w	r9, r4, #60	; 0x3c
 800b216:	4631      	mov	r1, r6
 800b218:	f104 0a68 	add.w	sl, r4, #104	; 0x68
 800b21c:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
 800b220:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
 800b224:	f8c4 b038 	str.w	fp, [r4, #56]	; 0x38
 800b228:	4648      	mov	r0, r9
 800b22a:	f7fc f921 	bl	8007470 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800b22e:	f104 0894 	add.w	r8, r4, #148	; 0x94
 800b232:	4631      	mov	r1, r6
 800b234:	4650      	mov	r0, sl
 800b236:	f8ad 7004 	strh.w	r7, [sp, #4]
 800b23a:	f7fc f919 	bl	8007470 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800b23e:	4631      	mov	r1, r6
 800b240:	4640      	mov	r0, r8
 800b242:	f104 06c0 	add.w	r6, r4, #192	; 0xc0
 800b246:	f8ad 7004 	strh.w	r7, [sp, #4]
 800b24a:	f7fc f911 	bl	8007470 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800b24e:	4630      	mov	r0, r6
 800b250:	f7fc f816 	bl	8007280 <_ZN8touchgfx9ContainerC1Ev>
 800b254:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800b258:	e9c4 353b 	strd	r3, r5, [r4, #236]	; 0xec
 800b25c:	4651      	mov	r1, sl
 800b25e:	4630      	mov	r0, r6
 800b260:	e9c4 553d 	strd	r5, r5, [r4, #244]	; 0xf4
 800b264:	f884 b024 	strb.w	fp, [r4, #36]	; 0x24
 800b268:	f7ff fc44 	bl	800aaf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b26c:	4649      	mov	r1, r9
 800b26e:	4620      	mov	r0, r4
 800b270:	f7ff fc40 	bl	800aaf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b274:	4631      	mov	r1, r6
 800b276:	4620      	mov	r0, r4
 800b278:	f7ff fc3c 	bl	800aaf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b27c:	4641      	mov	r1, r8
 800b27e:	4620      	mov	r0, r4
 800b280:	f7ff fc38 	bl	800aaf4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800b284:	4620      	mov	r0, r4
 800b286:	2264      	movs	r2, #100	; 0x64
 800b288:	4629      	mov	r1, r5
 800b28a:	f7ff fde6 	bl	800ae5a <_ZN8touchgfx6Slider13setValueRangeEii>
 800b28e:	4620      	mov	r0, r4
 800b290:	b003      	add	sp, #12
 800b292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b296:	bf00      	nop
 800b298:	0801d784 	.word	0x0801d784

0800b29c <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>:
 800b29c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b2a0:	4604      	mov	r4, r0
 800b2a2:	4608      	mov	r0, r1
 800b2a4:	4615      	mov	r5, r2
 800b2a6:	460e      	mov	r6, r1
 800b2a8:	461f      	mov	r7, r3
 800b2aa:	f004 fac3 	bl	800f834 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b2ae:	4680      	mov	r8, r0
 800b2b0:	4628      	mov	r0, r5
 800b2b2:	f004 fabf 	bl	800f834 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b2b6:	4580      	cmp	r8, r0
 800b2b8:	d005      	beq.n	800b2c6 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x2a>
 800b2ba:	4b14      	ldr	r3, [pc, #80]	; (800b30c <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x70>)
 800b2bc:	4a14      	ldr	r2, [pc, #80]	; (800b310 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x74>)
 800b2be:	4815      	ldr	r0, [pc, #84]	; (800b314 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x78>)
 800b2c0:	2137      	movs	r1, #55	; 0x37
 800b2c2:	f00f ff6f 	bl	801b1a4 <__assert_func>
 800b2c6:	4630      	mov	r0, r6
 800b2c8:	f004 faee 	bl	800f8a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b2cc:	4680      	mov	r8, r0
 800b2ce:	4628      	mov	r0, r5
 800b2d0:	f004 faea 	bl	800f8a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b2d4:	4580      	cmp	r8, r0
 800b2d6:	d1f0      	bne.n	800b2ba <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_+0x1e>
 800b2d8:	4631      	mov	r1, r6
 800b2da:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 800b2de:	f001 f98b 	bl	800c5f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800b2e2:	4629      	mov	r1, r5
 800b2e4:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800b2e8:	f001 f986 	bl	800c5f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800b2ec:	4639      	mov	r1, r7
 800b2ee:	f104 0094 	add.w	r0, r4, #148	; 0x94
 800b2f2:	f001 f981 	bl	800c5f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800b2f6:	f8b4 3070 	ldrh.w	r3, [r4, #112]	; 0x70
 800b2fa:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 800b2fe:	f8b4 3072 	ldrh.w	r3, [r4, #114]	; 0x72
 800b302:	f8a4 30ca 	strh.w	r3, [r4, #202]	; 0xca
 800b306:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b30a:	bf00      	nop
 800b30c:	0801d52f 	.word	0x0801d52f
 800b310:	0801d844 	.word	0x0801d844
 800b314:	0801d74c 	.word	0x0801d74c

0800b318 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
 800b318:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800b31c:	4770      	bx	lr

0800b31e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800b31e:	b513      	push	{r0, r1, r4, lr}
 800b320:	6803      	ldr	r3, [r0, #0]
 800b322:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800b326:	2300      	movs	r3, #0
 800b328:	e9cd 3300 	strd	r3, r3, [sp]
 800b32c:	466b      	mov	r3, sp
 800b32e:	47a0      	blx	r4
 800b330:	b002      	add	sp, #8
 800b332:	bd10      	pop	{r4, pc}

0800b334 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800b334:	2301      	movs	r3, #1
 800b336:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b33a:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800b33e:	4770      	bx	lr

0800b340 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800b340:	2301      	movs	r3, #1
 800b342:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b346:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800b34a:	4770      	bx	lr

0800b34c <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800b34c:	6843      	ldr	r3, [r0, #4]
 800b34e:	2201      	movs	r2, #1
 800b350:	725a      	strb	r2, [r3, #9]
 800b352:	6840      	ldr	r0, [r0, #4]
 800b354:	6803      	ldr	r3, [r0, #0]
 800b356:	691b      	ldr	r3, [r3, #16]
 800b358:	4718      	bx	r3

0800b35a <_ZN8touchgfx3HAL8flushDMAEv>:
 800b35a:	6840      	ldr	r0, [r0, #4]
 800b35c:	6803      	ldr	r3, [r0, #0]
 800b35e:	689b      	ldr	r3, [r3, #8]
 800b360:	4718      	bx	r3
	...

0800b364 <_ZN8touchgfx3HAL10beginFrameEv>:
 800b364:	4b04      	ldr	r3, [pc, #16]	; (800b378 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800b366:	781b      	ldrb	r3, [r3, #0]
 800b368:	b123      	cbz	r3, 800b374 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800b36a:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800b36e:	f080 0001 	eor.w	r0, r0, #1
 800b372:	4770      	bx	lr
 800b374:	2001      	movs	r0, #1
 800b376:	4770      	bx	lr
 800b378:	20026eae 	.word	0x20026eae

0800b37c <_ZN8touchgfx3HAL8endFrameEv>:
 800b37c:	b510      	push	{r4, lr}
 800b37e:	4604      	mov	r4, r0
 800b380:	6840      	ldr	r0, [r0, #4]
 800b382:	6803      	ldr	r3, [r0, #0]
 800b384:	689b      	ldr	r3, [r3, #8]
 800b386:	4798      	blx	r3
 800b388:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800b38c:	b113      	cbz	r3, 800b394 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800b38e:	2301      	movs	r3, #1
 800b390:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b394:	bd10      	pop	{r4, pc}

0800b396 <_ZN8touchgfx3HAL9taskEntryEv>:
 800b396:	b508      	push	{r3, lr}
 800b398:	6803      	ldr	r3, [r0, #0]
 800b39a:	4604      	mov	r4, r0
 800b39c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800b39e:	4798      	blx	r3
 800b3a0:	6823      	ldr	r3, [r4, #0]
 800b3a2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800b3a4:	4620      	mov	r0, r4
 800b3a6:	4798      	blx	r3
 800b3a8:	f7fd ff5e 	bl	8009268 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800b3ac:	6823      	ldr	r3, [r4, #0]
 800b3ae:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800b3b0:	e7f8      	b.n	800b3a4 <_ZN8touchgfx3HAL9taskEntryEv+0xe>
	...

0800b3b4 <_ZN8touchgfx3HAL4tickEv>:
 800b3b4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b3b6:	6803      	ldr	r3, [r0, #0]
 800b3b8:	4d5c      	ldr	r5, [pc, #368]	; (800b52c <_ZN8touchgfx3HAL4tickEv+0x178>)
 800b3ba:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800b3be:	4604      	mov	r4, r0
 800b3c0:	4798      	blx	r3
 800b3c2:	2800      	cmp	r0, #0
 800b3c4:	f000 8097 	beq.w	800b4f6 <_ZN8touchgfx3HAL4tickEv+0x142>
 800b3c8:	2001      	movs	r0, #1
 800b3ca:	f7fd fc6b 	bl	8008ca4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b3ce:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800b3d2:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b3d6:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b3da:	2600      	movs	r6, #0
 800b3dc:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800b3e0:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800b3e4:	b133      	cbz	r3, 800b3f4 <_ZN8touchgfx3HAL4tickEv+0x40>
 800b3e6:	6823      	ldr	r3, [r4, #0]
 800b3e8:	4620      	mov	r0, r4
 800b3ea:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800b3ee:	4798      	blx	r3
 800b3f0:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800b3f4:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800b3f8:	6862      	ldr	r2, [r4, #4]
 800b3fa:	f083 0301 	eor.w	r3, r3, #1
 800b3fe:	7253      	strb	r3, [r2, #9]
 800b400:	2601      	movs	r6, #1
 800b402:	702e      	strb	r6, [r5, #0]
 800b404:	f002 f944 	bl	800d690 <_ZN8touchgfx11Application11getInstanceEv>
 800b408:	6803      	ldr	r3, [r0, #0]
 800b40a:	4631      	mov	r1, r6
 800b40c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b40e:	4798      	blx	r3
 800b410:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b414:	b90b      	cbnz	r3, 800b41a <_ZN8touchgfx3HAL4tickEv+0x66>
 800b416:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800b41a:	f002 f939 	bl	800d690 <_ZN8touchgfx11Application11getInstanceEv>
 800b41e:	6803      	ldr	r3, [r0, #0]
 800b420:	695b      	ldr	r3, [r3, #20]
 800b422:	4798      	blx	r3
 800b424:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b426:	6803      	ldr	r3, [r0, #0]
 800b428:	691b      	ldr	r3, [r3, #16]
 800b42a:	4798      	blx	r3
 800b42c:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b430:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800b434:	3b01      	subs	r3, #1
 800b436:	b2db      	uxtb	r3, r3
 800b438:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b43c:	b10a      	cbz	r2, 800b442 <_ZN8touchgfx3HAL4tickEv+0x8e>
 800b43e:	2b00      	cmp	r3, #0
 800b440:	d1eb      	bne.n	800b41a <_ZN8touchgfx3HAL4tickEv+0x66>
 800b442:	4a3b      	ldr	r2, [pc, #236]	; (800b530 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b444:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800b448:	7813      	ldrb	r3, [r2, #0]
 800b44a:	3301      	adds	r3, #1
 800b44c:	b25b      	sxtb	r3, r3
 800b44e:	4299      	cmp	r1, r3
 800b450:	7013      	strb	r3, [r2, #0]
 800b452:	dc10      	bgt.n	800b476 <_ZN8touchgfx3HAL4tickEv+0xc2>
 800b454:	68e0      	ldr	r0, [r4, #12]
 800b456:	2300      	movs	r3, #0
 800b458:	7013      	strb	r3, [r2, #0]
 800b45a:	6803      	ldr	r3, [r0, #0]
 800b45c:	aa03      	add	r2, sp, #12
 800b45e:	68db      	ldr	r3, [r3, #12]
 800b460:	a902      	add	r1, sp, #8
 800b462:	4798      	blx	r3
 800b464:	6823      	ldr	r3, [r4, #0]
 800b466:	2800      	cmp	r0, #0
 800b468:	d051      	beq.n	800b50e <_ZN8touchgfx3HAL4tickEv+0x15a>
 800b46a:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800b46e:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b472:	4620      	mov	r0, r4
 800b474:	4798      	blx	r3
 800b476:	6960      	ldr	r0, [r4, #20]
 800b478:	2300      	movs	r3, #0
 800b47a:	f88d 3007 	strb.w	r3, [sp, #7]
 800b47e:	b158      	cbz	r0, 800b498 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800b480:	6803      	ldr	r3, [r0, #0]
 800b482:	f10d 0107 	add.w	r1, sp, #7
 800b486:	68db      	ldr	r3, [r3, #12]
 800b488:	4798      	blx	r3
 800b48a:	b128      	cbz	r0, 800b498 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800b48c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b48e:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b492:	6803      	ldr	r3, [r0, #0]
 800b494:	68db      	ldr	r3, [r3, #12]
 800b496:	4798      	blx	r3
 800b498:	f104 001c 	add.w	r0, r4, #28
 800b49c:	f00f fd9e 	bl	801afdc <_ZN8touchgfx8Gestures4tickEv>
 800b4a0:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800b4a4:	b30b      	cbz	r3, 800b4ea <_ZN8touchgfx3HAL4tickEv+0x136>
 800b4a6:	6920      	ldr	r0, [r4, #16]
 800b4a8:	6803      	ldr	r3, [r0, #0]
 800b4aa:	691b      	ldr	r3, [r3, #16]
 800b4ac:	4798      	blx	r3
 800b4ae:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b4b0:	4606      	mov	r6, r0
 800b4b2:	b903      	cbnz	r3, 800b4b6 <_ZN8touchgfx3HAL4tickEv+0x102>
 800b4b4:	6720      	str	r0, [r4, #112]	; 0x70
 800b4b6:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b4b8:	4a1e      	ldr	r2, [pc, #120]	; (800b534 <_ZN8touchgfx3HAL4tickEv+0x180>)
 800b4ba:	1af3      	subs	r3, r6, r3
 800b4bc:	4293      	cmp	r3, r2
 800b4be:	d914      	bls.n	800b4ea <_ZN8touchgfx3HAL4tickEv+0x136>
 800b4c0:	6920      	ldr	r0, [r4, #16]
 800b4c2:	6803      	ldr	r3, [r0, #0]
 800b4c4:	699b      	ldr	r3, [r3, #24]
 800b4c6:	4798      	blx	r3
 800b4c8:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b4ca:	2264      	movs	r2, #100	; 0x64
 800b4cc:	1af3      	subs	r3, r6, r3
 800b4ce:	fbb3 f3f2 	udiv	r3, r3, r2
 800b4d2:	fbb0 f0f3 	udiv	r0, r0, r3
 800b4d6:	2800      	cmp	r0, #0
 800b4d8:	dc1e      	bgt.n	800b518 <_ZN8touchgfx3HAL4tickEv+0x164>
 800b4da:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800b4de:	6920      	ldr	r0, [r4, #16]
 800b4e0:	6803      	ldr	r3, [r0, #0]
 800b4e2:	2100      	movs	r1, #0
 800b4e4:	69db      	ldr	r3, [r3, #28]
 800b4e6:	4798      	blx	r3
 800b4e8:	6726      	str	r6, [r4, #112]	; 0x70
 800b4ea:	f002 f8d1 	bl	800d690 <_ZN8touchgfx11Application11getInstanceEv>
 800b4ee:	6803      	ldr	r3, [r0, #0]
 800b4f0:	2100      	movs	r1, #0
 800b4f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b4f4:	4798      	blx	r3
 800b4f6:	6823      	ldr	r3, [r4, #0]
 800b4f8:	4620      	mov	r0, r4
 800b4fa:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800b4fe:	4798      	blx	r3
 800b500:	2001      	movs	r0, #1
 800b502:	f7fd fbda 	bl	8008cba <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b506:	2300      	movs	r3, #0
 800b508:	702b      	strb	r3, [r5, #0]
 800b50a:	b004      	add	sp, #16
 800b50c:	bd70      	pop	{r4, r5, r6, pc}
 800b50e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800b512:	4620      	mov	r0, r4
 800b514:	4798      	blx	r3
 800b516:	e7ae      	b.n	800b476 <_ZN8touchgfx3HAL4tickEv+0xc2>
 800b518:	2863      	cmp	r0, #99	; 0x63
 800b51a:	bfcb      	itete	gt
 800b51c:	2300      	movgt	r3, #0
 800b51e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800b522:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800b526:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800b52a:	e7d8      	b.n	800b4de <_ZN8touchgfx3HAL4tickEv+0x12a>
 800b52c:	20026eb4 	.word	0x20026eb4
 800b530:	20026eb5 	.word	0x20026eb5
 800b534:	05f5e100 	.word	0x05f5e100

0800b538 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b538:	f7fd be66 	b.w	8009208 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b53c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b53c:	6581      	str	r1, [r0, #88]	; 0x58
 800b53e:	301c      	adds	r0, #28
 800b540:	f00f bd4a 	b.w	801afd8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b544 <_ZN8touchgfx3HAL5touchEll>:
 800b544:	b530      	push	{r4, r5, lr}
 800b546:	b087      	sub	sp, #28
 800b548:	4604      	mov	r4, r0
 800b54a:	a804      	add	r0, sp, #16
 800b54c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b550:	f001 fe5c 	bl	800d20c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b554:	9b04      	ldr	r3, [sp, #16]
 800b556:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b55a:	a906      	add	r1, sp, #24
 800b55c:	9b05      	ldr	r3, [sp, #20]
 800b55e:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b562:	a803      	add	r0, sp, #12
 800b564:	f001 fea0 	bl	800d2a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b568:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800b56c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b570:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b574:	f104 001c 	add.w	r0, r4, #28
 800b578:	b189      	cbz	r1, 800b59e <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b57a:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800b57e:	9300      	str	r3, [sp, #0]
 800b580:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800b584:	4613      	mov	r3, r2
 800b586:	462a      	mov	r2, r5
 800b588:	f00f fd36 	bl	801aff8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b58c:	b128      	cbz	r0, 800b59a <_ZN8touchgfx3HAL5touchEll+0x56>
 800b58e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b592:	65e3      	str	r3, [r4, #92]	; 0x5c
 800b594:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b598:	6623      	str	r3, [r4, #96]	; 0x60
 800b59a:	b007      	add	sp, #28
 800b59c:	bd30      	pop	{r4, r5, pc}
 800b59e:	f00f fd6f 	bl	801b080 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b5a2:	2301      	movs	r3, #1
 800b5a4:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b5a8:	e7f1      	b.n	800b58e <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b5aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b5aa:	b570      	push	{r4, r5, r6, lr}
 800b5ac:	2b00      	cmp	r3, #0
 800b5ae:	d050      	beq.n	800b652 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800b5b0:	ea81 0002 	eor.w	r0, r1, r2
 800b5b4:	07c6      	lsls	r6, r0, #31
 800b5b6:	d508      	bpl.n	800b5ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b5b8:	3a01      	subs	r2, #1
 800b5ba:	18cc      	adds	r4, r1, r3
 800b5bc:	42a1      	cmp	r1, r4
 800b5be:	d048      	beq.n	800b652 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800b5c0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b5c4:	f801 0b01 	strb.w	r0, [r1], #1
 800b5c8:	e7f8      	b.n	800b5bc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b5ca:	07d5      	lsls	r5, r2, #31
 800b5cc:	bf42      	ittt	mi
 800b5ce:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b5d2:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b5d6:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b5da:	2b01      	cmp	r3, #1
 800b5dc:	d915      	bls.n	800b60a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800b5de:	ea82 0001 	eor.w	r0, r2, r1
 800b5e2:	0784      	lsls	r4, r0, #30
 800b5e4:	d02d      	beq.n	800b642 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 800b5e6:	1e94      	subs	r4, r2, #2
 800b5e8:	4608      	mov	r0, r1
 800b5ea:	18ce      	adds	r6, r1, r3
 800b5ec:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 800b5f0:	f820 5b02 	strh.w	r5, [r0], #2
 800b5f4:	1a35      	subs	r5, r6, r0
 800b5f6:	2d01      	cmp	r5, #1
 800b5f8:	d8f8      	bhi.n	800b5ec <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 800b5fa:	1e98      	subs	r0, r3, #2
 800b5fc:	f020 0001 	bic.w	r0, r0, #1
 800b600:	3002      	adds	r0, #2
 800b602:	4401      	add	r1, r0
 800b604:	4402      	add	r2, r0
 800b606:	f003 0301 	and.w	r3, r3, #1
 800b60a:	1f14      	subs	r4, r2, #4
 800b60c:	4608      	mov	r0, r1
 800b60e:	18ce      	adds	r6, r1, r3
 800b610:	1a35      	subs	r5, r6, r0
 800b612:	2d03      	cmp	r5, #3
 800b614:	d810      	bhi.n	800b638 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 800b616:	089c      	lsrs	r4, r3, #2
 800b618:	00a0      	lsls	r0, r4, #2
 800b61a:	4401      	add	r1, r0
 800b61c:	3801      	subs	r0, #1
 800b61e:	4402      	add	r2, r0
 800b620:	f06f 0003 	mvn.w	r0, #3
 800b624:	fb00 3404 	mla	r4, r0, r4, r3
 800b628:	440c      	add	r4, r1
 800b62a:	42a1      	cmp	r1, r4
 800b62c:	d011      	beq.n	800b652 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800b62e:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800b632:	f801 3b01 	strb.w	r3, [r1], #1
 800b636:	e7f8      	b.n	800b62a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 800b638:	f854 5f04 	ldr.w	r5, [r4, #4]!
 800b63c:	f840 5b04 	str.w	r5, [r0], #4
 800b640:	e7e6      	b.n	800b610 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 800b642:	0790      	lsls	r0, r2, #30
 800b644:	d0e1      	beq.n	800b60a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800b646:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b64a:	f821 0b02 	strh.w	r0, [r1], #2
 800b64e:	3b02      	subs	r3, #2
 800b650:	e7db      	b.n	800b60a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800b652:	2001      	movs	r0, #1
 800b654:	bd70      	pop	{r4, r5, r6, pc}

0800b656 <_ZN8touchgfx3HAL7noTouchEv>:
 800b656:	b510      	push	{r4, lr}
 800b658:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800b65c:	4604      	mov	r4, r0
 800b65e:	b153      	cbz	r3, 800b676 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b660:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800b664:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800b668:	2101      	movs	r1, #1
 800b66a:	301c      	adds	r0, #28
 800b66c:	f00f fd08 	bl	801b080 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b670:	2300      	movs	r3, #0
 800b672:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b676:	bd10      	pop	{r4, pc}

0800b678 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b678:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b67c:	4605      	mov	r5, r0
 800b67e:	6980      	ldr	r0, [r0, #24]
 800b680:	b085      	sub	sp, #20
 800b682:	460f      	mov	r7, r1
 800b684:	4690      	mov	r8, r2
 800b686:	4699      	mov	r9, r3
 800b688:	b930      	cbnz	r0, 800b698 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800b68a:	4b1f      	ldr	r3, [pc, #124]	; (800b708 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800b68c:	4a1f      	ldr	r2, [pc, #124]	; (800b70c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800b68e:	f44f 7198 	mov.w	r1, #304	; 0x130
 800b692:	481f      	ldr	r0, [pc, #124]	; (800b710 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x98>)
 800b694:	f00f fd86 	bl	801b1a4 <__assert_func>
 800b698:	ac04      	add	r4, sp, #16
 800b69a:	2600      	movs	r6, #0
 800b69c:	f844 6d04 	str.w	r6, [r4, #-4]!
 800b6a0:	6806      	ldr	r6, [r0, #0]
 800b6a2:	9401      	str	r4, [sp, #4]
 800b6a4:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800b6a8:	9400      	str	r4, [sp, #0]
 800b6aa:	6834      	ldr	r4, [r6, #0]
 800b6ac:	47a0      	blx	r4
 800b6ae:	4c19      	ldr	r4, [pc, #100]	; (800b714 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x9c>)
 800b6b0:	4606      	mov	r6, r0
 800b6b2:	f8a4 9000 	strh.w	r9, [r4]
 800b6b6:	f7fa fffb 	bl	80066b0 <_ZN8touchgfx3HAL3lcdEv>
 800b6ba:	6803      	ldr	r3, [r0, #0]
 800b6bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b6be:	4798      	blx	r3
 800b6c0:	280c      	cmp	r0, #12
 800b6c2:	d80f      	bhi.n	800b6e4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 800b6c4:	e8df f000 	tbb	[pc, r0]
 800b6c8:	1b1b1207 	.word	0x1b1b1207
 800b6cc:	1b1b1b1b 	.word	0x1b1b1b1b
 800b6d0:	1b1b1b1b 	.word	0x1b1b1b1b
 800b6d4:	1b          	.byte	0x1b
 800b6d5:	00          	.byte	0x00
 800b6d6:	8823      	ldrh	r3, [r4, #0]
 800b6d8:	fb08 7203 	mla	r2, r8, r3, r7
 800b6dc:	9b03      	ldr	r3, [sp, #12]
 800b6de:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b6e2:	63eb      	str	r3, [r5, #60]	; 0x3c
 800b6e4:	4630      	mov	r0, r6
 800b6e6:	b005      	add	sp, #20
 800b6e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b6ec:	8822      	ldrh	r2, [r4, #0]
 800b6ee:	9b03      	ldr	r3, [sp, #12]
 800b6f0:	fb08 7202 	mla	r2, r8, r2, r7
 800b6f4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b6f8:	1a9a      	subs	r2, r3, r2
 800b6fa:	63ea      	str	r2, [r5, #60]	; 0x3c
 800b6fc:	e7f2      	b.n	800b6e4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 800b6fe:	4b06      	ldr	r3, [pc, #24]	; (800b718 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0xa0>)
 800b700:	4a02      	ldr	r2, [pc, #8]	; (800b70c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800b702:	f240 114d 	movw	r1, #333	; 0x14d
 800b706:	e7c4      	b.n	800b692 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800b708:	0801da27 	.word	0x0801da27
 800b70c:	0801dd36 	.word	0x0801dd36
 800b710:	0801da6c 	.word	0x0801da6c
 800b714:	20026eaa 	.word	0x20026eaa
 800b718:	0801da92 	.word	0x0801da92

0800b71c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 800b71c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b720:	4698      	mov	r8, r3
 800b722:	6803      	ldr	r3, [r0, #0]
 800b724:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 800b726:	4b0f      	ldr	r3, [pc, #60]	; (800b764 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 800b728:	b087      	sub	sp, #28
 800b72a:	f8b3 9000 	ldrh.w	r9, [r3]
 800b72e:	460e      	mov	r6, r1
 800b730:	4617      	mov	r7, r2
 800b732:	4604      	mov	r4, r0
 800b734:	f7fa ffbc 	bl	80066b0 <_ZN8touchgfx3HAL3lcdEv>
 800b738:	6803      	ldr	r3, [r0, #0]
 800b73a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b73c:	4798      	blx	r3
 800b73e:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800b742:	9302      	str	r3, [sp, #8]
 800b744:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b748:	9301      	str	r3, [sp, #4]
 800b74a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b74e:	9300      	str	r3, [sp, #0]
 800b750:	e9cd 9003 	strd	r9, r0, [sp, #12]
 800b754:	4643      	mov	r3, r8
 800b756:	463a      	mov	r2, r7
 800b758:	4631      	mov	r1, r6
 800b75a:	4620      	mov	r0, r4
 800b75c:	47a8      	blx	r5
 800b75e:	b007      	add	sp, #28
 800b760:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b764:	20026eaa 	.word	0x20026eaa

0800b768 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b76c:	4606      	mov	r6, r0
 800b76e:	b089      	sub	sp, #36	; 0x24
 800b770:	4610      	mov	r0, r2
 800b772:	460c      	mov	r4, r1
 800b774:	4691      	mov	r9, r2
 800b776:	4698      	mov	r8, r3
 800b778:	f003 ff9c 	bl	800f6b4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b77c:	2800      	cmp	r0, #0
 800b77e:	f000 8092 	beq.w	800b8a6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x13e>
 800b782:	f8df a13c 	ldr.w	sl, [pc, #316]	; 800b8c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 800b786:	f8df b13c 	ldr.w	fp, [pc, #316]	; 800b8c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>
 800b78a:	f8da 0000 	ldr.w	r0, [sl]
 800b78e:	4f4b      	ldr	r7, [pc, #300]	; (800b8bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 800b790:	6802      	ldr	r2, [r0, #0]
 800b792:	6a12      	ldr	r2, [r2, #32]
 800b794:	4790      	blx	r2
 800b796:	f8da 0000 	ldr.w	r0, [sl]
 800b79a:	6802      	ldr	r2, [r0, #0]
 800b79c:	ad08      	add	r5, sp, #32
 800b79e:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800b7a0:	4790      	blx	r2
 800b7a2:	f825 9d0c 	strh.w	r9, [r5, #-12]!
 800b7a6:	f8bb 3000 	ldrh.w	r3, [fp]
 800b7aa:	9300      	str	r3, [sp, #0]
 800b7ac:	4628      	mov	r0, r5
 800b7ae:	883b      	ldrh	r3, [r7, #0]
 800b7b0:	9301      	str	r3, [sp, #4]
 800b7b2:	f004 f83f 	bl	800f834 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b7b6:	f8ab 0000 	strh.w	r0, [fp]
 800b7ba:	4628      	mov	r0, r5
 800b7bc:	f004 f874 	bl	800f8a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b7c0:	f8da b000 	ldr.w	fp, [sl]
 800b7c4:	8038      	strh	r0, [r7, #0]
 800b7c6:	f8db 303c 	ldr.w	r3, [fp, #60]	; 0x3c
 800b7ca:	9302      	str	r3, [sp, #8]
 800b7cc:	4648      	mov	r0, r9
 800b7ce:	f8db 7040 	ldr.w	r7, [fp, #64]	; 0x40
 800b7d2:	f003 ff6f 	bl	800f6b4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b7d6:	f8da 2000 	ldr.w	r2, [sl]
 800b7da:	f8cb 0040 	str.w	r0, [fp, #64]	; 0x40
 800b7de:	63d0      	str	r0, [r2, #60]	; 0x3c
 800b7e0:	6822      	ldr	r2, [r4, #0]
 800b7e2:	f9b4 9004 	ldrsh.w	r9, [r4, #4]
 800b7e6:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800b7e8:	f9b4 a006 	ldrsh.w	sl, [r4, #6]
 800b7ec:	2200      	movs	r2, #0
 800b7ee:	4611      	mov	r1, r2
 800b7f0:	4620      	mov	r0, r4
 800b7f2:	4798      	blx	r3
 800b7f4:	2201      	movs	r2, #1
 800b7f6:	f894 b025 	ldrb.w	fp, [r4, #37]	; 0x25
 800b7fa:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800b7fe:	f9b8 1004 	ldrsh.w	r1, [r8, #4]
 800b802:	1d22      	adds	r2, r4, #4
 800b804:	2900      	cmp	r1, #0
 800b806:	d051      	beq.n	800b8ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x144>
 800b808:	f9b8 1006 	ldrsh.w	r1, [r8, #6]
 800b80c:	2900      	cmp	r1, #0
 800b80e:	d04d      	beq.n	800b8ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x144>
 800b810:	6810      	ldr	r0, [r2, #0]
 800b812:	6851      	ldr	r1, [r2, #4]
 800b814:	f10d 0c18 	add.w	ip, sp, #24
 800b818:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800b81c:	4641      	mov	r1, r8
 800b81e:	a806      	add	r0, sp, #24
 800b820:	f7ff f998 	bl	800ab54 <_ZN8touchgfx4RectaNERKS0_>
 800b824:	4628      	mov	r0, r5
 800b826:	f004 f991 	bl	800fb4c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b82a:	4680      	mov	r8, r0
 800b82c:	f7fa ff40 	bl	80066b0 <_ZN8touchgfx3HAL3lcdEv>
 800b830:	6802      	ldr	r2, [r0, #0]
 800b832:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800b834:	4790      	blx	r2
 800b836:	4580      	cmp	r8, r0
 800b838:	d03d      	beq.n	800b8b6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x14e>
 800b83a:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 800b83c:	b150      	cbz	r0, 800b854 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xec>
 800b83e:	4628      	mov	r0, r5
 800b840:	f004 f984 	bl	800fb4c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b844:	4605      	mov	r5, r0
 800b846:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 800b848:	6803      	ldr	r3, [r0, #0]
 800b84a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b84c:	4798      	blx	r3
 800b84e:	1a2b      	subs	r3, r5, r0
 800b850:	4258      	negs	r0, r3
 800b852:	4158      	adcs	r0, r3
 800b854:	f886 0076 	strb.w	r0, [r6, #118]	; 0x76
 800b858:	6822      	ldr	r2, [r4, #0]
 800b85a:	6963      	ldr	r3, [r4, #20]
 800b85c:	9303      	str	r3, [sp, #12]
 800b85e:	2500      	movs	r5, #0
 800b860:	6165      	str	r5, [r4, #20]
 800b862:	4620      	mov	r0, r4
 800b864:	6892      	ldr	r2, [r2, #8]
 800b866:	a906      	add	r1, sp, #24
 800b868:	4790      	blx	r2
 800b86a:	9b03      	ldr	r3, [sp, #12]
 800b86c:	6163      	str	r3, [r4, #20]
 800b86e:	f886 5076 	strb.w	r5, [r6, #118]	; 0x76
 800b872:	6823      	ldr	r3, [r4, #0]
 800b874:	f884 b025 	strb.w	fp, [r4, #37]	; 0x25
 800b878:	4620      	mov	r0, r4
 800b87a:	4c11      	ldr	r4, [pc, #68]	; (800b8c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>)
 800b87c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b87e:	4652      	mov	r2, sl
 800b880:	4649      	mov	r1, r9
 800b882:	4798      	blx	r3
 800b884:	6820      	ldr	r0, [r4, #0]
 800b886:	9b02      	ldr	r3, [sp, #8]
 800b888:	9a00      	ldr	r2, [sp, #0]
 800b88a:	e9c0 370f 	strd	r3, r7, [r0, #60]	; 0x3c
 800b88e:	4b0d      	ldr	r3, [pc, #52]	; (800b8c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>)
 800b890:	801a      	strh	r2, [r3, #0]
 800b892:	4b0a      	ldr	r3, [pc, #40]	; (800b8bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 800b894:	9a01      	ldr	r2, [sp, #4]
 800b896:	801a      	strh	r2, [r3, #0]
 800b898:	6803      	ldr	r3, [r0, #0]
 800b89a:	6a1b      	ldr	r3, [r3, #32]
 800b89c:	4798      	blx	r3
 800b89e:	6820      	ldr	r0, [r4, #0]
 800b8a0:	6803      	ldr	r3, [r0, #0]
 800b8a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b8a4:	4798      	blx	r3
 800b8a6:	b009      	add	sp, #36	; 0x24
 800b8a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b8ac:	6810      	ldr	r0, [r2, #0]
 800b8ae:	6851      	ldr	r1, [r2, #4]
 800b8b0:	ab06      	add	r3, sp, #24
 800b8b2:	c303      	stmia	r3!, {r0, r1}
 800b8b4:	e7b6      	b.n	800b824 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xbc>
 800b8b6:	2000      	movs	r0, #0
 800b8b8:	e7cc      	b.n	800b854 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xec>
 800b8ba:	bf00      	nop
 800b8bc:	20026eac 	.word	0x20026eac
 800b8c0:	20026eb0 	.word	0x20026eb0
 800b8c4:	20026eaa 	.word	0x20026eaa

0800b8c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b8c8:	b510      	push	{r4, lr}
 800b8ca:	4b07      	ldr	r3, [pc, #28]	; (800b8e8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b8cc:	781b      	ldrb	r3, [r3, #0]
 800b8ce:	4604      	mov	r4, r0
 800b8d0:	b13b      	cbz	r3, 800b8e2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b8d2:	6803      	ldr	r3, [r0, #0]
 800b8d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b8d6:	4798      	blx	r3
 800b8d8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b8da:	4283      	cmp	r3, r0
 800b8dc:	d101      	bne.n	800b8e2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b8de:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800b8e0:	bd10      	pop	{r4, pc}
 800b8e2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800b8e4:	e7fc      	b.n	800b8e0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b8e6:	bf00      	nop
 800b8e8:	20026eae 	.word	0x20026eae

0800b8ec <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800b8ec:	b510      	push	{r4, lr}
 800b8ee:	4b0b      	ldr	r3, [pc, #44]	; (800b91c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 800b8f0:	781b      	ldrb	r3, [r3, #0]
 800b8f2:	4604      	mov	r4, r0
 800b8f4:	b95b      	cbnz	r3, 800b90e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b8f6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800b8fa:	2b02      	cmp	r3, #2
 800b8fc:	d007      	beq.n	800b90e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b8fe:	6840      	ldr	r0, [r0, #4]
 800b900:	f000 fbc8 	bl	800c094 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800b904:	b118      	cbz	r0, 800b90e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800b906:	6862      	ldr	r2, [r4, #4]
 800b908:	7a53      	ldrb	r3, [r2, #9]
 800b90a:	2b00      	cmp	r3, #0
 800b90c:	d0fc      	beq.n	800b908 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800b90e:	f7fd fc65 	bl	80091dc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b912:	4620      	mov	r0, r4
 800b914:	f7ff ffd8 	bl	800b8c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b918:	bd10      	pop	{r4, pc}
 800b91a:	bf00      	nop
 800b91c:	20026eae 	.word	0x20026eae

0800b920 <_ZN8touchgfx3HAL10initializeEv>:
 800b920:	b510      	push	{r4, lr}
 800b922:	4604      	mov	r4, r0
 800b924:	f7fd fc48 	bl	80091b8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800b928:	6860      	ldr	r0, [r4, #4]
 800b92a:	6803      	ldr	r3, [r0, #0]
 800b92c:	68db      	ldr	r3, [r3, #12]
 800b92e:	4798      	blx	r3
 800b930:	68e0      	ldr	r0, [r4, #12]
 800b932:	6803      	ldr	r3, [r0, #0]
 800b934:	689b      	ldr	r3, [r3, #8]
 800b936:	4798      	blx	r3
 800b938:	6823      	ldr	r3, [r4, #0]
 800b93a:	4620      	mov	r0, r4
 800b93c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b93e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b942:	4718      	bx	r3

0800b944 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800b944:	b508      	push	{r3, lr}
 800b946:	290c      	cmp	r1, #12
 800b948:	d817      	bhi.n	800b97a <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800b94a:	e8df f001 	tbb	[pc, r1]
 800b94e:	090b      	.short	0x090b
 800b950:	0d0d0d07 	.word	0x0d0d0d07
 800b954:	1414140d 	.word	0x1414140d
 800b958:	1414      	.short	0x1414
 800b95a:	0d          	.byte	0x0d
 800b95b:	00          	.byte	0x00
 800b95c:	2020      	movs	r0, #32
 800b95e:	bd08      	pop	{r3, pc}
 800b960:	2018      	movs	r0, #24
 800b962:	e7fc      	b.n	800b95e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800b964:	2010      	movs	r0, #16
 800b966:	e7fa      	b.n	800b95e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800b968:	4b05      	ldr	r3, [pc, #20]	; (800b980 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800b96a:	4a06      	ldr	r2, [pc, #24]	; (800b984 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800b96c:	4806      	ldr	r0, [pc, #24]	; (800b988 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800b96e:	f44f 710c 	mov.w	r1, #560	; 0x230
 800b972:	f00f fc17 	bl	801b1a4 <__assert_func>
 800b976:	2008      	movs	r0, #8
 800b978:	e7f1      	b.n	800b95e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800b97a:	2000      	movs	r0, #0
 800b97c:	e7ef      	b.n	800b95e <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800b97e:	bf00      	nop
 800b980:	0801db65 	.word	0x0801db65
 800b984:	0801def8 	.word	0x0801def8
 800b988:	0801da6c 	.word	0x0801da6c

0800b98c <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800b98c:	b570      	push	{r4, r5, r6, lr}
 800b98e:	460d      	mov	r5, r1
 800b990:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800b994:	4616      	mov	r6, r2
 800b996:	461c      	mov	r4, r3
 800b998:	f7ff ffd4 	bl	800b944 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800b99c:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800b9a0:	10c0      	asrs	r0, r0, #3
 800b9a2:	fb06 5101 	mla	r1, r6, r1, r5
 800b9a6:	fb00 4001 	mla	r0, r0, r1, r4
 800b9aa:	bd70      	pop	{r4, r5, r6, pc}

0800b9ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 800b9ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b9b0:	b08a      	sub	sp, #40	; 0x28
 800b9b2:	f04f 0c00 	mov.w	ip, #0
 800b9b6:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 800b9ba:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800b9be:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800b9c2:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800b9c6:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 800b9ca:	f8cd c020 	str.w	ip, [sp, #32]
 800b9ce:	f1b8 0f02 	cmp.w	r8, #2
 800b9d2:	4604      	mov	r4, r0
 800b9d4:	469a      	mov	sl, r3
 800b9d6:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800b9da:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b9de:	d030      	beq.n	800ba42 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 800b9e0:	2bff      	cmp	r3, #255	; 0xff
 800b9e2:	d12c      	bne.n	800ba3e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 800b9e4:	4560      	cmp	r0, ip
 800b9e6:	bf14      	ite	ne
 800b9e8:	2004      	movne	r0, #4
 800b9ea:	2001      	moveq	r0, #1
 800b9ec:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800b9f0:	9204      	str	r2, [sp, #16]
 800b9f2:	4620      	mov	r0, r4
 800b9f4:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800b9f8:	f8ad 201c 	strh.w	r2, [sp, #28]
 800b9fc:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800ba00:	f8ad 6018 	strh.w	r6, [sp, #24]
 800ba04:	f8ad 501a 	strh.w	r5, [sp, #26]
 800ba08:	f7ff ff5e 	bl	800b8c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ba0c:	e9cd 9700 	strd	r9, r7, [sp]
 800ba10:	4603      	mov	r3, r0
 800ba12:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800ba16:	4651      	mov	r1, sl
 800ba18:	4620      	mov	r0, r4
 800ba1a:	f7ff ffb7 	bl	800b98c <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800ba1e:	f8ad 901e 	strh.w	r9, [sp, #30]
 800ba22:	9005      	str	r0, [sp, #20]
 800ba24:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 800ba28:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800ba2c:	b106      	cbz	r6, 800ba30 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 800ba2e:	b98d      	cbnz	r5, 800ba54 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 800ba30:	4b12      	ldr	r3, [pc, #72]	; (800ba7c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 800ba32:	4a13      	ldr	r2, [pc, #76]	; (800ba80 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800ba34:	f44f 71d8 	mov.w	r1, #432	; 0x1b0
 800ba38:	4812      	ldr	r0, [pc, #72]	; (800ba84 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 800ba3a:	f00f fbb3 	bl	801b1a4 <__assert_func>
 800ba3e:	2004      	movs	r0, #4
 800ba40:	e7d4      	b.n	800b9ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800ba42:	2bff      	cmp	r3, #255	; 0xff
 800ba44:	d104      	bne.n	800ba50 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 800ba46:	2800      	cmp	r0, #0
 800ba48:	bf14      	ite	ne
 800ba4a:	2040      	movne	r0, #64	; 0x40
 800ba4c:	2020      	moveq	r0, #32
 800ba4e:	e7cd      	b.n	800b9ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800ba50:	2040      	movs	r0, #64	; 0x40
 800ba52:	e7cb      	b.n	800b9ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800ba54:	6823      	ldr	r3, [r4, #0]
 800ba56:	9d02      	ldr	r5, [sp, #8]
 800ba58:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ba5a:	4620      	mov	r0, r4
 800ba5c:	4798      	blx	r3
 800ba5e:	4228      	tst	r0, r5
 800ba60:	d104      	bne.n	800ba6c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 800ba62:	4b09      	ldr	r3, [pc, #36]	; (800ba88 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800ba64:	4a06      	ldr	r2, [pc, #24]	; (800ba80 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800ba66:	f240 11b1 	movw	r1, #433	; 0x1b1
 800ba6a:	e7e5      	b.n	800ba38 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 800ba6c:	6860      	ldr	r0, [r4, #4]
 800ba6e:	6803      	ldr	r3, [r0, #0]
 800ba70:	a902      	add	r1, sp, #8
 800ba72:	685b      	ldr	r3, [r3, #4]
 800ba74:	4798      	blx	r3
 800ba76:	b00a      	add	sp, #40	; 0x28
 800ba78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ba7c:	0801dae8 	.word	0x0801dae8
 800ba80:	0801dd9a 	.word	0x0801dd9a
 800ba84:	0801da6c 	.word	0x0801da6c
 800ba88:	0801db20 	.word	0x0801db20

0800ba8c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 800ba8c:	b510      	push	{r4, lr}
 800ba8e:	b08a      	sub	sp, #40	; 0x28
 800ba90:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 800ba94:	9408      	str	r4, [sp, #32]
 800ba96:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 800ba9a:	9407      	str	r4, [sp, #28]
 800ba9c:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 800baa0:	9406      	str	r4, [sp, #24]
 800baa2:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 800baa6:	9405      	str	r4, [sp, #20]
 800baa8:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 800baac:	9404      	str	r4, [sp, #16]
 800baae:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 800bab2:	9403      	str	r4, [sp, #12]
 800bab4:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 800bab8:	9402      	str	r4, [sp, #8]
 800baba:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800babe:	e9cd 3400 	strd	r3, r4, [sp]
 800bac2:	4613      	mov	r3, r2
 800bac4:	2200      	movs	r2, #0
 800bac6:	f7ff ff71 	bl	800b9ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800baca:	b00a      	add	sp, #40	; 0x28
 800bacc:	bd10      	pop	{r4, pc}
	...

0800bad0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 800bad0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bad2:	b08b      	sub	sp, #44	; 0x2c
 800bad4:	4616      	mov	r6, r2
 800bad6:	460d      	mov	r5, r1
 800bad8:	461f      	mov	r7, r3
 800bada:	4604      	mov	r4, r0
 800badc:	f7fa fde8 	bl	80066b0 <_ZN8touchgfx3HAL3lcdEv>
 800bae0:	6803      	ldr	r3, [r0, #0]
 800bae2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bae4:	4798      	blx	r3
 800bae6:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800baea:	4b0d      	ldr	r3, [pc, #52]	; (800bb20 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 800baec:	881b      	ldrh	r3, [r3, #0]
 800baee:	9306      	str	r3, [sp, #24]
 800baf0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800baf4:	9305      	str	r3, [sp, #20]
 800baf6:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800bafa:	9304      	str	r3, [sp, #16]
 800bafc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800bb00:	9303      	str	r3, [sp, #12]
 800bb02:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800bb06:	9302      	str	r3, [sp, #8]
 800bb08:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800bb0c:	2200      	movs	r2, #0
 800bb0e:	e9cd 7300 	strd	r7, r3, [sp]
 800bb12:	4629      	mov	r1, r5
 800bb14:	4633      	mov	r3, r6
 800bb16:	4620      	mov	r0, r4
 800bb18:	f7ff ff48 	bl	800b9ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800bb1c:	b00b      	add	sp, #44	; 0x2c
 800bb1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bb20:	20026eaa 	.word	0x20026eaa

0800bb24 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 800bb24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bb28:	461f      	mov	r7, r3
 800bb2a:	4b14      	ldr	r3, [pc, #80]	; (800bb7c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 800bb2c:	b08a      	sub	sp, #40	; 0x28
 800bb2e:	4616      	mov	r6, r2
 800bb30:	f8b3 8000 	ldrh.w	r8, [r3]
 800bb34:	460d      	mov	r5, r1
 800bb36:	4604      	mov	r4, r0
 800bb38:	f7fa fdba 	bl	80066b0 <_ZN8touchgfx3HAL3lcdEv>
 800bb3c:	6803      	ldr	r3, [r0, #0]
 800bb3e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bb40:	4798      	blx	r3
 800bb42:	2302      	movs	r3, #2
 800bb44:	e9cd 8306 	strd	r8, r3, [sp, #24]
 800bb48:	2301      	movs	r3, #1
 800bb4a:	9305      	str	r3, [sp, #20]
 800bb4c:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800bb50:	9304      	str	r3, [sp, #16]
 800bb52:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800bb56:	9303      	str	r3, [sp, #12]
 800bb58:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800bb5c:	9302      	str	r3, [sp, #8]
 800bb5e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800bb62:	9008      	str	r0, [sp, #32]
 800bb64:	e9cd 7300 	strd	r7, r3, [sp]
 800bb68:	2200      	movs	r2, #0
 800bb6a:	4633      	mov	r3, r6
 800bb6c:	4629      	mov	r1, r5
 800bb6e:	4620      	mov	r0, r4
 800bb70:	f7ff ff1c 	bl	800b9ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800bb74:	b00a      	add	sp, #40	; 0x28
 800bb76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bb7a:	bf00      	nop
 800bb7c:	20026eaa 	.word	0x20026eaa

0800bb80 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800bb80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bb84:	b08b      	sub	sp, #44	; 0x2c
 800bb86:	469b      	mov	fp, r3
 800bb88:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800bb8c:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800bb90:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800bb94:	2fff      	cmp	r7, #255	; 0xff
 800bb96:	bf14      	ite	ne
 800bb98:	2308      	movne	r3, #8
 800bb9a:	2302      	moveq	r3, #2
 800bb9c:	2600      	movs	r6, #0
 800bb9e:	4604      	mov	r4, r0
 800bba0:	4689      	mov	r9, r1
 800bba2:	4692      	mov	sl, r2
 800bba4:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800bba8:	9608      	str	r6, [sp, #32]
 800bbaa:	f7ff fe8d 	bl	800b8c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bbae:	e9cd 8500 	strd	r8, r5, [sp]
 800bbb2:	4603      	mov	r3, r0
 800bbb4:	465a      	mov	r2, fp
 800bbb6:	4651      	mov	r1, sl
 800bbb8:	4620      	mov	r0, r4
 800bbba:	f7ff fee7 	bl	800b98c <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800bbbe:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800bbc2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bbc6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800bbca:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bbce:	6823      	ldr	r3, [r4, #0]
 800bbd0:	9005      	str	r0, [sp, #20]
 800bbd2:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800bbd6:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800bbda:	f8ad 601c 	strh.w	r6, [sp, #28]
 800bbde:	f8ad 801e 	strh.w	r8, [sp, #30]
 800bbe2:	f8cd 9020 	str.w	r9, [sp, #32]
 800bbe6:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800bbea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bbec:	9d02      	ldr	r5, [sp, #8]
 800bbee:	4620      	mov	r0, r4
 800bbf0:	4798      	blx	r3
 800bbf2:	4228      	tst	r0, r5
 800bbf4:	d106      	bne.n	800bc04 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 800bbf6:	4b07      	ldr	r3, [pc, #28]	; (800bc14 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 800bbf8:	4a07      	ldr	r2, [pc, #28]	; (800bc18 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800bbfa:	4808      	ldr	r0, [pc, #32]	; (800bc1c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800bbfc:	f44f 71f4 	mov.w	r1, #488	; 0x1e8
 800bc00:	f00f fad0 	bl	801b1a4 <__assert_func>
 800bc04:	6860      	ldr	r0, [r4, #4]
 800bc06:	6803      	ldr	r3, [r0, #0]
 800bc08:	a902      	add	r1, sp, #8
 800bc0a:	685b      	ldr	r3, [r3, #4]
 800bc0c:	4798      	blx	r3
 800bc0e:	b00b      	add	sp, #44	; 0x2c
 800bc10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bc14:	0801db20 	.word	0x0801db20
 800bc18:	0801de63 	.word	0x0801de63
 800bc1c:	0801da6c 	.word	0x0801da6c

0800bc20 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800bc20:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800bc24:	461f      	mov	r7, r3
 800bc26:	4b0b      	ldr	r3, [pc, #44]	; (800bc54 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800bc28:	460d      	mov	r5, r1
 800bc2a:	f8b3 8000 	ldrh.w	r8, [r3]
 800bc2e:	4616      	mov	r6, r2
 800bc30:	4604      	mov	r4, r0
 800bc32:	f7fa fd3d 	bl	80066b0 <_ZN8touchgfx3HAL3lcdEv>
 800bc36:	6803      	ldr	r3, [r0, #0]
 800bc38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bc3a:	4798      	blx	r3
 800bc3c:	463b      	mov	r3, r7
 800bc3e:	e9cd 8000 	strd	r8, r0, [sp]
 800bc42:	4632      	mov	r2, r6
 800bc44:	4629      	mov	r1, r5
 800bc46:	4620      	mov	r0, r4
 800bc48:	f7ff fea0 	bl	800b98c <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800bc4c:	b002      	add	sp, #8
 800bc4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bc52:	bf00      	nop
 800bc54:	20026eaa 	.word	0x20026eaa

0800bc58 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 800bc58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bc5c:	b088      	sub	sp, #32
 800bc5e:	4698      	mov	r8, r3
 800bc60:	2300      	movs	r3, #0
 800bc62:	9306      	str	r3, [sp, #24]
 800bc64:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800bc68:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800bc6c:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800bc70:	f8ad 6010 	strh.w	r6, [sp, #16]
 800bc74:	e9cd 3100 	strd	r3, r1, [sp]
 800bc78:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800bc7c:	f8ad 3014 	strh.w	r3, [sp, #20]
 800bc80:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800bc84:	f88d 301c 	strb.w	r3, [sp, #28]
 800bc88:	4617      	mov	r7, r2
 800bc8a:	4604      	mov	r4, r0
 800bc8c:	f8ad 5012 	strh.w	r5, [sp, #18]
 800bc90:	f7ff fe1a 	bl	800b8c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bc94:	4642      	mov	r2, r8
 800bc96:	4603      	mov	r3, r0
 800bc98:	4639      	mov	r1, r7
 800bc9a:	4620      	mov	r0, r4
 800bc9c:	f7ff ffc0 	bl	800bc20 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bca0:	4b16      	ldr	r3, [pc, #88]	; (800bcfc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800bca2:	9003      	str	r0, [sp, #12]
 800bca4:	881b      	ldrh	r3, [r3, #0]
 800bca6:	f8ad 3016 	strh.w	r3, [sp, #22]
 800bcaa:	f7fa fd01 	bl	80066b0 <_ZN8touchgfx3HAL3lcdEv>
 800bcae:	6803      	ldr	r3, [r0, #0]
 800bcb0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bcb2:	4798      	blx	r3
 800bcb4:	f88d 001e 	strb.w	r0, [sp, #30]
 800bcb8:	f88d 001d 	strb.w	r0, [sp, #29]
 800bcbc:	b106      	cbz	r6, 800bcc0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800bcbe:	b935      	cbnz	r5, 800bcce <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800bcc0:	4b0f      	ldr	r3, [pc, #60]	; (800bd00 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800bcc2:	4a10      	ldr	r2, [pc, #64]	; (800bd04 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800bcc4:	f240 11cd 	movw	r1, #461	; 0x1cd
 800bcc8:	480f      	ldr	r0, [pc, #60]	; (800bd08 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800bcca:	f00f fa6b 	bl	801b1a4 <__assert_func>
 800bcce:	6823      	ldr	r3, [r4, #0]
 800bcd0:	9d00      	ldr	r5, [sp, #0]
 800bcd2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bcd4:	4620      	mov	r0, r4
 800bcd6:	4798      	blx	r3
 800bcd8:	4228      	tst	r0, r5
 800bcda:	d104      	bne.n	800bce6 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800bcdc:	4b0b      	ldr	r3, [pc, #44]	; (800bd0c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800bcde:	4a09      	ldr	r2, [pc, #36]	; (800bd04 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800bce0:	f44f 71e7 	mov.w	r1, #462	; 0x1ce
 800bce4:	e7f0      	b.n	800bcc8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800bce6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800bce8:	6860      	ldr	r0, [r4, #4]
 800bcea:	9306      	str	r3, [sp, #24]
 800bcec:	6803      	ldr	r3, [r0, #0]
 800bcee:	4669      	mov	r1, sp
 800bcf0:	685b      	ldr	r3, [r3, #4]
 800bcf2:	4798      	blx	r3
 800bcf4:	b008      	add	sp, #32
 800bcf6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bcfa:	bf00      	nop
 800bcfc:	20026eaa 	.word	0x20026eaa
 800bd00:	0801dae8 	.word	0x0801dae8
 800bd04:	0801dc4c 	.word	0x0801dc4c
 800bd08:	0801da6c 	.word	0x0801da6c
 800bd0c:	0801db20 	.word	0x0801db20

0800bd10 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800bd10:	b570      	push	{r4, r5, r6, lr}
 800bd12:	b08a      	sub	sp, #40	; 0x28
 800bd14:	466b      	mov	r3, sp
 800bd16:	e883 0006 	stmia.w	r3, {r1, r2}
 800bd1a:	4b20      	ldr	r3, [pc, #128]	; (800bd9c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800bd1c:	781b      	ldrb	r3, [r3, #0]
 800bd1e:	4604      	mov	r4, r0
 800bd20:	b933      	cbnz	r3, 800bd30 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800bd22:	4b1f      	ldr	r3, [pc, #124]	; (800bda0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800bd24:	4a1f      	ldr	r2, [pc, #124]	; (800bda4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800bd26:	4820      	ldr	r0, [pc, #128]	; (800bda8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800bd28:	f240 11f9 	movw	r1, #505	; 0x1f9
 800bd2c:	f00f fa3a 	bl	801b1a4 <__assert_func>
 800bd30:	2300      	movs	r3, #0
 800bd32:	9308      	str	r3, [sp, #32]
 800bd34:	2301      	movs	r3, #1
 800bd36:	9302      	str	r3, [sp, #8]
 800bd38:	6803      	ldr	r3, [r0, #0]
 800bd3a:	f8bd 5000 	ldrh.w	r5, [sp]
 800bd3e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bd40:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800bd44:	4798      	blx	r3
 800bd46:	4632      	mov	r2, r6
 800bd48:	4629      	mov	r1, r5
 800bd4a:	4603      	mov	r3, r0
 800bd4c:	4620      	mov	r0, r4
 800bd4e:	f7ff ff67 	bl	800bc20 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bd52:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800bd54:	9305      	str	r3, [sp, #20]
 800bd56:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800bd5a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bd5e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800bd62:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bd66:	4b11      	ldr	r3, [pc, #68]	; (800bdac <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800bd68:	9003      	str	r0, [sp, #12]
 800bd6a:	881b      	ldrh	r3, [r3, #0]
 800bd6c:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bd70:	f8ad 301e 	strh.w	r3, [sp, #30]
 800bd74:	f7fa fc9c 	bl	80066b0 <_ZN8touchgfx3HAL3lcdEv>
 800bd78:	6803      	ldr	r3, [r0, #0]
 800bd7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bd7c:	4798      	blx	r3
 800bd7e:	23ff      	movs	r3, #255	; 0xff
 800bd80:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800bd84:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800bd88:	6860      	ldr	r0, [r4, #4]
 800bd8a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800bd8e:	6803      	ldr	r3, [r0, #0]
 800bd90:	a902      	add	r1, sp, #8
 800bd92:	685b      	ldr	r3, [r3, #4]
 800bd94:	4798      	blx	r3
 800bd96:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800bd98:	b00a      	add	sp, #40	; 0x28
 800bd9a:	bd70      	pop	{r4, r5, r6, pc}
 800bd9c:	20026eaf 	.word	0x20026eaf
 800bda0:	0801d9b9 	.word	0x0801d9b9
 800bda4:	0801dcf0 	.word	0x0801dcf0
 800bda8:	0801da6c 	.word	0x0801da6c
 800bdac:	20026eaa 	.word	0x20026eaa

0800bdb0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800bdb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bdb2:	b08b      	sub	sp, #44	; 0x2c
 800bdb4:	466d      	mov	r5, sp
 800bdb6:	e885 0006 	stmia.w	r5, {r1, r2}
 800bdba:	461d      	mov	r5, r3
 800bdbc:	2300      	movs	r3, #0
 800bdbe:	9308      	str	r3, [sp, #32]
 800bdc0:	2301      	movs	r3, #1
 800bdc2:	9302      	str	r3, [sp, #8]
 800bdc4:	6803      	ldr	r3, [r0, #0]
 800bdc6:	f8bd 6000 	ldrh.w	r6, [sp]
 800bdca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bdcc:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800bdd0:	4604      	mov	r4, r0
 800bdd2:	4798      	blx	r3
 800bdd4:	463a      	mov	r2, r7
 800bdd6:	4631      	mov	r1, r6
 800bdd8:	4603      	mov	r3, r0
 800bdda:	4620      	mov	r0, r4
 800bddc:	f7ff ff20 	bl	800bc20 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bde0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800bde4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800bde8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800bdec:	f8ad 301a 	strh.w	r3, [sp, #26]
 800bdf0:	4b0e      	ldr	r3, [pc, #56]	; (800be2c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800bdf2:	9003      	str	r0, [sp, #12]
 800bdf4:	881b      	ldrh	r3, [r3, #0]
 800bdf6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800bdfa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800bdfc:	f8ad 301e 	strh.w	r3, [sp, #30]
 800be00:	9505      	str	r5, [sp, #20]
 800be02:	f7fa fc55 	bl	80066b0 <_ZN8touchgfx3HAL3lcdEv>
 800be06:	6803      	ldr	r3, [r0, #0]
 800be08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800be0a:	4798      	blx	r3
 800be0c:	23ff      	movs	r3, #255	; 0xff
 800be0e:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800be12:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800be16:	6860      	ldr	r0, [r4, #4]
 800be18:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800be1c:	6803      	ldr	r3, [r0, #0]
 800be1e:	a902      	add	r1, sp, #8
 800be20:	685b      	ldr	r3, [r3, #4]
 800be22:	4798      	blx	r3
 800be24:	4628      	mov	r0, r5
 800be26:	b00b      	add	sp, #44	; 0x2c
 800be28:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800be2a:	bf00      	nop
 800be2c:	20026eaa 	.word	0x20026eaa

0800be30 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800be30:	b570      	push	{r4, r5, r6, lr}
 800be32:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800be36:	4604      	mov	r4, r0
 800be38:	b19b      	cbz	r3, 800be62 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800be3a:	2002      	movs	r0, #2
 800be3c:	f7fc ff48 	bl	8008cd0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800be40:	2300      	movs	r3, #0
 800be42:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800be46:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800be4a:	6823      	ldr	r3, [r4, #0]
 800be4c:	4620      	mov	r0, r4
 800be4e:	f8d3 509c 	ldr.w	r5, [r3, #156]	; 0x9c
 800be52:	f7ff fd39 	bl	800b8c8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800be56:	462b      	mov	r3, r5
 800be58:	4601      	mov	r1, r0
 800be5a:	4620      	mov	r0, r4
 800be5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800be60:	4718      	bx	r3
 800be62:	bd70      	pop	{r4, r5, r6, pc}

0800be64 <_ZN8touchgfx13DMA_Interface10initializeEv>:
 800be64:	4770      	bx	lr

0800be66 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800be66:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800be6a:	1a13      	subs	r3, r2, r0
 800be6c:	4258      	negs	r0, r3
 800be6e:	4158      	adcs	r0, r3
 800be70:	4770      	bx	lr

0800be72 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800be72:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800be76:	1a9b      	subs	r3, r3, r2
 800be78:	2b00      	cmp	r3, #0
 800be7a:	bfdc      	itt	le
 800be7c:	6882      	ldrle	r2, [r0, #8]
 800be7e:	189b      	addle	r3, r3, r2
 800be80:	2b01      	cmp	r3, #1
 800be82:	bfcc      	ite	gt
 800be84:	2000      	movgt	r0, #0
 800be86:	2001      	movle	r0, #1
 800be88:	4770      	bx	lr

0800be8a <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800be8a:	6902      	ldr	r2, [r0, #16]
 800be8c:	6840      	ldr	r0, [r0, #4]
 800be8e:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800be92:	4770      	bx	lr

0800be94 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800be94:	6803      	ldr	r3, [r0, #0]
 800be96:	691b      	ldr	r3, [r3, #16]
 800be98:	4718      	bx	r3

0800be9a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800be9a:	4770      	bx	lr

0800be9c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800be9c:	4770      	bx	lr
	...

0800bea0 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800bea0:	b570      	push	{r4, r5, r6, lr}
 800bea2:	2301      	movs	r3, #1
 800bea4:	7203      	strb	r3, [r0, #8]
 800bea6:	4604      	mov	r4, r0
 800bea8:	6840      	ldr	r0, [r0, #4]
 800beaa:	6803      	ldr	r3, [r0, #0]
 800beac:	699b      	ldr	r3, [r3, #24]
 800beae:	4798      	blx	r3
 800beb0:	6803      	ldr	r3, [r0, #0]
 800beb2:	2b08      	cmp	r3, #8
 800beb4:	4605      	mov	r5, r0
 800beb6:	d01e      	beq.n	800bef6 <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 800beb8:	d80b      	bhi.n	800bed2 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800beba:	2b02      	cmp	r3, #2
 800bebc:	d027      	beq.n	800bf0e <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800bebe:	2b04      	cmp	r3, #4
 800bec0:	d011      	beq.n	800bee6 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800bec2:	2b01      	cmp	r3, #1
 800bec4:	d028      	beq.n	800bf18 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bec6:	4b17      	ldr	r3, [pc, #92]	; (800bf24 <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 800bec8:	4a17      	ldr	r2, [pc, #92]	; (800bf28 <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 800beca:	4818      	ldr	r0, [pc, #96]	; (800bf2c <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 800becc:	218b      	movs	r1, #139	; 0x8b
 800bece:	f00f f969 	bl	801b1a4 <__assert_func>
 800bed2:	2b40      	cmp	r3, #64	; 0x40
 800bed4:	d020      	beq.n	800bf18 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bed6:	d801      	bhi.n	800bedc <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800bed8:	2b20      	cmp	r3, #32
 800beda:	e7f3      	b.n	800bec4 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800bedc:	2b80      	cmp	r3, #128	; 0x80
 800bede:	d01b      	beq.n	800bf18 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bee0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800bee4:	e7ee      	b.n	800bec4 <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800bee6:	6823      	ldr	r3, [r4, #0]
 800bee8:	7f01      	ldrb	r1, [r0, #28]
 800beea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800beec:	4620      	mov	r0, r4
 800beee:	4798      	blx	r3
 800bef0:	6823      	ldr	r3, [r4, #0]
 800bef2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bef4:	e006      	b.n	800bf04 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800bef6:	6823      	ldr	r3, [r4, #0]
 800bef8:	7f01      	ldrb	r1, [r0, #28]
 800befa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800befc:	4620      	mov	r0, r4
 800befe:	4798      	blx	r3
 800bf00:	6823      	ldr	r3, [r4, #0]
 800bf02:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bf04:	4629      	mov	r1, r5
 800bf06:	4620      	mov	r0, r4
 800bf08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bf0c:	4718      	bx	r3
 800bf0e:	6823      	ldr	r3, [r4, #0]
 800bf10:	4620      	mov	r0, r4
 800bf12:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bf14:	4798      	blx	r3
 800bf16:	e7f3      	b.n	800bf00 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 800bf18:	6823      	ldr	r3, [r4, #0]
 800bf1a:	4620      	mov	r0, r4
 800bf1c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bf1e:	4798      	blx	r3
 800bf20:	e7e6      	b.n	800bef0 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 800bf22:	bf00      	nop
 800bf24:	0801df41 	.word	0x0801df41
 800bf28:	0801e050 	.word	0x0801e050
 800bf2c:	0801df66 	.word	0x0801df66

0800bf30 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800bf30:	b570      	push	{r4, r5, r6, lr}
 800bf32:	4604      	mov	r4, r0
 800bf34:	460e      	mov	r6, r1
 800bf36:	6860      	ldr	r0, [r4, #4]
 800bf38:	6803      	ldr	r3, [r0, #0]
 800bf3a:	685b      	ldr	r3, [r3, #4]
 800bf3c:	4798      	blx	r3
 800bf3e:	2800      	cmp	r0, #0
 800bf40:	d1f9      	bne.n	800bf36 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800bf42:	4d0b      	ldr	r5, [pc, #44]	; (800bf70 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x40>)
 800bf44:	6828      	ldr	r0, [r5, #0]
 800bf46:	6803      	ldr	r3, [r0, #0]
 800bf48:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800bf4a:	4798      	blx	r3
 800bf4c:	f7fd f968 	bl	8009220 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800bf50:	6860      	ldr	r0, [r4, #4]
 800bf52:	6803      	ldr	r3, [r0, #0]
 800bf54:	4631      	mov	r1, r6
 800bf56:	689b      	ldr	r3, [r3, #8]
 800bf58:	4798      	blx	r3
 800bf5a:	6823      	ldr	r3, [r4, #0]
 800bf5c:	4620      	mov	r0, r4
 800bf5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bf60:	4798      	blx	r3
 800bf62:	6828      	ldr	r0, [r5, #0]
 800bf64:	6803      	ldr	r3, [r0, #0]
 800bf66:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bf6a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800bf6c:	4718      	bx	r3
 800bf6e:	bf00      	nop
 800bf70:	20026eb0 	.word	0x20026eb0

0800bf74 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800bf74:	b508      	push	{r3, lr}
 800bf76:	f7fd f931 	bl	80091dc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bf7a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bf7e:	f7fd b943 	b.w	8009208 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bf82 <_ZN8touchgfx13DMA_Interface5startEv>:
 800bf82:	b510      	push	{r4, lr}
 800bf84:	4604      	mov	r4, r0
 800bf86:	6840      	ldr	r0, [r0, #4]
 800bf88:	6803      	ldr	r3, [r0, #0]
 800bf8a:	681b      	ldr	r3, [r3, #0]
 800bf8c:	4798      	blx	r3
 800bf8e:	b948      	cbnz	r0, 800bfa4 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bf90:	7a63      	ldrb	r3, [r4, #9]
 800bf92:	b13b      	cbz	r3, 800bfa4 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bf94:	7a23      	ldrb	r3, [r4, #8]
 800bf96:	b92b      	cbnz	r3, 800bfa4 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bf98:	6823      	ldr	r3, [r4, #0]
 800bf9a:	4620      	mov	r0, r4
 800bf9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bf9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bfa2:	4718      	bx	r3
 800bfa4:	bd10      	pop	{r4, pc}
	...

0800bfa8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800bfa8:	b510      	push	{r4, lr}
 800bfaa:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800bfae:	1b12      	subs	r2, r2, r4
 800bfb0:	2a00      	cmp	r2, #0
 800bfb2:	bfdc      	itt	le
 800bfb4:	6883      	ldrle	r3, [r0, #8]
 800bfb6:	18d2      	addle	r2, r2, r3
 800bfb8:	2a01      	cmp	r2, #1
 800bfba:	dd18      	ble.n	800bfee <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800bfbc:	6843      	ldr	r3, [r0, #4]
 800bfbe:	f101 021c 	add.w	r2, r1, #28
 800bfc2:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800bfc6:	f851 4b04 	ldr.w	r4, [r1], #4
 800bfca:	f843 4b04 	str.w	r4, [r3], #4
 800bfce:	4291      	cmp	r1, r2
 800bfd0:	d1f9      	bne.n	800bfc6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800bfd2:	880a      	ldrh	r2, [r1, #0]
 800bfd4:	801a      	strh	r2, [r3, #0]
 800bfd6:	788a      	ldrb	r2, [r1, #2]
 800bfd8:	709a      	strb	r2, [r3, #2]
 800bfda:	68c3      	ldr	r3, [r0, #12]
 800bfdc:	6882      	ldr	r2, [r0, #8]
 800bfde:	f3bf 8f5b 	dmb	ish
 800bfe2:	3301      	adds	r3, #1
 800bfe4:	429a      	cmp	r2, r3
 800bfe6:	bfd8      	it	le
 800bfe8:	1a9b      	suble	r3, r3, r2
 800bfea:	60c3      	str	r3, [r0, #12]
 800bfec:	bd10      	pop	{r4, pc}
 800bfee:	4b03      	ldr	r3, [pc, #12]	; (800bffc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800bff0:	4a03      	ldr	r2, [pc, #12]	; (800c000 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800bff2:	4804      	ldr	r0, [pc, #16]	; (800c004 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800bff4:	2139      	movs	r1, #57	; 0x39
 800bff6:	f00f f8d5 	bl	801b1a4 <__assert_func>
 800bffa:	bf00      	nop
 800bffc:	0801df8c 	.word	0x0801df8c
 800c000:	0801e080 	.word	0x0801e080
 800c004:	0801df66 	.word	0x0801df66

0800c008 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800c008:	b510      	push	{r4, lr}
 800c00a:	6803      	ldr	r3, [r0, #0]
 800c00c:	681b      	ldr	r3, [r3, #0]
 800c00e:	4604      	mov	r4, r0
 800c010:	4798      	blx	r3
 800c012:	b128      	cbz	r0, 800c020 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800c014:	4b07      	ldr	r3, [pc, #28]	; (800c034 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800c016:	4a08      	ldr	r2, [pc, #32]	; (800c038 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800c018:	4808      	ldr	r0, [pc, #32]	; (800c03c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800c01a:	213f      	movs	r1, #63	; 0x3f
 800c01c:	f00f f8c2 	bl	801b1a4 <__assert_func>
 800c020:	6923      	ldr	r3, [r4, #16]
 800c022:	68a2      	ldr	r2, [r4, #8]
 800c024:	f3bf 8f5b 	dmb	ish
 800c028:	3301      	adds	r3, #1
 800c02a:	429a      	cmp	r2, r3
 800c02c:	bfd8      	it	le
 800c02e:	1a9b      	suble	r3, r3, r2
 800c030:	6123      	str	r3, [r4, #16]
 800c032:	bd10      	pop	{r4, pc}
 800c034:	0801dfaf 	.word	0x0801dfaf
 800c038:	0801e0ce 	.word	0x0801e0ce
 800c03c:	0801df66 	.word	0x0801df66

0800c040 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800c040:	b570      	push	{r4, r5, r6, lr}
 800c042:	4604      	mov	r4, r0
 800c044:	6840      	ldr	r0, [r0, #4]
 800c046:	6803      	ldr	r3, [r0, #0]
 800c048:	681b      	ldr	r3, [r3, #0]
 800c04a:	4798      	blx	r3
 800c04c:	4605      	mov	r5, r0
 800c04e:	b930      	cbnz	r0, 800c05e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800c050:	7a23      	ldrb	r3, [r4, #8]
 800c052:	b123      	cbz	r3, 800c05e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800c054:	6860      	ldr	r0, [r4, #4]
 800c056:	6803      	ldr	r3, [r0, #0]
 800c058:	695b      	ldr	r3, [r3, #20]
 800c05a:	4798      	blx	r3
 800c05c:	7225      	strb	r5, [r4, #8]
 800c05e:	6860      	ldr	r0, [r4, #4]
 800c060:	6803      	ldr	r3, [r0, #0]
 800c062:	681b      	ldr	r3, [r3, #0]
 800c064:	4798      	blx	r3
 800c066:	b928      	cbnz	r0, 800c074 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800c068:	6823      	ldr	r3, [r4, #0]
 800c06a:	4620      	mov	r0, r4
 800c06c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c06e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c072:	4718      	bx	r3
 800c074:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c078:	f7fd b8de 	b.w	8009238 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800c07c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800c07c:	b510      	push	{r4, lr}
 800c07e:	4c04      	ldr	r4, [pc, #16]	; (800c090 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800c080:	6082      	str	r2, [r0, #8]
 800c082:	2200      	movs	r2, #0
 800c084:	e9c0 4100 	strd	r4, r1, [r0]
 800c088:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800c08c:	bd10      	pop	{r4, pc}
 800c08e:	bf00      	nop
 800c090:	0801e034 	.word	0x0801e034

0800c094 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800c094:	6840      	ldr	r0, [r0, #4]
 800c096:	6803      	ldr	r3, [r0, #0]
 800c098:	681b      	ldr	r3, [r3, #0]
 800c09a:	4718      	bx	r3

0800c09c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800c09c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800c0a0:	4770      	bx	lr

0800c0a2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800c0a2:	b570      	push	{r4, r5, r6, lr}
 800c0a4:	790b      	ldrb	r3, [r1, #4]
 800c0a6:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800c0aa:	2b00      	cmp	r3, #0
 800c0ac:	bf0c      	ite	eq
 800c0ae:	2301      	moveq	r3, #1
 800c0b0:	2300      	movne	r3, #0
 800c0b2:	4604      	mov	r4, r0
 800c0b4:	460e      	mov	r6, r1
 800c0b6:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800c0ba:	d110      	bne.n	800c0de <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800c0bc:	b185      	cbz	r5, 800c0e0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3e>
 800c0be:	7933      	ldrb	r3, [r6, #4]
 800c0c0:	2b01      	cmp	r3, #1
 800c0c2:	d113      	bne.n	800c0ec <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 800c0c4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c0c6:	b188      	cbz	r0, 800c0ec <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 800c0c8:	6803      	ldr	r3, [r0, #0]
 800c0ca:	68db      	ldr	r3, [r3, #12]
 800c0cc:	4798      	blx	r3
 800c0ce:	b168      	cbz	r0, 800c0ec <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 800c0d0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c0d2:	6803      	ldr	r3, [r0, #0]
 800c0d4:	4621      	mov	r1, r4
 800c0d6:	689b      	ldr	r3, [r3, #8]
 800c0d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c0dc:	4718      	bx	r3
 800c0de:	b12d      	cbz	r5, 800c0ec <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x4a>
 800c0e0:	6823      	ldr	r3, [r4, #0]
 800c0e2:	4620      	mov	r0, r4
 800c0e4:	695b      	ldr	r3, [r3, #20]
 800c0e6:	4798      	blx	r3
 800c0e8:	2d00      	cmp	r5, #0
 800c0ea:	d1e8      	bne.n	800c0be <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800c0ec:	bd70      	pop	{r4, r5, r6, pc}

0800c0ee <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800c0ee:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c0f2:	b133      	cbz	r3, 800c102 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800c0f4:	790b      	ldrb	r3, [r1, #4]
 800c0f6:	2b01      	cmp	r3, #1
 800c0f8:	bf01      	itttt	eq
 800c0fa:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800c0fc:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800c0fe:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800c100:	8603      	strheq	r3, [r0, #48]	; 0x30
 800c102:	f7ff bfce 	b.w	800c0a2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>
	...

0800c108 <_ZN8touchgfx12ToggleButtonC1Ev>:
 800c108:	2200      	movs	r2, #0
 800c10a:	2101      	movs	r1, #1
 800c10c:	8082      	strh	r2, [r0, #4]
 800c10e:	80c2      	strh	r2, [r0, #6]
 800c110:	8102      	strh	r2, [r0, #8]
 800c112:	8142      	strh	r2, [r0, #10]
 800c114:	8182      	strh	r2, [r0, #12]
 800c116:	81c2      	strh	r2, [r0, #14]
 800c118:	8202      	strh	r2, [r0, #16]
 800c11a:	8242      	strh	r2, [r0, #18]
 800c11c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c120:	61c2      	str	r2, [r0, #28]
 800c122:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c126:	6282      	str	r2, [r0, #40]	; 0x28
 800c128:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800c12c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800c130:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800c134:	4903      	ldr	r1, [pc, #12]	; (800c144 <_ZN8touchgfx12ToggleButtonC1Ev+0x3c>)
 800c136:	85c2      	strh	r2, [r0, #46]	; 0x2e
 800c138:	8602      	strh	r2, [r0, #48]	; 0x30
 800c13a:	f880 2032 	strb.w	r2, [r0, #50]	; 0x32
 800c13e:	6001      	str	r1, [r0, #0]
 800c140:	8682      	strh	r2, [r0, #52]	; 0x34
 800c142:	4770      	bx	lr
 800c144:	0801e174 	.word	0x0801e174

0800c148 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 800c148:	b570      	push	{r4, r5, r6, lr}
 800c14a:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800c14c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c150:	429a      	cmp	r2, r3
 800c152:	4604      	mov	r4, r0
 800c154:	d00c      	beq.n	800c170 <_ZN8touchgfx8TextArea13getTextHeightEv+0x28>
 800c156:	f850 3b26 	ldr.w	r3, [r0], #38
 800c15a:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 800c15c:	f7fb f9ca 	bl	80074f4 <_ZNK8touchgfx9TypedText7getTextEv>
 800c160:	2300      	movs	r3, #0
 800c162:	4601      	mov	r1, r0
 800c164:	46ac      	mov	ip, r5
 800c166:	4620      	mov	r0, r4
 800c168:	461a      	mov	r2, r3
 800c16a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c16e:	4760      	bx	ip
 800c170:	2000      	movs	r0, #0
 800c172:	bd70      	pop	{r4, r5, r6, pc}

0800c174 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800c174:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800c176:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800c178:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c17c:	429a      	cmp	r2, r3
 800c17e:	d016      	beq.n	800c1ae <_ZNK8touchgfx8TextArea12getTextWidthEv+0x3a>
 800c180:	f100 0426 	add.w	r4, r0, #38	; 0x26
 800c184:	4620      	mov	r0, r4
 800c186:	f7f9 ff79 	bl	800607c <_ZNK8touchgfx9TypedText7getFontEv>
 800c18a:	6803      	ldr	r3, [r0, #0]
 800c18c:	4605      	mov	r5, r0
 800c18e:	4620      	mov	r0, r4
 800c190:	69de      	ldr	r6, [r3, #28]
 800c192:	f7f9 ff8f 	bl	80060b4 <_ZNK8touchgfx9TypedText16getTextDirectionEv>
 800c196:	4607      	mov	r7, r0
 800c198:	4620      	mov	r0, r4
 800c19a:	f7fb f9ab 	bl	80074f4 <_ZNK8touchgfx9TypedText7getTextEv>
 800c19e:	2300      	movs	r3, #0
 800c1a0:	4602      	mov	r2, r0
 800c1a2:	9300      	str	r3, [sp, #0]
 800c1a4:	4639      	mov	r1, r7
 800c1a6:	4628      	mov	r0, r5
 800c1a8:	47b0      	blx	r6
 800c1aa:	b003      	add	sp, #12
 800c1ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c1ae:	2000      	movs	r0, #0
 800c1b0:	e7fb      	b.n	800c1aa <_ZNK8touchgfx8TextArea12getTextWidthEv+0x36>

0800c1b2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800c1b2:	b40e      	push	{r1, r2, r3}
 800c1b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c1b8:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800c1ba:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c1be:	429a      	cmp	r2, r3
 800c1c0:	b09b      	sub	sp, #108	; 0x6c
 800c1c2:	4604      	mov	r4, r0
 800c1c4:	d03f      	beq.n	800c246 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x94>
 800c1c6:	f100 0726 	add.w	r7, r0, #38	; 0x26
 800c1ca:	ab22      	add	r3, sp, #136	; 0x88
 800c1cc:	4638      	mov	r0, r7
 800c1ce:	9303      	str	r3, [sp, #12]
 800c1d0:	f7f9 ff54 	bl	800607c <_ZNK8touchgfx9TypedText7getFontEv>
 800c1d4:	6803      	ldr	r3, [r0, #0]
 800c1d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c1d8:	4680      	mov	r8, r0
 800c1da:	4798      	blx	r3
 800c1dc:	b205      	sxth	r5, r0
 800c1de:	4606      	mov	r6, r0
 800c1e0:	a804      	add	r0, sp, #16
 800c1e2:	f002 fd6b 	bl	800ecbc <_ZN8touchgfx12TextProviderC1Ev>
 800c1e6:	f8d8 3000 	ldr.w	r3, [r8]
 800c1ea:	4640      	mov	r0, r8
 800c1ec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c1ee:	4798      	blx	r3
 800c1f0:	9a03      	ldr	r2, [sp, #12]
 800c1f2:	9921      	ldr	r1, [sp, #132]	; 0x84
 800c1f4:	4603      	mov	r3, r0
 800c1f6:	a804      	add	r0, sp, #16
 800c1f8:	f002 fd7d 	bl	800ecf6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800c1fc:	4638      	mov	r0, r7
 800c1fe:	f7f9 ff59 	bl	80060b4 <_ZNK8touchgfx9TypedText16getTextDirectionEv>
 800c202:	4680      	mov	r8, r0
 800c204:	4638      	mov	r0, r7
 800c206:	f7f9 ff39 	bl	800607c <_ZNK8touchgfx9TypedText7getFontEv>
 800c20a:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c20e:	f894 1031 	ldrb.w	r1, [r4, #49]	; 0x31
 800c212:	9300      	str	r3, [sp, #0]
 800c214:	4642      	mov	r2, r8
 800c216:	4603      	mov	r3, r0
 800c218:	a804      	add	r0, sp, #16
 800c21a:	f000 fe1a 	bl	800ce52 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800c21e:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 800c222:	18a9      	adds	r1, r5, r2
 800c224:	2900      	cmp	r1, #0
 800c226:	b203      	sxth	r3, r0
 800c228:	dd0b      	ble.n	800c242 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x90>
 800c22a:	3b01      	subs	r3, #1
 800c22c:	fb13 f302 	smulbb	r3, r3, r2
 800c230:	fb16 3300 	smlabb	r3, r6, r0, r3
 800c234:	b21d      	sxth	r5, r3
 800c236:	4628      	mov	r0, r5
 800c238:	b01b      	add	sp, #108	; 0x6c
 800c23a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c23e:	b003      	add	sp, #12
 800c240:	4770      	bx	lr
 800c242:	2b00      	cmp	r3, #0
 800c244:	dcf7      	bgt.n	800c236 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x84>
 800c246:	2500      	movs	r5, #0
 800c248:	e7f5      	b.n	800c236 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x84>
	...

0800c24c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800c24c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c250:	8cc6      	ldrh	r6, [r0, #38]	; 0x26
 800c252:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c256:	429e      	cmp	r6, r3
 800c258:	b08d      	sub	sp, #52	; 0x34
 800c25a:	4604      	mov	r4, r0
 800c25c:	4688      	mov	r8, r1
 800c25e:	d04b      	beq.n	800c2f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xac>
 800c260:	f100 0526 	add.w	r5, r0, #38	; 0x26
 800c264:	4628      	mov	r0, r5
 800c266:	f7f9 ff09 	bl	800607c <_ZNK8touchgfx9TypedText7getFontEv>
 800c26a:	4607      	mov	r7, r0
 800c26c:	2800      	cmp	r0, #0
 800c26e:	d043      	beq.n	800c2f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xac>
 800c270:	4628      	mov	r0, r5
 800c272:	f7f9 ff37 	bl	80060e4 <_ZNK8touchgfx9TypedText11assertValidEv>
 800c276:	4b22      	ldr	r3, [pc, #136]	; (800c300 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xb4>)
 800c278:	f894 902e 	ldrb.w	r9, [r4, #46]	; 0x2e
 800c27c:	681b      	ldr	r3, [r3, #0]
 800c27e:	f9b4 a02c 	ldrsh.w	sl, [r4, #44]	; 0x2c
 800c282:	f894 b030 	ldrb.w	fp, [r4, #48]	; 0x30
 800c286:	eb03 0346 	add.w	r3, r3, r6, lsl #1
 800c28a:	4628      	mov	r0, r5
 800c28c:	785e      	ldrb	r6, [r3, #1]
 800c28e:	f7f9 ff11 	bl	80060b4 <_ZNK8touchgfx9TypedText16getTextDirectionEv>
 800c292:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c294:	9309      	str	r3, [sp, #36]	; 0x24
 800c296:	4b1b      	ldr	r3, [pc, #108]	; (800c304 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xb8>)
 800c298:	f894 2031 	ldrb.w	r2, [r4, #49]	; 0x31
 800c29c:	681b      	ldr	r3, [r3, #0]
 800c29e:	f88d 202c 	strb.w	r2, [sp, #44]	; 0x2c
 800c2a2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c2a6:	f894 102f 	ldrb.w	r1, [r4, #47]	; 0x2f
 800c2aa:	9707      	str	r7, [sp, #28]
 800c2ac:	f3c6 0601 	ubfx	r6, r6, #0, #2
 800c2b0:	f88d 902a 	strb.w	r9, [sp, #42]	; 0x2a
 800c2b4:	f88d 6020 	strb.w	r6, [sp, #32]
 800c2b8:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800c2bc:	f88d b022 	strb.w	fp, [sp, #34]	; 0x22
 800c2c0:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 800c2c4:	f88d 102b 	strb.w	r1, [sp, #43]	; 0x2b
 800c2c8:	b10a      	cbz	r2, 800c2ce <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x82>
 800c2ca:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800c2cc:	b906      	cbnz	r6, 800c2d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x84>
 800c2ce:	689e      	ldr	r6, [r3, #8]
 800c2d0:	af05      	add	r7, sp, #20
 800c2d2:	4621      	mov	r1, r4
 800c2d4:	4638      	mov	r0, r7
 800c2d6:	f001 feac 	bl	800e032 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c2da:	4628      	mov	r0, r5
 800c2dc:	f7fb f90a 	bl	80074f4 <_ZNK8touchgfx9TypedText7getTextEv>
 800c2e0:	2300      	movs	r3, #0
 800c2e2:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800c2e6:	ab07      	add	r3, sp, #28
 800c2e8:	9001      	str	r0, [sp, #4]
 800c2ea:	9300      	str	r3, [sp, #0]
 800c2ec:	e897 0006 	ldmia.w	r7, {r1, r2}
 800c2f0:	4643      	mov	r3, r8
 800c2f2:	4630      	mov	r0, r6
 800c2f4:	f000 fb78 	bl	800c9e8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c2f8:	b00d      	add	sp, #52	; 0x34
 800c2fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c2fe:	bf00      	nop
 800c300:	20026f20 	.word	0x20026f20
 800c304:	20026eb0 	.word	0x20026eb0

0800c308 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800c308:	b570      	push	{r4, r5, r6, lr}
 800c30a:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800c30c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c310:	429a      	cmp	r2, r3
 800c312:	4604      	mov	r4, r0
 800c314:	d021      	beq.n	800c35a <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x52>
 800c316:	6803      	ldr	r3, [r0, #0]
 800c318:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800c31a:	4798      	blx	r3
 800c31c:	6823      	ldr	r3, [r4, #0]
 800c31e:	4605      	mov	r5, r0
 800c320:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800c322:	4620      	mov	r0, r4
 800c324:	4798      	blx	r3
 800c326:	f894 3030 	ldrb.w	r3, [r4, #48]	; 0x30
 800c32a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800c32e:	6823      	ldr	r3, [r4, #0]
 800c330:	4606      	mov	r6, r0
 800c332:	b22d      	sxth	r5, r5
 800c334:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c336:	d109      	bne.n	800c34c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x44>
 800c338:	4629      	mov	r1, r5
 800c33a:	4620      	mov	r0, r4
 800c33c:	4798      	blx	r3
 800c33e:	6823      	ldr	r3, [r4, #0]
 800c340:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c342:	4631      	mov	r1, r6
 800c344:	4620      	mov	r0, r4
 800c346:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c34a:	4718      	bx	r3
 800c34c:	4601      	mov	r1, r0
 800c34e:	4620      	mov	r0, r4
 800c350:	4798      	blx	r3
 800c352:	6823      	ldr	r3, [r4, #0]
 800c354:	4629      	mov	r1, r5
 800c356:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c358:	e7f4      	b.n	800c344 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>
 800c35a:	bd70      	pop	{r4, r5, r6, pc}

0800c35c <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>:
 800c35c:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800c360:	84c1      	strh	r1, [r0, #38]	; 0x26
 800c362:	b922      	cbnz	r2, 800c36e <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x12>
 800c364:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800c368:	b90b      	cbnz	r3, 800c36e <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x12>
 800c36a:	f7ff bfcd 	b.w	800c308 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800c36e:	4770      	bx	lr

0800c370 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800c370:	b538      	push	{r3, r4, r5, lr}
 800c372:	880b      	ldrh	r3, [r1, #0]
 800c374:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800c376:	4605      	mov	r5, r0
 800c378:	8813      	ldrh	r3, [r2, #0]
 800c37a:	f825 3f30 	strh.w	r3, [r5, #48]!
 800c37e:	4604      	mov	r4, r0
 800c380:	4628      	mov	r0, r5
 800c382:	f003 fa57 	bl	800f834 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c386:	8120      	strh	r0, [r4, #8]
 800c388:	4628      	mov	r0, r5
 800c38a:	f003 fa8d 	bl	800f8a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c38e:	8160      	strh	r0, [r4, #10]
 800c390:	bd38      	pop	{r3, r4, r5, pc}

0800c392 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800c392:	b510      	push	{r4, lr}
 800c394:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800c398:	2bff      	cmp	r3, #255	; 0xff
 800c39a:	4604      	mov	r4, r0
 800c39c:	d006      	beq.n	800c3ac <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800c39e:	2300      	movs	r3, #0
 800c3a0:	8003      	strh	r3, [r0, #0]
 800c3a2:	8043      	strh	r3, [r0, #2]
 800c3a4:	8083      	strh	r3, [r0, #4]
 800c3a6:	80c3      	strh	r3, [r0, #6]
 800c3a8:	4620      	mov	r0, r4
 800c3aa:	bd10      	pop	{r4, pc}
 800c3ac:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800c3b0:	b11b      	cbz	r3, 800c3ba <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800c3b2:	3130      	adds	r1, #48	; 0x30
 800c3b4:	f003 fab2 	bl	800f91c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800c3b8:	e7f6      	b.n	800c3a8 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800c3ba:	312e      	adds	r1, #46	; 0x2e
 800c3bc:	e7fa      	b.n	800c3b4 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800c3c0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800c3c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c3c4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c3c8:	b08b      	sub	sp, #44	; 0x2c
 800c3ca:	4604      	mov	r4, r0
 800c3cc:	4689      	mov	r9, r1
 800c3ce:	2b00      	cmp	r3, #0
 800c3d0:	d043      	beq.n	800c45a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9a>
 800c3d2:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800c3d4:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c3d8:	a805      	add	r0, sp, #20
 800c3da:	f003 fa2b 	bl	800f834 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c3de:	4607      	mov	r7, r0
 800c3e0:	fa0f f880 	sxth.w	r8, r0
 800c3e4:	a805      	add	r0, sp, #20
 800c3e6:	f003 fa5f 	bl	800f8a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c3ea:	f9b9 6000 	ldrsh.w	r6, [r9]
 800c3ee:	f8b9 2004 	ldrh.w	r2, [r9, #4]
 800c3f2:	4432      	add	r2, r6
 800c3f4:	b292      	uxth	r2, r2
 800c3f6:	2300      	movs	r3, #0
 800c3f8:	fa0f fe82 	sxth.w	lr, r2
 800c3fc:	459e      	cmp	lr, r3
 800c3fe:	fa0f fc80 	sxth.w	ip, r0
 800c402:	9306      	str	r3, [sp, #24]
 800c404:	dd2b      	ble.n	800c45e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9e>
 800c406:	45b0      	cmp	r8, r6
 800c408:	dd29      	ble.n	800c45e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9e>
 800c40a:	f9b9 5002 	ldrsh.w	r5, [r9, #2]
 800c40e:	f8b9 3006 	ldrh.w	r3, [r9, #6]
 800c412:	442b      	add	r3, r5
 800c414:	b29b      	uxth	r3, r3
 800c416:	b219      	sxth	r1, r3
 800c418:	2900      	cmp	r1, #0
 800c41a:	dd20      	ble.n	800c45e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9e>
 800c41c:	45ac      	cmp	ip, r5
 800c41e:	dd1e      	ble.n	800c45e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9e>
 800c420:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800c424:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800c428:	45f0      	cmp	r8, lr
 800c42a:	bfb8      	it	lt
 800c42c:	463a      	movlt	r2, r7
 800c42e:	458c      	cmp	ip, r1
 800c430:	bfb8      	it	lt
 800c432:	4603      	movlt	r3, r0
 800c434:	1b92      	subs	r2, r2, r6
 800c436:	1b5b      	subs	r3, r3, r5
 800c438:	f8ad 201c 	strh.w	r2, [sp, #28]
 800c43c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c440:	f8ad 6018 	strh.w	r6, [sp, #24]
 800c444:	f8ad 501a 	strh.w	r5, [sp, #26]
 800c448:	4b1d      	ldr	r3, [pc, #116]	; (800c4c0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>)
 800c44a:	681b      	ldr	r3, [r3, #0]
 800c44c:	b953      	cbnz	r3, 800c464 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa4>
 800c44e:	4b1d      	ldr	r3, [pc, #116]	; (800c4c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x104>)
 800c450:	4a1d      	ldr	r2, [pc, #116]	; (800c4c8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 800c452:	481e      	ldr	r0, [pc, #120]	; (800c4cc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 800c454:	21b8      	movs	r1, #184	; 0xb8
 800c456:	f00e fea5 	bl	801b1a4 <__assert_func>
 800c45a:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800c45c:	e7ba      	b.n	800c3d4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800c45e:	2300      	movs	r3, #0
 800c460:	9307      	str	r3, [sp, #28]
 800c462:	e7f1      	b.n	800c448 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x88>
 800c464:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800c468:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c46c:	429a      	cmp	r2, r3
 800c46e:	d024      	beq.n	800c4ba <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xfa>
 800c470:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800c474:	b30b      	cbz	r3, 800c4ba <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xfa>
 800c476:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800c47a:	b1f3      	cbz	r3, 800c4ba <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xfa>
 800c47c:	2300      	movs	r3, #0
 800c47e:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800c482:	6823      	ldr	r3, [r4, #0]
 800c484:	a908      	add	r1, sp, #32
 800c486:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c488:	4620      	mov	r0, r4
 800c48a:	4798      	blx	r3
 800c48c:	4b10      	ldr	r3, [pc, #64]	; (800c4d0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 800c48e:	681b      	ldr	r3, [r3, #0]
 800c490:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c494:	b10a      	cbz	r2, 800c49a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800c496:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800c498:	b900      	cbnz	r0, 800c49c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xdc>
 800c49a:	6898      	ldr	r0, [r3, #8]
 800c49c:	6801      	ldr	r1, [r0, #0]
 800c49e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800c4a2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800c4a6:	2501      	movs	r5, #1
 800c4a8:	9502      	str	r5, [sp, #8]
 800c4aa:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800c4ae:	9401      	str	r4, [sp, #4]
 800c4b0:	ac06      	add	r4, sp, #24
 800c4b2:	9400      	str	r4, [sp, #0]
 800c4b4:	68cc      	ldr	r4, [r1, #12]
 800c4b6:	a905      	add	r1, sp, #20
 800c4b8:	47a0      	blx	r4
 800c4ba:	b00b      	add	sp, #44	; 0x2c
 800c4bc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c4c0:	20026f58 	.word	0x20026f58
 800c4c4:	0801e258 	.word	0x0801e258
 800c4c8:	0801e32c 	.word	0x0801e32c
 800c4cc:	0801e294 	.word	0x0801e294
 800c4d0:	20026eb0 	.word	0x20026eb0

0800c4d4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>:
 800c4d4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800c4d8:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800c4da:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c4de:	429a      	cmp	r2, r3
 800c4e0:	4604      	mov	r4, r0
 800c4e2:	d018      	beq.n	800c516 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x42>
 800c4e4:	f100 0526 	add.w	r5, r0, #38	; 0x26
 800c4e8:	4628      	mov	r0, r5
 800c4ea:	f7f9 fdc7 	bl	800607c <_ZNK8touchgfx9TypedText7getFontEv>
 800c4ee:	6803      	ldr	r3, [r0, #0]
 800c4f0:	4606      	mov	r6, r0
 800c4f2:	4628      	mov	r0, r5
 800c4f4:	69df      	ldr	r7, [r3, #28]
 800c4f6:	f7f9 fddd 	bl	80060b4 <_ZNK8touchgfx9TypedText16getTextDirectionEv>
 800c4fa:	4680      	mov	r8, r0
 800c4fc:	4628      	mov	r0, r5
 800c4fe:	f7fa fff9 	bl	80074f4 <_ZNK8touchgfx9TypedText7getTextEv>
 800c502:	2300      	movs	r3, #0
 800c504:	9300      	str	r3, [sp, #0]
 800c506:	4602      	mov	r2, r0
 800c508:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c50a:	4641      	mov	r1, r8
 800c50c:	4630      	mov	r0, r6
 800c50e:	47b8      	blx	r7
 800c510:	b002      	add	sp, #8
 800c512:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c516:	2000      	movs	r0, #0
 800c518:	e7fa      	b.n	800c510 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x3c>

0800c51a <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv>:
 800c51a:	b570      	push	{r4, r5, r6, lr}
 800c51c:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800c51e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c522:	429a      	cmp	r2, r3
 800c524:	4604      	mov	r4, r0
 800c526:	d00c      	beq.n	800c542 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x28>
 800c528:	f850 3b26 	ldr.w	r3, [r0], #38
 800c52c:	6f1d      	ldr	r5, [r3, #112]	; 0x70
 800c52e:	f7fa ffe1 	bl	80074f4 <_ZNK8touchgfx9TypedText7getTextEv>
 800c532:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800c534:	4601      	mov	r1, r0
 800c536:	46ac      	mov	ip, r5
 800c538:	4620      	mov	r0, r4
 800c53a:	2300      	movs	r3, #0
 800c53c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c540:	4760      	bx	ip
 800c542:	2000      	movs	r0, #0
 800c544:	bd70      	pop	{r4, r5, r6, pc}
	...

0800c548 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE>:
 800c548:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c54c:	8cc6      	ldrh	r6, [r0, #38]	; 0x26
 800c54e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c552:	429e      	cmp	r6, r3
 800c554:	b08d      	sub	sp, #52	; 0x34
 800c556:	4604      	mov	r4, r0
 800c558:	460f      	mov	r7, r1
 800c55a:	d048      	beq.n	800c5ee <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xa6>
 800c55c:	f100 0526 	add.w	r5, r0, #38	; 0x26
 800c560:	4628      	mov	r0, r5
 800c562:	f7f9 fd8b 	bl	800607c <_ZNK8touchgfx9TypedText7getFontEv>
 800c566:	4680      	mov	r8, r0
 800c568:	2800      	cmp	r0, #0
 800c56a:	d040      	beq.n	800c5ee <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xa6>
 800c56c:	4628      	mov	r0, r5
 800c56e:	f7f9 fdb9 	bl	80060e4 <_ZNK8touchgfx9TypedText11assertValidEv>
 800c572:	4b20      	ldr	r3, [pc, #128]	; (800c5f4 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xac>)
 800c574:	f894 902e 	ldrb.w	r9, [r4, #46]	; 0x2e
 800c578:	681b      	ldr	r3, [r3, #0]
 800c57a:	f9b4 a02c 	ldrsh.w	sl, [r4, #44]	; 0x2c
 800c57e:	f894 b030 	ldrb.w	fp, [r4, #48]	; 0x30
 800c582:	eb03 0346 	add.w	r3, r3, r6, lsl #1
 800c586:	4628      	mov	r0, r5
 800c588:	785e      	ldrb	r6, [r3, #1]
 800c58a:	f7f9 fd93 	bl	80060b4 <_ZNK8touchgfx9TypedText16getTextDirectionEv>
 800c58e:	f3c6 0601 	ubfx	r6, r6, #0, #2
 800c592:	f894 2031 	ldrb.w	r2, [r4, #49]	; 0x31
 800c596:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c598:	f894 102f 	ldrb.w	r1, [r4, #47]	; 0x2f
 800c59c:	9309      	str	r3, [sp, #36]	; 0x24
 800c59e:	f88d 202c 	strb.w	r2, [sp, #44]	; 0x2c
 800c5a2:	f8cd 801c 	str.w	r8, [sp, #28]
 800c5a6:	f88d 6020 	strb.w	r6, [sp, #32]
 800c5aa:	f88d 102b 	strb.w	r1, [sp, #43]	; 0x2b
 800c5ae:	f88d 902a 	strb.w	r9, [sp, #42]	; 0x2a
 800c5b2:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800c5b6:	f88d b022 	strb.w	fp, [sp, #34]	; 0x22
 800c5ba:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 800c5be:	f7fa f877 	bl	80066b0 <_ZN8touchgfx3HAL3lcdEv>
 800c5c2:	ae05      	add	r6, sp, #20
 800c5c4:	4621      	mov	r1, r4
 800c5c6:	4680      	mov	r8, r0
 800c5c8:	4630      	mov	r0, r6
 800c5ca:	f001 fd32 	bl	800e032 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c5ce:	4628      	mov	r0, r5
 800c5d0:	f7fa ff90 	bl	80074f4 <_ZNK8touchgfx9TypedText7getTextEv>
 800c5d4:	2300      	movs	r3, #0
 800c5d6:	9303      	str	r3, [sp, #12]
 800c5d8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c5da:	e9cd 0301 	strd	r0, r3, [sp, #4]
 800c5de:	ab07      	add	r3, sp, #28
 800c5e0:	9300      	str	r3, [sp, #0]
 800c5e2:	e896 0006 	ldmia.w	r6, {r1, r2}
 800c5e6:	463b      	mov	r3, r7
 800c5e8:	4640      	mov	r0, r8
 800c5ea:	f000 f9fd 	bl	800c9e8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c5ee:	b00d      	add	sp, #52	; 0x34
 800c5f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c5f4:	20026f20 	.word	0x20026f20

0800c5f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800c5f8:	b570      	push	{r4, r5, r6, lr}
 800c5fa:	4605      	mov	r5, r0
 800c5fc:	880b      	ldrh	r3, [r1, #0]
 800c5fe:	84c3      	strh	r3, [r0, #38]	; 0x26
 800c600:	f855 3b26 	ldr.w	r3, [r5], #38
 800c604:	4604      	mov	r4, r0
 800c606:	4628      	mov	r0, r5
 800c608:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 800c60a:	f003 f913 	bl	800f834 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c60e:	b201      	sxth	r1, r0
 800c610:	4620      	mov	r0, r4
 800c612:	47b0      	blx	r6
 800c614:	6823      	ldr	r3, [r4, #0]
 800c616:	4628      	mov	r0, r5
 800c618:	6bde      	ldr	r6, [r3, #60]	; 0x3c
 800c61a:	f003 f945 	bl	800f8a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c61e:	b201      	sxth	r1, r0
 800c620:	4620      	mov	r0, r4
 800c622:	47b0      	blx	r6
 800c624:	4628      	mov	r0, r5
 800c626:	f003 f9d3 	bl	800f9d0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 800c62a:	f884 0029 	strb.w	r0, [r4, #41]	; 0x29
 800c62e:	bd70      	pop	{r4, r5, r6, pc}

0800c630 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800c630:	b510      	push	{r4, lr}
 800c632:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800c636:	2bff      	cmp	r3, #255	; 0xff
 800c638:	4604      	mov	r4, r0
 800c63a:	d006      	beq.n	800c64a <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800c63c:	2300      	movs	r3, #0
 800c63e:	8003      	strh	r3, [r0, #0]
 800c640:	8043      	strh	r3, [r0, #2]
 800c642:	8083      	strh	r3, [r0, #4]
 800c644:	80c3      	strh	r3, [r0, #6]
 800c646:	4620      	mov	r0, r4
 800c648:	bd10      	pop	{r4, pc}
 800c64a:	3126      	adds	r1, #38	; 0x26
 800c64c:	f003 f966 	bl	800f91c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800c650:	e7f9      	b.n	800c646 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

0800c654 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800c654:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c658:	4604      	mov	r4, r0
 800c65a:	b088      	sub	sp, #32
 800c65c:	f854 3b26 	ldr.w	r3, [r4], #38
 800c660:	2500      	movs	r5, #0
 800c662:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c664:	460f      	mov	r7, r1
 800c666:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800c66a:	a904      	add	r1, sp, #16
 800c66c:	4606      	mov	r6, r0
 800c66e:	4798      	blx	r3
 800c670:	4620      	mov	r0, r4
 800c672:	f003 f8df 	bl	800f834 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c676:	4680      	mov	r8, r0
 800c678:	4620      	mov	r0, r4
 800c67a:	f003 f915 	bl	800f8a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c67e:	9506      	str	r5, [sp, #24]
 800c680:	ad06      	add	r5, sp, #24
 800c682:	f8ad 001e 	strh.w	r0, [sp, #30]
 800c686:	4639      	mov	r1, r7
 800c688:	4628      	mov	r0, r5
 800c68a:	f8ad 801c 	strh.w	r8, [sp, #28]
 800c68e:	f7fe fa61 	bl	800ab54 <_ZN8touchgfx4RectaNERKS0_>
 800c692:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800c696:	b1c3      	cbz	r3, 800c6ca <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x76>
 800c698:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800c69c:	b1ab      	cbz	r3, 800c6ca <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x76>
 800c69e:	4b0c      	ldr	r3, [pc, #48]	; (800c6d0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7c>)
 800c6a0:	681b      	ldr	r3, [r3, #0]
 800c6a2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c6a6:	b10a      	cbz	r2, 800c6ac <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x58>
 800c6a8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800c6aa:	b900      	cbnz	r0, 800c6ae <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5a>
 800c6ac:	6898      	ldr	r0, [r3, #8]
 800c6ae:	6801      	ldr	r1, [r0, #0]
 800c6b0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800c6b4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800c6b8:	2701      	movs	r7, #1
 800c6ba:	9702      	str	r7, [sp, #8]
 800c6bc:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800c6c0:	e9cd 5600 	strd	r5, r6, [sp]
 800c6c4:	68cd      	ldr	r5, [r1, #12]
 800c6c6:	4621      	mov	r1, r4
 800c6c8:	47a8      	blx	r5
 800c6ca:	b008      	add	sp, #32
 800c6cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c6d0:	20026eb0 	.word	0x20026eb0

0800c6d4 <_ZN8touchgfx3LCD4initEv>:
 800c6d4:	4770      	bx	lr

0800c6d6 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800c6d6:	2000      	movs	r0, #0
 800c6d8:	4770      	bx	lr

0800c6da <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800c6da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6de:	b091      	sub	sp, #68	; 0x44
 800c6e0:	4699      	mov	r9, r3
 800c6e2:	f8dd a06c 	ldr.w	sl, [sp, #108]	; 0x6c
 800c6e6:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800c6e8:	f9ba 300c 	ldrsh.w	r3, [sl, #12]
 800c6ec:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c6f0:	4680      	mov	r8, r0
 800c6f2:	4617      	mov	r7, r2
 800c6f4:	a80e      	add	r0, sp, #56	; 0x38
 800c6f6:	f9ba 2008 	ldrsh.w	r2, [sl, #8]
 800c6fa:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800c6fe:	2500      	movs	r5, #0
 800c700:	910d      	str	r1, [sp, #52]	; 0x34
 800c702:	950e      	str	r5, [sp, #56]	; 0x38
 800c704:	f000 fe3e 	bl	800d384 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800c708:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800c70a:	f8d9 6000 	ldr.w	r6, [r9]
 800c70e:	6818      	ldr	r0, [r3, #0]
 800c710:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800c712:	f9b4 b000 	ldrsh.w	fp, [r4]
 800c716:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c71a:	eb02 0c06 	add.w	ip, r2, r6
 800c71e:	1b80      	subs	r0, r0, r6
 800c720:	ebab 0e0c 	sub.w	lr, fp, ip
 800c724:	4570      	cmp	r0, lr
 800c726:	f340 80bd 	ble.w	800c8a4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800c72a:	88a1      	ldrh	r1, [r4, #4]
 800c72c:	4459      	add	r1, fp
 800c72e:	b209      	sxth	r1, r1
 800c730:	458c      	cmp	ip, r1
 800c732:	f300 80b7 	bgt.w	800c8a4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800c736:	f8bd 3080 	ldrh.w	r3, [sp, #128]	; 0x80
 800c73a:	ed97 4a09 	vldr	s8, [r7, #36]	; 0x24
 800c73e:	edd7 4a0b 	vldr	s9, [r7, #44]	; 0x2c
 800c742:	edd9 6a07 	vldr	s13, [r9, #28]
 800c746:	edd9 1a0a 	vldr	s3, [r9, #40]	; 0x28
 800c74a:	ed99 2a0d 	vldr	s4, [r9, #52]	; 0x34
 800c74e:	4283      	cmp	r3, r0
 800c750:	bfa8      	it	ge
 800c752:	4603      	movge	r3, r0
 800c754:	ee07 3a90 	vmov	s15, r3
 800c758:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800c75c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800c760:	ee25 4a04 	vmul.f32	s8, s10, s8
 800c764:	ee65 4a24 	vmul.f32	s9, s10, s9
 800c768:	ee25 5a27 	vmul.f32	s10, s10, s15
 800c76c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800c770:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800c774:	45e3      	cmp	fp, ip
 800c776:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800c77a:	ee32 1a05 	vadd.f32	s2, s4, s10
 800c77e:	ee36 0a84 	vadd.f32	s0, s13, s8
 800c782:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c786:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c78a:	f340 808e 	ble.w	800c8aa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1d0>
 800c78e:	fb9e f5f3 	sdiv	r5, lr, r3
 800c792:	ee07 5a10 	vmov	s14, r5
 800c796:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800c79a:	2d00      	cmp	r5, #0
 800c79c:	fb03 e415 	mls	r4, r3, r5, lr
 800c7a0:	eea7 0a04 	vfma.f32	s0, s14, s8
 800c7a4:	eee7 0a24 	vfma.f32	s1, s14, s9
 800c7a8:	eea7 1a05 	vfma.f32	s2, s14, s10
 800c7ac:	dd13      	ble.n	800c7d6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800c7ae:	ee70 6a44 	vsub.f32	s13, s0, s8
 800c7b2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800c7b6:	eef5 6a40 	vcmp.f32	s13, #0.0
 800c7ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c7be:	bf18      	it	ne
 800c7c0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800c7c4:	ee31 2a45 	vsub.f32	s4, s2, s10
 800c7c8:	bf08      	it	eq
 800c7ca:	eeb0 7a67 	vmoveq.f32	s14, s15
 800c7ce:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c7d2:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c7d6:	fb05 f703 	mul.w	r7, r5, r3
 800c7da:	1bc0      	subs	r0, r0, r7
 800c7dc:	443e      	add	r6, r7
 800c7de:	1997      	adds	r7, r2, r6
 800c7e0:	4407      	add	r7, r0
 800c7e2:	42b9      	cmp	r1, r7
 800c7e4:	bfbc      	itt	lt
 800c7e6:	1a88      	sublt	r0, r1, r2
 800c7e8:	1b80      	sublt	r0, r0, r6
 800c7ea:	2800      	cmp	r0, #0
 800c7ec:	dd5a      	ble.n	800c8a4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800c7ee:	fb90 f1f3 	sdiv	r1, r0, r3
 800c7f2:	fb03 0211 	mls	r2, r3, r1, r0
 800c7f6:	b90a      	cbnz	r2, 800c7fc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x122>
 800c7f8:	3901      	subs	r1, #1
 800c7fa:	461a      	mov	r2, r3
 800c7fc:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800c800:	f89d b07c 	ldrb.w	fp, [sp, #124]	; 0x7c
 800c804:	44a4      	add	ip, r4
 800c806:	fb03 c505 	mla	r5, r3, r5, ip
 800c80a:	2900      	cmp	r1, #0
 800c80c:	bfcc      	ite	gt
 800c80e:	469e      	movgt	lr, r3
 800c810:	4696      	movle	lr, r2
 800c812:	eef0 6a42 	vmov.f32	s13, s4
 800c816:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800c81a:	ee21 3a23 	vmul.f32	s6, s2, s7
 800c81e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800c822:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800c826:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c82a:	eeb0 7a61 	vmov.f32	s14, s3
 800c82e:	ee17 0a90 	vmov	r0, s15
 800c832:	ee73 7a42 	vsub.f32	s15, s6, s4
 800c836:	fb90 f6f3 	sdiv	r6, r0, r3
 800c83a:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c83e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800c842:	ee17 0a90 	vmov	r0, s15
 800c846:	fb90 f7f3 	sdiv	r7, r0, r3
 800c84a:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800c84e:	900c      	str	r0, [sp, #48]	; 0x30
 800c850:	f8d0 8000 	ldr.w	r8, [r0]
 800c854:	981c      	ldr	r0, [sp, #112]	; 0x70
 800c856:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 800c85a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 800c85e:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800c862:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 800c866:	f8cd a020 	str.w	sl, [sp, #32]
 800c86a:	f9b0 a002 	ldrsh.w	sl, [r0, #2]
 800c86e:	980d      	ldr	r0, [sp, #52]	; 0x34
 800c870:	f8d9 9014 	ldr.w	r9, [r9, #20]
 800c874:	9603      	str	r6, [sp, #12]
 800c876:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800c87a:	ee16 0a90 	vmov	r0, s13
 800c87e:	fb07 0704 	mla	r7, r7, r4, r0
 800c882:	ee17 0a10 	vmov	r0, s14
 800c886:	fb06 0604 	mla	r6, r6, r4, r0
 800c88a:	e9cd 3600 	strd	r3, r6, [sp]
 800c88e:	44ca      	add	sl, r9
 800c890:	f8cd a01c 	str.w	sl, [sp, #28]
 800c894:	9506      	str	r5, [sp, #24]
 800c896:	9702      	str	r7, [sp, #8]
 800c898:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800c89c:	980c      	ldr	r0, [sp, #48]	; 0x30
 800c89e:	ebae 0304 	sub.w	r3, lr, r4
 800c8a2:	47a8      	blx	r5
 800c8a4:	b011      	add	sp, #68	; 0x44
 800c8a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c8aa:	462c      	mov	r4, r5
 800c8ac:	e797      	b.n	800c7de <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x104>

0800c8ae <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800c8ae:	b570      	push	{r4, r5, r6, lr}
 800c8b0:	4604      	mov	r4, r0
 800c8b2:	2500      	movs	r5, #0
 800c8b4:	7223      	strb	r3, [r4, #8]
 800c8b6:	9804      	ldr	r0, [sp, #16]
 800c8b8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800c8bc:	8025      	strh	r5, [r4, #0]
 800c8be:	6061      	str	r1, [r4, #4]
 800c8c0:	7263      	strb	r3, [r4, #9]
 800c8c2:	60e0      	str	r0, [r4, #12]
 800c8c4:	8222      	strh	r2, [r4, #16]
 800c8c6:	8265      	strh	r5, [r4, #18]
 800c8c8:	82a5      	strh	r5, [r4, #20]
 800c8ca:	82e5      	strh	r5, [r4, #22]
 800c8cc:	8325      	strh	r5, [r4, #24]
 800c8ce:	8365      	strh	r5, [r4, #26]
 800c8d0:	83a5      	strh	r5, [r4, #28]
 800c8d2:	77a5      	strb	r5, [r4, #30]
 800c8d4:	6803      	ldr	r3, [r0, #0]
 800c8d6:	695b      	ldr	r3, [r3, #20]
 800c8d8:	4798      	blx	r3
 800c8da:	4606      	mov	r6, r0
 800c8dc:	b1f8      	cbz	r0, 800c91e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800c8de:	68e0      	ldr	r0, [r4, #12]
 800c8e0:	6803      	ldr	r3, [r0, #0]
 800c8e2:	4631      	mov	r1, r6
 800c8e4:	68db      	ldr	r3, [r3, #12]
 800c8e6:	4798      	blx	r3
 800c8e8:	f990 300d 	ldrsb.w	r3, [r0, #13]
 800c8ec:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c8f0:	7a83      	ldrb	r3, [r0, #10]
 800c8f2:	4313      	orrs	r3, r2
 800c8f4:	83a3      	strh	r3, [r4, #28]
 800c8f6:	7a63      	ldrb	r3, [r4, #9]
 800c8f8:	2b04      	cmp	r3, #4
 800c8fa:	4605      	mov	r5, r0
 800c8fc:	d10f      	bne.n	800c91e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 800c8fe:	68e0      	ldr	r0, [r4, #12]
 800c900:	6803      	ldr	r3, [r0, #0]
 800c902:	462a      	mov	r2, r5
 800c904:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c906:	4631      	mov	r1, r6
 800c908:	4798      	blx	r3
 800c90a:	f995 300d 	ldrsb.w	r3, [r5, #13]
 800c90e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c912:	7aab      	ldrb	r3, [r5, #10]
 800c914:	4313      	orrs	r3, r2
 800c916:	4418      	add	r0, r3
 800c918:	8ba3      	ldrh	r3, [r4, #28]
 800c91a:	4418      	add	r0, r3
 800c91c:	83a0      	strh	r0, [r4, #28]
 800c91e:	4620      	mov	r0, r4
 800c920:	bd70      	pop	{r4, r5, r6, pc}

0800c922 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800c922:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c926:	2400      	movs	r4, #0
 800c928:	b085      	sub	sp, #20
 800c92a:	4681      	mov	r9, r0
 800c92c:	460f      	mov	r7, r1
 800c92e:	4692      	mov	sl, r2
 800c930:	469b      	mov	fp, r3
 800c932:	46a0      	mov	r8, r4
 800c934:	4626      	mov	r6, r4
 800c936:	4554      	cmp	r4, sl
 800c938:	da21      	bge.n	800c97e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x5c>
 800c93a:	2300      	movs	r3, #0
 800c93c:	9303      	str	r3, [sp, #12]
 800c93e:	463a      	mov	r2, r7
 800c940:	ab03      	add	r3, sp, #12
 800c942:	4659      	mov	r1, fp
 800c944:	4648      	mov	r0, r9
 800c946:	f002 fb3b 	bl	800efc0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800c94a:	4605      	mov	r5, r0
 800c94c:	b1b8      	cbz	r0, 800c97e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x5c>
 800c94e:	280a      	cmp	r0, #10
 800c950:	d015      	beq.n	800c97e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x5c>
 800c952:	9a03      	ldr	r2, [sp, #12]
 800c954:	b182      	cbz	r2, 800c978 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x56>
 800c956:	f992 000d 	ldrsb.w	r0, [r2, #13]
 800c95a:	7a93      	ldrb	r3, [r2, #10]
 800c95c:	8895      	ldrh	r5, [r2, #4]
 800c95e:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800c962:	4303      	orrs	r3, r0
 800c964:	9301      	str	r3, [sp, #4]
 800c966:	683b      	ldr	r3, [r7, #0]
 800c968:	4641      	mov	r1, r8
 800c96a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c96c:	4638      	mov	r0, r7
 800c96e:	4798      	blx	r3
 800c970:	9b01      	ldr	r3, [sp, #4]
 800c972:	4418      	add	r0, r3
 800c974:	4406      	add	r6, r0
 800c976:	b2b6      	uxth	r6, r6
 800c978:	3401      	adds	r4, #1
 800c97a:	46a8      	mov	r8, r5
 800c97c:	e7db      	b.n	800c936 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x14>
 800c97e:	4630      	mov	r0, r6
 800c980:	b005      	add	sp, #20
 800c982:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c986 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800c986:	2a02      	cmp	r2, #2
 800c988:	b530      	push	{r4, r5, lr}
 800c98a:	d011      	beq.n	800c9b0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800c98c:	2a03      	cmp	r2, #3
 800c98e:	d01c      	beq.n	800c9ca <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800c990:	2a01      	cmp	r2, #1
 800c992:	d10c      	bne.n	800c9ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800c994:	888b      	ldrh	r3, [r1, #4]
 800c996:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800c99a:	8801      	ldrh	r1, [r0, #0]
 800c99c:	8844      	ldrh	r4, [r0, #2]
 800c99e:	8004      	strh	r4, [r0, #0]
 800c9a0:	1a9b      	subs	r3, r3, r2
 800c9a2:	1a5b      	subs	r3, r3, r1
 800c9a4:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800c9a8:	8043      	strh	r3, [r0, #2]
 800c9aa:	8081      	strh	r1, [r0, #4]
 800c9ac:	80c2      	strh	r2, [r0, #6]
 800c9ae:	bd30      	pop	{r4, r5, pc}
 800c9b0:	88cb      	ldrh	r3, [r1, #6]
 800c9b2:	88c2      	ldrh	r2, [r0, #6]
 800c9b4:	1a9b      	subs	r3, r3, r2
 800c9b6:	8842      	ldrh	r2, [r0, #2]
 800c9b8:	1a9b      	subs	r3, r3, r2
 800c9ba:	888a      	ldrh	r2, [r1, #4]
 800c9bc:	8881      	ldrh	r1, [r0, #4]
 800c9be:	8043      	strh	r3, [r0, #2]
 800c9c0:	1a52      	subs	r2, r2, r1
 800c9c2:	8801      	ldrh	r1, [r0, #0]
 800c9c4:	1a52      	subs	r2, r2, r1
 800c9c6:	8002      	strh	r2, [r0, #0]
 800c9c8:	e7f1      	b.n	800c9ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800c9ca:	88cb      	ldrh	r3, [r1, #6]
 800c9cc:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800c9d0:	8841      	ldrh	r1, [r0, #2]
 800c9d2:	f9b0 5000 	ldrsh.w	r5, [r0]
 800c9d6:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800c9da:	8045      	strh	r5, [r0, #2]
 800c9dc:	1a9b      	subs	r3, r3, r2
 800c9de:	1a5b      	subs	r3, r3, r1
 800c9e0:	8003      	strh	r3, [r0, #0]
 800c9e2:	8082      	strh	r2, [r0, #4]
 800c9e4:	80c4      	strh	r4, [r0, #6]
 800c9e6:	e7e2      	b.n	800c9ae <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800c9e8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
 800c9e8:	b570      	push	{r4, r5, r6, lr}
 800c9ea:	b086      	sub	sp, #24
 800c9ec:	ac02      	add	r4, sp, #8
 800c9ee:	e884 0006 	stmia.w	r4, {r1, r2}
 800c9f2:	461a      	mov	r2, r3
 800c9f4:	ab0c      	add	r3, sp, #48	; 0x30
 800c9f6:	9305      	str	r3, [sp, #20]
 800c9f8:	4b0a      	ldr	r3, [pc, #40]	; (800ca24 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz+0x3c>)
 800c9fa:	685d      	ldr	r5, [r3, #4]
 800c9fc:	1069      	asrs	r1, r5, #1
 800c9fe:	07ed      	lsls	r5, r5, #31
 800ca00:	bf4c      	ite	mi
 800ca02:	681b      	ldrmi	r3, [r3, #0]
 800ca04:	681d      	ldrpl	r5, [r3, #0]
 800ca06:	eb00 0601 	add.w	r6, r0, r1
 800ca0a:	bf44      	itt	mi
 800ca0c:	5841      	ldrmi	r1, [r0, r1]
 800ca0e:	58cd      	ldrmi	r5, [r1, r3]
 800ca10:	9b05      	ldr	r3, [sp, #20]
 800ca12:	9301      	str	r3, [sp, #4]
 800ca14:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ca16:	9300      	str	r3, [sp, #0]
 800ca18:	4621      	mov	r1, r4
 800ca1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ca1c:	4630      	mov	r0, r6
 800ca1e:	47a8      	blx	r5
 800ca20:	b006      	add	sp, #24
 800ca22:	bd70      	pop	{r4, r5, r6, pc}
 800ca24:	20000018 	.word	0x20000018

0800ca28 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800ca28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ca2c:	b09d      	sub	sp, #116	; 0x74
 800ca2e:	9114      	str	r1, [sp, #80]	; 0x50
 800ca30:	9315      	str	r3, [sp, #84]	; 0x54
 800ca32:	9927      	ldr	r1, [sp, #156]	; 0x9c
 800ca34:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800ca36:	8809      	ldrh	r1, [r1, #0]
 800ca38:	889b      	ldrh	r3, [r3, #4]
 800ca3a:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 800ca3c:	9210      	str	r2, [sp, #64]	; 0x40
 800ca3e:	440b      	add	r3, r1
 800ca40:	b21b      	sxth	r3, r3
 800ca42:	930e      	str	r3, [sp, #56]	; 0x38
 800ca44:	6833      	ldr	r3, [r6, #0]
 800ca46:	f89d 20b0 	ldrb.w	r2, [sp, #176]	; 0xb0
 800ca4a:	7a59      	ldrb	r1, [r3, #9]
 800ca4c:	7a1b      	ldrb	r3, [r3, #8]
 800ca4e:	9312      	str	r3, [sp, #72]	; 0x48
 800ca50:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800ca52:	900f      	str	r0, [sp, #60]	; 0x3c
 800ca54:	f89d b0a4 	ldrb.w	fp, [sp, #164]	; 0xa4
 800ca58:	9113      	str	r1, [sp, #76]	; 0x4c
 800ca5a:	f9b3 4000 	ldrsh.w	r4, [r3]
 800ca5e:	2a00      	cmp	r2, #0
 800ca60:	d059      	beq.n	800cb16 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xee>
 800ca62:	7c33      	ldrb	r3, [r6, #16]
 800ca64:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 800ca66:	2b04      	cmp	r3, #4
 800ca68:	bf14      	ite	ne
 800ca6a:	2301      	movne	r3, #1
 800ca6c:	2302      	moveq	r3, #2
 800ca6e:	4413      	add	r3, r2
 800ca70:	f04f 0800 	mov.w	r8, #0
 800ca74:	930d      	str	r3, [sp, #52]	; 0x34
 800ca76:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 800ca7a:	4645      	mov	r5, r8
 800ca7c:	e9dd 320c 	ldrd	r3, r2, [sp, #48]	; 0x30
 800ca80:	4293      	cmp	r3, r2
 800ca82:	da75      	bge.n	800cb70 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x148>
 800ca84:	2300      	movs	r3, #0
 800ca86:	931a      	str	r3, [sp, #104]	; 0x68
 800ca88:	992b      	ldr	r1, [sp, #172]	; 0xac
 800ca8a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ca8c:	6832      	ldr	r2, [r6, #0]
 800ca8e:	428b      	cmp	r3, r1
 800ca90:	db43      	blt.n	800cb1a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xf2>
 800ca92:	6813      	ldr	r3, [r2, #0]
 800ca94:	4610      	mov	r0, r2
 800ca96:	695b      	ldr	r3, [r3, #20]
 800ca98:	4798      	blx	r3
 800ca9a:	4681      	mov	r9, r0
 800ca9c:	6830      	ldr	r0, [r6, #0]
 800ca9e:	6803      	ldr	r3, [r0, #0]
 800caa0:	aa1b      	add	r2, sp, #108	; 0x6c
 800caa2:	689f      	ldr	r7, [r3, #8]
 800caa4:	4649      	mov	r1, r9
 800caa6:	f10d 0367 	add.w	r3, sp, #103	; 0x67
 800caaa:	47b8      	blx	r7
 800caac:	901a      	str	r0, [sp, #104]	; 0x68
 800caae:	f64f 6aff 	movw	sl, #65279	; 0xfeff
 800cab2:	45d1      	cmp	r9, sl
 800cab4:	d045      	beq.n	800cb42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800cab6:	f242 070b 	movw	r7, #8203	; 0x200b
 800caba:	45b9      	cmp	r9, r7
 800cabc:	d041      	beq.n	800cb42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800cabe:	f1b9 0f00 	cmp.w	r9, #0
 800cac2:	f000 80ef 	beq.w	800cca4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x27c>
 800cac6:	f1b9 0f0a 	cmp.w	r9, #10
 800caca:	d057      	beq.n	800cb7c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800cacc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800cace:	b383      	cbz	r3, 800cb32 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10a>
 800cad0:	f8b3 9004 	ldrh.w	r9, [r3, #4]
 800cad4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800cad6:	2a00      	cmp	r2, #0
 800cad8:	f000 80d3 	beq.w	800cc82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x25a>
 800cadc:	f1bb 0f00 	cmp.w	fp, #0
 800cae0:	d100      	bne.n	800cae4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xbc>
 800cae2:	4444      	add	r4, r8
 800cae4:	f992 800d 	ldrsb.w	r8, [r2, #13]
 800cae8:	f408 7380 	and.w	r3, r8, #256	; 0x100
 800caec:	f892 800a 	ldrb.w	r8, [r2, #10]
 800caf0:	f1bb 0f01 	cmp.w	fp, #1
 800caf4:	ea48 0803 	orr.w	r8, r8, r3
 800caf8:	d128      	bne.n	800cb4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x124>
 800cafa:	eba4 0408 	sub.w	r4, r4, r8
 800cafe:	2d00      	cmp	r5, #0
 800cb00:	d143      	bne.n	800cb8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x162>
 800cb02:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800cb04:	eb08 0304 	add.w	r3, r8, r4
 800cb08:	4413      	add	r3, r2
 800cb0a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 800cb0c:	f9b2 2000 	ldrsh.w	r2, [r2]
 800cb10:	4293      	cmp	r3, r2
 800cb12:	da44      	bge.n	800cb9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800cb14:	e02b      	b.n	800cb6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x146>
 800cb16:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 800cb18:	e7aa      	b.n	800ca70 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x48>
 800cb1a:	f10d 0367 	add.w	r3, sp, #103	; 0x67
 800cb1e:	9301      	str	r3, [sp, #4]
 800cb20:	ab1b      	add	r3, sp, #108	; 0x6c
 800cb22:	9300      	str	r3, [sp, #0]
 800cb24:	4659      	mov	r1, fp
 800cb26:	ab1a      	add	r3, sp, #104	; 0x68
 800cb28:	982a      	ldr	r0, [sp, #168]	; 0xa8
 800cb2a:	f002 fa7d 	bl	800f028 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800cb2e:	4681      	mov	r9, r0
 800cb30:	e7bd      	b.n	800caae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 800cb32:	6830      	ldr	r0, [r6, #0]
 800cb34:	6803      	ldr	r3, [r0, #0]
 800cb36:	691b      	ldr	r3, [r3, #16]
 800cb38:	4798      	blx	r3
 800cb3a:	4550      	cmp	r0, sl
 800cb3c:	d001      	beq.n	800cb42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800cb3e:	42b8      	cmp	r0, r7
 800cb40:	d1c8      	bne.n	800cad4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 800cb42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800cb44:	3301      	adds	r3, #1
 800cb46:	930c      	str	r3, [sp, #48]	; 0x30
 800cb48:	464d      	mov	r5, r9
 800cb4a:	e797      	b.n	800ca7c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x54>
 800cb4c:	2d00      	cmp	r5, #0
 800cb4e:	f000 80ab 	beq.w	800cca8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x280>
 800cb52:	f1bb 0f00 	cmp.w	fp, #0
 800cb56:	d118      	bne.n	800cb8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x162>
 800cb58:	6830      	ldr	r0, [r6, #0]
 800cb5a:	6803      	ldr	r3, [r0, #0]
 800cb5c:	4629      	mov	r1, r5
 800cb5e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cb60:	4798      	blx	r3
 800cb62:	4404      	add	r4, r0
 800cb64:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800cb66:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800cb68:	1ae3      	subs	r3, r4, r3
 800cb6a:	4293      	cmp	r3, r2
 800cb6c:	dd17      	ble.n	800cb9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800cb6e:	464d      	mov	r5, r9
 800cb70:	2d00      	cmp	r5, #0
 800cb72:	f000 8097 	beq.w	800cca4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x27c>
 800cb76:	2d0a      	cmp	r5, #10
 800cb78:	f040 8085 	bne.w	800cc86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x25e>
 800cb7c:	250a      	movs	r5, #10
 800cb7e:	fab5 f085 	clz	r0, r5
 800cb82:	0940      	lsrs	r0, r0, #5
 800cb84:	b01d      	add	sp, #116	; 0x74
 800cb86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb8a:	6830      	ldr	r0, [r6, #0]
 800cb8c:	6803      	ldr	r3, [r0, #0]
 800cb8e:	4629      	mov	r1, r5
 800cb90:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cb92:	4798      	blx	r3
 800cb94:	f1bb 0f01 	cmp.w	fp, #1
 800cb98:	eba4 0400 	sub.w	r4, r4, r0
 800cb9c:	d0b1      	beq.n	800cb02 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800cb9e:	981a      	ldr	r0, [sp, #104]	; 0x68
 800cba0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800cba2:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800cba6:	f9b3 5000 	ldrsh.w	r5, [r3]
 800cbaa:	7b43      	ldrb	r3, [r0, #13]
 800cbac:	015b      	lsls	r3, r3, #5
 800cbae:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800cbb2:	7983      	ldrb	r3, [r0, #6]
 800cbb4:	4421      	add	r1, r4
 800cbb6:	4313      	orrs	r3, r2
 800cbb8:	440b      	add	r3, r1
 800cbba:	42ab      	cmp	r3, r5
 800cbbc:	dbc1      	blt.n	800cb42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800cbbe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800cbc0:	4299      	cmp	r1, r3
 800cbc2:	dabe      	bge.n	800cb42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800cbc4:	6830      	ldr	r0, [r6, #0]
 800cbc6:	6803      	ldr	r3, [r0, #0]
 800cbc8:	42a5      	cmp	r5, r4
 800cbca:	bfc8      	it	gt
 800cbcc:	1b2d      	subgt	r5, r5, r4
 800cbce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cbd0:	bfcc      	ite	gt
 800cbd2:	b2ad      	uxthgt	r5, r5
 800cbd4:	2500      	movle	r5, #0
 800cbd6:	4798      	blx	r3
 800cbd8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800cbda:	4936      	ldr	r1, [pc, #216]	; (800ccb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>)
 800cbdc:	7b5a      	ldrb	r2, [r3, #13]
 800cbde:	f893 e008 	ldrb.w	lr, [r3, #8]
 800cbe2:	f012 0f40 	tst.w	r2, #64	; 0x40
 800cbe6:	bf18      	it	ne
 800cbe8:	468c      	movne	ip, r1
 800cbea:	9915      	ldr	r1, [sp, #84]	; 0x54
 800cbec:	4408      	add	r0, r1
 800cbee:	ea4f 01c2 	mov.w	r1, r2, lsl #3
 800cbf2:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800cbf6:	bf08      	it	eq
 800cbf8:	f04f 0c00 	moveq.w	ip, #0
 800cbfc:	ea41 070e 	orr.w	r7, r1, lr
 800cc00:	ea4c 0707 	orr.w	r7, ip, r7
 800cc04:	9927      	ldr	r1, [sp, #156]	; 0x9c
 800cc06:	1bc7      	subs	r7, r0, r7
 800cc08:	b2bf      	uxth	r7, r7
 800cc0a:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800cc0e:	fa0f fa87 	sxth.w	sl, r7
 800cc12:	4551      	cmp	r1, sl
 800cc14:	dd33      	ble.n	800cc7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x256>
 800cc16:	0112      	lsls	r2, r2, #4
 800cc18:	79d8      	ldrb	r0, [r3, #7]
 800cc1a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800cc1e:	4302      	orrs	r2, r0
 800cc20:	4492      	add	sl, r2
 800cc22:	4551      	cmp	r1, sl
 800cc24:	dc8d      	bgt.n	800cb42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800cc26:	1bcf      	subs	r7, r1, r7
 800cc28:	b2bf      	uxth	r7, r7
 800cc2a:	468a      	mov	sl, r1
 800cc2c:	9317      	str	r3, [sp, #92]	; 0x5c
 800cc2e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800cc30:	6830      	ldr	r0, [r6, #0]
 800cc32:	681a      	ldr	r2, [r3, #0]
 800cc34:	6801      	ldr	r1, [r0, #0]
 800cc36:	6c53      	ldr	r3, [r2, #68]	; 0x44
 800cc38:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800cc3a:	9311      	str	r3, [sp, #68]	; 0x44
 800cc3c:	9216      	str	r2, [sp, #88]	; 0x58
 800cc3e:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800cc40:	4788      	blx	r1
 800cc42:	79b1      	ldrb	r1, [r6, #6]
 800cc44:	910b      	str	r1, [sp, #44]	; 0x2c
 800cc46:	7bb1      	ldrb	r1, [r6, #14]
 800cc48:	910a      	str	r1, [sp, #40]	; 0x28
 800cc4a:	f89d 1067 	ldrb.w	r1, [sp, #103]	; 0x67
 800cc4e:	9109      	str	r1, [sp, #36]	; 0x24
 800cc50:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800cc52:	68b1      	ldr	r1, [r6, #8]
 800cc54:	9305      	str	r3, [sp, #20]
 800cc56:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800cc58:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800cc5a:	9206      	str	r2, [sp, #24]
 800cc5c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800cc60:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800cc64:	e9cd a501 	strd	sl, r5, [sp, #4]
 800cc68:	4425      	add	r5, r4
 800cc6a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800cc6c:	9914      	ldr	r1, [sp, #80]	; 0x50
 800cc6e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800cc70:	b22d      	sxth	r5, r5
 800cc72:	9500      	str	r5, [sp, #0]
 800cc74:	681a      	ldr	r2, [r3, #0]
 800cc76:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800cc78:	685b      	ldr	r3, [r3, #4]
 800cc7a:	47a8      	blx	r5
 800cc7c:	e761      	b.n	800cb42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800cc7e:	2700      	movs	r7, #0
 800cc80:	e7d4      	b.n	800cc2c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x204>
 800cc82:	4690      	mov	r8, r2
 800cc84:	e75d      	b.n	800cb42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x11a>
 800cc86:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800cc88:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 800cc8a:	3401      	adds	r4, #1
 800cc8c:	429c      	cmp	r4, r3
 800cc8e:	f6bf af76 	bge.w	800cb7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x156>
 800cc92:	4659      	mov	r1, fp
 800cc94:	982a      	ldr	r0, [sp, #168]	; 0xa8
 800cc96:	f002 f953 	bl	800ef40 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800cc9a:	4605      	mov	r5, r0
 800cc9c:	b110      	cbz	r0, 800cca4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x27c>
 800cc9e:	280a      	cmp	r0, #10
 800cca0:	d1f2      	bne.n	800cc88 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x260>
 800cca2:	e76b      	b.n	800cb7c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800cca4:	2500      	movs	r5, #0
 800cca6:	e76a      	b.n	800cb7e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x156>
 800cca8:	f1bb 0f00 	cmp.w	fp, #0
 800ccac:	f43f af5a 	beq.w	800cb64 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x13c>
 800ccb0:	e775      	b.n	800cb9e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800ccb2:	bf00      	nop
 800ccb4:	fffffe00 	.word	0xfffffe00

0800ccb8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800ccb8:	b530      	push	{r4, r5, lr}
 800ccba:	8a44      	ldrh	r4, [r0, #18]
 800ccbc:	8ac5      	ldrh	r5, [r0, #22]
 800ccbe:	82c3      	strh	r3, [r0, #22]
 800ccc0:	442c      	add	r4, r5
 800ccc2:	1ae4      	subs	r4, r4, r3
 800ccc4:	8244      	strh	r4, [r0, #18]
 800ccc6:	8b03      	ldrh	r3, [r0, #24]
 800ccc8:	8a84      	ldrh	r4, [r0, #20]
 800ccca:	4422      	add	r2, r4
 800cccc:	440c      	add	r4, r1
 800ccce:	1a59      	subs	r1, r3, r1
 800ccd0:	8342      	strh	r2, [r0, #26]
 800ccd2:	8284      	strh	r4, [r0, #20]
 800ccd4:	8301      	strh	r1, [r0, #24]
 800ccd6:	bd30      	pop	{r4, r5, pc}

0800ccd8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800ccd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ccdc:	7a45      	ldrb	r5, [r0, #9]
 800ccde:	1eeb      	subs	r3, r5, #3
 800cce0:	b085      	sub	sp, #20
 800cce2:	4604      	mov	r4, r0
 800cce4:	b2db      	uxtb	r3, r3
 800cce6:	4689      	mov	r9, r1
 800cce8:	b329      	cbz	r1, 800cd36 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x5e>
 800ccea:	2b01      	cmp	r3, #1
 800ccec:	d921      	bls.n	800cd32 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x5a>
 800ccee:	1e69      	subs	r1, r5, #1
 800ccf0:	f1d1 0b00 	rsbs	fp, r1, #0
 800ccf4:	eb4b 0b01 	adc.w	fp, fp, r1
 800ccf8:	1eaa      	subs	r2, r5, #2
 800ccfa:	4253      	negs	r3, r2
 800ccfc:	4153      	adcs	r3, r2
 800ccfe:	2500      	movs	r5, #0
 800cd00:	9301      	str	r3, [sp, #4]
 800cd02:	9500      	str	r5, [sp, #0]
 800cd04:	2600      	movs	r6, #0
 800cd06:	8266      	strh	r6, [r4, #18]
 800cd08:	82a6      	strh	r6, [r4, #20]
 800cd0a:	f242 080b 	movw	r8, #8203	; 0x200b
 800cd0e:	2300      	movs	r3, #0
 800cd10:	9303      	str	r3, [sp, #12]
 800cd12:	68e2      	ldr	r2, [r4, #12]
 800cd14:	7a21      	ldrb	r1, [r4, #8]
 800cd16:	6860      	ldr	r0, [r4, #4]
 800cd18:	8827      	ldrh	r7, [r4, #0]
 800cd1a:	ab03      	add	r3, sp, #12
 800cd1c:	f002 f950 	bl	800efc0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800cd20:	8020      	strh	r0, [r4, #0]
 800cd22:	b9b0      	cbnz	r0, 800cd52 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7a>
 800cd24:	8b22      	ldrh	r2, [r4, #24]
 800cd26:	2300      	movs	r3, #0
 800cd28:	4611      	mov	r1, r2
 800cd2a:	4620      	mov	r0, r4
 800cd2c:	f7ff ffc4 	bl	800ccb8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800cd30:	e062      	b.n	800cdf8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x120>
 800cd32:	468b      	mov	fp, r1
 800cd34:	e7e0      	b.n	800ccf8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x20>
 800cd36:	2b01      	cmp	r3, #1
 800cd38:	f105 35ff 	add.w	r5, r5, #4294967295
 800cd3c:	bf8c      	ite	hi
 800cd3e:	2300      	movhi	r3, #0
 800cd40:	2301      	movls	r3, #1
 800cd42:	2d01      	cmp	r5, #1
 800cd44:	9300      	str	r3, [sp, #0]
 800cd46:	bf8c      	ite	hi
 800cd48:	2500      	movhi	r5, #0
 800cd4a:	2501      	movls	r5, #1
 800cd4c:	9101      	str	r1, [sp, #4]
 800cd4e:	468b      	mov	fp, r1
 800cd50:	e7d8      	b.n	800cd04 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x2c>
 800cd52:	8ae3      	ldrh	r3, [r4, #22]
 800cd54:	280a      	cmp	r0, #10
 800cd56:	f103 0301 	add.w	r3, r3, #1
 800cd5a:	82e3      	strh	r3, [r4, #22]
 800cd5c:	d0e2      	beq.n	800cd24 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x4c>
 800cd5e:	9a03      	ldr	r2, [sp, #12]
 800cd60:	b972      	cbnz	r2, 800cd80 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa8>
 800cd62:	4540      	cmp	r0, r8
 800cd64:	d1d3      	bne.n	800cd0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800cd66:	8823      	ldrh	r3, [r4, #0]
 800cd68:	8b21      	ldrh	r1, [r4, #24]
 800cd6a:	2b20      	cmp	r3, #32
 800cd6c:	d001      	beq.n	800cd72 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9a>
 800cd6e:	4543      	cmp	r3, r8
 800cd70:	d11d      	bne.n	800cdae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800cd72:	2f20      	cmp	r7, #32
 800cd74:	d002      	beq.n	800cd7c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800cd76:	4547      	cmp	r7, r8
 800cd78:	bf18      	it	ne
 800cd7a:	460e      	movne	r6, r1
 800cd7c:	2001      	movs	r0, #1
 800cd7e:	e017      	b.n	800cdb0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd8>
 800cd80:	4540      	cmp	r0, r8
 800cd82:	d012      	beq.n	800cdaa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd2>
 800cd84:	8893      	ldrh	r3, [r2, #4]
 800cd86:	8023      	strh	r3, [r4, #0]
 800cd88:	f992 a00d 	ldrsb.w	sl, [r2, #13]
 800cd8c:	f40a 7080 	and.w	r0, sl, #256	; 0x100
 800cd90:	f892 a00a 	ldrb.w	sl, [r2, #10]
 800cd94:	ea4a 0a00 	orr.w	sl, sl, r0
 800cd98:	68e0      	ldr	r0, [r4, #12]
 800cd9a:	6803      	ldr	r3, [r0, #0]
 800cd9c:	4639      	mov	r1, r7
 800cd9e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cda0:	4798      	blx	r3
 800cda2:	eb0a 0200 	add.w	r2, sl, r0
 800cda6:	b292      	uxth	r2, r2
 800cda8:	e7dd      	b.n	800cd66 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x8e>
 800cdaa:	2200      	movs	r2, #0
 800cdac:	e7db      	b.n	800cd66 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x8e>
 800cdae:	2000      	movs	r0, #0
 800cdb0:	440a      	add	r2, r1
 800cdb2:	8aa3      	ldrh	r3, [r4, #20]
 800cdb4:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800cdb8:	b292      	uxth	r2, r2
 800cdba:	8322      	strh	r2, [r4, #24]
 800cdbc:	4413      	add	r3, r2
 800cdbe:	f1b9 0f00 	cmp.w	r9, #0
 800cdc2:	d022      	beq.n	800ce0a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x132>
 800cdc4:	f1bb 0f00 	cmp.w	fp, #0
 800cdc8:	d102      	bne.n	800cdd0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf8>
 800cdca:	9901      	ldr	r1, [sp, #4]
 800cdcc:	b149      	cbz	r1, 800cde2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x10a>
 800cdce:	b140      	cbz	r0, 800cde2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x10a>
 800cdd0:	8ba1      	ldrh	r1, [r4, #28]
 800cdd2:	4419      	add	r1, r3
 800cdd4:	458c      	cmp	ip, r1
 800cdd6:	da12      	bge.n	800cdfe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x126>
 800cdd8:	8a61      	ldrh	r1, [r4, #18]
 800cdda:	b181      	cbz	r1, 800cdfe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x126>
 800cddc:	4563      	cmp	r3, ip
 800cdde:	dd96      	ble.n	800cd0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800cde0:	e004      	b.n	800cdec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x114>
 800cde2:	4563      	cmp	r3, ip
 800cde4:	dd93      	ble.n	800cd0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800cde6:	8a63      	ldrh	r3, [r4, #18]
 800cde8:	2b00      	cmp	r3, #0
 800cdea:	d090      	beq.n	800cd0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800cdec:	2301      	movs	r3, #1
 800cdee:	77a3      	strb	r3, [r4, #30]
 800cdf0:	8ba2      	ldrh	r2, [r4, #28]
 800cdf2:	8b63      	ldrh	r3, [r4, #26]
 800cdf4:	4413      	add	r3, r2
 800cdf6:	8363      	strh	r3, [r4, #26]
 800cdf8:	b005      	add	sp, #20
 800cdfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cdfe:	2300      	movs	r3, #0
 800ce00:	4611      	mov	r1, r2
 800ce02:	4620      	mov	r0, r4
 800ce04:	f7ff ff58 	bl	800ccb8 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800ce08:	e781      	b.n	800cd0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800ce0a:	4563      	cmp	r3, ip
 800ce0c:	dd16      	ble.n	800ce3c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x164>
 800ce0e:	9b00      	ldr	r3, [sp, #0]
 800ce10:	b113      	cbz	r3, 800ce18 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800ce12:	2301      	movs	r3, #1
 800ce14:	460a      	mov	r2, r1
 800ce16:	e787      	b.n	800cd28 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x50>
 800ce18:	2d00      	cmp	r5, #0
 800ce1a:	f43f af78 	beq.w	800cd0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800ce1e:	2800      	cmp	r0, #0
 800ce20:	f47f af75 	bne.w	800cd0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800ce24:	2f20      	cmp	r7, #32
 800ce26:	d001      	beq.n	800ce2c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x154>
 800ce28:	4547      	cmp	r7, r8
 800ce2a:	d102      	bne.n	800ce32 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15a>
 800ce2c:	2301      	movs	r3, #1
 800ce2e:	4632      	mov	r2, r6
 800ce30:	e77b      	b.n	800cd2a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x52>
 800ce32:	8a63      	ldrh	r3, [r4, #18]
 800ce34:	2b00      	cmp	r3, #0
 800ce36:	f43f af6a 	beq.w	800cd0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800ce3a:	e7dd      	b.n	800cdf8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x120>
 800ce3c:	2800      	cmp	r0, #0
 800ce3e:	f47f af66 	bne.w	800cd0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800ce42:	2f20      	cmp	r7, #32
 800ce44:	d002      	beq.n	800ce4c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x174>
 800ce46:	4547      	cmp	r7, r8
 800ce48:	f47f af61 	bne.w	800cd0e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x36>
 800ce4c:	2301      	movs	r3, #1
 800ce4e:	4632      	mov	r2, r6
 800ce50:	e7d7      	b.n	800ce02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x12a>

0800ce52 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800ce52:	b570      	push	{r4, r5, r6, lr}
 800ce54:	4606      	mov	r6, r0
 800ce56:	b08a      	sub	sp, #40	; 0x28
 800ce58:	4615      	mov	r5, r2
 800ce5a:	b191      	cbz	r1, 800ce82 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x30>
 800ce5c:	e9cd 3100 	strd	r3, r1, [sp]
 800ce60:	4613      	mov	r3, r2
 800ce62:	4601      	mov	r1, r0
 800ce64:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800ce68:	a802      	add	r0, sp, #8
 800ce6a:	f7ff fd20 	bl	800c8ae <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800ce6e:	2401      	movs	r4, #1
 800ce70:	2100      	movs	r1, #0
 800ce72:	a802      	add	r0, sp, #8
 800ce74:	f7ff ff30 	bl	800ccd8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800ce78:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800ce7c:	b173      	cbz	r3, 800ce9c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800ce7e:	3401      	adds	r4, #1
 800ce80:	e7f6      	b.n	800ce70 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1e>
 800ce82:	4611      	mov	r1, r2
 800ce84:	f002 f85c 	bl	800ef40 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ce88:	2401      	movs	r4, #1
 800ce8a:	280a      	cmp	r0, #10
 800ce8c:	4629      	mov	r1, r5
 800ce8e:	4630      	mov	r0, r6
 800ce90:	bf08      	it	eq
 800ce92:	3401      	addeq	r4, #1
 800ce94:	f002 f854 	bl	800ef40 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ce98:	2800      	cmp	r0, #0
 800ce9a:	d1f6      	bne.n	800ce8a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x38>
 800ce9c:	b2a0      	uxth	r0, r4
 800ce9e:	b00a      	add	sp, #40	; 0x28
 800cea0:	bd70      	pop	{r4, r5, r6, pc}

0800cea2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800cea2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cea6:	b0db      	sub	sp, #364	; 0x16c
 800cea8:	468a      	mov	sl, r1
 800ceaa:	f8dd b190 	ldr.w	fp, [sp, #400]	; 0x190
 800ceae:	9009      	str	r0, [sp, #36]	; 0x24
 800ceb0:	461c      	mov	r4, r3
 800ceb2:	f1bb 0f00 	cmp.w	fp, #0
 800ceb6:	f000 80c7 	beq.w	800d048 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800ceba:	681b      	ldr	r3, [r3, #0]
 800cebc:	2b00      	cmp	r3, #0
 800cebe:	f000 80c3 	beq.w	800d048 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800cec2:	7ba3      	ldrb	r3, [r4, #14]
 800cec4:	2b00      	cmp	r3, #0
 800cec6:	f000 80bf 	beq.w	800d048 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800ceca:	6810      	ldr	r0, [r2, #0]
 800cecc:	6851      	ldr	r1, [r2, #4]
 800cece:	f9ba 2004 	ldrsh.w	r2, [sl, #4]
 800ced2:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800ced6:	af0c      	add	r7, sp, #48	; 0x30
 800ced8:	463b      	mov	r3, r7
 800ceda:	c303      	stmia	r3!, {r0, r1}
 800cedc:	2100      	movs	r1, #0
 800cede:	f9ba 3006 	ldrsh.w	r3, [sl, #6]
 800cee2:	910e      	str	r1, [sp, #56]	; 0x38
 800cee4:	79a2      	ldrb	r2, [r4, #6]
 800cee6:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800ceea:	a90e      	add	r1, sp, #56	; 0x38
 800ceec:	4638      	mov	r0, r7
 800ceee:	f7ff fd4a 	bl	800c986 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800cef2:	a90e      	add	r1, sp, #56	; 0x38
 800cef4:	4608      	mov	r0, r1
 800cef6:	79a2      	ldrb	r2, [r4, #6]
 800cef8:	f10d 0960 	add.w	r9, sp, #96	; 0x60
 800cefc:	f7ff fd43 	bl	800c986 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800cf00:	4648      	mov	r0, r9
 800cf02:	f001 fedb 	bl	800ecbc <_ZN8touchgfx12TextProviderC1Ev>
 800cf06:	6820      	ldr	r0, [r4, #0]
 800cf08:	6803      	ldr	r3, [r0, #0]
 800cf0a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cf0c:	4798      	blx	r3
 800cf0e:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800cf10:	4603      	mov	r3, r0
 800cf12:	4659      	mov	r1, fp
 800cf14:	4648      	mov	r0, r9
 800cf16:	f001 feee 	bl	800ecf6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800cf1a:	a82e      	add	r0, sp, #184	; 0xb8
 800cf1c:	f001 fece 	bl	800ecbc <_ZN8touchgfx12TextProviderC1Ev>
 800cf20:	f894 8004 	ldrb.w	r8, [r4, #4]
 800cf24:	f1b8 0f00 	cmp.w	r8, #0
 800cf28:	d009      	beq.n	800cf3e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x9c>
 800cf2a:	6820      	ldr	r0, [r4, #0]
 800cf2c:	6803      	ldr	r3, [r0, #0]
 800cf2e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cf30:	4798      	blx	r3
 800cf32:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800cf34:	4603      	mov	r3, r0
 800cf36:	4659      	mov	r1, fp
 800cf38:	a82e      	add	r0, sp, #184	; 0xb8
 800cf3a:	f001 fedc 	bl	800ecf6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800cf3e:	6820      	ldr	r0, [r4, #0]
 800cf40:	6803      	ldr	r3, [r0, #0]
 800cf42:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cf44:	4798      	blx	r3
 800cf46:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800cf4a:	182e      	adds	r6, r5, r0
 800cf4c:	2e00      	cmp	r6, #0
 800cf4e:	dd45      	ble.n	800cfdc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x13a>
 800cf50:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800cf54:	4283      	cmp	r3, r0
 800cf56:	db41      	blt.n	800cfdc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x13a>
 800cf58:	441d      	add	r5, r3
 800cf5a:	fb95 f5f6 	sdiv	r5, r5, r6
 800cf5e:	a844      	add	r0, sp, #272	; 0x110
 800cf60:	f001 feac 	bl	800ecbc <_ZN8touchgfx12TextProviderC1Ev>
 800cf64:	7c23      	ldrb	r3, [r4, #16]
 800cf66:	b14b      	cbz	r3, 800cf7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xda>
 800cf68:	6820      	ldr	r0, [r4, #0]
 800cf6a:	6803      	ldr	r3, [r0, #0]
 800cf6c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cf6e:	4798      	blx	r3
 800cf70:	9a65      	ldr	r2, [sp, #404]	; 0x194
 800cf72:	4603      	mov	r3, r0
 800cf74:	4659      	mov	r1, fp
 800cf76:	a844      	add	r0, sp, #272	; 0x110
 800cf78:	f001 febd 	bl	800ecf6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800cf7c:	7c21      	ldrb	r1, [r4, #16]
 800cf7e:	9101      	str	r1, [sp, #4]
 800cf80:	6821      	ldr	r1, [r4, #0]
 800cf82:	7963      	ldrb	r3, [r4, #5]
 800cf84:	9100      	str	r1, [sp, #0]
 800cf86:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 800cf8a:	a944      	add	r1, sp, #272	; 0x110
 800cf8c:	a810      	add	r0, sp, #64	; 0x40
 800cf8e:	f7ff fc8e 	bl	800c8ae <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800cf92:	7c23      	ldrb	r3, [r4, #16]
 800cf94:	bb23      	cbnz	r3, 800cfe0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x13e>
 800cf96:	fa1f fb86 	uxth.w	fp, r6
 800cf9a:	2d00      	cmp	r5, #0
 800cf9c:	dd57      	ble.n	800d04e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ac>
 800cf9e:	7961      	ldrb	r1, [r4, #5]
 800cfa0:	4648      	mov	r0, r9
 800cfa2:	f001 ffcd 	bl	800ef40 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800cfa6:	4603      	mov	r3, r0
 800cfa8:	f1b8 0f00 	cmp.w	r8, #0
 800cfac:	d005      	beq.n	800cfba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x118>
 800cfae:	9008      	str	r0, [sp, #32]
 800cfb0:	7961      	ldrb	r1, [r4, #5]
 800cfb2:	a82e      	add	r0, sp, #184	; 0xb8
 800cfb4:	f001 ffc4 	bl	800ef40 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800cfb8:	9b08      	ldr	r3, [sp, #32]
 800cfba:	2b00      	cmp	r3, #0
 800cfbc:	d044      	beq.n	800d048 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800cfbe:	2b0a      	cmp	r3, #10
 800cfc0:	d1eb      	bne.n	800cf9a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf8>
 800cfc2:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800cfc6:	445b      	add	r3, fp
 800cfc8:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800cfcc:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800cfd0:	eba3 030b 	sub.w	r3, r3, fp
 800cfd4:	3d01      	subs	r5, #1
 800cfd6:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800cfda:	e7de      	b.n	800cf9a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf8>
 800cfdc:	2500      	movs	r5, #0
 800cfde:	e7be      	b.n	800cf5e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xbc>
 800cfe0:	0073      	lsls	r3, r6, #1
 800cfe2:	9308      	str	r3, [sp, #32]
 800cfe4:	2d00      	cmp	r5, #0
 800cfe6:	dd32      	ble.n	800d04e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ac>
 800cfe8:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800cfec:	9b08      	ldr	r3, [sp, #32]
 800cfee:	428b      	cmp	r3, r1
 800cff0:	bfd4      	ite	le
 800cff2:	2100      	movle	r1, #0
 800cff4:	2101      	movgt	r1, #1
 800cff6:	a810      	add	r0, sp, #64	; 0x40
 800cff8:	f7ff fe6e 	bl	800ccd8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800cffc:	f8bd b052 	ldrh.w	fp, [sp, #82]	; 0x52
 800d000:	f10b 33ff 	add.w	r3, fp, #4294967295
 800d004:	fa1f fb83 	uxth.w	fp, r3
 800d008:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d00c:	459b      	cmp	fp, r3
 800d00e:	d00b      	beq.n	800d028 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800d010:	7961      	ldrb	r1, [r4, #5]
 800d012:	4648      	mov	r0, r9
 800d014:	f001 ff94 	bl	800ef40 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d018:	f1b8 0f00 	cmp.w	r8, #0
 800d01c:	d0f0      	beq.n	800d000 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x15e>
 800d01e:	7961      	ldrb	r1, [r4, #5]
 800d020:	a82e      	add	r0, sp, #184	; 0xb8
 800d022:	f001 ff8d 	bl	800ef40 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d026:	e7eb      	b.n	800d000 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x15e>
 800d028:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 800d02c:	b2b3      	uxth	r3, r6
 800d02e:	441a      	add	r2, r3
 800d030:	f8ad 203a 	strh.w	r2, [sp, #58]	; 0x3a
 800d034:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800d038:	1ad3      	subs	r3, r2, r3
 800d03a:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d03e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800d042:	3d01      	subs	r5, #1
 800d044:	2b00      	cmp	r3, #0
 800d046:	d1cd      	bne.n	800cfe4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 800d048:	b05b      	add	sp, #364	; 0x16c
 800d04a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d04e:	ea4f 0b46 	mov.w	fp, r6, lsl #1
 800d052:	f10d 052e 	add.w	r5, sp, #46	; 0x2e
 800d056:	7c23      	ldrb	r3, [r4, #16]
 800d058:	2b00      	cmp	r3, #0
 800d05a:	d05f      	beq.n	800d11c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x27a>
 800d05c:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 800d060:	458b      	cmp	fp, r1
 800d062:	bfd4      	ite	le
 800d064:	2100      	movle	r1, #0
 800d066:	2101      	movgt	r1, #1
 800d068:	a810      	add	r0, sp, #64	; 0x40
 800d06a:	f7ff fe35 	bl	800ccd8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800d06e:	f1b8 0f00 	cmp.w	r8, #0
 800d072:	d04c      	beq.n	800d10e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800d074:	7c23      	ldrb	r3, [r4, #16]
 800d076:	2b00      	cmp	r3, #0
 800d078:	d053      	beq.n	800d122 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x280>
 800d07a:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
 800d07e:	7922      	ldrb	r2, [r4, #4]
 800d080:	2a01      	cmp	r2, #1
 800d082:	d13c      	bne.n	800d0fe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800d084:	f9bd 003c 	ldrsh.w	r0, [sp, #60]	; 0x3c
 800d088:	1ac0      	subs	r0, r0, r3
 800d08a:	2302      	movs	r3, #2
 800d08c:	fb90 f0f3 	sdiv	r0, r0, r3
 800d090:	b200      	sxth	r0, r0
 800d092:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800d096:	4418      	add	r0, r3
 800d098:	7c23      	ldrb	r3, [r4, #16]
 800d09a:	8028      	strh	r0, [r5, #0]
 800d09c:	2b00      	cmp	r3, #0
 800d09e:	d03a      	beq.n	800d116 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x274>
 800d0a0:	f8bd 2052 	ldrh.w	r2, [sp, #82]	; 0x52
 800d0a4:	f89d 105e 	ldrb.w	r1, [sp, #94]	; 0x5e
 800d0a8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 800d0ac:	f8cd 9010 	str.w	r9, [sp, #16]
 800d0b0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800d0b4:	2200      	movs	r2, #0
 800d0b6:	e9cd 4202 	strd	r4, r2, [sp, #8]
 800d0ba:	e9cd 5700 	strd	r5, r7, [sp]
 800d0be:	4652      	mov	r2, sl
 800d0c0:	2100      	movs	r1, #0
 800d0c2:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d0c4:	f7ff fcb0 	bl	800ca28 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800d0c8:	2800      	cmp	r0, #0
 800d0ca:	d1bd      	bne.n	800d048 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800d0cc:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 800d0d0:	b2b2      	uxth	r2, r6
 800d0d2:	4611      	mov	r1, r2
 800d0d4:	4413      	add	r3, r2
 800d0d6:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 800d0da:	1a52      	subs	r2, r2, r1
 800d0dc:	7c21      	ldrb	r1, [r4, #16]
 800d0de:	b21b      	sxth	r3, r3
 800d0e0:	b212      	sxth	r2, r2
 800d0e2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 800d0e6:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800d0ea:	b109      	cbz	r1, 800d0f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 800d0ec:	42b2      	cmp	r2, r6
 800d0ee:	dbab      	blt.n	800d048 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800d0f0:	887a      	ldrh	r2, [r7, #2]
 800d0f2:	88f9      	ldrh	r1, [r7, #6]
 800d0f4:	440a      	add	r2, r1
 800d0f6:	b212      	sxth	r2, r2
 800d0f8:	4293      	cmp	r3, r2
 800d0fa:	ddac      	ble.n	800d056 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1b4>
 800d0fc:	e7a4      	b.n	800d048 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a6>
 800d0fe:	2a02      	cmp	r2, #2
 800d100:	d107      	bne.n	800d112 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 800d102:	7be2      	ldrb	r2, [r4, #15]
 800d104:	f8bd 003c 	ldrh.w	r0, [sp, #60]	; 0x3c
 800d108:	1a80      	subs	r0, r0, r2
 800d10a:	1ac0      	subs	r0, r0, r3
 800d10c:	e7c0      	b.n	800d090 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ee>
 800d10e:	7be0      	ldrb	r0, [r4, #15]
 800d110:	e7bf      	b.n	800d092 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1f0>
 800d112:	2000      	movs	r0, #0
 800d114:	e7bd      	b.n	800d092 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1f0>
 800d116:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800d11a:	e7c3      	b.n	800d0a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x202>
 800d11c:	f1b8 0f00 	cmp.w	r8, #0
 800d120:	d0f5      	beq.n	800d10e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800d122:	2300      	movs	r3, #0
 800d124:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800d128:	6821      	ldr	r1, [r4, #0]
 800d12a:	a82e      	add	r0, sp, #184	; 0xb8
 800d12c:	f7ff fbf9 	bl	800c922 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800d130:	b203      	sxth	r3, r0
 800d132:	e7a4      	b.n	800d07e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>

0800d134 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800d134:	b510      	push	{r4, lr}
 800d136:	2b02      	cmp	r3, #2
 800d138:	f9b0 4000 	ldrsh.w	r4, [r0]
 800d13c:	d00b      	beq.n	800d156 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800d13e:	2b03      	cmp	r3, #3
 800d140:	d00e      	beq.n	800d160 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800d142:	2b01      	cmp	r3, #1
 800d144:	d001      	beq.n	800d14a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800d146:	1860      	adds	r0, r4, r1
 800d148:	bd10      	pop	{r4, pc}
 800d14a:	8880      	ldrh	r0, [r0, #4]
 800d14c:	4420      	add	r0, r4
 800d14e:	b200      	sxth	r0, r0
 800d150:	1a80      	subs	r0, r0, r2
 800d152:	3801      	subs	r0, #1
 800d154:	e7f8      	b.n	800d148 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800d156:	8880      	ldrh	r0, [r0, #4]
 800d158:	4420      	add	r0, r4
 800d15a:	b200      	sxth	r0, r0
 800d15c:	1a40      	subs	r0, r0, r1
 800d15e:	e7f8      	b.n	800d152 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800d160:	18a0      	adds	r0, r4, r2
 800d162:	e7f1      	b.n	800d148 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800d164 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800d164:	b510      	push	{r4, lr}
 800d166:	2b02      	cmp	r3, #2
 800d168:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800d16c:	d006      	beq.n	800d17c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800d16e:	2b03      	cmp	r3, #3
 800d170:	d00a      	beq.n	800d188 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800d172:	2b01      	cmp	r3, #1
 800d174:	bf14      	ite	ne
 800d176:	18a0      	addne	r0, r4, r2
 800d178:	1860      	addeq	r0, r4, r1
 800d17a:	bd10      	pop	{r4, pc}
 800d17c:	88c0      	ldrh	r0, [r0, #6]
 800d17e:	4420      	add	r0, r4
 800d180:	b200      	sxth	r0, r0
 800d182:	1a80      	subs	r0, r0, r2
 800d184:	3801      	subs	r0, #1
 800d186:	e7f8      	b.n	800d17a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800d188:	88c0      	ldrh	r0, [r0, #6]
 800d18a:	4420      	add	r0, r4
 800d18c:	b200      	sxth	r0, r0
 800d18e:	1a40      	subs	r0, r0, r1
 800d190:	e7f8      	b.n	800d184 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800d194 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800d194:	4b01      	ldr	r3, [pc, #4]	; (800d19c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800d196:	2200      	movs	r2, #0
 800d198:	601a      	str	r2, [r3, #0]
 800d19a:	4770      	bx	lr
 800d19c:	20026eb8 	.word	0x20026eb8

0800d1a0 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>:
 800d1a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d1a2:	e9dd e405 	ldrd	lr, r4, [sp, #20]
 800d1a6:	1e05      	subs	r5, r0, #0
 800d1a8:	bfba      	itte	lt
 800d1aa:	f04f 37ff 	movlt.w	r7, #4294967295
 800d1ae:	426d      	neglt	r5, r5
 800d1b0:	2701      	movge	r7, #1
 800d1b2:	f1be 0f00 	cmp.w	lr, #0
 800d1b6:	bfb8      	it	lt
 800d1b8:	f1ce 0e00 	rsblt	lr, lr, #0
 800d1bc:	f04f 0601 	mov.w	r6, #1
 800d1c0:	fa4e f001 	asr.w	r0, lr, r1
 800d1c4:	fa06 f101 	lsl.w	r1, r6, r1
 800d1c8:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800d1cc:	f101 31ff 	add.w	r1, r1, #4294967295
 800d1d0:	ea01 010e 	and.w	r1, r1, lr
 800d1d4:	bfb8      	it	lt
 800d1d6:	427f      	neglt	r7, r7
 800d1d8:	434d      	muls	r5, r1
 800d1da:	2c00      	cmp	r4, #0
 800d1dc:	f8dc 1000 	ldr.w	r1, [ip]
 800d1e0:	bfb8      	it	lt
 800d1e2:	4264      	neglt	r4, r4
 800d1e4:	fb03 1300 	mla	r3, r3, r0, r1
 800d1e8:	fb95 f1f4 	sdiv	r1, r5, r4
 800d1ec:	fb04 5511 	mls	r5, r4, r1, r5
 800d1f0:	441d      	add	r5, r3
 800d1f2:	fb95 f3f4 	sdiv	r3, r5, r4
 800d1f6:	fb04 5413 	mls	r4, r4, r3, r5
 800d1fa:	4419      	add	r1, r3
 800d1fc:	bfb8      	it	lt
 800d1fe:	427f      	neglt	r7, r7
 800d200:	fb02 1000 	mla	r0, r2, r0, r1
 800d204:	f8cc 4000 	str.w	r4, [ip]
 800d208:	4378      	muls	r0, r7
 800d20a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d20c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800d20c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d210:	4c24      	ldr	r4, [pc, #144]	; (800d2a4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x98>)
 800d212:	6807      	ldr	r7, [r0, #0]
 800d214:	69a3      	ldr	r3, [r4, #24]
 800d216:	b086      	sub	sp, #24
 800d218:	4605      	mov	r5, r0
 800d21a:	b92b      	cbnz	r3, 800d228 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1c>
 800d21c:	6840      	ldr	r0, [r0, #4]
 800d21e:	e9c5 7000 	strd	r7, r0, [r5]
 800d222:	b006      	add	sp, #24
 800d224:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d228:	68a2      	ldr	r2, [r4, #8]
 800d22a:	6820      	ldr	r0, [r4, #0]
 800d22c:	ae06      	add	r6, sp, #24
 800d22e:	f04f 0802 	mov.w	r8, #2
 800d232:	fb93 f1f8 	sdiv	r1, r3, r8
 800d236:	440a      	add	r2, r1
 800d238:	f846 2d04 	str.w	r2, [r6, #-4]!
 800d23c:	69e1      	ldr	r1, [r4, #28]
 800d23e:	9700      	str	r7, [sp, #0]
 800d240:	e9cd 3601 	strd	r3, r6, [sp, #4]
 800d244:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d246:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d248:	f7ff ffaa 	bl	800d1a0 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800d24c:	69a3      	ldr	r3, [r4, #24]
 800d24e:	9301      	str	r3, [sp, #4]
 800d250:	686b      	ldr	r3, [r5, #4]
 800d252:	9300      	str	r3, [sp, #0]
 800d254:	4607      	mov	r7, r0
 800d256:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800d258:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800d25a:	6a21      	ldr	r1, [r4, #32]
 800d25c:	9602      	str	r6, [sp, #8]
 800d25e:	6860      	ldr	r0, [r4, #4]
 800d260:	f7ff ff9e 	bl	800d1a0 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800d264:	6963      	ldr	r3, [r4, #20]
 800d266:	69a2      	ldr	r2, [r4, #24]
 800d268:	fb92 f8f8 	sdiv	r8, r2, r8
 800d26c:	4443      	add	r3, r8
 800d26e:	9305      	str	r3, [sp, #20]
 800d270:	682b      	ldr	r3, [r5, #0]
 800d272:	9300      	str	r3, [sp, #0]
 800d274:	e9cd 2601 	strd	r2, r6, [sp, #4]
 800d278:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800d27a:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800d27c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800d27e:	4407      	add	r7, r0
 800d280:	68e0      	ldr	r0, [r4, #12]
 800d282:	f7ff ff8d 	bl	800d1a0 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800d286:	69a3      	ldr	r3, [r4, #24]
 800d288:	9301      	str	r3, [sp, #4]
 800d28a:	686b      	ldr	r3, [r5, #4]
 800d28c:	9300      	str	r3, [sp, #0]
 800d28e:	4680      	mov	r8, r0
 800d290:	9602      	str	r6, [sp, #8]
 800d292:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800d294:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d296:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800d298:	6920      	ldr	r0, [r4, #16]
 800d29a:	f7ff ff81 	bl	800d1a0 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800d29e:	4440      	add	r0, r8
 800d2a0:	e7bd      	b.n	800d21e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x12>
 800d2a2:	bf00      	nop
 800d2a4:	20026ebc 	.word	0x20026ebc

0800d2a8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800d2a8:	b510      	push	{r4, lr}
 800d2aa:	4b07      	ldr	r3, [pc, #28]	; (800d2c8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800d2ac:	781b      	ldrb	r3, [r3, #0]
 800d2ae:	2b01      	cmp	r3, #1
 800d2b0:	d108      	bne.n	800d2c4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800d2b2:	4b06      	ldr	r3, [pc, #24]	; (800d2cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800d2b4:	880c      	ldrh	r4, [r1, #0]
 800d2b6:	881b      	ldrh	r3, [r3, #0]
 800d2b8:	f9b0 2000 	ldrsh.w	r2, [r0]
 800d2bc:	3b01      	subs	r3, #1
 800d2be:	1b1b      	subs	r3, r3, r4
 800d2c0:	8003      	strh	r3, [r0, #0]
 800d2c2:	800a      	strh	r2, [r1, #0]
 800d2c4:	bd10      	pop	{r4, pc}
 800d2c6:	bf00      	nop
 800d2c8:	20026ea8 	.word	0x20026ea8
 800d2cc:	20026eac 	.word	0x20026eac

0800d2d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800d2d0:	b510      	push	{r4, lr}
 800d2d2:	4b0a      	ldr	r3, [pc, #40]	; (800d2fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800d2d4:	781b      	ldrb	r3, [r3, #0]
 800d2d6:	2b01      	cmp	r3, #1
 800d2d8:	d10e      	bne.n	800d2f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800d2da:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800d2de:	8843      	ldrh	r3, [r0, #2]
 800d2e0:	f9b0 4000 	ldrsh.w	r4, [r0]
 800d2e4:	8044      	strh	r4, [r0, #2]
 800d2e6:	18ca      	adds	r2, r1, r3
 800d2e8:	4b05      	ldr	r3, [pc, #20]	; (800d300 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800d2ea:	881b      	ldrh	r3, [r3, #0]
 800d2ec:	1a9b      	subs	r3, r3, r2
 800d2ee:	8003      	strh	r3, [r0, #0]
 800d2f0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800d2f4:	80c3      	strh	r3, [r0, #6]
 800d2f6:	8081      	strh	r1, [r0, #4]
 800d2f8:	bd10      	pop	{r4, pc}
 800d2fa:	bf00      	nop
 800d2fc:	20026ea8 	.word	0x20026ea8
 800d300:	20026ea4 	.word	0x20026ea4

0800d304 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800d304:	b510      	push	{r4, lr}
 800d306:	4b07      	ldr	r3, [pc, #28]	; (800d324 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800d308:	781b      	ldrb	r3, [r3, #0]
 800d30a:	2b01      	cmp	r3, #1
 800d30c:	d108      	bne.n	800d320 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800d30e:	f9b1 3000 	ldrsh.w	r3, [r1]
 800d312:	f9b0 4000 	ldrsh.w	r4, [r0]
 800d316:	8003      	strh	r3, [r0, #0]
 800d318:	8893      	ldrh	r3, [r2, #4]
 800d31a:	3b01      	subs	r3, #1
 800d31c:	1b1b      	subs	r3, r3, r4
 800d31e:	800b      	strh	r3, [r1, #0]
 800d320:	bd10      	pop	{r4, pc}
 800d322:	bf00      	nop
 800d324:	20026ea8 	.word	0x20026ea8

0800d328 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800d328:	b513      	push	{r0, r1, r4, lr}
 800d32a:	4b08      	ldr	r3, [pc, #32]	; (800d34c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800d32c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d330:	4b07      	ldr	r3, [pc, #28]	; (800d350 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800d332:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d336:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d33a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d33e:	2400      	movs	r4, #0
 800d340:	466a      	mov	r2, sp
 800d342:	9400      	str	r4, [sp, #0]
 800d344:	f7ff ffde 	bl	800d304 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800d348:	b002      	add	sp, #8
 800d34a:	bd10      	pop	{r4, pc}
 800d34c:	20026ea4 	.word	0x20026ea4
 800d350:	20026ea6 	.word	0x20026ea6

0800d354 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800d354:	b510      	push	{r4, lr}
 800d356:	4b0a      	ldr	r3, [pc, #40]	; (800d380 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800d358:	781b      	ldrb	r3, [r3, #0]
 800d35a:	2b01      	cmp	r3, #1
 800d35c:	460a      	mov	r2, r1
 800d35e:	d10d      	bne.n	800d37c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800d360:	8881      	ldrh	r1, [r0, #4]
 800d362:	8803      	ldrh	r3, [r0, #0]
 800d364:	440b      	add	r3, r1
 800d366:	4601      	mov	r1, r0
 800d368:	3b01      	subs	r3, #1
 800d36a:	f821 3b02 	strh.w	r3, [r1], #2
 800d36e:	f7ff ffc9 	bl	800d304 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800d372:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800d376:	88c2      	ldrh	r2, [r0, #6]
 800d378:	8082      	strh	r2, [r0, #4]
 800d37a:	80c3      	strh	r3, [r0, #6]
 800d37c:	bd10      	pop	{r4, pc}
 800d37e:	bf00      	nop
 800d380:	20026ea8 	.word	0x20026ea8

0800d384 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800d384:	b507      	push	{r0, r1, r2, lr}
 800d386:	4b09      	ldr	r3, [pc, #36]	; (800d3ac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800d388:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d38c:	4b08      	ldr	r3, [pc, #32]	; (800d3b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800d38e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d392:	2100      	movs	r1, #0
 800d394:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d398:	9100      	str	r1, [sp, #0]
 800d39a:	4669      	mov	r1, sp
 800d39c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d3a0:	f7ff ffd8 	bl	800d354 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800d3a4:	b003      	add	sp, #12
 800d3a6:	f85d fb04 	ldr.w	pc, [sp], #4
 800d3aa:	bf00      	nop
 800d3ac:	20026ea4 	.word	0x20026ea4
 800d3b0:	20026ea6 	.word	0x20026ea6

0800d3b4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800d3b4:	4b03      	ldr	r3, [pc, #12]	; (800d3c4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800d3b6:	6818      	ldr	r0, [r3, #0]
 800d3b8:	b110      	cbz	r0, 800d3c0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800d3ba:	6803      	ldr	r3, [r0, #0]
 800d3bc:	699b      	ldr	r3, [r3, #24]
 800d3be:	4718      	bx	r3
 800d3c0:	4770      	bx	lr
 800d3c2:	bf00      	nop
 800d3c4:	20026f0c 	.word	0x20026f0c

0800d3c8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800d3c8:	4770      	bx	lr
	...

0800d3cc <_ZN8touchgfx11Application4drawEv>:
 800d3cc:	b507      	push	{r0, r1, r2, lr}
 800d3ce:	4b09      	ldr	r3, [pc, #36]	; (800d3f4 <_ZN8touchgfx11Application4drawEv+0x28>)
 800d3d0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d3d4:	4b08      	ldr	r3, [pc, #32]	; (800d3f8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800d3d6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d3da:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d3de:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d3e2:	6803      	ldr	r3, [r0, #0]
 800d3e4:	2100      	movs	r1, #0
 800d3e6:	9100      	str	r1, [sp, #0]
 800d3e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d3ea:	4669      	mov	r1, sp
 800d3ec:	4798      	blx	r3
 800d3ee:	b003      	add	sp, #12
 800d3f0:	f85d fb04 	ldr.w	pc, [sp], #4
 800d3f4:	20026ea4 	.word	0x20026ea4
 800d3f8:	20026ea6 	.word	0x20026ea6

0800d3fc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800d3fc:	4b03      	ldr	r3, [pc, #12]	; (800d40c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800d3fe:	6818      	ldr	r0, [r3, #0]
 800d400:	b110      	cbz	r0, 800d408 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800d402:	6803      	ldr	r3, [r0, #0]
 800d404:	69db      	ldr	r3, [r3, #28]
 800d406:	4718      	bx	r3
 800d408:	4770      	bx	lr
 800d40a:	bf00      	nop
 800d40c:	20026f0c 	.word	0x20026f0c

0800d410 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800d410:	4b03      	ldr	r3, [pc, #12]	; (800d420 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800d412:	6818      	ldr	r0, [r3, #0]
 800d414:	b110      	cbz	r0, 800d41c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800d416:	6803      	ldr	r3, [r0, #0]
 800d418:	6a1b      	ldr	r3, [r3, #32]
 800d41a:	4718      	bx	r3
 800d41c:	4770      	bx	lr
 800d41e:	bf00      	nop
 800d420:	20026f0c 	.word	0x20026f0c

0800d424 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800d424:	4b03      	ldr	r3, [pc, #12]	; (800d434 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800d426:	6818      	ldr	r0, [r3, #0]
 800d428:	b110      	cbz	r0, 800d430 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800d42a:	6803      	ldr	r3, [r0, #0]
 800d42c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d42e:	4718      	bx	r3
 800d430:	4770      	bx	lr
 800d432:	bf00      	nop
 800d434:	20026f0c 	.word	0x20026f0c

0800d438 <_ZN8touchgfx11Application15handleTickEventEv>:
 800d438:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d43c:	4d3a      	ldr	r5, [pc, #232]	; (800d528 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 800d43e:	4604      	mov	r4, r0
 800d440:	6828      	ldr	r0, [r5, #0]
 800d442:	b140      	cbz	r0, 800d456 <_ZN8touchgfx11Application15handleTickEventEv+0x1e>
 800d444:	7a03      	ldrb	r3, [r0, #8]
 800d446:	b933      	cbnz	r3, 800d456 <_ZN8touchgfx11Application15handleTickEventEv+0x1e>
 800d448:	f884 312d 	strb.w	r3, [r4, #301]	; 0x12d
 800d44c:	6803      	ldr	r3, [r0, #0]
 800d44e:	689b      	ldr	r3, [r3, #8]
 800d450:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d454:	4718      	bx	r3
 800d456:	f894 312d 	ldrb.w	r3, [r4, #301]	; 0x12d
 800d45a:	b97b      	cbnz	r3, 800d47c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800d45c:	b170      	cbz	r0, 800d47c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800d45e:	7a03      	ldrb	r3, [r0, #8]
 800d460:	b163      	cbz	r3, 800d47c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800d462:	4b32      	ldr	r3, [pc, #200]	; (800d52c <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800d464:	6818      	ldr	r0, [r3, #0]
 800d466:	b110      	cbz	r0, 800d46e <_ZN8touchgfx11Application15handleTickEventEv+0x36>
 800d468:	6803      	ldr	r3, [r0, #0]
 800d46a:	691b      	ldr	r3, [r3, #16]
 800d46c:	4798      	blx	r3
 800d46e:	6828      	ldr	r0, [r5, #0]
 800d470:	6803      	ldr	r3, [r0, #0]
 800d472:	68db      	ldr	r3, [r3, #12]
 800d474:	4798      	blx	r3
 800d476:	2301      	movs	r3, #1
 800d478:	f884 312d 	strb.w	r3, [r4, #301]	; 0x12d
 800d47c:	2500      	movs	r5, #0
 800d47e:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800d482:	42a8      	cmp	r0, r5
 800d484:	dd0c      	ble.n	800d4a0 <_ZN8touchgfx11Application15handleTickEventEv+0x68>
 800d486:	1963      	adds	r3, r4, r5
 800d488:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800d48c:	b132      	cbz	r2, 800d49c <_ZN8touchgfx11Application15handleTickEventEv+0x64>
 800d48e:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800d492:	4413      	add	r3, r2
 800d494:	6858      	ldr	r0, [r3, #4]
 800d496:	6803      	ldr	r3, [r0, #0]
 800d498:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800d49a:	4798      	blx	r3
 800d49c:	3501      	adds	r5, #1
 800d49e:	e7ee      	b.n	800d47e <_ZN8touchgfx11Application15handleTickEventEv+0x46>
 800d4a0:	f5c4 467f 	rsb	r6, r4, #65280	; 0xff00
 800d4a4:	3801      	subs	r0, #1
 800d4a6:	3678      	adds	r6, #120	; 0x78
 800d4a8:	f04f 0c00 	mov.w	ip, #0
 800d4ac:	1c43      	adds	r3, r0, #1
 800d4ae:	d033      	beq.n	800d518 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 800d4b0:	1823      	adds	r3, r4, r0
 800d4b2:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800d4b6:	bb6a      	cbnz	r2, 800d514 <_ZN8touchgfx11Application15handleTickEventEv+0xdc>
 800d4b8:	b281      	uxth	r1, r0
 800d4ba:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 800d4be:	1d25      	adds	r5, r4, #4
 800d4c0:	f8d3 9004 	ldr.w	r9, [r3, #4]
 800d4c4:	f8b4 3084 	ldrh.w	r3, [r4, #132]	; 0x84
 800d4c8:	4293      	cmp	r3, r2
 800d4ca:	dc0a      	bgt.n	800d4e2 <_ZN8touchgfx11Application15handleTickEventEv+0xaa>
 800d4cc:	f101 0288 	add.w	r2, r1, #136	; 0x88
 800d4d0:	4422      	add	r2, r4
 800d4d2:	18b1      	adds	r1, r6, r2
 800d4d4:	b289      	uxth	r1, r1
 800d4d6:	428b      	cmp	r3, r1
 800d4d8:	d919      	bls.n	800d50e <_ZN8touchgfx11Application15handleTickEventEv+0xd6>
 800d4da:	7851      	ldrb	r1, [r2, #1]
 800d4dc:	f802 1b01 	strb.w	r1, [r2], #1
 800d4e0:	e7f7      	b.n	800d4d2 <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 800d4e2:	682f      	ldr	r7, [r5, #0]
 800d4e4:	45b9      	cmp	r9, r7
 800d4e6:	f105 0804 	add.w	r8, r5, #4
 800d4ea:	d10d      	bne.n	800d508 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>
 800d4ec:	4696      	mov	lr, r2
 800d4ee:	f1be 0f1e 	cmp.w	lr, #30
 800d4f2:	dc06      	bgt.n	800d502 <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 800d4f4:	f10e 0e01 	add.w	lr, lr, #1
 800d4f8:	686f      	ldr	r7, [r5, #4]
 800d4fa:	f845 7b04 	str.w	r7, [r5], #4
 800d4fe:	4573      	cmp	r3, lr
 800d500:	dcf5      	bgt.n	800d4ee <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 800d502:	3b01      	subs	r3, #1
 800d504:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 800d508:	3201      	adds	r2, #1
 800d50a:	4645      	mov	r5, r8
 800d50c:	e7da      	b.n	800d4c4 <_ZN8touchgfx11Application15handleTickEventEv+0x8c>
 800d50e:	4423      	add	r3, r4
 800d510:	f883 c088 	strb.w	ip, [r3, #136]	; 0x88
 800d514:	3801      	subs	r0, #1
 800d516:	e7c9      	b.n	800d4ac <_ZN8touchgfx11Application15handleTickEventEv+0x74>
 800d518:	4b04      	ldr	r3, [pc, #16]	; (800d52c <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800d51a:	6818      	ldr	r0, [r3, #0]
 800d51c:	b110      	cbz	r0, 800d524 <_ZN8touchgfx11Application15handleTickEventEv+0xec>
 800d51e:	6803      	ldr	r3, [r0, #0]
 800d520:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d522:	e795      	b.n	800d450 <_ZN8touchgfx11Application15handleTickEventEv+0x18>
 800d524:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d528:	20026f10 	.word	0x20026f10
 800d52c:	20026f0c 	.word	0x20026f0c

0800d530 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800d530:	b570      	push	{r4, r5, r6, lr}
 800d532:	4606      	mov	r6, r0
 800d534:	460c      	mov	r4, r1
 800d536:	b929      	cbnz	r1, 800d544 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800d538:	4b0c      	ldr	r3, [pc, #48]	; (800d56c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800d53a:	4a0d      	ldr	r2, [pc, #52]	; (800d570 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800d53c:	480d      	ldr	r0, [pc, #52]	; (800d574 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800d53e:	2164      	movs	r1, #100	; 0x64
 800d540:	f00d fe30 	bl	801b1a4 <__assert_func>
 800d544:	4d0c      	ldr	r5, [pc, #48]	; (800d578 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800d546:	2300      	movs	r3, #0
 800d548:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800d54c:	6828      	ldr	r0, [r5, #0]
 800d54e:	b110      	cbz	r0, 800d556 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800d550:	6803      	ldr	r3, [r0, #0]
 800d552:	695b      	ldr	r3, [r3, #20]
 800d554:	4798      	blx	r3
 800d556:	602c      	str	r4, [r5, #0]
 800d558:	6823      	ldr	r3, [r4, #0]
 800d55a:	4620      	mov	r0, r4
 800d55c:	68db      	ldr	r3, [r3, #12]
 800d55e:	4798      	blx	r3
 800d560:	6833      	ldr	r3, [r6, #0]
 800d562:	4630      	mov	r0, r6
 800d564:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d566:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d56a:	4718      	bx	r3
 800d56c:	0801e498 	.word	0x0801e498
 800d570:	0801e560 	.word	0x0801e560
 800d574:	0801e4a2 	.word	0x0801e4a2
 800d578:	20026f0c 	.word	0x20026f0c

0800d57c <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800d57c:	b510      	push	{r4, lr}
 800d57e:	f9b1 4000 	ldrsh.w	r4, [r1]
 800d582:	888a      	ldrh	r2, [r1, #4]
 800d584:	f9b0 3000 	ldrsh.w	r3, [r0]
 800d588:	4422      	add	r2, r4
 800d58a:	b212      	sxth	r2, r2
 800d58c:	4293      	cmp	r3, r2
 800d58e:	da15      	bge.n	800d5bc <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800d590:	8882      	ldrh	r2, [r0, #4]
 800d592:	4413      	add	r3, r2
 800d594:	b21b      	sxth	r3, r3
 800d596:	429c      	cmp	r4, r3
 800d598:	da10      	bge.n	800d5bc <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800d59a:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800d59e:	88c9      	ldrh	r1, [r1, #6]
 800d5a0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800d5a4:	4419      	add	r1, r3
 800d5a6:	b209      	sxth	r1, r1
 800d5a8:	428a      	cmp	r2, r1
 800d5aa:	da07      	bge.n	800d5bc <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800d5ac:	88c0      	ldrh	r0, [r0, #6]
 800d5ae:	4410      	add	r0, r2
 800d5b0:	b200      	sxth	r0, r0
 800d5b2:	4283      	cmp	r3, r0
 800d5b4:	bfac      	ite	ge
 800d5b6:	2000      	movge	r0, #0
 800d5b8:	2001      	movlt	r0, #1
 800d5ba:	bd10      	pop	{r4, pc}
 800d5bc:	2000      	movs	r0, #0
 800d5be:	e7fc      	b.n	800d5ba <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800d5c0 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800d5c0:	b570      	push	{r4, r5, r6, lr}
 800d5c2:	f9b1 4000 	ldrsh.w	r4, [r1]
 800d5c6:	f9b0 5000 	ldrsh.w	r5, [r0]
 800d5ca:	42ac      	cmp	r4, r5
 800d5cc:	db18      	blt.n	800d600 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800d5ce:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800d5d2:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800d5d6:	429a      	cmp	r2, r3
 800d5d8:	db12      	blt.n	800d600 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800d5da:	8886      	ldrh	r6, [r0, #4]
 800d5dc:	4435      	add	r5, r6
 800d5de:	888e      	ldrh	r6, [r1, #4]
 800d5e0:	4434      	add	r4, r6
 800d5e2:	b22d      	sxth	r5, r5
 800d5e4:	b224      	sxth	r4, r4
 800d5e6:	42a5      	cmp	r5, r4
 800d5e8:	db0a      	blt.n	800d600 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800d5ea:	88c0      	ldrh	r0, [r0, #6]
 800d5ec:	4418      	add	r0, r3
 800d5ee:	88cb      	ldrh	r3, [r1, #6]
 800d5f0:	441a      	add	r2, r3
 800d5f2:	b200      	sxth	r0, r0
 800d5f4:	b212      	sxth	r2, r2
 800d5f6:	4290      	cmp	r0, r2
 800d5f8:	bfb4      	ite	lt
 800d5fa:	2000      	movlt	r0, #0
 800d5fc:	2001      	movge	r0, #1
 800d5fe:	bd70      	pop	{r4, r5, r6, pc}
 800d600:	2000      	movs	r0, #0
 800d602:	e7fc      	b.n	800d5fe <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800d604 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800d604:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d606:	4604      	mov	r4, r0
 800d608:	4608      	mov	r0, r1
 800d60a:	460d      	mov	r5, r1
 800d60c:	f7fd fae6 	bl	800abdc <_ZNK8touchgfx4Rect7isEmptyEv>
 800d610:	b978      	cbnz	r0, 800d632 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800d612:	4620      	mov	r0, r4
 800d614:	f7fd fae2 	bl	800abdc <_ZNK8touchgfx4Rect7isEmptyEv>
 800d618:	f9b5 6000 	ldrsh.w	r6, [r5]
 800d61c:	b150      	cbz	r0, 800d634 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800d61e:	8026      	strh	r6, [r4, #0]
 800d620:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800d624:	8063      	strh	r3, [r4, #2]
 800d626:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800d62a:	80a3      	strh	r3, [r4, #4]
 800d62c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800d630:	80e3      	strh	r3, [r4, #6]
 800d632:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d634:	f9b4 1000 	ldrsh.w	r1, [r4]
 800d638:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800d63c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800d640:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800d644:	88ed      	ldrh	r5, [r5, #6]
 800d646:	42b1      	cmp	r1, r6
 800d648:	460f      	mov	r7, r1
 800d64a:	bfa8      	it	ge
 800d64c:	4637      	movge	r7, r6
 800d64e:	4293      	cmp	r3, r2
 800d650:	4618      	mov	r0, r3
 800d652:	4466      	add	r6, ip
 800d654:	bfa8      	it	ge
 800d656:	4610      	movge	r0, r2
 800d658:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800d65c:	8027      	strh	r7, [r4, #0]
 800d65e:	442a      	add	r2, r5
 800d660:	88e5      	ldrh	r5, [r4, #6]
 800d662:	8060      	strh	r0, [r4, #2]
 800d664:	4461      	add	r1, ip
 800d666:	442b      	add	r3, r5
 800d668:	b236      	sxth	r6, r6
 800d66a:	b209      	sxth	r1, r1
 800d66c:	b212      	sxth	r2, r2
 800d66e:	b21b      	sxth	r3, r3
 800d670:	428e      	cmp	r6, r1
 800d672:	bfac      	ite	ge
 800d674:	ebc7 0106 	rsbge	r1, r7, r6
 800d678:	ebc7 0101 	rsblt	r1, r7, r1
 800d67c:	429a      	cmp	r2, r3
 800d67e:	bfac      	ite	ge
 800d680:	ebc0 0202 	rsbge	r2, r0, r2
 800d684:	ebc0 0203 	rsblt	r2, r0, r3
 800d688:	80a1      	strh	r1, [r4, #4]
 800d68a:	80e2      	strh	r2, [r4, #6]
 800d68c:	e7d1      	b.n	800d632 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800d690 <_ZN8touchgfx11Application11getInstanceEv>:
 800d690:	4b01      	ldr	r3, [pc, #4]	; (800d698 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800d692:	6818      	ldr	r0, [r3, #0]
 800d694:	4770      	bx	lr
 800d696:	bf00      	nop
 800d698:	20026f1c 	.word	0x20026f1c

0800d69c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800d69c:	2300      	movs	r3, #0
 800d69e:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800d6a2:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800d6a6:	30a8      	adds	r0, #168	; 0xa8
 800d6a8:	f802 3b01 	strb.w	r3, [r2], #1
 800d6ac:	4282      	cmp	r2, r0
 800d6ae:	d1fb      	bne.n	800d6a8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800d6b0:	4770      	bx	lr

0800d6b2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800d6b2:	4603      	mov	r3, r0
 800d6b4:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800d6b8:	2200      	movs	r2, #0
 800d6ba:	801a      	strh	r2, [r3, #0]
 800d6bc:	805a      	strh	r2, [r3, #2]
 800d6be:	809a      	strh	r2, [r3, #4]
 800d6c0:	80da      	strh	r2, [r3, #6]
 800d6c2:	3308      	adds	r3, #8
 800d6c4:	428b      	cmp	r3, r1
 800d6c6:	d1f8      	bne.n	800d6ba <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800d6c8:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800d6cc:	4770      	bx	lr
	...

0800d6d0 <_ZN8touchgfx11ApplicationC1Ev>:
 800d6d0:	b570      	push	{r4, r5, r6, lr}
 800d6d2:	4b16      	ldr	r3, [pc, #88]	; (800d72c <_ZN8touchgfx11ApplicationC1Ev+0x5c>)
 800d6d4:	6003      	str	r3, [r0, #0]
 800d6d6:	2500      	movs	r5, #0
 800d6d8:	4604      	mov	r4, r0
 800d6da:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800d6de:	30a8      	adds	r0, #168	; 0xa8
 800d6e0:	f7ff ffe7 	bl	800d6b2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d6e4:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800d6e8:	f7ff ffe3 	bl	800d6b2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d6ec:	f884 512c 	strb.w	r5, [r4, #300]	; 0x12c
 800d6f0:	f884 512d 	strb.w	r5, [r4, #301]	; 0x12d
 800d6f4:	490e      	ldr	r1, [pc, #56]	; (800d730 <_ZN8touchgfx11ApplicationC1Ev+0x60>)
 800d6f6:	480f      	ldr	r0, [pc, #60]	; (800d734 <_ZN8touchgfx11ApplicationC1Ev+0x64>)
 800d6f8:	4e0f      	ldr	r6, [pc, #60]	; (800d738 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 800d6fa:	f00d fc21 	bl	801af40 <CRC_Lock>
 800d6fe:	4b0f      	ldr	r3, [pc, #60]	; (800d73c <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800d700:	b158      	cbz	r0, 800d71a <_ZN8touchgfx11ApplicationC1Ev+0x4a>
 800d702:	801d      	strh	r5, [r3, #0]
 800d704:	4a0e      	ldr	r2, [pc, #56]	; (800d740 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800d706:	2300      	movs	r3, #0
 800d708:	6013      	str	r3, [r2, #0]
 800d70a:	4a0e      	ldr	r2, [pc, #56]	; (800d744 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800d70c:	6033      	str	r3, [r6, #0]
 800d70e:	4620      	mov	r0, r4
 800d710:	6013      	str	r3, [r2, #0]
 800d712:	f7ff ffc3 	bl	800d69c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800d716:	4620      	mov	r0, r4
 800d718:	bd70      	pop	{r4, r5, r6, pc}
 800d71a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800d71e:	2002      	movs	r0, #2
 800d720:	801a      	strh	r2, [r3, #0]
 800d722:	6030      	str	r0, [r6, #0]
 800d724:	f000 ff24 	bl	800e570 <_ZN8touchgfx6Screen4drawEv>
 800d728:	e7ec      	b.n	800d704 <_ZN8touchgfx11ApplicationC1Ev+0x34>
 800d72a:	bf00      	nop
 800d72c:	0801e52c 	.word	0x0801e52c
 800d730:	b5e8b5cd 	.word	0xb5e8b5cd
 800d734:	f407a5c2 	.word	0xf407a5c2
 800d738:	20026f0c 	.word	0x20026f0c
 800d73c:	20000024 	.word	0x20000024
 800d740:	20026f1c 	.word	0x20026f1c
 800d744:	20026f10 	.word	0x20026f10

0800d748 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800d748:	2300      	movs	r3, #0
 800d74a:	8003      	strh	r3, [r0, #0]
 800d74c:	8043      	strh	r3, [r0, #2]
 800d74e:	8083      	strh	r3, [r0, #4]
 800d750:	80c3      	strh	r3, [r0, #6]
 800d752:	f8b1 3040 	ldrh.w	r3, [r1, #64]	; 0x40
 800d756:	4293      	cmp	r3, r2
 800d758:	b530      	push	{r4, r5, lr}
 800d75a:	d912      	bls.n	800d782 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800d75c:	eb01 04c2 	add.w	r4, r1, r2, lsl #3
 800d760:	3b01      	subs	r3, #1
 800d762:	6825      	ldr	r5, [r4, #0]
 800d764:	6005      	str	r5, [r0, #0]
 800d766:	b29b      	uxth	r3, r3
 800d768:	6865      	ldr	r5, [r4, #4]
 800d76a:	6045      	str	r5, [r0, #4]
 800d76c:	4293      	cmp	r3, r2
 800d76e:	f8a1 3040 	strh.w	r3, [r1, #64]	; 0x40
 800d772:	d906      	bls.n	800d782 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800d774:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800d778:	681d      	ldr	r5, [r3, #0]
 800d77a:	f841 5032 	str.w	r5, [r1, r2, lsl #3]
 800d77e:	685d      	ldr	r5, [r3, #4]
 800d780:	6065      	str	r5, [r4, #4]
 800d782:	bd30      	pop	{r4, r5, pc}

0800d784 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800d784:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d786:	466b      	mov	r3, sp
 800d788:	e883 0006 	stmia.w	r3, {r1, r2}
 800d78c:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800d790:	2a07      	cmp	r2, #7
 800d792:	4604      	mov	r4, r0
 800d794:	d906      	bls.n	800d7a4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800d796:	4b09      	ldr	r3, [pc, #36]	; (800d7bc <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800d798:	4a09      	ldr	r2, [pc, #36]	; (800d7c0 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800d79a:	480a      	ldr	r0, [pc, #40]	; (800d7c4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800d79c:	f44f 7102 	mov.w	r1, #520	; 0x208
 800d7a0:	f00d fd00 	bl	801b1a4 <__assert_func>
 800d7a4:	1c51      	adds	r1, r2, #1
 800d7a6:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800d7aa:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800d7ae:	cb03      	ldmia	r3!, {r0, r1}
 800d7b0:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800d7b4:	6069      	str	r1, [r5, #4]
 800d7b6:	b003      	add	sp, #12
 800d7b8:	bd30      	pop	{r4, r5, pc}
 800d7ba:	bf00      	nop
 800d7bc:	0801e4cc 	.word	0x0801e4cc
 800d7c0:	0801e5a4 	.word	0x0801e5a4
 800d7c4:	0801e4fb 	.word	0x0801e4fb

0800d7c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800d7c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d7cc:	b089      	sub	sp, #36	; 0x24
 800d7ce:	466c      	mov	r4, sp
 800d7d0:	4606      	mov	r6, r0
 800d7d2:	4620      	mov	r0, r4
 800d7d4:	e884 0006 	stmia.w	r4, {r1, r2}
 800d7d8:	f7fd fa00 	bl	800abdc <_ZNK8touchgfx4Rect7isEmptyEv>
 800d7dc:	bbb0      	cbnz	r0, 800d84c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800d7de:	f8b6 50e8 	ldrh.w	r5, [r6, #232]	; 0xe8
 800d7e2:	b1fd      	cbz	r5, 800d824 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c>
 800d7e4:	3d01      	subs	r5, #1
 800d7e6:	af04      	add	r7, sp, #16
 800d7e8:	f04f 090a 	mov.w	r9, #10
 800d7ec:	eb06 02c5 	add.w	r2, r6, r5, lsl #3
 800d7f0:	ab02      	add	r3, sp, #8
 800d7f2:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d7f6:	6851      	ldr	r1, [r2, #4]
 800d7f8:	c303      	stmia	r3!, {r0, r1}
 800d7fa:	4621      	mov	r1, r4
 800d7fc:	a802      	add	r0, sp, #8
 800d7fe:	fa1f f885 	uxth.w	r8, r5
 800d802:	f7ff fedd 	bl	800d5c0 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d806:	bb08      	cbnz	r0, 800d84c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800d808:	a902      	add	r1, sp, #8
 800d80a:	4620      	mov	r0, r4
 800d80c:	f7ff fed8 	bl	800d5c0 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d810:	b1f8      	cbz	r0, 800d852 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x8a>
 800d812:	4642      	mov	r2, r8
 800d814:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800d818:	a806      	add	r0, sp, #24
 800d81a:	f7ff ff95 	bl	800d748 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d81e:	f115 35ff 	adds.w	r5, r5, #4294967295
 800d822:	d2e3      	bcs.n	800d7ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24>
 800d824:	f8b6 30e8 	ldrh.w	r3, [r6, #232]	; 0xe8
 800d828:	2b08      	cmp	r3, #8
 800d82a:	f106 05a8 	add.w	r5, r6, #168	; 0xa8
 800d82e:	d108      	bne.n	800d842 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800d830:	4629      	mov	r1, r5
 800d832:	a806      	add	r0, sp, #24
 800d834:	2207      	movs	r2, #7
 800d836:	f7ff ff87 	bl	800d748 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d83a:	a906      	add	r1, sp, #24
 800d83c:	4620      	mov	r0, r4
 800d83e:	f7ff fee1 	bl	800d604 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d842:	e894 0006 	ldmia.w	r4, {r1, r2}
 800d846:	4628      	mov	r0, r5
 800d848:	f7ff ff9c 	bl	800d784 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d84c:	b009      	add	sp, #36	; 0x24
 800d84e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d852:	4621      	mov	r1, r4
 800d854:	a802      	add	r0, sp, #8
 800d856:	f7ff fe91 	bl	800d57c <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d85a:	b150      	cbz	r0, 800d872 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xaa>
 800d85c:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800d860:	a806      	add	r0, sp, #24
 800d862:	4642      	mov	r2, r8
 800d864:	f7ff ff70 	bl	800d748 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d868:	a902      	add	r1, sp, #8
 800d86a:	4620      	mov	r0, r4
 800d86c:	f7ff feca 	bl	800d604 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d870:	e7d5      	b.n	800d81e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800d872:	e894 0003 	ldmia.w	r4, {r0, r1}
 800d876:	e887 0003 	stmia.w	r7, {r0, r1}
 800d87a:	a902      	add	r1, sp, #8
 800d87c:	4638      	mov	r0, r7
 800d87e:	f7ff fec1 	bl	800d604 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d882:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d886:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800d88a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 800d88e:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800d892:	fb13 f302 	smulbb	r3, r3, r2
 800d896:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800d89a:	fb11 f102 	smulbb	r1, r1, r2
 800d89e:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800d8a2:	fb12 1100 	smlabb	r1, r2, r0, r1
 800d8a6:	220b      	movs	r2, #11
 800d8a8:	fb09 f303 	mul.w	r3, r9, r3
 800d8ac:	434a      	muls	r2, r1
 800d8ae:	4293      	cmp	r3, r2
 800d8b0:	dab5      	bge.n	800d81e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800d8b2:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800d8b6:	a806      	add	r0, sp, #24
 800d8b8:	4642      	mov	r2, r8
 800d8ba:	f7ff ff45 	bl	800d748 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d8be:	e897 0003 	ldmia.w	r7, {r0, r1}
 800d8c2:	e884 0003 	stmia.w	r4, {r0, r1}
 800d8c6:	e7aa      	b.n	800d81e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>

0800d8c8 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800d8c8:	b530      	push	{r4, r5, lr}
 800d8ca:	4b1d      	ldr	r3, [pc, #116]	; (800d940 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800d8cc:	b085      	sub	sp, #20
 800d8ce:	460c      	mov	r4, r1
 800d8d0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d8d4:	4b1b      	ldr	r3, [pc, #108]	; (800d944 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800d8d6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d8da:	2100      	movs	r1, #0
 800d8dc:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d8e0:	9100      	str	r1, [sp, #0]
 800d8e2:	4605      	mov	r5, r0
 800d8e4:	6861      	ldr	r1, [r4, #4]
 800d8e6:	6820      	ldr	r0, [r4, #0]
 800d8e8:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d8ec:	ab02      	add	r3, sp, #8
 800d8ee:	c303      	stmia	r3!, {r0, r1}
 800d8f0:	4669      	mov	r1, sp
 800d8f2:	a802      	add	r0, sp, #8
 800d8f4:	f7fd f92e 	bl	800ab54 <_ZN8touchgfx4RectaNERKS0_>
 800d8f8:	ab02      	add	r3, sp, #8
 800d8fa:	cb03      	ldmia	r3!, {r0, r1}
 800d8fc:	4b12      	ldr	r3, [pc, #72]	; (800d948 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800d8fe:	6020      	str	r0, [r4, #0]
 800d900:	6818      	ldr	r0, [r3, #0]
 800d902:	6061      	str	r1, [r4, #4]
 800d904:	b138      	cbz	r0, 800d916 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800d906:	f895 312c 	ldrb.w	r3, [r5, #300]	; 0x12c
 800d90a:	b133      	cbz	r3, 800d91a <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800d90c:	6821      	ldr	r1, [r4, #0]
 800d90e:	6862      	ldr	r2, [r4, #4]
 800d910:	4628      	mov	r0, r5
 800d912:	f7ff ff59 	bl	800d7c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d916:	b005      	add	sp, #20
 800d918:	bd30      	pop	{r4, r5, pc}
 800d91a:	6803      	ldr	r3, [r0, #0]
 800d91c:	4621      	mov	r1, r4
 800d91e:	689b      	ldr	r3, [r3, #8]
 800d920:	4798      	blx	r3
 800d922:	4b0a      	ldr	r3, [pc, #40]	; (800d94c <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800d924:	6818      	ldr	r0, [r3, #0]
 800d926:	b118      	cbz	r0, 800d930 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800d928:	6803      	ldr	r3, [r0, #0]
 800d92a:	4621      	mov	r1, r4
 800d92c:	689b      	ldr	r3, [r3, #8]
 800d92e:	4798      	blx	r3
 800d930:	4b07      	ldr	r3, [pc, #28]	; (800d950 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800d932:	6818      	ldr	r0, [r3, #0]
 800d934:	6803      	ldr	r3, [r0, #0]
 800d936:	4621      	mov	r1, r4
 800d938:	695b      	ldr	r3, [r3, #20]
 800d93a:	4798      	blx	r3
 800d93c:	e7eb      	b.n	800d916 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800d93e:	bf00      	nop
 800d940:	20026ea4 	.word	0x20026ea4
 800d944:	20026ea6 	.word	0x20026ea6
 800d948:	20026f0c 	.word	0x20026f0c
 800d94c:	20026f08 	.word	0x20026f08
 800d950:	20026eb0 	.word	0x20026eb0

0800d954 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800d954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d958:	4604      	mov	r4, r0
 800d95a:	b09b      	sub	sp, #108	; 0x6c
 800d95c:	f880 112c 	strb.w	r1, [r0, #300]	; 0x12c
 800d960:	b129      	cbz	r1, 800d96e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800d962:	2300      	movs	r3, #0
 800d964:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800d968:	b01b      	add	sp, #108	; 0x6c
 800d96a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d96e:	4baf      	ldr	r3, [pc, #700]	; (800dc2c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 800d970:	681b      	ldr	r3, [r3, #0]
 800d972:	b33b      	cbz	r3, 800d9c4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800d974:	4dae      	ldr	r5, [pc, #696]	; (800dc30 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 800d976:	4628      	mov	r0, r5
 800d978:	f7fd f930 	bl	800abdc <_ZNK8touchgfx4Rect7isEmptyEv>
 800d97c:	4606      	mov	r6, r0
 800d97e:	bb08      	cbnz	r0, 800d9c4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800d980:	4628      	mov	r0, r5
 800d982:	f7ff fca5 	bl	800d2d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d986:	6829      	ldr	r1, [r5, #0]
 800d988:	686a      	ldr	r2, [r5, #4]
 800d98a:	4620      	mov	r0, r4
 800d98c:	f7ff ff1c 	bl	800d7c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d990:	802e      	strh	r6, [r5, #0]
 800d992:	806e      	strh	r6, [r5, #2]
 800d994:	80ae      	strh	r6, [r5, #4]
 800d996:	80ee      	strh	r6, [r5, #6]
 800d998:	4fa6      	ldr	r7, [pc, #664]	; (800dc34 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 800d99a:	a809      	add	r0, sp, #36	; 0x24
 800d99c:	f7ff fe89 	bl	800d6b2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d9a0:	883d      	ldrh	r5, [r7, #0]
 800d9a2:	462e      	mov	r6, r5
 800d9a4:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d9a8:	42b3      	cmp	r3, r6
 800d9aa:	d910      	bls.n	800d9ce <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x7a>
 800d9ac:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d9b0:	a809      	add	r0, sp, #36	; 0x24
 800d9b2:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800d9b6:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800d9ba:	3601      	adds	r6, #1
 800d9bc:	f7ff fee2 	bl	800d784 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d9c0:	b2b6      	uxth	r6, r6
 800d9c2:	e7ef      	b.n	800d9a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x50>
 800d9c4:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d9c8:	2b00      	cmp	r3, #0
 800d9ca:	d1e5      	bne.n	800d998 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x44>
 800d9cc:	e7cc      	b.n	800d968 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d9ce:	462e      	mov	r6, r5
 800d9d0:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800d9d4:	42b3      	cmp	r3, r6
 800d9d6:	d90b      	bls.n	800d9f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800d9d8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d9dc:	4620      	mov	r0, r4
 800d9de:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800d9e2:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800d9e6:	3601      	adds	r6, #1
 800d9e8:	f7ff feee 	bl	800d7c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d9ec:	b2b6      	uxth	r6, r6
 800d9ee:	e7ef      	b.n	800d9d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x7c>
 800d9f0:	4e91      	ldr	r6, [pc, #580]	; (800dc38 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 800d9f2:	6833      	ldr	r3, [r6, #0]
 800d9f4:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800d9f8:	2b01      	cmp	r3, #1
 800d9fa:	f040 8092 	bne.w	800db22 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ce>
 800d9fe:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800da02:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800da06:	33aa      	adds	r3, #170	; 0xaa
 800da08:	f04f 0900 	mov.w	r9, #0
 800da0c:	42a8      	cmp	r0, r5
 800da0e:	f103 0308 	add.w	r3, r3, #8
 800da12:	dd0a      	ble.n	800da2a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xd6>
 800da14:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800da18:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800da1c:	440a      	add	r2, r1
 800da1e:	b212      	sxth	r2, r2
 800da20:	4591      	cmp	r9, r2
 800da22:	bfb8      	it	lt
 800da24:	4691      	movlt	r9, r2
 800da26:	3501      	adds	r5, #1
 800da28:	e7f0      	b.n	800da0c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xb8>
 800da2a:	4b84      	ldr	r3, [pc, #528]	; (800dc3c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 800da2c:	f8df 8214 	ldr.w	r8, [pc, #532]	; 800dc44 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>
 800da30:	881d      	ldrh	r5, [r3, #0]
 800da32:	2300      	movs	r3, #0
 800da34:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800da38:	2d0f      	cmp	r5, #15
 800da3a:	bf8c      	ite	hi
 800da3c:	08ed      	lsrhi	r5, r5, #3
 800da3e:	2501      	movls	r5, #1
 800da40:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800da44:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800da48:	6830      	ldr	r0, [r6, #0]
 800da4a:	440b      	add	r3, r1
 800da4c:	b21b      	sxth	r3, r3
 800da4e:	4599      	cmp	r9, r3
 800da50:	6802      	ldr	r2, [r0, #0]
 800da52:	dd49      	ble.n	800dae8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x194>
 800da54:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 800da58:	4798      	blx	r3
 800da5a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800da5e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800da62:	4413      	add	r3, r2
 800da64:	b21b      	sxth	r3, r3
 800da66:	195a      	adds	r2, r3, r5
 800da68:	4290      	cmp	r0, r2
 800da6a:	da07      	bge.n	800da7c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x128>
 800da6c:	4581      	cmp	r9, r0
 800da6e:	dd05      	ble.n	800da7c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x128>
 800da70:	4298      	cmp	r0, r3
 800da72:	da33      	bge.n	800dadc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x188>
 800da74:	2b00      	cmp	r3, #0
 800da76:	dd31      	ble.n	800dadc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x188>
 800da78:	4648      	mov	r0, r9
 800da7a:	e004      	b.n	800da86 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x132>
 800da7c:	4298      	cmp	r0, r3
 800da7e:	dbfb      	blt.n	800da78 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x124>
 800da80:	4548      	cmp	r0, r9
 800da82:	bfa8      	it	ge
 800da84:	4648      	movge	r0, r9
 800da86:	f9b8 2000 	ldrsh.w	r2, [r8]
 800da8a:	f8b7 a000 	ldrh.w	sl, [r7]
 800da8e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800da92:	2100      	movs	r1, #0
 800da94:	1ac0      	subs	r0, r0, r3
 800da96:	f8ad 1014 	strh.w	r1, [sp, #20]
 800da9a:	f8ad 2018 	strh.w	r2, [sp, #24]
 800da9e:	f8ad 001a 	strh.w	r0, [sp, #26]
 800daa2:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800daa6:	4553      	cmp	r3, sl
 800daa8:	d9ca      	bls.n	800da40 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xec>
 800daaa:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800daae:	ab07      	add	r3, sp, #28
 800dab0:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800dab4:	6851      	ldr	r1, [r2, #4]
 800dab6:	c303      	stmia	r3!, {r0, r1}
 800dab8:	a807      	add	r0, sp, #28
 800daba:	a905      	add	r1, sp, #20
 800dabc:	f7fd f84a 	bl	800ab54 <_ZN8touchgfx4RectaNERKS0_>
 800dac0:	a807      	add	r0, sp, #28
 800dac2:	f7fd f88b 	bl	800abdc <_ZNK8touchgfx4Rect7isEmptyEv>
 800dac6:	b920      	cbnz	r0, 800dad2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x17e>
 800dac8:	6823      	ldr	r3, [r4, #0]
 800daca:	a907      	add	r1, sp, #28
 800dacc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dace:	4620      	mov	r0, r4
 800dad0:	4798      	blx	r3
 800dad2:	f10a 0a01 	add.w	sl, sl, #1
 800dad6:	fa1f fa8a 	uxth.w	sl, sl
 800dada:	e7e2      	b.n	800daa2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14e>
 800dadc:	6830      	ldr	r0, [r6, #0]
 800dade:	6803      	ldr	r3, [r0, #0]
 800dae0:	2101      	movs	r1, #1
 800dae2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dae4:	4798      	blx	r3
 800dae6:	e7ab      	b.n	800da40 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xec>
 800dae8:	69d3      	ldr	r3, [r2, #28]
 800daea:	4798      	blx	r3
 800daec:	4b54      	ldr	r3, [pc, #336]	; (800dc40 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 800daee:	781b      	ldrb	r3, [r3, #0]
 800daf0:	2b00      	cmp	r3, #0
 800daf2:	f43f af39 	beq.w	800d968 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800daf6:	2300      	movs	r3, #0
 800daf8:	883d      	ldrh	r5, [r7, #0]
 800dafa:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800dafe:	34ea      	adds	r4, #234	; 0xea
 800db00:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800db04:	42ab      	cmp	r3, r5
 800db06:	f67f af2f 	bls.w	800d968 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800db0a:	ab1a      	add	r3, sp, #104	; 0x68
 800db0c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800db10:	3b44      	subs	r3, #68	; 0x44
 800db12:	e893 0006 	ldmia.w	r3, {r1, r2}
 800db16:	4620      	mov	r0, r4
 800db18:	3501      	adds	r5, #1
 800db1a:	f7ff fe33 	bl	800d784 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800db1e:	b2ad      	uxth	r5, r5
 800db20:	e7ee      	b.n	800db00 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ac>
 800db22:	2b02      	cmp	r3, #2
 800db24:	d16a      	bne.n	800dbfc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a8>
 800db26:	f8df a120 	ldr.w	sl, [pc, #288]	; 800dc48 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>
 800db2a:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800db2e:	42ab      	cmp	r3, r5
 800db30:	d9dc      	bls.n	800daec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x198>
 800db32:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800db36:	ab03      	add	r3, sp, #12
 800db38:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800db3c:	6851      	ldr	r1, [r2, #4]
 800db3e:	c303      	stmia	r3!, {r0, r1}
 800db40:	f89a 3000 	ldrb.w	r3, [sl]
 800db44:	2b01      	cmp	r3, #1
 800db46:	d102      	bne.n	800db4e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1fa>
 800db48:	a803      	add	r0, sp, #12
 800db4a:	f7ff fc1b 	bl	800d384 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800db4e:	a803      	add	r0, sp, #12
 800db50:	f7fd f844 	bl	800abdc <_ZNK8touchgfx4Rect7isEmptyEv>
 800db54:	2800      	cmp	r0, #0
 800db56:	d14a      	bne.n	800dbee <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x29a>
 800db58:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800db5c:	f8ad 3014 	strh.w	r3, [sp, #20]
 800db60:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800db64:	f8ad 3016 	strh.w	r3, [sp, #22]
 800db68:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800db6c:	f8ad 001a 	strh.w	r0, [sp, #26]
 800db70:	f8ad 3018 	strh.w	r3, [sp, #24]
 800db74:	f10d 0914 	add.w	r9, sp, #20
 800db78:	f10d 081c 	add.w	r8, sp, #28
 800db7c:	f8bd b012 	ldrh.w	fp, [sp, #18]
 800db80:	f8bd c00e 	ldrh.w	ip, [sp, #14]
 800db84:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800db88:	6830      	ldr	r0, [r6, #0]
 800db8a:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800db8e:	f8d0 e000 	ldr.w	lr, [r0]
 800db92:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800db96:	44dc      	add	ip, fp
 800db98:	ebac 0c02 	sub.w	ip, ip, r2
 800db9c:	fa1f fc8c 	uxth.w	ip, ip
 800dba0:	f8cd c000 	str.w	ip, [sp]
 800dba4:	f8de b078 	ldr.w	fp, [lr, #120]	; 0x78
 800dba8:	47d8      	blx	fp
 800dbaa:	f89a 3000 	ldrb.w	r3, [sl]
 800dbae:	f8ad 001a 	strh.w	r0, [sp, #26]
 800dbb2:	2b01      	cmp	r3, #1
 800dbb4:	d11e      	bne.n	800dbf4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a0>
 800dbb6:	e899 0003 	ldmia.w	r9, {r0, r1}
 800dbba:	e888 0003 	stmia.w	r8, {r0, r1}
 800dbbe:	4640      	mov	r0, r8
 800dbc0:	f7ff fb86 	bl	800d2d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800dbc4:	6823      	ldr	r3, [r4, #0]
 800dbc6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dbc8:	4641      	mov	r1, r8
 800dbca:	4620      	mov	r0, r4
 800dbcc:	4798      	blx	r3
 800dbce:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800dbd2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800dbd6:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800dbda:	4413      	add	r3, r2
 800dbdc:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800dbe0:	440a      	add	r2, r1
 800dbe2:	b21b      	sxth	r3, r3
 800dbe4:	b212      	sxth	r2, r2
 800dbe6:	4293      	cmp	r3, r2
 800dbe8:	f8ad 3016 	strh.w	r3, [sp, #22]
 800dbec:	dbc6      	blt.n	800db7c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x228>
 800dbee:	3501      	adds	r5, #1
 800dbf0:	b2ad      	uxth	r5, r5
 800dbf2:	e79a      	b.n	800db2a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d6>
 800dbf4:	6823      	ldr	r3, [r4, #0]
 800dbf6:	4649      	mov	r1, r9
 800dbf8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dbfa:	e7e6      	b.n	800dbca <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x276>
 800dbfc:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800dc00:	42ab      	cmp	r3, r5
 800dc02:	f67f af73 	bls.w	800daec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x198>
 800dc06:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800dc0a:	ab07      	add	r3, sp, #28
 800dc0c:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800dc10:	6851      	ldr	r1, [r2, #4]
 800dc12:	c303      	stmia	r3!, {r0, r1}
 800dc14:	a807      	add	r0, sp, #28
 800dc16:	f7fc ffe1 	bl	800abdc <_ZNK8touchgfx4Rect7isEmptyEv>
 800dc1a:	b920      	cbnz	r0, 800dc26 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d2>
 800dc1c:	6823      	ldr	r3, [r4, #0]
 800dc1e:	a907      	add	r1, sp, #28
 800dc20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dc22:	4620      	mov	r0, r4
 800dc24:	4798      	blx	r3
 800dc26:	3501      	adds	r5, #1
 800dc28:	b2ad      	uxth	r5, r5
 800dc2a:	e7e7      	b.n	800dbfc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a8>
 800dc2c:	20026f08 	.word	0x20026f08
 800dc30:	20026f14 	.word	0x20026f14
 800dc34:	20000024 	.word	0x20000024
 800dc38:	20026eb0 	.word	0x20026eb0
 800dc3c:	20026ea6 	.word	0x20026ea6
 800dc40:	20026eae 	.word	0x20026eae
 800dc44:	20026ea4 	.word	0x20026ea4
 800dc48:	20026ea8 	.word	0x20026ea8

0800dc4c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800dc4c:	4b03      	ldr	r3, [pc, #12]	; (800dc5c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800dc4e:	2200      	movs	r2, #0
 800dc50:	801a      	strh	r2, [r3, #0]
 800dc52:	805a      	strh	r2, [r3, #2]
 800dc54:	809a      	strh	r2, [r3, #4]
 800dc56:	80da      	strh	r2, [r3, #6]
 800dc58:	4770      	bx	lr
 800dc5a:	bf00      	nop
 800dc5c:	20026f14 	.word	0x20026f14

0800dc60 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
 800dc60:	2000      	movs	r0, #0
 800dc62:	4770      	bx	lr

0800dc64 <_ZNK8touchgfx4Font12getGSUBTableEv>:
 800dc64:	2000      	movs	r0, #0
 800dc66:	4770      	bx	lr

0800dc68 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800dc68:	b508      	push	{r3, lr}
 800dc6a:	6803      	ldr	r3, [r0, #0]
 800dc6c:	68db      	ldr	r3, [r3, #12]
 800dc6e:	4798      	blx	r3
 800dc70:	b128      	cbz	r0, 800dc7e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800dc72:	f990 300d 	ldrsb.w	r3, [r0, #13]
 800dc76:	7a80      	ldrb	r0, [r0, #10]
 800dc78:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800dc7c:	4318      	orrs	r0, r3
 800dc7e:	bd08      	pop	{r3, pc}

0800dc80 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
 800dc80:	b40e      	push	{r1, r2, r3}
 800dc82:	b533      	push	{r0, r1, r4, r5, lr}
 800dc84:	ab05      	add	r3, sp, #20
 800dc86:	f853 2b04 	ldr.w	r2, [r3], #4
 800dc8a:	9301      	str	r3, [sp, #4]
 800dc8c:	4b09      	ldr	r3, [pc, #36]	; (800dcb4 <_ZNK8touchgfx4Font14getStringWidthEPKtz+0x34>)
 800dc8e:	685c      	ldr	r4, [r3, #4]
 800dc90:	1061      	asrs	r1, r4, #1
 800dc92:	07e4      	lsls	r4, r4, #31
 800dc94:	eb00 0501 	add.w	r5, r0, r1
 800dc98:	bf45      	ittet	mi
 800dc9a:	681b      	ldrmi	r3, [r3, #0]
 800dc9c:	5841      	ldrmi	r1, [r0, r1]
 800dc9e:	681c      	ldrpl	r4, [r3, #0]
 800dca0:	58cc      	ldrmi	r4, [r1, r3]
 800dca2:	9b01      	ldr	r3, [sp, #4]
 800dca4:	2100      	movs	r1, #0
 800dca6:	4628      	mov	r0, r5
 800dca8:	47a0      	blx	r4
 800dcaa:	b002      	add	sp, #8
 800dcac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800dcb0:	b003      	add	sp, #12
 800dcb2:	4770      	bx	lr
 800dcb4:	20000010 	.word	0x20000010

0800dcb8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:
 800dcb8:	b40c      	push	{r2, r3}
 800dcba:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800dcbc:	ab06      	add	r3, sp, #24
 800dcbe:	f853 2b04 	ldr.w	r2, [r3], #4
 800dcc2:	9301      	str	r3, [sp, #4]
 800dcc4:	4b09      	ldr	r3, [pc, #36]	; (800dcec <_ZNK8touchgfx4Font14getStringWidthEhPKtz+0x34>)
 800dcc6:	685d      	ldr	r5, [r3, #4]
 800dcc8:	106c      	asrs	r4, r5, #1
 800dcca:	07ed      	lsls	r5, r5, #31
 800dccc:	eb00 0604 	add.w	r6, r0, r4
 800dcd0:	bf45      	ittet	mi
 800dcd2:	681b      	ldrmi	r3, [r3, #0]
 800dcd4:	5900      	ldrmi	r0, [r0, r4]
 800dcd6:	681c      	ldrpl	r4, [r3, #0]
 800dcd8:	58c4      	ldrmi	r4, [r0, r3]
 800dcda:	9b01      	ldr	r3, [sp, #4]
 800dcdc:	4630      	mov	r0, r6
 800dcde:	47a0      	blx	r4
 800dce0:	b002      	add	sp, #8
 800dce2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dce6:	b002      	add	sp, #8
 800dce8:	4770      	bx	lr
 800dcea:	bf00      	nop
 800dcec:	20000010 	.word	0x20000010

0800dcf0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800dcf0:	b40e      	push	{r1, r2, r3}
 800dcf2:	b530      	push	{r4, r5, lr}
 800dcf4:	b098      	sub	sp, #96	; 0x60
 800dcf6:	ab1b      	add	r3, sp, #108	; 0x6c
 800dcf8:	4604      	mov	r4, r0
 800dcfa:	f853 5b04 	ldr.w	r5, [r3], #4
 800dcfe:	9301      	str	r3, [sp, #4]
 800dd00:	a802      	add	r0, sp, #8
 800dd02:	f000 ffdb 	bl	800ecbc <_ZN8touchgfx12TextProviderC1Ev>
 800dd06:	6823      	ldr	r3, [r4, #0]
 800dd08:	4620      	mov	r0, r4
 800dd0a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dd0c:	4798      	blx	r3
 800dd0e:	9a01      	ldr	r2, [sp, #4]
 800dd10:	4603      	mov	r3, r0
 800dd12:	4629      	mov	r1, r5
 800dd14:	a802      	add	r0, sp, #8
 800dd16:	f000 ffee 	bl	800ecf6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800dd1a:	a802      	add	r0, sp, #8
 800dd1c:	f001 f824 	bl	800ed68 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800dd20:	2401      	movs	r4, #1
 800dd22:	b2a3      	uxth	r3, r4
 800dd24:	b140      	cbz	r0, 800dd38 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 800dd26:	280a      	cmp	r0, #10
 800dd28:	bf08      	it	eq
 800dd2a:	3301      	addeq	r3, #1
 800dd2c:	a802      	add	r0, sp, #8
 800dd2e:	bf08      	it	eq
 800dd30:	b21c      	sxtheq	r4, r3
 800dd32:	f001 f819 	bl	800ed68 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800dd36:	e7f4      	b.n	800dd22 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 800dd38:	4618      	mov	r0, r3
 800dd3a:	b018      	add	sp, #96	; 0x60
 800dd3c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800dd40:	b003      	add	sp, #12
 800dd42:	4770      	bx	lr

0800dd44 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800dd44:	b40e      	push	{r1, r2, r3}
 800dd46:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dd48:	b098      	sub	sp, #96	; 0x60
 800dd4a:	ab1d      	add	r3, sp, #116	; 0x74
 800dd4c:	4605      	mov	r5, r0
 800dd4e:	f853 4b04 	ldr.w	r4, [r3], #4
 800dd52:	9300      	str	r3, [sp, #0]
 800dd54:	a802      	add	r0, sp, #8
 800dd56:	f000 ffb1 	bl	800ecbc <_ZN8touchgfx12TextProviderC1Ev>
 800dd5a:	682b      	ldr	r3, [r5, #0]
 800dd5c:	4f21      	ldr	r7, [pc, #132]	; (800dde4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0xa0>)
 800dd5e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dd60:	4628      	mov	r0, r5
 800dd62:	4798      	blx	r3
 800dd64:	ae18      	add	r6, sp, #96	; 0x60
 800dd66:	4603      	mov	r3, r0
 800dd68:	4621      	mov	r1, r4
 800dd6a:	9a00      	ldr	r2, [sp, #0]
 800dd6c:	a802      	add	r0, sp, #8
 800dd6e:	2400      	movs	r4, #0
 800dd70:	f000 ffc1 	bl	800ecf6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800dd74:	f846 4d5c 	str.w	r4, [r6, #-92]!
 800dd78:	462a      	mov	r2, r5
 800dd7a:	4633      	mov	r3, r6
 800dd7c:	4621      	mov	r1, r4
 800dd7e:	a802      	add	r0, sp, #8
 800dd80:	f001 f91e 	bl	800efc0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800dd84:	b338      	cbz	r0, 800ddd6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x92>
 800dd86:	280a      	cmp	r0, #10
 800dd88:	d01e      	beq.n	800ddc8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x84>
 800dd8a:	9901      	ldr	r1, [sp, #4]
 800dd8c:	b1e1      	cbz	r1, 800ddc8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x84>
 800dd8e:	7b4b      	ldrb	r3, [r1, #13]
 800dd90:	f891 c008 	ldrb.w	ip, [r1, #8]
 800dd94:	79c9      	ldrb	r1, [r1, #7]
 800dd96:	88aa      	ldrh	r2, [r5, #4]
 800dd98:	f013 0f40 	tst.w	r3, #64	; 0x40
 800dd9c:	ea4f 1e03 	mov.w	lr, r3, lsl #4
 800dda0:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800dda4:	f40e 7e80 	and.w	lr, lr, #256	; 0x100
 800dda8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ddac:	bf14      	ite	ne
 800ddae:	4638      	movne	r0, r7
 800ddb0:	2000      	moveq	r0, #0
 800ddb2:	ea41 010e 	orr.w	r1, r1, lr
 800ddb6:	ea43 030c 	orr.w	r3, r3, ip
 800ddba:	440a      	add	r2, r1
 800ddbc:	4303      	orrs	r3, r0
 800ddbe:	1ad3      	subs	r3, r2, r3
 800ddc0:	b29b      	uxth	r3, r3
 800ddc2:	42a3      	cmp	r3, r4
 800ddc4:	bfc8      	it	gt
 800ddc6:	b21c      	sxthgt	r4, r3
 800ddc8:	4633      	mov	r3, r6
 800ddca:	462a      	mov	r2, r5
 800ddcc:	2100      	movs	r1, #0
 800ddce:	a802      	add	r0, sp, #8
 800ddd0:	f001 f8f6 	bl	800efc0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ddd4:	e7d6      	b.n	800dd84 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x40>
 800ddd6:	b2a0      	uxth	r0, r4
 800ddd8:	b018      	add	sp, #96	; 0x60
 800ddda:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800ddde:	b003      	add	sp, #12
 800dde0:	4770      	bx	lr
 800dde2:	bf00      	nop
 800dde4:	fffffe00 	.word	0xfffffe00

0800dde8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800dde8:	b40e      	push	{r1, r2, r3}
 800ddea:	b570      	push	{r4, r5, r6, lr}
 800ddec:	b099      	sub	sp, #100	; 0x64
 800ddee:	ab1d      	add	r3, sp, #116	; 0x74
 800ddf0:	4604      	mov	r4, r0
 800ddf2:	f853 5b04 	ldr.w	r5, [r3], #4
 800ddf6:	9300      	str	r3, [sp, #0]
 800ddf8:	a802      	add	r0, sp, #8
 800ddfa:	f000 ff5f 	bl	800ecbc <_ZN8touchgfx12TextProviderC1Ev>
 800ddfe:	6823      	ldr	r3, [r4, #0]
 800de00:	4620      	mov	r0, r4
 800de02:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800de04:	4798      	blx	r3
 800de06:	4629      	mov	r1, r5
 800de08:	4603      	mov	r3, r0
 800de0a:	9a00      	ldr	r2, [sp, #0]
 800de0c:	a802      	add	r0, sp, #8
 800de0e:	ad18      	add	r5, sp, #96	; 0x60
 800de10:	f000 ff71 	bl	800ecf6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800de14:	2100      	movs	r1, #0
 800de16:	f845 1d5c 	str.w	r1, [r5, #-92]!
 800de1a:	4622      	mov	r2, r4
 800de1c:	462b      	mov	r3, r5
 800de1e:	a802      	add	r0, sp, #8
 800de20:	f001 f8ce 	bl	800efc0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800de24:	26ff      	movs	r6, #255	; 0xff
 800de26:	b190      	cbz	r0, 800de4e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x66>
 800de28:	280a      	cmp	r0, #10
 800de2a:	d009      	beq.n	800de40 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x58>
 800de2c:	9a01      	ldr	r2, [sp, #4]
 800de2e:	b13a      	cbz	r2, 800de40 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x58>
 800de30:	7923      	ldrb	r3, [r4, #4]
 800de32:	7a12      	ldrb	r2, [r2, #8]
 800de34:	1a9b      	subs	r3, r3, r2
 800de36:	f003 03ff 	and.w	r3, r3, #255	; 0xff
 800de3a:	429e      	cmp	r6, r3
 800de3c:	bf28      	it	cs
 800de3e:	461e      	movcs	r6, r3
 800de40:	462b      	mov	r3, r5
 800de42:	4622      	mov	r2, r4
 800de44:	2100      	movs	r1, #0
 800de46:	a802      	add	r0, sp, #8
 800de48:	f001 f8ba 	bl	800efc0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800de4c:	e7eb      	b.n	800de26 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 800de4e:	4630      	mov	r0, r6
 800de50:	b019      	add	sp, #100	; 0x64
 800de52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800de56:	b003      	add	sp, #12
 800de58:	4770      	bx	lr

0800de5a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800de5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de5e:	4606      	mov	r6, r0
 800de60:	b099      	sub	sp, #100	; 0x64
 800de62:	a802      	add	r0, sp, #8
 800de64:	4614      	mov	r4, r2
 800de66:	4688      	mov	r8, r1
 800de68:	461d      	mov	r5, r3
 800de6a:	f000 ff27 	bl	800ecbc <_ZN8touchgfx12TextProviderC1Ev>
 800de6e:	6833      	ldr	r3, [r6, #0]
 800de70:	4630      	mov	r0, r6
 800de72:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800de74:	4798      	blx	r3
 800de76:	462a      	mov	r2, r5
 800de78:	4603      	mov	r3, r0
 800de7a:	4621      	mov	r1, r4
 800de7c:	a802      	add	r0, sp, #8
 800de7e:	f000 ff3a 	bl	800ecf6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800de82:	f04f 0b00 	mov.w	fp, #0
 800de86:	465f      	mov	r7, fp
 800de88:	46da      	mov	sl, fp
 800de8a:	46d9      	mov	r9, fp
 800de8c:	ab01      	add	r3, sp, #4
 800de8e:	4632      	mov	r2, r6
 800de90:	4641      	mov	r1, r8
 800de92:	a802      	add	r0, sp, #8
 800de94:	f8cd 9004 	str.w	r9, [sp, #4]
 800de98:	f001 f892 	bl	800efc0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800de9c:	4605      	mov	r5, r0
 800de9e:	b108      	cbz	r0, 800dea4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x4a>
 800dea0:	280a      	cmp	r0, #10
 800dea2:	d10b      	bne.n	800debc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x62>
 800dea4:	4557      	cmp	r7, sl
 800dea6:	bf38      	it	cc
 800dea8:	4657      	movcc	r7, sl
 800deaa:	f04f 0a00 	mov.w	sl, #0
 800deae:	b91d      	cbnz	r5, 800deb8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5e>
 800deb0:	4638      	mov	r0, r7
 800deb2:	b019      	add	sp, #100	; 0x64
 800deb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800deb8:	46ab      	mov	fp, r5
 800deba:	e7e7      	b.n	800de8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x32>
 800debc:	9a01      	ldr	r2, [sp, #4]
 800debe:	2a00      	cmp	r2, #0
 800dec0:	d0fa      	beq.n	800deb8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5e>
 800dec2:	f992 400d 	ldrsb.w	r4, [r2, #13]
 800dec6:	6833      	ldr	r3, [r6, #0]
 800dec8:	8895      	ldrh	r5, [r2, #4]
 800deca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800decc:	f404 7080 	and.w	r0, r4, #256	; 0x100
 800ded0:	7a94      	ldrb	r4, [r2, #10]
 800ded2:	4659      	mov	r1, fp
 800ded4:	4304      	orrs	r4, r0
 800ded6:	4630      	mov	r0, r6
 800ded8:	4798      	blx	r3
 800deda:	4420      	add	r0, r4
 800dedc:	4450      	add	r0, sl
 800dede:	fa1f fa80 	uxth.w	sl, r0
 800dee2:	e7e4      	b.n	800deae <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x54>

0800dee4 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800dee4:	b513      	push	{r0, r1, r4, lr}
 800dee6:	1d01      	adds	r1, r0, #4
 800dee8:	4603      	mov	r3, r0
 800deea:	c903      	ldmia	r1, {r0, r1}
 800deec:	466a      	mov	r2, sp
 800deee:	e882 0003 	stmia.w	r2, {r0, r1}
 800def2:	2100      	movs	r1, #0
 800def4:	9100      	str	r1, [sp, #0]
 800def6:	6819      	ldr	r1, [r3, #0]
 800def8:	4618      	mov	r0, r3
 800defa:	690c      	ldr	r4, [r1, #16]
 800defc:	4611      	mov	r1, r2
 800defe:	47a0      	blx	r4
 800df00:	b002      	add	sp, #8
 800df02:	bd10      	pop	{r4, pc}

0800df04 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800df04:	b538      	push	{r3, r4, r5, lr}
 800df06:	680b      	ldr	r3, [r1, #0]
 800df08:	460c      	mov	r4, r1
 800df0a:	68db      	ldr	r3, [r3, #12]
 800df0c:	4605      	mov	r5, r0
 800df0e:	4798      	blx	r3
 800df10:	6823      	ldr	r3, [r4, #0]
 800df12:	4620      	mov	r0, r4
 800df14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800df16:	4629      	mov	r1, r5
 800df18:	4798      	blx	r3
 800df1a:	4628      	mov	r0, r5
 800df1c:	bd38      	pop	{r3, r4, r5, pc}

0800df1e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800df1e:	b410      	push	{r4}
 800df20:	880a      	ldrh	r2, [r1, #0]
 800df22:	8884      	ldrh	r4, [r0, #4]
 800df24:	4422      	add	r2, r4
 800df26:	800a      	strh	r2, [r1, #0]
 800df28:	88c4      	ldrh	r4, [r0, #6]
 800df2a:	884a      	ldrh	r2, [r1, #2]
 800df2c:	4422      	add	r2, r4
 800df2e:	804a      	strh	r2, [r1, #2]
 800df30:	6940      	ldr	r0, [r0, #20]
 800df32:	b120      	cbz	r0, 800df3e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800df34:	6803      	ldr	r3, [r0, #0]
 800df36:	f85d 4b04 	ldr.w	r4, [sp], #4
 800df3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800df3c:	4718      	bx	r3
 800df3e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800df42:	4770      	bx	lr

0800df44 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800df44:	b5f0      	push	{r4, r5, r6, r7, lr}
 800df46:	460b      	mov	r3, r1
 800df48:	b085      	sub	sp, #20
 800df4a:	4604      	mov	r4, r0
 800df4c:	b901      	cbnz	r1, 800df50 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800df4e:	b1fa      	cbz	r2, 800df90 <_ZN8touchgfx8Drawable12moveRelativeEss+0x4c>
 800df50:	1d27      	adds	r7, r4, #4
 800df52:	e897 0003 	ldmia.w	r7, {r0, r1}
 800df56:	466e      	mov	r6, sp
 800df58:	e886 0003 	stmia.w	r6, {r0, r1}
 800df5c:	88e1      	ldrh	r1, [r4, #6]
 800df5e:	440a      	add	r2, r1
 800df60:	88a1      	ldrh	r1, [r4, #4]
 800df62:	4419      	add	r1, r3
 800df64:	6823      	ldr	r3, [r4, #0]
 800df66:	b209      	sxth	r1, r1
 800df68:	4620      	mov	r0, r4
 800df6a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800df6c:	b212      	sxth	r2, r2
 800df6e:	4798      	blx	r3
 800df70:	e897 0003 	ldmia.w	r7, {r0, r1}
 800df74:	ad02      	add	r5, sp, #8
 800df76:	e885 0003 	stmia.w	r5, {r0, r1}
 800df7a:	6960      	ldr	r0, [r4, #20]
 800df7c:	b150      	cbz	r0, 800df94 <_ZN8touchgfx8Drawable12moveRelativeEss+0x50>
 800df7e:	6803      	ldr	r3, [r0, #0]
 800df80:	4631      	mov	r1, r6
 800df82:	691b      	ldr	r3, [r3, #16]
 800df84:	4798      	blx	r3
 800df86:	6960      	ldr	r0, [r4, #20]
 800df88:	6803      	ldr	r3, [r0, #0]
 800df8a:	691b      	ldr	r3, [r3, #16]
 800df8c:	4629      	mov	r1, r5
 800df8e:	4798      	blx	r3
 800df90:	b005      	add	sp, #20
 800df92:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800df94:	f7ff fb7c 	bl	800d690 <_ZN8touchgfx11Application11getInstanceEv>
 800df98:	6803      	ldr	r3, [r0, #0]
 800df9a:	4631      	mov	r1, r6
 800df9c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800df9e:	4798      	blx	r3
 800dfa0:	f7ff fb76 	bl	800d690 <_ZN8touchgfx11Application11getInstanceEv>
 800dfa4:	6803      	ldr	r3, [r0, #0]
 800dfa6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dfa8:	e7f0      	b.n	800df8c <_ZN8touchgfx8Drawable12moveRelativeEss+0x48>

0800dfaa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800dfaa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dfac:	8882      	ldrh	r2, [r0, #4]
 800dfae:	880b      	ldrh	r3, [r1, #0]
 800dfb0:	4413      	add	r3, r2
 800dfb2:	800b      	strh	r3, [r1, #0]
 800dfb4:	88c2      	ldrh	r2, [r0, #6]
 800dfb6:	884b      	ldrh	r3, [r1, #2]
 800dfb8:	4413      	add	r3, r2
 800dfba:	4602      	mov	r2, r0
 800dfbc:	804b      	strh	r3, [r1, #2]
 800dfbe:	4605      	mov	r5, r0
 800dfc0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800dfc4:	460c      	mov	r4, r1
 800dfc6:	6851      	ldr	r1, [r2, #4]
 800dfc8:	466b      	mov	r3, sp
 800dfca:	c303      	stmia	r3!, {r0, r1}
 800dfcc:	4621      	mov	r1, r4
 800dfce:	4668      	mov	r0, sp
 800dfd0:	f7fc fdc0 	bl	800ab54 <_ZN8touchgfx4RectaNERKS0_>
 800dfd4:	466b      	mov	r3, sp
 800dfd6:	cb03      	ldmia	r3!, {r0, r1}
 800dfd8:	6020      	str	r0, [r4, #0]
 800dfda:	6061      	str	r1, [r4, #4]
 800dfdc:	6968      	ldr	r0, [r5, #20]
 800dfde:	b128      	cbz	r0, 800dfec <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800dfe0:	6803      	ldr	r3, [r0, #0]
 800dfe2:	691b      	ldr	r3, [r3, #16]
 800dfe4:	4621      	mov	r1, r4
 800dfe6:	4798      	blx	r3
 800dfe8:	b003      	add	sp, #12
 800dfea:	bd30      	pop	{r4, r5, pc}
 800dfec:	f7ff fb50 	bl	800d690 <_ZN8touchgfx11Application11getInstanceEv>
 800dff0:	6803      	ldr	r3, [r0, #0]
 800dff2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dff4:	e7f6      	b.n	800dfe4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800dff6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800dff6:	b570      	push	{r4, r5, r6, lr}
 800dff8:	8882      	ldrh	r2, [r0, #4]
 800dffa:	880b      	ldrh	r3, [r1, #0]
 800dffc:	4413      	add	r3, r2
 800dffe:	800b      	strh	r3, [r1, #0]
 800e000:	88c2      	ldrh	r2, [r0, #6]
 800e002:	884b      	ldrh	r3, [r1, #2]
 800e004:	460c      	mov	r4, r1
 800e006:	4413      	add	r3, r2
 800e008:	804b      	strh	r3, [r1, #2]
 800e00a:	4605      	mov	r5, r0
 800e00c:	1d01      	adds	r1, r0, #4
 800e00e:	4620      	mov	r0, r4
 800e010:	f7fc fda0 	bl	800ab54 <_ZN8touchgfx4RectaNERKS0_>
 800e014:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800e018:	b153      	cbz	r3, 800e030 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800e01a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800e01e:	b13b      	cbz	r3, 800e030 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800e020:	6968      	ldr	r0, [r5, #20]
 800e022:	b128      	cbz	r0, 800e030 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800e024:	6803      	ldr	r3, [r0, #0]
 800e026:	4621      	mov	r1, r4
 800e028:	6a1b      	ldr	r3, [r3, #32]
 800e02a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e02e:	4718      	bx	r3
 800e030:	bd70      	pop	{r4, r5, r6, pc}

0800e032 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800e032:	b510      	push	{r4, lr}
 800e034:	4604      	mov	r4, r0
 800e036:	4608      	mov	r0, r1
 800e038:	2300      	movs	r3, #0
 800e03a:	8023      	strh	r3, [r4, #0]
 800e03c:	8063      	strh	r3, [r4, #2]
 800e03e:	6803      	ldr	r3, [r0, #0]
 800e040:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e044:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800e048:	80a1      	strh	r1, [r4, #4]
 800e04a:	80e2      	strh	r2, [r4, #6]
 800e04c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e04e:	4621      	mov	r1, r4
 800e050:	4798      	blx	r3
 800e052:	4620      	mov	r0, r4
 800e054:	bd10      	pop	{r4, pc}
	...

0800e058 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800e058:	b530      	push	{r4, r5, lr}
 800e05a:	8083      	strh	r3, [r0, #4]
 800e05c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800e060:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800e064:	7183      	strb	r3, [r0, #6]
 800e066:	79c3      	ldrb	r3, [r0, #7]
 800e068:	6101      	str	r1, [r0, #16]
 800e06a:	f365 0306 	bfi	r3, r5, #0, #7
 800e06e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800e072:	8282      	strh	r2, [r0, #20]
 800e074:	f365 13c7 	bfi	r3, r5, #7, #1
 800e078:	71c3      	strb	r3, [r0, #7]
 800e07a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800e07e:	7203      	strb	r3, [r0, #8]
 800e080:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800e084:	7243      	strb	r3, [r0, #9]
 800e086:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800e08a:	8143      	strh	r3, [r0, #10]
 800e08c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800e090:	8183      	strh	r3, [r0, #12]
 800e092:	4b01      	ldr	r3, [pc, #4]	; (800e098 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800e094:	6003      	str	r3, [r0, #0]
 800e096:	bd30      	pop	{r4, r5, pc}
 800e098:	0801e6cc 	.word	0x0801e6cc

0800e09c <_ZNK8touchgfx9ConstFont4findEt>:
 800e09c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e09e:	8a84      	ldrh	r4, [r0, #20]
 800e0a0:	2500      	movs	r5, #0
 800e0a2:	3c01      	subs	r4, #1
 800e0a4:	260e      	movs	r6, #14
 800e0a6:	42a5      	cmp	r5, r4
 800e0a8:	dc0c      	bgt.n	800e0c4 <_ZNK8touchgfx9ConstFont4findEt+0x28>
 800e0aa:	192a      	adds	r2, r5, r4
 800e0ac:	6903      	ldr	r3, [r0, #16]
 800e0ae:	1052      	asrs	r2, r2, #1
 800e0b0:	fb06 3302 	mla	r3, r6, r2, r3
 800e0b4:	889f      	ldrh	r7, [r3, #4]
 800e0b6:	428f      	cmp	r7, r1
 800e0b8:	d901      	bls.n	800e0be <_ZNK8touchgfx9ConstFont4findEt+0x22>
 800e0ba:	1e54      	subs	r4, r2, #1
 800e0bc:	e7f3      	b.n	800e0a6 <_ZNK8touchgfx9ConstFont4findEt+0xa>
 800e0be:	d202      	bcs.n	800e0c6 <_ZNK8touchgfx9ConstFont4findEt+0x2a>
 800e0c0:	1c55      	adds	r5, r2, #1
 800e0c2:	e7f0      	b.n	800e0a6 <_ZNK8touchgfx9ConstFont4findEt+0xa>
 800e0c4:	2300      	movs	r3, #0
 800e0c6:	4618      	mov	r0, r3
 800e0c8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e0ca <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800e0ca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e0cc:	4605      	mov	r5, r0
 800e0ce:	4617      	mov	r7, r2
 800e0d0:	461e      	mov	r6, r3
 800e0d2:	f7ff ffe3 	bl	800e09c <_ZNK8touchgfx9ConstFont4findEt>
 800e0d6:	b9e0      	cbnz	r0, 800e112 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x48>
 800e0d8:	b911      	cbnz	r1, 800e0e0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x16>
 800e0da:	2400      	movs	r4, #0
 800e0dc:	4620      	mov	r0, r4
 800e0de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e0e0:	290a      	cmp	r1, #10
 800e0e2:	d0fa      	beq.n	800e0da <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800e0e4:	682b      	ldr	r3, [r5, #0]
 800e0e6:	4628      	mov	r0, r5
 800e0e8:	691b      	ldr	r3, [r3, #16]
 800e0ea:	4798      	blx	r3
 800e0ec:	4601      	mov	r1, r0
 800e0ee:	4628      	mov	r0, r5
 800e0f0:	f7ff ffd4 	bl	800e09c <_ZNK8touchgfx9ConstFont4findEt>
 800e0f4:	4604      	mov	r4, r0
 800e0f6:	2800      	cmp	r0, #0
 800e0f8:	d0ef      	beq.n	800e0da <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800e0fa:	682b      	ldr	r3, [r5, #0]
 800e0fc:	4621      	mov	r1, r4
 800e0fe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e100:	4628      	mov	r0, r5
 800e102:	4798      	blx	r3
 800e104:	6038      	str	r0, [r7, #0]
 800e106:	682b      	ldr	r3, [r5, #0]
 800e108:	4628      	mov	r0, r5
 800e10a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e10c:	4798      	blx	r3
 800e10e:	7030      	strb	r0, [r6, #0]
 800e110:	e7e4      	b.n	800e0dc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x12>
 800e112:	4604      	mov	r4, r0
 800e114:	e7f1      	b.n	800e0fa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x30>

0800e116 <_ZN8touchgfx6memsetEPvhm>:
 800e116:	4402      	add	r2, r0
 800e118:	4290      	cmp	r0, r2
 800e11a:	d002      	beq.n	800e122 <_ZN8touchgfx6memsetEPvhm+0xc>
 800e11c:	f800 1b01 	strb.w	r1, [r0], #1
 800e120:	e7fa      	b.n	800e118 <_ZN8touchgfx6memsetEPvhm+0x2>
 800e122:	4770      	bx	lr

0800e124 <_ZN8touchgfx10ClickEventD1Ev>:
 800e124:	4770      	bx	lr

0800e126 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800e126:	2000      	movs	r0, #0
 800e128:	4770      	bx	lr

0800e12a <_ZN8touchgfx9DragEventD1Ev>:
 800e12a:	4770      	bx	lr

0800e12c <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800e12c:	2001      	movs	r0, #1
 800e12e:	4770      	bx	lr

0800e130 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800e130:	2002      	movs	r0, #2
 800e132:	4770      	bx	lr

0800e134 <_ZN8touchgfx12GestureEventD1Ev>:
 800e134:	4770      	bx	lr

0800e136 <_ZN8touchgfx10ClickEventD0Ev>:
 800e136:	b510      	push	{r4, lr}
 800e138:	210c      	movs	r1, #12
 800e13a:	4604      	mov	r4, r0
 800e13c:	f00d f806 	bl	801b14c <_ZdlPvj>
 800e140:	4620      	mov	r0, r4
 800e142:	bd10      	pop	{r4, pc}

0800e144 <_ZN8touchgfx9DragEventD0Ev>:
 800e144:	b510      	push	{r4, lr}
 800e146:	2110      	movs	r1, #16
 800e148:	4604      	mov	r4, r0
 800e14a:	f00c ffff 	bl	801b14c <_ZdlPvj>
 800e14e:	4620      	mov	r0, r4
 800e150:	bd10      	pop	{r4, pc}

0800e152 <_ZN8touchgfx12GestureEventD0Ev>:
 800e152:	b510      	push	{r4, lr}
 800e154:	210c      	movs	r1, #12
 800e156:	4604      	mov	r4, r0
 800e158:	f00c fff8 	bl	801b14c <_ZdlPvj>
 800e15c:	4620      	mov	r0, r4
 800e15e:	bd10      	pop	{r4, pc}

0800e160 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800e160:	b530      	push	{r4, r5, lr}
 800e162:	460d      	mov	r5, r1
 800e164:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800e166:	b087      	sub	sp, #28
 800e168:	4604      	mov	r4, r0
 800e16a:	b301      	cbz	r1, 800e1ae <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800e16c:	a801      	add	r0, sp, #4
 800e16e:	f7ff ff60 	bl	800e032 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e172:	892a      	ldrh	r2, [r5, #8]
 800e174:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800e178:	7928      	ldrb	r0, [r5, #4]
 800e17a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e17e:	f88d 0010 	strb.w	r0, [sp, #16]
 800e182:	1ad2      	subs	r2, r2, r3
 800e184:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800e186:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e188:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e18c:	441a      	add	r2, r3
 800e18e:	896b      	ldrh	r3, [r5, #10]
 800e190:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800e194:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e198:	1b5b      	subs	r3, r3, r5
 800e19a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800e19c:	442b      	add	r3, r5
 800e19e:	4d05      	ldr	r5, [pc, #20]	; (800e1b4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800e1a0:	9503      	str	r5, [sp, #12]
 800e1a2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e1a6:	6803      	ldr	r3, [r0, #0]
 800e1a8:	a903      	add	r1, sp, #12
 800e1aa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e1ac:	4798      	blx	r3
 800e1ae:	b007      	add	sp, #28
 800e1b0:	bd30      	pop	{r4, r5, pc}
 800e1b2:	bf00      	nop
 800e1b4:	0801e748 	.word	0x0801e748

0800e1b8 <_ZNK8touchgfx4Rect9intersectEss>:
 800e1b8:	b510      	push	{r4, lr}
 800e1ba:	f9b0 3000 	ldrsh.w	r3, [r0]
 800e1be:	428b      	cmp	r3, r1
 800e1c0:	dc10      	bgt.n	800e1e4 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800e1c2:	8884      	ldrh	r4, [r0, #4]
 800e1c4:	4423      	add	r3, r4
 800e1c6:	b21b      	sxth	r3, r3
 800e1c8:	4299      	cmp	r1, r3
 800e1ca:	da0b      	bge.n	800e1e4 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800e1cc:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800e1d0:	4293      	cmp	r3, r2
 800e1d2:	dc07      	bgt.n	800e1e4 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800e1d4:	88c0      	ldrh	r0, [r0, #6]
 800e1d6:	4418      	add	r0, r3
 800e1d8:	b200      	sxth	r0, r0
 800e1da:	4282      	cmp	r2, r0
 800e1dc:	bfac      	ite	ge
 800e1de:	2000      	movge	r0, #0
 800e1e0:	2001      	movlt	r0, #1
 800e1e2:	bd10      	pop	{r4, pc}
 800e1e4:	2000      	movs	r0, #0
 800e1e6:	e7fc      	b.n	800e1e2 <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800e1e8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800e1e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e1ea:	460c      	mov	r4, r1
 800e1ec:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800e1ee:	b089      	sub	sp, #36	; 0x24
 800e1f0:	4605      	mov	r5, r0
 800e1f2:	2900      	cmp	r1, #0
 800e1f4:	d054      	beq.n	800e2a0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800e1f6:	4668      	mov	r0, sp
 800e1f8:	f7ff ff1b 	bl	800e032 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e1fc:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800e1fe:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800e200:	8922      	ldrh	r2, [r4, #8]
 800e202:	88e1      	ldrh	r1, [r4, #6]
 800e204:	443a      	add	r2, r7
 800e206:	4431      	add	r1, r6
 800e208:	b212      	sxth	r2, r2
 800e20a:	b209      	sxth	r1, r1
 800e20c:	4668      	mov	r0, sp
 800e20e:	f7ff ffd3 	bl	800e1b8 <_ZNK8touchgfx4Rect9intersectEss>
 800e212:	b1d0      	cbz	r0, 800e24a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800e214:	89a2      	ldrh	r2, [r4, #12]
 800e216:	8961      	ldrh	r1, [r4, #10]
 800e218:	443a      	add	r2, r7
 800e21a:	4431      	add	r1, r6
 800e21c:	b212      	sxth	r2, r2
 800e21e:	b209      	sxth	r1, r1
 800e220:	4668      	mov	r0, sp
 800e222:	f7ff ffc9 	bl	800e1b8 <_ZNK8touchgfx4Rect9intersectEss>
 800e226:	4603      	mov	r3, r0
 800e228:	b978      	cbnz	r0, 800e24a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800e22a:	4a1e      	ldr	r2, [pc, #120]	; (800e2a4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800e22c:	9204      	str	r2, [sp, #16]
 800e22e:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800e230:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e234:	2202      	movs	r2, #2
 800e236:	f88d 2014 	strb.w	r2, [sp, #20]
 800e23a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e23e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e242:	6803      	ldr	r3, [r0, #0]
 800e244:	a904      	add	r1, sp, #16
 800e246:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e248:	4798      	blx	r3
 800e24a:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800e24c:	a802      	add	r0, sp, #8
 800e24e:	f7ff fef0 	bl	800e032 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e252:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800e256:	88e0      	ldrh	r0, [r4, #6]
 800e258:	8961      	ldrh	r1, [r4, #10]
 800e25a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800e25e:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800e262:	8923      	ldrh	r3, [r4, #8]
 800e264:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800e266:	7927      	ldrb	r7, [r4, #4]
 800e268:	f88d 7014 	strb.w	r7, [sp, #20]
 800e26c:	1a80      	subs	r0, r0, r2
 800e26e:	1a89      	subs	r1, r1, r2
 800e270:	89a2      	ldrh	r2, [r4, #12]
 800e272:	4c0d      	ldr	r4, [pc, #52]	; (800e2a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800e274:	9404      	str	r4, [sp, #16]
 800e276:	4460      	add	r0, ip
 800e278:	eba3 030e 	sub.w	r3, r3, lr
 800e27c:	eba2 020e 	sub.w	r2, r2, lr
 800e280:	f8ad 0016 	strh.w	r0, [sp, #22]
 800e284:	4433      	add	r3, r6
 800e286:	4461      	add	r1, ip
 800e288:	4432      	add	r2, r6
 800e28a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800e28c:	f8ad 101a 	strh.w	r1, [sp, #26]
 800e290:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e294:	f8ad 201c 	strh.w	r2, [sp, #28]
 800e298:	6803      	ldr	r3, [r0, #0]
 800e29a:	a904      	add	r1, sp, #16
 800e29c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800e29e:	4798      	blx	r3
 800e2a0:	b009      	add	sp, #36	; 0x24
 800e2a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e2a4:	0801e720 	.word	0x0801e720
 800e2a8:	0801e734 	.word	0x0801e734

0800e2ac <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800e2ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2b0:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800e2b4:	790b      	ldrb	r3, [r1, #4]
 800e2b6:	b0a1      	sub	sp, #132	; 0x84
 800e2b8:	4604      	mov	r4, r0
 800e2ba:	460d      	mov	r5, r1
 800e2bc:	f1b9 0f00 	cmp.w	r9, #0
 800e2c0:	d00f      	beq.n	800e2e2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800e2c2:	2b00      	cmp	r3, #0
 800e2c4:	f040 80a0 	bne.w	800e408 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800e2c8:	b021      	add	sp, #132	; 0x84
 800e2ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e2ce:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800e2d2:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e2d6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800e2da:	1d20      	adds	r0, r4, #4
 800e2dc:	f7fc fb88 	bl	800a9f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800e2e0:	e092      	b.n	800e408 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800e2e2:	2b00      	cmp	r3, #0
 800e2e4:	d1f0      	bne.n	800e2c8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800e2e6:	4b5e      	ldr	r3, [pc, #376]	; (800e460 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800e2e8:	681b      	ldr	r3, [r3, #0]
 800e2ea:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800e2ee:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800e2f2:	f1ba 0f03 	cmp.w	sl, #3
 800e2f6:	ddea      	ble.n	800e2ce <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800e2f8:	f1ba 0f0c 	cmp.w	sl, #12
 800e2fc:	f04f 0303 	mov.w	r3, #3
 800e300:	bfdc      	itt	le
 800e302:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800e306:	fb92 f3f3 	sdivle	r3, r2, r3
 800e30a:	9301      	str	r3, [sp, #4]
 800e30c:	4b55      	ldr	r3, [pc, #340]	; (800e464 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800e30e:	4956      	ldr	r1, [pc, #344]	; (800e468 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800e310:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e314:	4b55      	ldr	r3, [pc, #340]	; (800e46c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800e316:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e31a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e31e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e322:	ab0e      	add	r3, sp, #56	; 0x38
 800e324:	2248      	movs	r2, #72	; 0x48
 800e326:	2600      	movs	r6, #0
 800e328:	4618      	mov	r0, r3
 800e32a:	960a      	str	r6, [sp, #40]	; 0x28
 800e32c:	f00c ffb8 	bl	801b2a0 <memcpy>
 800e330:	f04f 32ff 	mov.w	r2, #4294967295
 800e334:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800e338:	f8cd a008 	str.w	sl, [sp, #8]
 800e33c:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800e340:	fb93 f3f2 	sdiv	r3, r3, r2
 800e344:	b29b      	uxth	r3, r3
 800e346:	46b3      	mov	fp, r6
 800e348:	9303      	str	r3, [sp, #12]
 800e34a:	2300      	movs	r3, #0
 800e34c:	9309      	str	r3, [sp, #36]	; 0x24
 800e34e:	9b07      	ldr	r3, [sp, #28]
 800e350:	9a03      	ldr	r2, [sp, #12]
 800e352:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800e356:	88ef      	ldrh	r7, [r5, #6]
 800e358:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800e35c:	fb13 f302 	smulbb	r3, r3, r2
 800e360:	b29b      	uxth	r3, r3
 800e362:	9304      	str	r3, [sp, #16]
 800e364:	9b07      	ldr	r3, [sp, #28]
 800e366:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800e36a:	a80a      	add	r0, sp, #40	; 0x28
 800e36c:	685b      	ldr	r3, [r3, #4]
 800e36e:	fb13 f302 	smulbb	r3, r3, r2
 800e372:	b29b      	uxth	r3, r3
 800e374:	9305      	str	r3, [sp, #20]
 800e376:	9b04      	ldr	r3, [sp, #16]
 800e378:	441f      	add	r7, r3
 800e37a:	9b05      	ldr	r3, [sp, #20]
 800e37c:	4498      	add	r8, r3
 800e37e:	b23f      	sxth	r7, r7
 800e380:	fa0f f888 	sxth.w	r8, r8
 800e384:	4642      	mov	r2, r8
 800e386:	4639      	mov	r1, r7
 800e388:	f7ff ff16 	bl	800e1b8 <_ZNK8touchgfx4Rect9intersectEss>
 800e38c:	b380      	cbz	r0, 800e3f0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800e38e:	4639      	mov	r1, r7
 800e390:	ab09      	add	r3, sp, #36	; 0x24
 800e392:	4642      	mov	r2, r8
 800e394:	1d20      	adds	r0, r4, #4
 800e396:	f7fc fb2b 	bl	800a9f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800e39a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800e39c:	b341      	cbz	r1, 800e3f0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800e39e:	4549      	cmp	r1, r9
 800e3a0:	d026      	beq.n	800e3f0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800e3a2:	a80c      	add	r0, sp, #48	; 0x30
 800e3a4:	f7ff fe45 	bl	800e032 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e3a8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800e3ac:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800e3b0:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800e3b4:	2002      	movs	r0, #2
 800e3b6:	fb92 f2f0 	sdiv	r2, r2, r0
 800e3ba:	440a      	add	r2, r1
 800e3bc:	1a99      	subs	r1, r3, r2
 800e3be:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800e3c2:	fb93 f3f0 	sdiv	r3, r3, r0
 800e3c6:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800e3ca:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800e3ce:	4403      	add	r3, r0
 800e3d0:	1ad3      	subs	r3, r2, r3
 800e3d2:	435b      	muls	r3, r3
 800e3d4:	9a06      	ldr	r2, [sp, #24]
 800e3d6:	fb01 3301 	mla	r3, r1, r1, r3
 800e3da:	4293      	cmp	r3, r2
 800e3dc:	d208      	bcs.n	800e3f0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800e3de:	9a04      	ldr	r2, [sp, #16]
 800e3e0:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800e3e4:	86a2      	strh	r2, [r4, #52]	; 0x34
 800e3e6:	9a05      	ldr	r2, [sp, #20]
 800e3e8:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800e3ec:	86e2      	strh	r2, [r4, #54]	; 0x36
 800e3ee:	9306      	str	r3, [sp, #24]
 800e3f0:	f10b 0b02 	add.w	fp, fp, #2
 800e3f4:	f1bb 0f08 	cmp.w	fp, #8
 800e3f8:	dda7      	ble.n	800e34a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800e3fa:	9b02      	ldr	r3, [sp, #8]
 800e3fc:	4453      	add	r3, sl
 800e3fe:	9302      	str	r3, [sp, #8]
 800e400:	9b01      	ldr	r3, [sp, #4]
 800e402:	3601      	adds	r6, #1
 800e404:	42b3      	cmp	r3, r6
 800e406:	d199      	bne.n	800e33c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800e408:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e40a:	2900      	cmp	r1, #0
 800e40c:	f43f af5c 	beq.w	800e2c8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800e410:	a80c      	add	r0, sp, #48	; 0x30
 800e412:	f7ff fe0e 	bl	800e032 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e416:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800e41a:	88ea      	ldrh	r2, [r5, #6]
 800e41c:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800e420:	7929      	ldrb	r1, [r5, #4]
 800e422:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800e426:	1ad2      	subs	r2, r2, r3
 800e428:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800e42a:	441a      	add	r2, r3
 800e42c:	892b      	ldrh	r3, [r5, #8]
 800e42e:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800e432:	1a1b      	subs	r3, r3, r0
 800e434:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800e436:	4403      	add	r3, r0
 800e438:	480d      	ldr	r0, [pc, #52]	; (800e470 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800e43a:	900e      	str	r0, [sp, #56]	; 0x38
 800e43c:	2600      	movs	r6, #0
 800e43e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e440:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800e444:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800e448:	6803      	ldr	r3, [r0, #0]
 800e44a:	a90e      	add	r1, sp, #56	; 0x38
 800e44c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e44e:	4798      	blx	r3
 800e450:	792b      	ldrb	r3, [r5, #4]
 800e452:	2b00      	cmp	r3, #0
 800e454:	f43f af38 	beq.w	800e2c8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800e458:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800e45c:	e734      	b.n	800e2c8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800e45e:	bf00      	nop
 800e460:	20026eb0 	.word	0x20026eb0
 800e464:	20026ea4 	.word	0x20026ea4
 800e468:	0801c6f4 	.word	0x0801c6f4
 800e46c:	20026ea6 	.word	0x20026ea6
 800e470:	0801e720 	.word	0x0801e720

0800e474 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800e474:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e476:	4604      	mov	r4, r0
 800e478:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800e47c:	3201      	adds	r2, #1
 800e47e:	d112      	bne.n	800e4a6 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800e480:	6803      	ldr	r3, [r0, #0]
 800e482:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800e486:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800e48a:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e48e:	2500      	movs	r5, #0
 800e490:	9500      	str	r5, [sp, #0]
 800e492:	466d      	mov	r5, sp
 800e494:	4629      	mov	r1, r5
 800e496:	f8ad 2006 	strh.w	r2, [sp, #6]
 800e49a:	6a1b      	ldr	r3, [r3, #32]
 800e49c:	4798      	blx	r3
 800e49e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e4a2:	e884 0003 	stmia.w	r4, {r0, r1}
 800e4a6:	4620      	mov	r0, r4
 800e4a8:	b003      	add	sp, #12
 800e4aa:	bd30      	pop	{r4, r5, pc}

0800e4ac <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800e4ac:	b513      	push	{r0, r1, r4, lr}
 800e4ae:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800e4b2:	3301      	adds	r3, #1
 800e4b4:	4604      	mov	r4, r0
 800e4b6:	d109      	bne.n	800e4cc <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800e4b8:	4601      	mov	r1, r0
 800e4ba:	4668      	mov	r0, sp
 800e4bc:	f7ff fdb9 	bl	800e032 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e4c0:	f8bd 3000 	ldrh.w	r3, [sp]
 800e4c4:	8423      	strh	r3, [r4, #32]
 800e4c6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e4ca:	8463      	strh	r3, [r4, #34]	; 0x22
 800e4cc:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800e4d0:	b002      	add	sp, #8
 800e4d2:	bd10      	pop	{r4, pc}

0800e4d4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800e4d4:	b513      	push	{r0, r1, r4, lr}
 800e4d6:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800e4da:	3301      	adds	r3, #1
 800e4dc:	4604      	mov	r4, r0
 800e4de:	d109      	bne.n	800e4f4 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800e4e0:	4601      	mov	r1, r0
 800e4e2:	4668      	mov	r0, sp
 800e4e4:	f7ff fda5 	bl	800e032 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e4e8:	f8bd 3000 	ldrh.w	r3, [sp]
 800e4ec:	8423      	strh	r3, [r4, #32]
 800e4ee:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800e4f2:	8463      	strh	r3, [r4, #34]	; 0x22
 800e4f4:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800e4f8:	b002      	add	sp, #8
 800e4fa:	bd10      	pop	{r4, pc}

0800e4fc <_ZN8touchgfx6ScreenC1Ev>:
 800e4fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e4fe:	4605      	mov	r5, r0
 800e500:	4b17      	ldr	r3, [pc, #92]	; (800e560 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800e502:	f845 3b04 	str.w	r3, [r5], #4
 800e506:	2301      	movs	r3, #1
 800e508:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
 800e50c:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
 800e510:	4b14      	ldr	r3, [pc, #80]	; (800e564 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800e512:	4915      	ldr	r1, [pc, #84]	; (800e568 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800e514:	f9b3 7000 	ldrsh.w	r7, [r3]
 800e518:	4b14      	ldr	r3, [pc, #80]	; (800e56c <_ZN8touchgfx6ScreenC1Ev+0x70>)
 800e51a:	6041      	str	r1, [r0, #4]
 800e51c:	2200      	movs	r2, #0
 800e51e:	8102      	strh	r2, [r0, #8]
 800e520:	8142      	strh	r2, [r0, #10]
 800e522:	8182      	strh	r2, [r0, #12]
 800e524:	81c2      	strh	r2, [r0, #14]
 800e526:	8202      	strh	r2, [r0, #16]
 800e528:	8242      	strh	r2, [r0, #18]
 800e52a:	8282      	strh	r2, [r0, #20]
 800e52c:	82c2      	strh	r2, [r0, #22]
 800e52e:	e9c0 2206 	strd	r2, r2, [r0, #24]
 800e532:	6202      	str	r2, [r0, #32]
 800e534:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800e538:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 800e53c:	6342      	str	r2, [r0, #52]	; 0x34
 800e53e:	f9b3 6000 	ldrsh.w	r6, [r3]
 800e542:	4611      	mov	r1, r2
 800e544:	4604      	mov	r4, r0
 800e546:	4628      	mov	r0, r5
 800e548:	f7f8 fdc1 	bl	80070ce <_ZN8touchgfx8Drawable5setXYEss>
 800e54c:	4639      	mov	r1, r7
 800e54e:	4628      	mov	r0, r5
 800e550:	f7f8 fddb 	bl	800710a <_ZN8touchgfx8Drawable8setWidthEs>
 800e554:	4628      	mov	r0, r5
 800e556:	4631      	mov	r1, r6
 800e558:	f7f8 fde6 	bl	8007128 <_ZN8touchgfx8Drawable9setHeightEs>
 800e55c:	4620      	mov	r0, r4
 800e55e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e560:	0801e75c 	.word	0x0801e75c
 800e564:	20026ea4 	.word	0x20026ea4
 800e568:	0801d470 	.word	0x0801d470
 800e56c:	20026ea6 	.word	0x20026ea6

0800e570 <_ZN8touchgfx6Screen4drawEv>:
 800e570:	b507      	push	{r0, r1, r2, lr}
 800e572:	4b09      	ldr	r3, [pc, #36]	; (800e598 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800e574:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e578:	4b08      	ldr	r3, [pc, #32]	; (800e59c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800e57a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e57e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e582:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e586:	6803      	ldr	r3, [r0, #0]
 800e588:	2100      	movs	r1, #0
 800e58a:	9100      	str	r1, [sp, #0]
 800e58c:	689b      	ldr	r3, [r3, #8]
 800e58e:	4669      	mov	r1, sp
 800e590:	4798      	blx	r3
 800e592:	b003      	add	sp, #12
 800e594:	f85d fb04 	ldr.w	pc, [sp], #4
 800e598:	20026ea4 	.word	0x20026ea4
 800e59c:	20026ea6 	.word	0x20026ea6

0800e5a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800e5a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e5a4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800e5a8:	b089      	sub	sp, #36	; 0x24
 800e5aa:	4680      	mov	r8, r0
 800e5ac:	460c      	mov	r4, r1
 800e5ae:	4615      	mov	r5, r2
 800e5b0:	b16b      	cbz	r3, 800e5ce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800e5b2:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800e5b6:	b153      	cbz	r3, 800e5ce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800e5b8:	4628      	mov	r0, r5
 800e5ba:	f7ff ff5b 	bl	800e474 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e5be:	4621      	mov	r1, r4
 800e5c0:	f7fe ffdc 	bl	800d57c <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e5c4:	69eb      	ldr	r3, [r5, #28]
 800e5c6:	b928      	cbnz	r0, 800e5d4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x34>
 800e5c8:	461d      	mov	r5, r3
 800e5ca:	2b00      	cmp	r3, #0
 800e5cc:	d1f4      	bne.n	800e5b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x18>
 800e5ce:	b009      	add	sp, #36	; 0x24
 800e5d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e5d4:	ae04      	add	r6, sp, #16
 800e5d6:	2b00      	cmp	r3, #0
 800e5d8:	d051      	beq.n	800e67e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800e5da:	682b      	ldr	r3, [r5, #0]
 800e5dc:	4629      	mov	r1, r5
 800e5de:	68db      	ldr	r3, [r3, #12]
 800e5e0:	a802      	add	r0, sp, #8
 800e5e2:	4798      	blx	r3
 800e5e4:	4628      	mov	r0, r5
 800e5e6:	f7ff ff61 	bl	800e4ac <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e5ea:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800e5ee:	4407      	add	r7, r0
 800e5f0:	4628      	mov	r0, r5
 800e5f2:	f7ff ff6f 	bl	800e4d4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e5f6:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800e5fa:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800e5fe:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e602:	4418      	add	r0, r3
 800e604:	4621      	mov	r1, r4
 800e606:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800e60a:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e60e:	b23f      	sxth	r7, r7
 800e610:	4630      	mov	r0, r6
 800e612:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e616:	f8ad 7010 	strh.w	r7, [sp, #16]
 800e61a:	f7fc fa9b 	bl	800ab54 <_ZN8touchgfx4RectaNERKS0_>
 800e61e:	4628      	mov	r0, r5
 800e620:	f7ff ff28 	bl	800e474 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e624:	4602      	mov	r2, r0
 800e626:	e896 0003 	ldmia.w	r6, {r0, r1}
 800e62a:	ab06      	add	r3, sp, #24
 800e62c:	e883 0003 	stmia.w	r3, {r0, r1}
 800e630:	4611      	mov	r1, r2
 800e632:	4618      	mov	r0, r3
 800e634:	f7fc fa8e 	bl	800ab54 <_ZN8touchgfx4RectaNERKS0_>
 800e638:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e63c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800e640:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800e644:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800e648:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800e64c:	4299      	cmp	r1, r3
 800e64e:	d10b      	bne.n	800e668 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800e650:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e654:	4552      	cmp	r2, sl
 800e656:	d107      	bne.n	800e668 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800e658:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800e65c:	455a      	cmp	r2, fp
 800e65e:	d103      	bne.n	800e668 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800e660:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800e664:	454a      	cmp	r2, r9
 800e666:	d00a      	beq.n	800e67e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800e668:	f1bb 0f00 	cmp.w	fp, #0
 800e66c:	d002      	beq.n	800e674 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd4>
 800e66e:	f1b9 0f00 	cmp.w	r9, #0
 800e672:	d12e      	bne.n	800e6d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x132>
 800e674:	69ea      	ldr	r2, [r5, #28]
 800e676:	4621      	mov	r1, r4
 800e678:	4640      	mov	r0, r8
 800e67a:	f7ff ff91 	bl	800e5a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e67e:	4628      	mov	r0, r5
 800e680:	f7ff fef8 	bl	800e474 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800e684:	6861      	ldr	r1, [r4, #4]
 800e686:	4602      	mov	r2, r0
 800e688:	6820      	ldr	r0, [r4, #0]
 800e68a:	4633      	mov	r3, r6
 800e68c:	c303      	stmia	r3!, {r0, r1}
 800e68e:	4611      	mov	r1, r2
 800e690:	4630      	mov	r0, r6
 800e692:	f7fc fa5f 	bl	800ab54 <_ZN8touchgfx4RectaNERKS0_>
 800e696:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e69a:	2b00      	cmp	r3, #0
 800e69c:	d097      	beq.n	800e5ce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800e69e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e6a2:	2b00      	cmp	r3, #0
 800e6a4:	d093      	beq.n	800e5ce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800e6a6:	4628      	mov	r0, r5
 800e6a8:	f7ff ff00 	bl	800e4ac <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800e6ac:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800e6b0:	1a18      	subs	r0, r3, r0
 800e6b2:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e6b6:	4628      	mov	r0, r5
 800e6b8:	f7ff ff0c 	bl	800e4d4 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800e6bc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e6c0:	1a18      	subs	r0, r3, r0
 800e6c2:	f8ad 0012 	strh.w	r0, [sp, #18]
 800e6c6:	682b      	ldr	r3, [r5, #0]
 800e6c8:	4631      	mov	r1, r6
 800e6ca:	689b      	ldr	r3, [r3, #8]
 800e6cc:	4628      	mov	r0, r5
 800e6ce:	4798      	blx	r3
 800e6d0:	e77d      	b.n	800e5ce <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800e6d2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800e6d6:	fa1f f08a 	uxth.w	r0, sl
 800e6da:	4552      	cmp	r2, sl
 800e6dc:	9000      	str	r0, [sp, #0]
 800e6de:	da12      	bge.n	800e706 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x166>
 800e6e0:	9301      	str	r3, [sp, #4]
 800e6e2:	9b00      	ldr	r3, [sp, #0]
 800e6e4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800e6e8:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e6ec:	1a9a      	subs	r2, r3, r2
 800e6ee:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e6f2:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e6f6:	f8ad 2016 	strh.w	r2, [sp, #22]
 800e6fa:	69ea      	ldr	r2, [r5, #28]
 800e6fc:	4631      	mov	r1, r6
 800e6fe:	4640      	mov	r0, r8
 800e700:	f7ff ff4e 	bl	800e5a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e704:	9b01      	ldr	r3, [sp, #4]
 800e706:	f9b4 2000 	ldrsh.w	r2, [r4]
 800e70a:	429a      	cmp	r2, r3
 800e70c:	b29f      	uxth	r7, r3
 800e70e:	da0d      	bge.n	800e72c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x18c>
 800e710:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e714:	1aba      	subs	r2, r7, r2
 800e716:	f8ad a012 	strh.w	sl, [sp, #18]
 800e71a:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e71e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e722:	69ea      	ldr	r2, [r5, #28]
 800e724:	4631      	mov	r1, r6
 800e726:	4640      	mov	r0, r8
 800e728:	f7ff ff3a 	bl	800e5a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e72c:	8822      	ldrh	r2, [r4, #0]
 800e72e:	88a3      	ldrh	r3, [r4, #4]
 800e730:	445f      	add	r7, fp
 800e732:	4413      	add	r3, r2
 800e734:	b29b      	uxth	r3, r3
 800e736:	b2bf      	uxth	r7, r7
 800e738:	b23a      	sxth	r2, r7
 800e73a:	b219      	sxth	r1, r3
 800e73c:	4291      	cmp	r1, r2
 800e73e:	dd0d      	ble.n	800e75c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1bc>
 800e740:	1bdb      	subs	r3, r3, r7
 800e742:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e746:	f8ad a012 	strh.w	sl, [sp, #18]
 800e74a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e74e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e752:	69ea      	ldr	r2, [r5, #28]
 800e754:	4631      	mov	r1, r6
 800e756:	4640      	mov	r0, r8
 800e758:	f7ff ff22 	bl	800e5a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e75c:	88e2      	ldrh	r2, [r4, #6]
 800e75e:	8863      	ldrh	r3, [r4, #2]
 800e760:	4413      	add	r3, r2
 800e762:	9a00      	ldr	r2, [sp, #0]
 800e764:	444a      	add	r2, r9
 800e766:	b29b      	uxth	r3, r3
 800e768:	fa1f f982 	uxth.w	r9, r2
 800e76c:	fa0f f289 	sxth.w	r2, r9
 800e770:	b219      	sxth	r1, r3
 800e772:	428a      	cmp	r2, r1
 800e774:	da83      	bge.n	800e67e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800e776:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e77a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800e77e:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e782:	eba3 0309 	sub.w	r3, r3, r9
 800e786:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e78a:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e78e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e792:	69ea      	ldr	r2, [r5, #28]
 800e794:	4631      	mov	r1, r6
 800e796:	e76f      	b.n	800e678 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd8>

0800e798 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800e798:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e79a:	aa02      	add	r2, sp, #8
 800e79c:	2300      	movs	r3, #0
 800e79e:	f842 3d04 	str.w	r3, [r2, #-4]!
 800e7a2:	4604      	mov	r4, r0
 800e7a4:	3004      	adds	r0, #4
 800e7a6:	460d      	mov	r5, r1
 800e7a8:	f7fc faab 	bl	800ad02 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800e7ac:	9a01      	ldr	r2, [sp, #4]
 800e7ae:	b11a      	cbz	r2, 800e7b8 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800e7b0:	4629      	mov	r1, r5
 800e7b2:	4620      	mov	r0, r4
 800e7b4:	f7ff fef4 	bl	800e5a0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e7b8:	b003      	add	sp, #12
 800e7ba:	bd30      	pop	{r4, r5, pc}

0800e7bc <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800e7bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e7be:	4602      	mov	r2, r0
 800e7c0:	4604      	mov	r4, r0
 800e7c2:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800e7c6:	460d      	mov	r5, r1
 800e7c8:	6851      	ldr	r1, [r2, #4]
 800e7ca:	466b      	mov	r3, sp
 800e7cc:	c303      	stmia	r3!, {r0, r1}
 800e7ce:	4629      	mov	r1, r5
 800e7d0:	4668      	mov	r0, sp
 800e7d2:	f7fc f9bf 	bl	800ab54 <_ZN8touchgfx4RectaNERKS0_>
 800e7d6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e7da:	4669      	mov	r1, sp
 800e7dc:	b123      	cbz	r3, 800e7e8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800e7de:	4620      	mov	r0, r4
 800e7e0:	f7ff ffda 	bl	800e798 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800e7e4:	b003      	add	sp, #12
 800e7e6:	bd30      	pop	{r4, r5, pc}
 800e7e8:	1d20      	adds	r0, r4, #4
 800e7ea:	f7fc fa51 	bl	800ac90 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800e7ee:	e7f9      	b.n	800e7e4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800e7f0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800e7f0:	680a      	ldr	r2, [r1, #0]
 800e7f2:	460b      	mov	r3, r1
 800e7f4:	6952      	ldr	r2, [r2, #20]
 800e7f6:	1d01      	adds	r1, r0, #4
 800e7f8:	4618      	mov	r0, r3
 800e7fa:	4710      	bx	r2

0800e7fc <_ZNK8touchgfx9GlyphNode3topEv.isra.2>:
 800e7fc:	f011 0f40 	tst.w	r1, #64	; 0x40
 800e800:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 800e804:	4b03      	ldr	r3, [pc, #12]	; (800e814 <_ZNK8touchgfx9GlyphNode3topEv.isra.2+0x18>)
 800e806:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800e80a:	bf08      	it	eq
 800e80c:	2300      	moveq	r3, #0
 800e80e:	4308      	orrs	r0, r1
 800e810:	4318      	orrs	r0, r3
 800e812:	4770      	bx	lr
 800e814:	fffffe00 	.word	0xfffffe00

0800e818 <_ZN8touchgfx9GlyphNode6setTopEs>:
 800e818:	7b43      	ldrb	r3, [r0, #13]
 800e81a:	7201      	strb	r1, [r0, #8]
 800e81c:	b289      	uxth	r1, r1
 800e81e:	f003 039f 	and.w	r3, r3, #159	; 0x9f
 800e822:	05ca      	lsls	r2, r1, #23
 800e824:	bf48      	it	mi
 800e826:	f043 0320 	orrmi.w	r3, r3, #32
 800e82a:	7343      	strb	r3, [r0, #13]
 800e82c:	058b      	lsls	r3, r1, #22
 800e82e:	bf42      	ittt	mi
 800e830:	7b43      	ldrbmi	r3, [r0, #13]
 800e832:	f043 0340 	orrmi.w	r3, r3, #64	; 0x40
 800e836:	7343      	strbmi	r3, [r0, #13]
 800e838:	4770      	bx	lr

0800e83a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800e83a:	b530      	push	{r4, r5, lr}
 800e83c:	2500      	movs	r5, #0
 800e83e:	2401      	movs	r4, #1
 800e840:	6843      	ldr	r3, [r0, #4]
 800e842:	b913      	cbnz	r3, 800e84a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800e844:	6803      	ldr	r3, [r0, #0]
 800e846:	b1f3      	cbz	r3, 800e886 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800e848:	6043      	str	r3, [r0, #4]
 800e84a:	7c03      	ldrb	r3, [r0, #16]
 800e84c:	b143      	cbz	r3, 800e860 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800e84e:	68c3      	ldr	r3, [r0, #12]
 800e850:	b12b      	cbz	r3, 800e85e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e852:	881a      	ldrh	r2, [r3, #0]
 800e854:	b11a      	cbz	r2, 800e85e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e856:	1c9a      	adds	r2, r3, #2
 800e858:	60c2      	str	r2, [r0, #12]
 800e85a:	8818      	ldrh	r0, [r3, #0]
 800e85c:	bd30      	pop	{r4, r5, pc}
 800e85e:	7405      	strb	r5, [r0, #16]
 800e860:	6843      	ldr	r3, [r0, #4]
 800e862:	8819      	ldrh	r1, [r3, #0]
 800e864:	b179      	cbz	r1, 800e886 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800e866:	1c9a      	adds	r2, r3, #2
 800e868:	2902      	cmp	r1, #2
 800e86a:	6042      	str	r2, [r0, #4]
 800e86c:	d1f5      	bne.n	800e85a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800e86e:	6883      	ldr	r3, [r0, #8]
 800e870:	1d1a      	adds	r2, r3, #4
 800e872:	6082      	str	r2, [r0, #8]
 800e874:	681b      	ldr	r3, [r3, #0]
 800e876:	60c3      	str	r3, [r0, #12]
 800e878:	2b00      	cmp	r3, #0
 800e87a:	d0e1      	beq.n	800e840 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e87c:	881b      	ldrh	r3, [r3, #0]
 800e87e:	2b00      	cmp	r3, #0
 800e880:	d0de      	beq.n	800e840 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e882:	7404      	strb	r4, [r0, #16]
 800e884:	e7dc      	b.n	800e840 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e886:	2000      	movs	r0, #0
 800e888:	e7e8      	b.n	800e85c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800e88a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800e88a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e88c:	4605      	mov	r5, r0
 800e88e:	4608      	mov	r0, r1
 800e890:	b1e9      	cbz	r1, 800e8ce <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800e892:	f105 0440 	add.w	r4, r5, #64	; 0x40
 800e896:	460b      	mov	r3, r1
 800e898:	f101 0708 	add.w	r7, r1, #8
 800e89c:	4622      	mov	r2, r4
 800e89e:	6818      	ldr	r0, [r3, #0]
 800e8a0:	6859      	ldr	r1, [r3, #4]
 800e8a2:	4626      	mov	r6, r4
 800e8a4:	c603      	stmia	r6!, {r0, r1}
 800e8a6:	3308      	adds	r3, #8
 800e8a8:	42bb      	cmp	r3, r7
 800e8aa:	4634      	mov	r4, r6
 800e8ac:	d1f7      	bne.n	800e89e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800e8ae:	6818      	ldr	r0, [r3, #0]
 800e8b0:	6030      	str	r0, [r6, #0]
 800e8b2:	889b      	ldrh	r3, [r3, #4]
 800e8b4:	80b3      	strh	r3, [r6, #4]
 800e8b6:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 800e8ba:	015b      	lsls	r3, r3, #5
 800e8bc:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e8c0:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 800e8c4:	430b      	orrs	r3, r1
 800e8c6:	425b      	negs	r3, r3
 800e8c8:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 800e8cc:	4610      	mov	r0, r2
 800e8ce:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e8d0 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800e8d0:	b538      	push	{r3, r4, r5, lr}
 800e8d2:	460c      	mov	r4, r1
 800e8d4:	6811      	ldr	r1, [r2, #0]
 800e8d6:	4610      	mov	r0, r2
 800e8d8:	68cd      	ldr	r5, [r1, #12]
 800e8da:	4619      	mov	r1, r3
 800e8dc:	47a8      	blx	r5
 800e8de:	2800      	cmp	r0, #0
 800e8e0:	bf08      	it	eq
 800e8e2:	4620      	moveq	r0, r4
 800e8e4:	bd38      	pop	{r3, r4, r5, pc}

0800e8e6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800e8e6:	b570      	push	{r4, r5, r6, lr}
 800e8e8:	8810      	ldrh	r0, [r2, #0]
 800e8ea:	4298      	cmp	r0, r3
 800e8ec:	d817      	bhi.n	800e91e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e8ee:	1e48      	subs	r0, r1, #1
 800e8f0:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800e8f4:	4298      	cmp	r0, r3
 800e8f6:	d312      	bcc.n	800e91e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e8f8:	2400      	movs	r4, #0
 800e8fa:	428c      	cmp	r4, r1
 800e8fc:	d20f      	bcs.n	800e91e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e8fe:	1860      	adds	r0, r4, r1
 800e900:	1040      	asrs	r0, r0, #1
 800e902:	0085      	lsls	r5, r0, #2
 800e904:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800e908:	42b3      	cmp	r3, r6
 800e90a:	d902      	bls.n	800e912 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800e90c:	3001      	adds	r0, #1
 800e90e:	b284      	uxth	r4, r0
 800e910:	e7f3      	b.n	800e8fa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800e912:	d102      	bne.n	800e91a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x34>
 800e914:	442a      	add	r2, r5
 800e916:	8850      	ldrh	r0, [r2, #2]
 800e918:	bd70      	pop	{r4, r5, r6, pc}
 800e91a:	b281      	uxth	r1, r0
 800e91c:	e7ed      	b.n	800e8fa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800e91e:	2000      	movs	r0, #0
 800e920:	e7fa      	b.n	800e918 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
	...

0800e924 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>:
 800e924:	b510      	push	{r4, lr}
 800e926:	8ac3      	ldrh	r3, [r0, #22]
 800e928:	428b      	cmp	r3, r1
 800e92a:	d805      	bhi.n	800e938 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x14>
 800e92c:	4b07      	ldr	r3, [pc, #28]	; (800e94c <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x28>)
 800e92e:	4a08      	ldr	r2, [pc, #32]	; (800e950 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x2c>)
 800e930:	4808      	ldr	r0, [pc, #32]	; (800e954 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x30>)
 800e932:	21fd      	movs	r1, #253	; 0xfd
 800e934:	f00c fc36 	bl	801b1a4 <__assert_func>
 800e938:	8a83      	ldrh	r3, [r0, #20]
 800e93a:	240a      	movs	r4, #10
 800e93c:	4419      	add	r1, r3
 800e93e:	fbb1 f3f4 	udiv	r3, r1, r4
 800e942:	fb04 1113 	mls	r1, r4, r3, r1
 800e946:	f820 2011 	strh.w	r2, [r0, r1, lsl #1]
 800e94a:	bd10      	pop	{r4, pc}
 800e94c:	0801e7a9 	.word	0x0801e7a9
 800e950:	0801ebd8 	.word	0x0801ebd8
 800e954:	0801e7b7 	.word	0x0801e7b7

0800e958 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>:
 800e958:	b508      	push	{r3, lr}
 800e95a:	8ac3      	ldrh	r3, [r0, #22]
 800e95c:	428b      	cmp	r3, r1
 800e95e:	d805      	bhi.n	800e96c <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x14>
 800e960:	4b07      	ldr	r3, [pc, #28]	; (800e980 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x28>)
 800e962:	4a08      	ldr	r2, [pc, #32]	; (800e984 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x2c>)
 800e964:	4808      	ldr	r0, [pc, #32]	; (800e988 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x30>)
 800e966:	21d3      	movs	r1, #211	; 0xd3
 800e968:	f00c fc1c 	bl	801b1a4 <__assert_func>
 800e96c:	8a83      	ldrh	r3, [r0, #20]
 800e96e:	220a      	movs	r2, #10
 800e970:	4419      	add	r1, r3
 800e972:	fbb1 f3f2 	udiv	r3, r1, r2
 800e976:	fb02 1113 	mls	r1, r2, r3, r1
 800e97a:	f830 0011 	ldrh.w	r0, [r0, r1, lsl #1]
 800e97e:	bd08      	pop	{r3, pc}
 800e980:	0801e7a9 	.word	0x0801e7a9
 800e984:	0801e928 	.word	0x0801e928
 800e988:	0801e7b7 	.word	0x0801e7b7

0800e98c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800e98c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e990:	4604      	mov	r4, r0
 800e992:	4688      	mov	r8, r1
 800e994:	4615      	mov	r5, r2
 800e996:	b94a      	cbnz	r2, 800e9ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20>
 800e998:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800e99c:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 800e9a0:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800e9a4:	4691      	mov	r9, r2
 800e9a6:	4648      	mov	r0, r9
 800e9a8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e9ac:	f100 0640 	add.w	r6, r0, #64	; 0x40
 800e9b0:	8892      	ldrh	r2, [r2, #4]
 800e9b2:	462b      	mov	r3, r5
 800e9b4:	f105 0c08 	add.w	ip, r5, #8
 800e9b8:	46b3      	mov	fp, r6
 800e9ba:	6818      	ldr	r0, [r3, #0]
 800e9bc:	6859      	ldr	r1, [r3, #4]
 800e9be:	4637      	mov	r7, r6
 800e9c0:	c703      	stmia	r7!, {r0, r1}
 800e9c2:	3308      	adds	r3, #8
 800e9c4:	4563      	cmp	r3, ip
 800e9c6:	463e      	mov	r6, r7
 800e9c8:	d1f7      	bne.n	800e9ba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x2e>
 800e9ca:	6818      	ldr	r0, [r3, #0]
 800e9cc:	6038      	str	r0, [r7, #0]
 800e9ce:	889b      	ldrh	r3, [r3, #4]
 800e9d0:	80bb      	strh	r3, [r7, #4]
 800e9d2:	f894 704d 	ldrb.w	r7, [r4, #77]	; 0x4d
 800e9d6:	f46f 6363 	mvn.w	r3, #3632	; 0xe30
 800e9da:	ea4f 1a07 	mov.w	sl, r7, lsl #4
 800e9de:	f40a 7180 	and.w	r1, sl, #256	; 0x100
 800e9e2:	18d3      	adds	r3, r2, r3
 800e9e4:	f894 a047 	ldrb.w	sl, [r4, #71]	; 0x47
 800e9e8:	b298      	uxth	r0, r3
 800e9ea:	ea4a 0a01 	orr.w	sl, sl, r1
 800e9ee:	281d      	cmp	r0, #29
 800e9f0:	fa1f f68a 	uxth.w	r6, sl
 800e9f4:	46d9      	mov	r9, fp
 800e9f6:	d842      	bhi.n	800ea7e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf2>
 800e9f8:	2301      	movs	r3, #1
 800e9fa:	4950      	ldr	r1, [pc, #320]	; (800eb3c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b0>)
 800e9fc:	4083      	lsls	r3, r0
 800e9fe:	420b      	tst	r3, r1
 800ea00:	ea4f 0aea 	mov.w	sl, sl, asr #3
 800ea04:	d114      	bne.n	800ea30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 800ea06:	f413 7f60 	tst.w	r3, #896	; 0x380
 800ea0a:	d03c      	beq.n	800ea86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xfa>
 800ea0c:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800ea10:	fa1f fa8a 	uxth.w	sl, sl
 800ea14:	eba1 010a 	sub.w	r1, r1, sl
 800ea18:	4658      	mov	r0, fp
 800ea1a:	b209      	sxth	r1, r1
 800ea1c:	f7ff fefc 	bl	800e818 <_ZN8touchgfx9GlyphNode6setTopEs>
 800ea20:	f8b4 0050 	ldrh.w	r0, [r4, #80]	; 0x50
 800ea24:	1b86      	subs	r6, r0, r6
 800ea26:	eba6 0a0a 	sub.w	sl, r6, sl
 800ea2a:	f8a4 a050 	strh.w	sl, [r4, #80]	; 0x50
 800ea2e:	e7ba      	b.n	800e9a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800ea30:	2100      	movs	r1, #0
 800ea32:	f104 001a 	add.w	r0, r4, #26
 800ea36:	f7ff ff8f 	bl	800e958 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800ea3a:	f640 6333 	movw	r3, #3635	; 0xe33
 800ea3e:	4298      	cmp	r0, r3
 800ea40:	4601      	mov	r1, r0
 800ea42:	d10a      	bne.n	800ea5a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xce>
 800ea44:	f8d8 3000 	ldr.w	r3, [r8]
 800ea48:	4640      	mov	r0, r8
 800ea4a:	68db      	ldr	r3, [r3, #12]
 800ea4c:	4798      	blx	r3
 800ea4e:	7b41      	ldrb	r1, [r0, #13]
 800ea50:	7a00      	ldrb	r0, [r0, #8]
 800ea52:	f7ff fed3 	bl	800e7fc <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800ea56:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800ea5a:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800ea5e:	4431      	add	r1, r6
 800ea60:	4451      	add	r1, sl
 800ea62:	b209      	sxth	r1, r1
 800ea64:	f8a4 104e 	strh.w	r1, [r4, #78]	; 0x4e
 800ea68:	4658      	mov	r0, fp
 800ea6a:	f7ff fed5 	bl	800e818 <_ZN8touchgfx9GlyphNode6setTopEs>
 800ea6e:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800ea72:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 800ea76:	1a9b      	subs	r3, r3, r2
 800ea78:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 800ea7c:	e793      	b.n	800e9a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800ea7e:	f640 631b 	movw	r3, #3611	; 0xe1b
 800ea82:	429a      	cmp	r2, r3
 800ea84:	d005      	beq.n	800ea92 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x106>
 800ea86:	f022 0302 	bic.w	r3, r2, #2
 800ea8a:	f640 611d 	movw	r1, #3613	; 0xe1d
 800ea8e:	428b      	cmp	r3, r1
 800ea90:	d119      	bne.n	800eac6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
 800ea92:	1e53      	subs	r3, r2, #1
 800ea94:	b29b      	uxth	r3, r3
 800ea96:	4642      	mov	r2, r8
 800ea98:	4629      	mov	r1, r5
 800ea9a:	4620      	mov	r0, r4
 800ea9c:	f7ff ff18 	bl	800e8d0 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800eaa0:	7b41      	ldrb	r1, [r0, #13]
 800eaa2:	7a00      	ldrb	r0, [r0, #8]
 800eaa4:	f7ff feaa 	bl	800e7fc <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800eaa8:	f994 304d 	ldrsb.w	r3, [r4, #77]	; 0x4d
 800eaac:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800eab0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800eab4:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800eab8:	4313      	orrs	r3, r2
 800eaba:	115a      	asrs	r2, r3, #5
 800eabc:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800eac0:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800eac4:	e02d      	b.n	800eb22 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x196>
 800eac6:	4639      	mov	r1, r7
 800eac8:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 800eacc:	f7ff fe96 	bl	800e7fc <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800ead0:	f640 6109 	movw	r1, #3593	; 0xe09
 800ead4:	f022 0310 	bic.w	r3, r2, #16
 800ead8:	428b      	cmp	r3, r1
 800eada:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800eade:	d003      	beq.n	800eae8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x15c>
 800eae0:	f640 6313 	movw	r3, #3603	; 0xe13
 800eae4:	429a      	cmp	r2, r3
 800eae6:	d126      	bne.n	800eb36 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1aa>
 800eae8:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800eaec:	b27f      	sxtb	r7, r7
 800eaee:	f407 7780 	and.w	r7, r7, #256	; 0x100
 800eaf2:	431f      	orrs	r7, r3
 800eaf4:	f640 6313 	movw	r3, #3603	; 0xe13
 800eaf8:	429a      	cmp	r2, r3
 800eafa:	bf1a      	itte	ne
 800eafc:	f102 33ff 	addne.w	r3, r2, #4294967295
 800eb00:	b29b      	uxthne	r3, r3
 800eb02:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800eb06:	4642      	mov	r2, r8
 800eb08:	4629      	mov	r1, r5
 800eb0a:	4620      	mov	r0, r4
 800eb0c:	f7ff fee0 	bl	800e8d0 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800eb10:	f990 300d 	ldrsb.w	r3, [r0, #13]
 800eb14:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800eb18:	7a83      	ldrb	r3, [r0, #10]
 800eb1a:	4313      	orrs	r3, r2
 800eb1c:	1aff      	subs	r7, r7, r3
 800eb1e:	f8a4 7052 	strh.w	r7, [r4, #82]	; 0x52
 800eb22:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800eb26:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 800eb2a:	f7ff fe67 	bl	800e7fc <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800eb2e:	1b80      	subs	r0, r0, r6
 800eb30:	f8a4 0050 	strh.w	r0, [r4, #80]	; 0x50
 800eb34:	e737      	b.n	800e9a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800eb36:	2300      	movs	r3, #0
 800eb38:	e7c2      	b.n	800eac0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x134>
 800eb3a:	bf00      	nop
 800eb3c:	3fc00079 	.word	0x3fc00079

0800eb40 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800eb40:	3a01      	subs	r2, #1
 800eb42:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eb46:	b292      	uxth	r2, r2
 800eb48:	460c      	mov	r4, r1
 800eb4a:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800eb4e:	42b2      	cmp	r2, r6
 800eb50:	d018      	beq.n	800eb84 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x44>
 800eb52:	8b01      	ldrh	r1, [r0, #24]
 800eb54:	f834 5b02 	ldrh.w	r5, [r4], #2
 800eb58:	4291      	cmp	r1, r2
 800eb5a:	d805      	bhi.n	800eb68 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x28>
 800eb5c:	4b14      	ldr	r3, [pc, #80]	; (800ebb0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x70>)
 800eb5e:	4a15      	ldr	r2, [pc, #84]	; (800ebb4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x74>)
 800eb60:	4815      	ldr	r0, [pc, #84]	; (800ebb8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x78>)
 800eb62:	21d3      	movs	r1, #211	; 0xd3
 800eb64:	f00c fb1e 	bl	801b1a4 <__assert_func>
 800eb68:	8ac1      	ldrh	r1, [r0, #22]
 800eb6a:	4411      	add	r1, r2
 800eb6c:	f001 0101 	and.w	r1, r1, #1
 800eb70:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800eb74:	3a01      	subs	r2, #1
 800eb76:	8a49      	ldrh	r1, [r1, #18]
 800eb78:	428d      	cmp	r5, r1
 800eb7a:	b292      	uxth	r2, r2
 800eb7c:	d0e7      	beq.n	800eb4e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xe>
 800eb7e:	2000      	movs	r0, #0
 800eb80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eb84:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 800eb88:	2600      	movs	r6, #0
 800eb8a:	441f      	add	r7, r3
 800eb8c:	f100 051a 	add.w	r5, r0, #26
 800eb90:	b2b1      	uxth	r1, r6
 800eb92:	42b9      	cmp	r1, r7
 800eb94:	da09      	bge.n	800ebaa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x6a>
 800eb96:	4628      	mov	r0, r5
 800eb98:	f7ff fede 	bl	800e958 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800eb9c:	f834 8016 	ldrh.w	r8, [r4, r6, lsl #1]
 800eba0:	4540      	cmp	r0, r8
 800eba2:	f106 0601 	add.w	r6, r6, #1
 800eba6:	d0f3      	beq.n	800eb90 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x50>
 800eba8:	e7e9      	b.n	800eb7e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800ebaa:	2001      	movs	r0, #1
 800ebac:	e7e8      	b.n	800eb80 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800ebae:	bf00      	nop
 800ebb0:	0801e7a9 	.word	0x0801e7a9
 800ebb4:	0801ed38 	.word	0x0801ed38
 800ebb8:	0801e7b7 	.word	0x0801e7b7

0800ebbc <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt>:
 800ebbc:	b538      	push	{r3, r4, r5, lr}
 800ebbe:	8ac3      	ldrh	r3, [r0, #22]
 800ebc0:	428b      	cmp	r3, r1
 800ebc2:	d205      	bcs.n	800ebd0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x14>
 800ebc4:	4b08      	ldr	r3, [pc, #32]	; (800ebe8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x2c>)
 800ebc6:	4a09      	ldr	r2, [pc, #36]	; (800ebec <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x30>)
 800ebc8:	4809      	ldr	r0, [pc, #36]	; (800ebf0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x34>)
 800ebca:	21d8      	movs	r1, #216	; 0xd8
 800ebcc:	f00c faea 	bl	801b1a4 <__assert_func>
 800ebd0:	8a82      	ldrh	r2, [r0, #20]
 800ebd2:	250a      	movs	r5, #10
 800ebd4:	440a      	add	r2, r1
 800ebd6:	1a5b      	subs	r3, r3, r1
 800ebd8:	fbb2 f4f5 	udiv	r4, r2, r5
 800ebdc:	fb05 2214 	mls	r2, r5, r4, r2
 800ebe0:	8282      	strh	r2, [r0, #20]
 800ebe2:	82c3      	strh	r3, [r0, #22]
 800ebe4:	bd38      	pop	{r3, r4, r5, pc}
 800ebe6:	bf00      	nop
 800ebe8:	0801e79d 	.word	0x0801e79d
 800ebec:	0801eb54 	.word	0x0801eb54
 800ebf0:	0801e7b7 	.word	0x0801e7b7

0800ebf4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>:
 800ebf4:	b538      	push	{r3, r4, r5, lr}
 800ebf6:	8ac3      	ldrh	r3, [r0, #22]
 800ebf8:	2b09      	cmp	r3, #9
 800ebfa:	d905      	bls.n	800ec08 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x14>
 800ebfc:	4b08      	ldr	r3, [pc, #32]	; (800ec20 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x2c>)
 800ebfe:	4a09      	ldr	r2, [pc, #36]	; (800ec24 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x30>)
 800ec00:	4809      	ldr	r0, [pc, #36]	; (800ec28 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x34>)
 800ec02:	21f7      	movs	r1, #247	; 0xf7
 800ec04:	f00c face 	bl	801b1a4 <__assert_func>
 800ec08:	8a82      	ldrh	r2, [r0, #20]
 800ec0a:	250a      	movs	r5, #10
 800ec0c:	441a      	add	r2, r3
 800ec0e:	fbb2 f4f5 	udiv	r4, r2, r5
 800ec12:	fb05 2214 	mls	r2, r5, r4, r2
 800ec16:	3301      	adds	r3, #1
 800ec18:	f820 1012 	strh.w	r1, [r0, r2, lsl #1]
 800ec1c:	82c3      	strh	r3, [r0, #22]
 800ec1e:	bd38      	pop	{r3, r4, r5, pc}
 800ec20:	0801e791 	.word	0x0801e791
 800ec24:	0801eaa5 	.word	0x0801eaa5
 800ec28:	0801e7b7 	.word	0x0801e7b7

0800ec2c <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800ec2c:	b538      	push	{r3, r4, r5, lr}
 800ec2e:	4604      	mov	r4, r0
 800ec30:	f100 051a 	add.w	r5, r0, #26
 800ec34:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800ec36:	2b0a      	cmp	r3, #10
 800ec38:	d01c      	beq.n	800ec74 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x48>
 800ec3a:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800ec3c:	b962      	cbnz	r2, 800ec58 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 800ec3e:	f104 051a 	add.w	r5, r4, #26
 800ec42:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800ec44:	2b0a      	cmp	r3, #10
 800ec46:	d015      	beq.n	800ec74 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x48>
 800ec48:	4620      	mov	r0, r4
 800ec4a:	f7ff fdf6 	bl	800e83a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800ec4e:	4601      	mov	r1, r0
 800ec50:	4628      	mov	r0, r5
 800ec52:	f7ff ffcf 	bl	800ebf4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>
 800ec56:	e7f4      	b.n	800ec42 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x16>
 800ec58:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800ec5a:	eb04 0143 	add.w	r1, r4, r3, lsl #1
 800ec5e:	3301      	adds	r3, #1
 800ec60:	f003 0301 	and.w	r3, r3, #1
 800ec64:	3a01      	subs	r2, #1
 800ec66:	8e49      	ldrh	r1, [r1, #50]	; 0x32
 800ec68:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ec6a:	8722      	strh	r2, [r4, #56]	; 0x38
 800ec6c:	4628      	mov	r0, r5
 800ec6e:	f7ff ffc1 	bl	800ebf4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>
 800ec72:	e7df      	b.n	800ec34 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8>
 800ec74:	bd38      	pop	{r3, r4, r5, pc}
	...

0800ec78 <_ZN8touchgfx12TextProvider18initializeInternalEv>:
 800ec78:	2300      	movs	r3, #0
 800ec7a:	b510      	push	{r4, lr}
 800ec7c:	6043      	str	r3, [r0, #4]
 800ec7e:	60c3      	str	r3, [r0, #12]
 800ec80:	7403      	strb	r3, [r0, #16]
 800ec82:	8603      	strh	r3, [r0, #48]	; 0x30
 800ec84:	8303      	strh	r3, [r0, #24]
 800ec86:	8703      	strh	r3, [r0, #56]	; 0x38
 800ec88:	4604      	mov	r4, r0
 800ec8a:	f7ff ffcf 	bl	800ec2c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800ec8e:	4a0a      	ldr	r2, [pc, #40]	; (800ecb8 <_ZN8touchgfx12TextProvider18initializeInternalEv+0x40>)
 800ec90:	6813      	ldr	r3, [r2, #0]
 800ec92:	4611      	mov	r1, r2
 800ec94:	b913      	cbnz	r3, 800ec9c <_ZN8touchgfx12TextProvider18initializeInternalEv+0x24>
 800ec96:	6852      	ldr	r2, [r2, #4]
 800ec98:	07d0      	lsls	r0, r2, #31
 800ec9a:	d50b      	bpl.n	800ecb4 <_ZN8touchgfx12TextProvider18initializeInternalEv+0x3c>
 800ec9c:	6849      	ldr	r1, [r1, #4]
 800ec9e:	104a      	asrs	r2, r1, #1
 800eca0:	07c9      	lsls	r1, r1, #31
 800eca2:	eb04 0002 	add.w	r0, r4, r2
 800eca6:	bf48      	it	mi
 800eca8:	58a2      	ldrmi	r2, [r4, r2]
 800ecaa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ecae:	bf48      	it	mi
 800ecb0:	58d3      	ldrmi	r3, [r2, r3]
 800ecb2:	4718      	bx	r3
 800ecb4:	bd10      	pop	{r4, pc}
 800ecb6:	bf00      	nop
 800ecb8:	200259c4 	.word	0x200259c4

0800ecbc <_ZN8touchgfx12TextProviderC1Ev>:
 800ecbc:	b510      	push	{r4, lr}
 800ecbe:	2300      	movs	r3, #0
 800ecc0:	2201      	movs	r2, #1
 800ecc2:	4604      	mov	r4, r0
 800ecc4:	e9c0 3300 	strd	r3, r3, [r0]
 800ecc8:	60c3      	str	r3, [r0, #12]
 800ecca:	7403      	strb	r3, [r0, #16]
 800eccc:	82c3      	strh	r3, [r0, #22]
 800ecce:	8303      	strh	r3, [r0, #24]
 800ecd0:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800ecd2:	8603      	strh	r3, [r0, #48]	; 0x30
 800ecd4:	86c3      	strh	r3, [r0, #54]	; 0x36
 800ecd6:	8703      	strh	r3, [r0, #56]	; 0x38
 800ecd8:	63c3      	str	r3, [r0, #60]	; 0x3c
 800ecda:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800ecde:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800ece2:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800ece6:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 800ecea:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 800ecee:	f7ff ffc3 	bl	800ec78 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800ecf2:	4620      	mov	r0, r4
 800ecf4:	bd10      	pop	{r4, pc}

0800ecf6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 800ecf6:	b410      	push	{r4}
 800ecf8:	6082      	str	r2, [r0, #8]
 800ecfa:	6001      	str	r1, [r0, #0]
 800ecfc:	63c3      	str	r3, [r0, #60]	; 0x3c
 800ecfe:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ed02:	f7ff bfb9 	b.w	800ec78 <_ZN8touchgfx12TextProvider18initializeInternalEv>
	...

0800ed08 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>:
 800ed08:	b508      	push	{r3, lr}
 800ed0a:	88c2      	ldrh	r2, [r0, #6]
 800ed0c:	440a      	add	r2, r1
 800ed0e:	2a02      	cmp	r2, #2
 800ed10:	dd05      	ble.n	800ed1e <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x16>
 800ed12:	4b06      	ldr	r3, [pc, #24]	; (800ed2c <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x24>)
 800ed14:	4a06      	ldr	r2, [pc, #24]	; (800ed30 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x28>)
 800ed16:	4807      	ldr	r0, [pc, #28]	; (800ed34 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x2c>)
 800ed18:	21ec      	movs	r1, #236	; 0xec
 800ed1a:	f00c fa43 	bl	801b1a4 <__assert_func>
 800ed1e:	8883      	ldrh	r3, [r0, #4]
 800ed20:	80c2      	strh	r2, [r0, #6]
 800ed22:	1a59      	subs	r1, r3, r1
 800ed24:	f001 0101 	and.w	r1, r1, #1
 800ed28:	8081      	strh	r1, [r0, #4]
 800ed2a:	bd08      	pop	{r3, pc}
 800ed2c:	0801e7e3 	.word	0x0801e7e3
 800ed30:	0801ecb1 	.word	0x0801ecb1
 800ed34:	0801e7b7 	.word	0x0801e7b7

0800ed38 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>:
 800ed38:	b508      	push	{r3, lr}
 800ed3a:	88c3      	ldrh	r3, [r0, #6]
 800ed3c:	428b      	cmp	r3, r1
 800ed3e:	d805      	bhi.n	800ed4c <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x14>
 800ed40:	4b06      	ldr	r3, [pc, #24]	; (800ed5c <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x24>)
 800ed42:	4a07      	ldr	r2, [pc, #28]	; (800ed60 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x28>)
 800ed44:	4807      	ldr	r0, [pc, #28]	; (800ed64 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x2c>)
 800ed46:	21fd      	movs	r1, #253	; 0xfd
 800ed48:	f00c fa2c 	bl	801b1a4 <__assert_func>
 800ed4c:	8883      	ldrh	r3, [r0, #4]
 800ed4e:	4419      	add	r1, r3
 800ed50:	f001 0101 	and.w	r1, r1, #1
 800ed54:	f820 2011 	strh.w	r2, [r0, r1, lsl #1]
 800ed58:	bd08      	pop	{r3, pc}
 800ed5a:	bf00      	nop
 800ed5c:	0801e7a9 	.word	0x0801e7a9
 800ed60:	0801ee09 	.word	0x0801ee09
 800ed64:	0801e7b7 	.word	0x0801e7b7

0800ed68 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800ed68:	b570      	push	{r4, r5, r6, lr}
 800ed6a:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800ed6c:	4604      	mov	r4, r0
 800ed6e:	b92a      	cbnz	r2, 800ed7c <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800ed70:	4b12      	ldr	r3, [pc, #72]	; (800edbc <_ZN8touchgfx12TextProvider11getNextCharEv+0x54>)
 800ed72:	4a13      	ldr	r2, [pc, #76]	; (800edc0 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800ed74:	4813      	ldr	r0, [pc, #76]	; (800edc4 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800ed76:	21de      	movs	r1, #222	; 0xde
 800ed78:	f00c fa14 	bl	801b1a4 <__assert_func>
 800ed7c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800ed7e:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800ed82:	260a      	movs	r6, #10
 800ed84:	3301      	adds	r3, #1
 800ed86:	8b4d      	ldrh	r5, [r1, #26]
 800ed88:	fbb3 f1f6 	udiv	r1, r3, r6
 800ed8c:	3a01      	subs	r2, #1
 800ed8e:	fb06 3311 	mls	r3, r6, r1, r3
 800ed92:	8602      	strh	r2, [r0, #48]	; 0x30
 800ed94:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800ed96:	f7ff ff49 	bl	800ec2c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800ed9a:	8b23      	ldrh	r3, [r4, #24]
 800ed9c:	2b02      	cmp	r3, #2
 800ed9e:	bf04      	itt	eq
 800eda0:	2301      	moveq	r3, #1
 800eda2:	8323      	strheq	r3, [r4, #24]
 800eda4:	3412      	adds	r4, #18
 800eda6:	4620      	mov	r0, r4
 800eda8:	2101      	movs	r1, #1
 800edaa:	f7ff ffad 	bl	800ed08 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>
 800edae:	4620      	mov	r0, r4
 800edb0:	462a      	mov	r2, r5
 800edb2:	2100      	movs	r1, #0
 800edb4:	f7ff ffc0 	bl	800ed38 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>
 800edb8:	4628      	mov	r0, r5
 800edba:	bd70      	pop	{r4, r5, r6, pc}
 800edbc:	0801e788 	.word	0x0801e788
 800edc0:	0801e9fa 	.word	0x0801e9fa
 800edc4:	0801e7b7 	.word	0x0801e7b7

0800edc8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800edc8:	428a      	cmp	r2, r1
 800edca:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800edce:	4604      	mov	r4, r0
 800edd0:	460e      	mov	r6, r1
 800edd2:	4615      	mov	r5, r2
 800edd4:	469a      	mov	sl, r3
 800edd6:	d92b      	bls.n	800ee30 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x68>
 800edd8:	1a57      	subs	r7, r2, r1
 800edda:	b2bf      	uxth	r7, r7
 800eddc:	f04f 0800 	mov.w	r8, #0
 800ede0:	f100 0932 	add.w	r9, r0, #50	; 0x32
 800ede4:	f04f 0b0a 	mov.w	fp, #10
 800ede8:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800edea:	b92b      	cbnz	r3, 800edf8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x30>
 800edec:	4b24      	ldr	r3, [pc, #144]	; (800ee80 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xb8>)
 800edee:	4a25      	ldr	r2, [pc, #148]	; (800ee84 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xbc>)
 800edf0:	21e6      	movs	r1, #230	; 0xe6
 800edf2:	4825      	ldr	r0, [pc, #148]	; (800ee88 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc0>)
 800edf4:	f00c f9d6 	bl	801b1a4 <__assert_func>
 800edf8:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800edfa:	3b01      	subs	r3, #1
 800edfc:	b29b      	uxth	r3, r3
 800edfe:	441a      	add	r2, r3
 800ee00:	8623      	strh	r3, [r4, #48]	; 0x30
 800ee02:	fbb2 f3fb 	udiv	r3, r2, fp
 800ee06:	fb0b 2313 	mls	r3, fp, r3, r2
 800ee0a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ee0e:	2101      	movs	r1, #1
 800ee10:	8b5a      	ldrh	r2, [r3, #26]
 800ee12:	9201      	str	r2, [sp, #4]
 800ee14:	4648      	mov	r0, r9
 800ee16:	f7ff ff77 	bl	800ed08 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>
 800ee1a:	f108 0801 	add.w	r8, r8, #1
 800ee1e:	9a01      	ldr	r2, [sp, #4]
 800ee20:	2100      	movs	r1, #0
 800ee22:	4648      	mov	r0, r9
 800ee24:	f7ff ff88 	bl	800ed38 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>
 800ee28:	fa1f f388 	uxth.w	r3, r8
 800ee2c:	429f      	cmp	r7, r3
 800ee2e:	d8db      	bhi.n	800ede8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x20>
 800ee30:	f104 071a 	add.w	r7, r4, #26
 800ee34:	4631      	mov	r1, r6
 800ee36:	4638      	mov	r0, r7
 800ee38:	f7ff fec0 	bl	800ebbc <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt>
 800ee3c:	260a      	movs	r6, #10
 800ee3e:	b1c5      	cbz	r5, 800ee72 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 800ee40:	3d01      	subs	r5, #1
 800ee42:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800ee44:	b2ad      	uxth	r5, r5
 800ee46:	2b09      	cmp	r3, #9
 800ee48:	f83a 2015 	ldrh.w	r2, [sl, r5, lsl #1]
 800ee4c:	d903      	bls.n	800ee56 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8e>
 800ee4e:	4b0f      	ldr	r3, [pc, #60]	; (800ee8c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc4>)
 800ee50:	4a0f      	ldr	r2, [pc, #60]	; (800ee90 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc8>)
 800ee52:	21ec      	movs	r1, #236	; 0xec
 800ee54:	e7cd      	b.n	800edf2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2a>
 800ee56:	8de1      	ldrh	r1, [r4, #46]	; 0x2e
 800ee58:	3109      	adds	r1, #9
 800ee5a:	3301      	adds	r3, #1
 800ee5c:	fbb1 f0f6 	udiv	r0, r1, r6
 800ee60:	fb06 1110 	mls	r1, r6, r0, r1
 800ee64:	85e1      	strh	r1, [r4, #46]	; 0x2e
 800ee66:	8623      	strh	r3, [r4, #48]	; 0x30
 800ee68:	2100      	movs	r1, #0
 800ee6a:	4638      	mov	r0, r7
 800ee6c:	f7ff fd5a 	bl	800e924 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800ee70:	e7e5      	b.n	800ee3e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x76>
 800ee72:	4620      	mov	r0, r4
 800ee74:	b003      	add	sp, #12
 800ee76:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ee7a:	f7ff bed7 	b.w	800ec2c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800ee7e:	bf00      	nop
 800ee80:	0801e788 	.word	0x0801e788
 800ee84:	0801e87e 	.word	0x0801e87e
 800ee88:	0801e7b7 	.word	0x0801e7b7
 800ee8c:	0801e7e3 	.word	0x0801e7e3
 800ee90:	0801e7f6 	.word	0x0801e7f6

0800ee94 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800ee94:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ee98:	4605      	mov	r5, r0
 800ee9a:	4616      	mov	r6, r2
 800ee9c:	1c8c      	adds	r4, r1, #2
 800ee9e:	8809      	ldrh	r1, [r1, #0]
 800eea0:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800eea4:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800eea8:	42b3      	cmp	r3, r6
 800eeaa:	d124      	bne.n	800eef6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800eeac:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800eeb0:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800eeb4:	f001 070f 	and.w	r7, r1, #15
 800eeb8:	f8cd 8000 	str.w	r8, [sp]
 800eebc:	464b      	mov	r3, r9
 800eebe:	4652      	mov	r2, sl
 800eec0:	4621      	mov	r1, r4
 800eec2:	4628      	mov	r0, r5
 800eec4:	f7ff fe3c 	bl	800eb40 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800eec8:	4683      	mov	fp, r0
 800eeca:	b168      	cbz	r0, 800eee8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800eecc:	eb0a 0109 	add.w	r1, sl, r9
 800eed0:	4441      	add	r1, r8
 800eed2:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800eed6:	463a      	mov	r2, r7
 800eed8:	4649      	mov	r1, r9
 800eeda:	4628      	mov	r0, r5
 800eedc:	f7ff ff74 	bl	800edc8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800eee0:	4658      	mov	r0, fp
 800eee2:	b003      	add	sp, #12
 800eee4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eee8:	eb07 010a 	add.w	r1, r7, sl
 800eeec:	4449      	add	r1, r9
 800eeee:	4441      	add	r1, r8
 800eef0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800eef4:	e7d2      	b.n	800ee9c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800eef6:	f04f 0b00 	mov.w	fp, #0
 800eefa:	e7f1      	b.n	800eee0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800eefc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800eefc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ef00:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800ef02:	886f      	ldrh	r7, [r5, #2]
 800ef04:	4604      	mov	r4, r0
 800ef06:	087f      	lsrs	r7, r7, #1
 800ef08:	260b      	movs	r6, #11
 800ef0a:	f100 091a 	add.w	r9, r0, #26
 800ef0e:	3e01      	subs	r6, #1
 800ef10:	d013      	beq.n	800ef3a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3e>
 800ef12:	2100      	movs	r1, #0
 800ef14:	4648      	mov	r0, r9
 800ef16:	f7ff fd1f 	bl	800e958 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800ef1a:	462a      	mov	r2, r5
 800ef1c:	4680      	mov	r8, r0
 800ef1e:	4603      	mov	r3, r0
 800ef20:	4639      	mov	r1, r7
 800ef22:	4620      	mov	r0, r4
 800ef24:	f7ff fcdf 	bl	800e8e6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800ef28:	b138      	cbz	r0, 800ef3a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3e>
 800ef2a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800ef2e:	4642      	mov	r2, r8
 800ef30:	4620      	mov	r0, r4
 800ef32:	f7ff ffaf 	bl	800ee94 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800ef36:	2800      	cmp	r0, #0
 800ef38:	d1e9      	bne.n	800ef0e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x12>
 800ef3a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

0800ef40 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:
 800ef40:	b570      	push	{r4, r5, r6, lr}
 800ef42:	4b1e      	ldr	r3, [pc, #120]	; (800efbc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800ef44:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ef48:	4604      	mov	r4, r0
 800ef4a:	f003 0501 	and.w	r5, r3, #1
 800ef4e:	b902      	cbnz	r2, 800ef52 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
 800ef50:	b165      	cbz	r5, 800ef6c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2c>
 800ef52:	105b      	asrs	r3, r3, #1
 800ef54:	f104 061a 	add.w	r6, r4, #26
 800ef58:	18e0      	adds	r0, r4, r3
 800ef5a:	b10d      	cbz	r5, 800ef60 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
 800ef5c:	58e3      	ldr	r3, [r4, r3]
 800ef5e:	589a      	ldr	r2, [r3, r2]
 800ef60:	4790      	blx	r2
 800ef62:	2100      	movs	r1, #0
 800ef64:	4602      	mov	r2, r0
 800ef66:	4630      	mov	r0, r6
 800ef68:	f7ff fcdc 	bl	800e924 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800ef6c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ef6e:	b303      	cbz	r3, 800efb2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800ef70:	f104 051a 	add.w	r5, r4, #26
 800ef74:	2100      	movs	r1, #0
 800ef76:	4628      	mov	r0, r5
 800ef78:	f7ff fcee 	bl	800e958 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800ef7c:	b1c8      	cbz	r0, 800efb2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800ef7e:	4620      	mov	r0, r4
 800ef80:	f7ff ffbc 	bl	800eefc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
 800ef84:	2101      	movs	r1, #1
 800ef86:	4628      	mov	r0, r5
 800ef88:	f7ff fce6 	bl	800e958 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800ef8c:	f640 133f 	movw	r3, #2367	; 0x93f
 800ef90:	4298      	cmp	r0, r3
 800ef92:	4606      	mov	r6, r0
 800ef94:	d10d      	bne.n	800efb2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800ef96:	2100      	movs	r1, #0
 800ef98:	4628      	mov	r0, r5
 800ef9a:	f7ff fcdd 	bl	800e958 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800ef9e:	2101      	movs	r1, #1
 800efa0:	4602      	mov	r2, r0
 800efa2:	4628      	mov	r0, r5
 800efa4:	f7ff fcbe 	bl	800e924 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800efa8:	4632      	mov	r2, r6
 800efaa:	2100      	movs	r1, #0
 800efac:	4628      	mov	r0, r5
 800efae:	f7ff fcb9 	bl	800e924 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800efb2:	4620      	mov	r0, r4
 800efb4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800efb8:	f7ff bed6 	b.w	800ed68 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800efbc:	200259cc 	.word	0x200259cc

0800efc0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800efc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800efc2:	4617      	mov	r7, r2
 800efc4:	461e      	mov	r6, r3
 800efc6:	4605      	mov	r5, r0
 800efc8:	f7ff ffba 	bl	800ef40 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800efcc:	683b      	ldr	r3, [r7, #0]
 800efce:	4604      	mov	r4, r0
 800efd0:	68db      	ldr	r3, [r3, #12]
 800efd2:	4601      	mov	r1, r0
 800efd4:	4638      	mov	r0, r7
 800efd6:	4798      	blx	r3
 800efd8:	f5a4 6360 	sub.w	r3, r4, #3584	; 0xe00
 800efdc:	b29b      	uxth	r3, r3
 800efde:	2b7f      	cmp	r3, #127	; 0x7f
 800efe0:	4602      	mov	r2, r0
 800efe2:	6030      	str	r0, [r6, #0]
 800efe4:	d813      	bhi.n	800f00e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x4e>
 800efe6:	4639      	mov	r1, r7
 800efe8:	4628      	mov	r0, r5
 800efea:	f7ff fccf 	bl	800e98c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800efee:	6030      	str	r0, [r6, #0]
 800eff0:	6833      	ldr	r3, [r6, #0]
 800eff2:	b143      	cbz	r3, 800f006 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800eff4:	f993 200d 	ldrsb.w	r2, [r3, #13]
 800eff8:	7a9b      	ldrb	r3, [r3, #10]
 800effa:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800effe:	4313      	orrs	r3, r2
 800f000:	bf0c      	ite	eq
 800f002:	2301      	moveq	r3, #1
 800f004:	2300      	movne	r3, #0
 800f006:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800f00a:	4620      	mov	r0, r4
 800f00c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f00e:	f895 3055 	ldrb.w	r3, [r5, #85]	; 0x55
 800f012:	2b00      	cmp	r3, #0
 800f014:	d0ec      	beq.n	800eff0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x30>
 800f016:	f640 1302 	movw	r3, #2306	; 0x902
 800f01a:	429c      	cmp	r4, r3
 800f01c:	d1e8      	bne.n	800eff0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x30>
 800f01e:	4601      	mov	r1, r0
 800f020:	4628      	mov	r0, r5
 800f022:	f7ff fc32 	bl	800e88a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800f026:	e7e2      	b.n	800efee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>

0800f028 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800f028:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f02c:	4617      	mov	r7, r2
 800f02e:	461e      	mov	r6, r3
 800f030:	4605      	mov	r5, r0
 800f032:	f7ff ff85 	bl	800ef40 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800f036:	683b      	ldr	r3, [r7, #0]
 800f038:	4604      	mov	r4, r0
 800f03a:	f8d3 8008 	ldr.w	r8, [r3, #8]
 800f03e:	4601      	mov	r1, r0
 800f040:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800f044:	4638      	mov	r0, r7
 800f046:	47c0      	blx	r8
 800f048:	f5a4 6360 	sub.w	r3, r4, #3584	; 0xe00
 800f04c:	b29b      	uxth	r3, r3
 800f04e:	2b7f      	cmp	r3, #127	; 0x7f
 800f050:	4602      	mov	r2, r0
 800f052:	6030      	str	r0, [r6, #0]
 800f054:	d814      	bhi.n	800f080 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x58>
 800f056:	4639      	mov	r1, r7
 800f058:	4628      	mov	r0, r5
 800f05a:	f7ff fc97 	bl	800e98c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800f05e:	6030      	str	r0, [r6, #0]
 800f060:	6833      	ldr	r3, [r6, #0]
 800f062:	b143      	cbz	r3, 800f076 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 800f064:	f993 200d 	ldrsb.w	r2, [r3, #13]
 800f068:	7a9b      	ldrb	r3, [r3, #10]
 800f06a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800f06e:	4313      	orrs	r3, r2
 800f070:	bf0c      	ite	eq
 800f072:	2301      	moveq	r3, #1
 800f074:	2300      	movne	r3, #0
 800f076:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800f07a:	4620      	mov	r0, r4
 800f07c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f080:	f895 3055 	ldrb.w	r3, [r5, #85]	; 0x55
 800f084:	2b00      	cmp	r3, #0
 800f086:	d0eb      	beq.n	800f060 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x38>
 800f088:	f640 1302 	movw	r3, #2306	; 0x902
 800f08c:	429c      	cmp	r4, r3
 800f08e:	d1e7      	bne.n	800f060 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x38>
 800f090:	4601      	mov	r1, r0
 800f092:	4628      	mov	r0, r5
 800f094:	f7ff fbf9 	bl	800e88a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800f098:	e7e1      	b.n	800f05e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x36>

0800f09a <_ZN8touchgfx7Unicode6strlenEPKt>:
 800f09a:	4602      	mov	r2, r0
 800f09c:	b148      	cbz	r0, 800f0b2 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 800f09e:	2300      	movs	r3, #0
 800f0a0:	b298      	uxth	r0, r3
 800f0a2:	3301      	adds	r3, #1
 800f0a4:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 800f0a8:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 800f0ac:	2900      	cmp	r1, #0
 800f0ae:	d1f7      	bne.n	800f0a0 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 800f0b0:	4770      	bx	lr
 800f0b2:	4770      	bx	lr

0800f0b4 <_ZN8touchgfx7Unicode6strlenEPKc>:
 800f0b4:	b140      	cbz	r0, 800f0c8 <_ZN8touchgfx7Unicode6strlenEPKc+0x14>
 800f0b6:	4602      	mov	r2, r0
 800f0b8:	1a13      	subs	r3, r2, r0
 800f0ba:	f812 1b01 	ldrb.w	r1, [r2], #1
 800f0be:	b29b      	uxth	r3, r3
 800f0c0:	2900      	cmp	r1, #0
 800f0c2:	d1f9      	bne.n	800f0b8 <_ZN8touchgfx7Unicode6strlenEPKc+0x4>
 800f0c4:	4618      	mov	r0, r3
 800f0c6:	4770      	bx	lr
 800f0c8:	4603      	mov	r3, r0
 800f0ca:	e7fb      	b.n	800f0c4 <_ZN8touchgfx7Unicode6strlenEPKc+0x10>

0800f0cc <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 800f0cc:	b530      	push	{r4, r5, lr}
 800f0ce:	4604      	mov	r4, r0
 800f0d0:	b159      	cbz	r1, 800f0ea <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 800f0d2:	b148      	cbz	r0, 800f0e8 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800f0d4:	2300      	movs	r3, #0
 800f0d6:	b298      	uxth	r0, r3
 800f0d8:	4282      	cmp	r2, r0
 800f0da:	d905      	bls.n	800f0e8 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 800f0dc:	5ccd      	ldrb	r5, [r1, r3]
 800f0de:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 800f0e2:	3301      	adds	r3, #1
 800f0e4:	2d00      	cmp	r5, #0
 800f0e6:	d1f6      	bne.n	800f0d6 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 800f0e8:	bd30      	pop	{r4, r5, pc}
 800f0ea:	4608      	mov	r0, r1
 800f0ec:	e7fc      	b.n	800f0e8 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0800f0ee <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 800f0ee:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f0f0:	b08b      	sub	sp, #44	; 0x2c
 800f0f2:	468c      	mov	ip, r1
 800f0f4:	2100      	movs	r1, #0
 800f0f6:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800f0fa:	ae01      	add	r6, sp, #4
 800f0fc:	211f      	movs	r1, #31
 800f0fe:	fbb0 f7f3 	udiv	r7, r0, r3
 800f102:	fb03 0517 	mls	r5, r3, r7, r0
 800f106:	b2ec      	uxtb	r4, r5
 800f108:	2d09      	cmp	r5, #9
 800f10a:	bfd4      	ite	le
 800f10c:	3430      	addle	r4, #48	; 0x30
 800f10e:	3457      	addgt	r4, #87	; 0x57
 800f110:	b2e4      	uxtb	r4, r4
 800f112:	558c      	strb	r4, [r1, r6]
 800f114:	4638      	mov	r0, r7
 800f116:	1e4c      	subs	r4, r1, #1
 800f118:	b92f      	cbnz	r7, 800f126 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 800f11a:	4431      	add	r1, r6
 800f11c:	4660      	mov	r0, ip
 800f11e:	f7ff ffd5 	bl	800f0cc <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f122:	b00b      	add	sp, #44	; 0x2c
 800f124:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f126:	4621      	mov	r1, r4
 800f128:	e7e9      	b.n	800f0fe <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

0800f12a <_ZN8touchgfx7Unicode4itoaElPtti>:
 800f12a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f12c:	4607      	mov	r7, r0
 800f12e:	b08b      	sub	sp, #44	; 0x2c
 800f130:	4608      	mov	r0, r1
 800f132:	b341      	cbz	r1, 800f186 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800f134:	1e99      	subs	r1, r3, #2
 800f136:	290e      	cmp	r1, #14
 800f138:	d825      	bhi.n	800f186 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 800f13a:	2100      	movs	r1, #0
 800f13c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800f140:	463c      	mov	r4, r7
 800f142:	261f      	movs	r6, #31
 800f144:	f10d 0c04 	add.w	ip, sp, #4
 800f148:	fb94 fef3 	sdiv	lr, r4, r3
 800f14c:	fb03 441e 	mls	r4, r3, lr, r4
 800f150:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 800f154:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 800f158:	b2ec      	uxtb	r4, r5
 800f15a:	2d09      	cmp	r5, #9
 800f15c:	bfd4      	ite	le
 800f15e:	3430      	addle	r4, #48	; 0x30
 800f160:	3457      	addgt	r4, #87	; 0x57
 800f162:	b2e4      	uxtb	r4, r4
 800f164:	f80c 4006 	strb.w	r4, [ip, r6]
 800f168:	4674      	mov	r4, lr
 800f16a:	1e71      	subs	r1, r6, #1
 800f16c:	b96c      	cbnz	r4, 800f18a <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 800f16e:	2f00      	cmp	r7, #0
 800f170:	da05      	bge.n	800f17e <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 800f172:	ab0a      	add	r3, sp, #40	; 0x28
 800f174:	4419      	add	r1, r3
 800f176:	232d      	movs	r3, #45	; 0x2d
 800f178:	f801 3c24 	strb.w	r3, [r1, #-36]
 800f17c:	1eb1      	subs	r1, r6, #2
 800f17e:	3101      	adds	r1, #1
 800f180:	4461      	add	r1, ip
 800f182:	f7ff ffa3 	bl	800f0cc <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f186:	b00b      	add	sp, #44	; 0x2c
 800f188:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f18a:	460e      	mov	r6, r1
 800f18c:	e7dc      	b.n	800f148 <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

0800f18e <_ZN8touchgfx7Unicode4atoiEPKt>:
 800f18e:	b510      	push	{r4, lr}
 800f190:	b158      	cbz	r0, 800f1aa <_ZN8touchgfx7Unicode4atoiEPKt+0x1c>
 800f192:	1e82      	subs	r2, r0, #2
 800f194:	210a      	movs	r1, #10
 800f196:	2000      	movs	r0, #0
 800f198:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 800f19c:	3b30      	subs	r3, #48	; 0x30
 800f19e:	b29c      	uxth	r4, r3
 800f1a0:	2c09      	cmp	r4, #9
 800f1a2:	d802      	bhi.n	800f1aa <_ZN8touchgfx7Unicode4atoiEPKt+0x1c>
 800f1a4:	fb01 3000 	mla	r0, r1, r0, r3
 800f1a8:	e7f6      	b.n	800f198 <_ZN8touchgfx7Unicode4atoiEPKt+0xa>
 800f1aa:	bd10      	pop	{r4, pc}

0800f1ac <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt>:
 800f1ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f1b0:	b085      	sub	sp, #20
 800f1b2:	f8d0 8000 	ldr.w	r8, [r0]
 800f1b6:	9203      	str	r2, [sp, #12]
 800f1b8:	468a      	mov	sl, r1
 800f1ba:	4681      	mov	r9, r0
 800f1bc:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 800f1c0:	9102      	str	r1, [sp, #8]
 800f1c2:	461c      	mov	r4, r3
 800f1c4:	4640      	mov	r0, r8
 800f1c6:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800f1ca:	9301      	str	r3, [sp, #4]
 800f1cc:	f7ff ff65 	bl	800f09a <_ZN8touchgfx7Unicode6strlenEPKt>
 800f1d0:	9a03      	ldr	r2, [sp, #12]
 800f1d2:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800f1d6:	8812      	ldrh	r2, [r2, #0]
 800f1d8:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 800f1da:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f1dc:	9f15      	ldr	r7, [sp, #84]	; 0x54
 800f1de:	f1ba 0f00 	cmp.w	sl, #0
 800f1e2:	bf0c      	ite	eq
 800f1e4:	4684      	moveq	ip, r0
 800f1e6:	f100 0c01 	addne.w	ip, r0, #1
 800f1ea:	2a69      	cmp	r2, #105	; 0x69
 800f1ec:	fa1f fc8c 	uxth.w	ip, ip
 800f1f0:	e9dd 3101 	ldrd	r3, r1, [sp, #4]
 800f1f4:	d004      	beq.n	800f200 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0x54>
 800f1f6:	d844      	bhi.n	800f282 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0xd6>
 800f1f8:	2a58      	cmp	r2, #88	; 0x58
 800f1fa:	d001      	beq.n	800f200 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0x54>
 800f1fc:	2a64      	cmp	r2, #100	; 0x64
 800f1fe:	d14b      	bne.n	800f298 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0xec>
 800f200:	b1a4      	cbz	r4, 800f22c <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0x80>
 800f202:	b956      	cbnz	r6, 800f21a <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0x6e>
 800f204:	2801      	cmp	r0, #1
 800f206:	d108      	bne.n	800f21a <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0x6e>
 800f208:	f8b8 2000 	ldrh.w	r2, [r8]
 800f20c:	2a30      	cmp	r2, #48	; 0x30
 800f20e:	bf02      	ittt	eq
 800f210:	f108 0202 	addeq.w	r2, r8, #2
 800f214:	f8c9 2000 	streq.w	r2, [r9]
 800f218:	4630      	moveq	r0, r6
 800f21a:	45b4      	cmp	ip, r6
 800f21c:	da3e      	bge.n	800f29c <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0xf0>
 800f21e:	b2b6      	uxth	r6, r6
 800f220:	eba6 040c 	sub.w	r4, r6, ip
 800f224:	b2a4      	uxth	r4, r4
 800f226:	46b4      	mov	ip, r6
 800f228:	f04f 0b00 	mov.w	fp, #0
 800f22c:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 800f230:	3a01      	subs	r2, #1
 800f232:	b169      	cbz	r1, 800f250 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0xa4>
 800f234:	9911      	ldr	r1, [sp, #68]	; 0x44
 800f236:	458c      	cmp	ip, r1
 800f238:	da09      	bge.n	800f24e <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0xa2>
 800f23a:	eba1 010c 	sub.w	r1, r1, ip
 800f23e:	b289      	uxth	r1, r1
 800f240:	b933      	cbnz	r3, 800f250 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0xa4>
 800f242:	f1bb 0f00 	cmp.w	fp, #0
 800f246:	d02b      	beq.n	800f2a0 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0xf4>
 800f248:	b350      	cbz	r0, 800f2a0 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0xf4>
 800f24a:	440c      	add	r4, r1
 800f24c:	b2a4      	uxth	r4, r4
 800f24e:	2100      	movs	r1, #0
 800f250:	682b      	ldr	r3, [r5, #0]
 800f252:	4293      	cmp	r3, r2
 800f254:	da07      	bge.n	800f266 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0xba>
 800f256:	f1ba 0f00 	cmp.w	sl, #0
 800f25a:	d004      	beq.n	800f266 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0xba>
 800f25c:	f827 a013 	strh.w	sl, [r7, r3, lsl #1]
 800f260:	682b      	ldr	r3, [r5, #0]
 800f262:	3301      	adds	r3, #1
 800f264:	602b      	str	r3, [r5, #0]
 800f266:	f04f 0c30 	mov.w	ip, #48	; 0x30
 800f26a:	b354      	cbz	r4, 800f2c2 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0x116>
 800f26c:	682e      	ldr	r6, [r5, #0]
 800f26e:	3c01      	subs	r4, #1
 800f270:	42b2      	cmp	r2, r6
 800f272:	b2a4      	uxth	r4, r4
 800f274:	dd25      	ble.n	800f2c2 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0x116>
 800f276:	f827 c016 	strh.w	ip, [r7, r6, lsl #1]
 800f27a:	682b      	ldr	r3, [r5, #0]
 800f27c:	3301      	adds	r3, #1
 800f27e:	602b      	str	r3, [r5, #0]
 800f280:	e7f3      	b.n	800f26a <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0xbe>
 800f282:	2a73      	cmp	r2, #115	; 0x73
 800f284:	d003      	beq.n	800f28e <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0xe2>
 800f286:	2a78      	cmp	r2, #120	; 0x78
 800f288:	d0ba      	beq.n	800f200 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0x54>
 800f28a:	2a6f      	cmp	r2, #111	; 0x6f
 800f28c:	e7b7      	b.n	800f1fe <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0x52>
 800f28e:	2c00      	cmp	r4, #0
 800f290:	d0cc      	beq.n	800f22c <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0x80>
 800f292:	42b0      	cmp	r0, r6
 800f294:	dd00      	ble.n	800f298 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0xec>
 800f296:	b2b0      	uxth	r0, r6
 800f298:	2400      	movs	r4, #0
 800f29a:	e7c7      	b.n	800f22c <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0x80>
 800f29c:	2400      	movs	r4, #0
 800f29e:	e7c3      	b.n	800f228 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0x7c>
 800f2a0:	2900      	cmp	r1, #0
 800f2a2:	d0d5      	beq.n	800f250 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0xa4>
 800f2a4:	f04f 0c20 	mov.w	ip, #32
 800f2a8:	682e      	ldr	r6, [r5, #0]
 800f2aa:	2900      	cmp	r1, #0
 800f2ac:	d0d0      	beq.n	800f250 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0xa4>
 800f2ae:	3901      	subs	r1, #1
 800f2b0:	4296      	cmp	r6, r2
 800f2b2:	b289      	uxth	r1, r1
 800f2b4:	dacb      	bge.n	800f24e <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0xa2>
 800f2b6:	f827 c016 	strh.w	ip, [r7, r6, lsl #1]
 800f2ba:	682b      	ldr	r3, [r5, #0]
 800f2bc:	3301      	adds	r3, #1
 800f2be:	602b      	str	r3, [r5, #0]
 800f2c0:	e7f2      	b.n	800f2a8 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0xfc>
 800f2c2:	b198      	cbz	r0, 800f2ec <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0x140>
 800f2c4:	f8d9 3000 	ldr.w	r3, [r9]
 800f2c8:	881c      	ldrh	r4, [r3, #0]
 800f2ca:	b17c      	cbz	r4, 800f2ec <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0x140>
 800f2cc:	682c      	ldr	r4, [r5, #0]
 800f2ce:	3801      	subs	r0, #1
 800f2d0:	42a2      	cmp	r2, r4
 800f2d2:	b280      	uxth	r0, r0
 800f2d4:	dd0a      	ble.n	800f2ec <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0x140>
 800f2d6:	1c9c      	adds	r4, r3, #2
 800f2d8:	f8c9 4000 	str.w	r4, [r9]
 800f2dc:	881c      	ldrh	r4, [r3, #0]
 800f2de:	682b      	ldr	r3, [r5, #0]
 800f2e0:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
 800f2e4:	682b      	ldr	r3, [r5, #0]
 800f2e6:	3301      	adds	r3, #1
 800f2e8:	602b      	str	r3, [r5, #0]
 800f2ea:	e7ea      	b.n	800f2c2 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0x116>
 800f2ec:	2620      	movs	r6, #32
 800f2ee:	b151      	cbz	r1, 800f306 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0x15a>
 800f2f0:	6828      	ldr	r0, [r5, #0]
 800f2f2:	3901      	subs	r1, #1
 800f2f4:	4282      	cmp	r2, r0
 800f2f6:	b289      	uxth	r1, r1
 800f2f8:	dd05      	ble.n	800f306 <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0x15a>
 800f2fa:	f827 6010 	strh.w	r6, [r7, r0, lsl #1]
 800f2fe:	682b      	ldr	r3, [r5, #0]
 800f300:	3301      	adds	r3, #1
 800f302:	602b      	str	r3, [r5, #0]
 800f304:	e7f3      	b.n	800f2ee <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt+0x142>
 800f306:	b005      	add	sp, #20
 800f308:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f30c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRtRbS5_S5_S5_RiS5_S6_>:
 800f30c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f310:	e9dd ce06 	ldrd	ip, lr, [sp, #24]
 800f314:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 800f318:	4604      	mov	r4, r0
 800f31a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800f31c:	2000      	movs	r0, #0
 800f31e:	8008      	strh	r0, [r1, #0]
 800f320:	f04f 0801 	mov.w	r8, #1
 800f324:	7010      	strb	r0, [r2, #0]
 800f326:	7018      	strb	r0, [r3, #0]
 800f328:	f88c 0000 	strb.w	r0, [ip]
 800f32c:	f88e 0000 	strb.w	r0, [lr]
 800f330:	7030      	strb	r0, [r6, #0]
 800f332:	6820      	ldr	r0, [r4, #0]
 800f334:	8800      	ldrh	r0, [r0, #0]
 800f336:	b190      	cbz	r0, 800f35e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRtRbS5_S5_S5_RiS5_S6_+0x52>
 800f338:	282b      	cmp	r0, #43	; 0x2b
 800f33a:	d001      	beq.n	800f340 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRtRbS5_S5_S5_RiS5_S6_+0x34>
 800f33c:	2820      	cmp	r0, #32
 800f33e:	d104      	bne.n	800f34a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRtRbS5_S5_S5_RiS5_S6_+0x3e>
 800f340:	8008      	strh	r0, [r1, #0]
 800f342:	6820      	ldr	r0, [r4, #0]
 800f344:	3002      	adds	r0, #2
 800f346:	6020      	str	r0, [r4, #0]
 800f348:	e7f3      	b.n	800f332 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRtRbS5_S5_S5_RiS5_S6_+0x26>
 800f34a:	282d      	cmp	r0, #45	; 0x2d
 800f34c:	d102      	bne.n	800f354 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRtRbS5_S5_S5_RiS5_S6_+0x48>
 800f34e:	f882 8000 	strb.w	r8, [r2]
 800f352:	e7f6      	b.n	800f342 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRtRbS5_S5_S5_RiS5_S6_+0x36>
 800f354:	2823      	cmp	r0, #35	; 0x23
 800f356:	d102      	bne.n	800f35e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRtRbS5_S5_S5_RiS5_S6_+0x52>
 800f358:	f883 8000 	strb.w	r8, [r3]
 800f35c:	e7f1      	b.n	800f342 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRtRbS5_S5_S5_RiS5_S6_+0x36>
 800f35e:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800f362:	2b09      	cmp	r3, #9
 800f364:	d901      	bls.n	800f36a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRtRbS5_S5_S5_RiS5_S6_+0x5e>
 800f366:	282a      	cmp	r0, #42	; 0x2a
 800f368:	d114      	bne.n	800f394 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRtRbS5_S5_S5_RiS5_S6_+0x88>
 800f36a:	2201      	movs	r2, #1
 800f36c:	f88e 2000 	strb.w	r2, [lr]
 800f370:	6823      	ldr	r3, [r4, #0]
 800f372:	8819      	ldrh	r1, [r3, #0]
 800f374:	2930      	cmp	r1, #48	; 0x30
 800f376:	bf02      	ittt	eq
 800f378:	3302      	addeq	r3, #2
 800f37a:	6023      	streq	r3, [r4, #0]
 800f37c:	f88c 2000 	strbeq.w	r2, [ip]
 800f380:	6820      	ldr	r0, [r4, #0]
 800f382:	8803      	ldrh	r3, [r0, #0]
 800f384:	2b2a      	cmp	r3, #42	; 0x2a
 800f386:	d11e      	bne.n	800f3c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRtRbS5_S5_S5_RiS5_S6_+0xba>
 800f388:	f04f 33ff 	mov.w	r3, #4294967295
 800f38c:	603b      	str	r3, [r7, #0]
 800f38e:	6823      	ldr	r3, [r4, #0]
 800f390:	3302      	adds	r3, #2
 800f392:	6023      	str	r3, [r4, #0]
 800f394:	6823      	ldr	r3, [r4, #0]
 800f396:	881b      	ldrh	r3, [r3, #0]
 800f398:	2b2e      	cmp	r3, #46	; 0x2e
 800f39a:	d112      	bne.n	800f3c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRtRbS5_S5_S5_RiS5_S6_+0xb6>
 800f39c:	2301      	movs	r3, #1
 800f39e:	7033      	strb	r3, [r6, #0]
 800f3a0:	6823      	ldr	r3, [r4, #0]
 800f3a2:	1c98      	adds	r0, r3, #2
 800f3a4:	6020      	str	r0, [r4, #0]
 800f3a6:	885b      	ldrh	r3, [r3, #2]
 800f3a8:	2b2a      	cmp	r3, #42	; 0x2a
 800f3aa:	d117      	bne.n	800f3dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRtRbS5_S5_S5_RiS5_S6_+0xd0>
 800f3ac:	f04f 33ff 	mov.w	r3, #4294967295
 800f3b0:	602b      	str	r3, [r5, #0]
 800f3b2:	6823      	ldr	r3, [r4, #0]
 800f3b4:	3302      	adds	r3, #2
 800f3b6:	6023      	str	r3, [r4, #0]
 800f3b8:	682b      	ldr	r3, [r5, #0]
 800f3ba:	2b06      	cmp	r3, #6
 800f3bc:	bfa8      	it	ge
 800f3be:	2306      	movge	r3, #6
 800f3c0:	602b      	str	r3, [r5, #0]
 800f3c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f3c6:	f7ff fee2 	bl	800f18e <_ZN8touchgfx7Unicode4atoiEPKt>
 800f3ca:	6038      	str	r0, [r7, #0]
 800f3cc:	6823      	ldr	r3, [r4, #0]
 800f3ce:	881a      	ldrh	r2, [r3, #0]
 800f3d0:	3a30      	subs	r2, #48	; 0x30
 800f3d2:	2a09      	cmp	r2, #9
 800f3d4:	d8de      	bhi.n	800f394 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRtRbS5_S5_S5_RiS5_S6_+0x88>
 800f3d6:	3302      	adds	r3, #2
 800f3d8:	6023      	str	r3, [r4, #0]
 800f3da:	e7f7      	b.n	800f3cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRtRbS5_S5_S5_RiS5_S6_+0xc0>
 800f3dc:	f7ff fed7 	bl	800f18e <_ZN8touchgfx7Unicode4atoiEPKt>
 800f3e0:	6028      	str	r0, [r5, #0]
 800f3e2:	6823      	ldr	r3, [r4, #0]
 800f3e4:	881a      	ldrh	r2, [r3, #0]
 800f3e6:	3a30      	subs	r2, #48	; 0x30
 800f3e8:	2a09      	cmp	r2, #9
 800f3ea:	d8e5      	bhi.n	800f3b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRtRbS5_S5_S5_RiS5_S6_+0xac>
 800f3ec:	3302      	adds	r3, #2
 800f3ee:	6023      	str	r3, [r4, #0]
 800f3f0:	e7f7      	b.n	800f3e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRtRbS5_S5_S5_RiS5_S6_+0xd6>

0800f3f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list>:
 800f3f2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f3f6:	b0a2      	sub	sp, #136	; 0x88
 800f3f8:	2500      	movs	r5, #0
 800f3fa:	f10d 0844 	add.w	r8, sp, #68	; 0x44
 800f3fe:	4606      	mov	r6, r0
 800f400:	460f      	mov	r7, r1
 800f402:	9209      	str	r2, [sp, #36]	; 0x24
 800f404:	4629      	mov	r1, r5
 800f406:	2242      	movs	r2, #66	; 0x42
 800f408:	4640      	mov	r0, r8
 800f40a:	461c      	mov	r4, r3
 800f40c:	950d      	str	r5, [sp, #52]	; 0x34
 800f40e:	f7fe fe82 	bl	800e116 <_ZN8touchgfx6memsetEPvhm>
 800f412:	b30e      	cbz	r6, 800f458 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x66>
 800f414:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f416:	b1f3      	cbz	r3, 800f456 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x64>
 800f418:	f107 3aff 	add.w	sl, r7, #4294967295
 800f41c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f41e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f420:	8812      	ldrh	r2, [r2, #0]
 800f422:	2a00      	cmp	r2, #0
 800f424:	f000 80b3 	beq.w	800f58e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x19c>
 800f428:	459a      	cmp	sl, r3
 800f42a:	f340 80b0 	ble.w	800f58e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x19c>
 800f42e:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800f432:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f434:	f8b9 2000 	ldrh.w	r2, [r9]
 800f438:	2a00      	cmp	r2, #0
 800f43a:	d0ef      	beq.n	800f41c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x2a>
 800f43c:	2a25      	cmp	r2, #37	; 0x25
 800f43e:	f000 80aa 	beq.w	800f596 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x1a4>
 800f442:	459a      	cmp	sl, r3
 800f444:	ddea      	ble.n	800f41c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x2a>
 800f446:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 800f44a:	f109 0202 	add.w	r2, r9, #2
 800f44e:	3301      	adds	r3, #1
 800f450:	9209      	str	r2, [sp, #36]	; 0x24
 800f452:	930d      	str	r3, [sp, #52]	; 0x34
 800f454:	e7eb      	b.n	800f42e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x3c>
 800f456:	8033      	strh	r3, [r6, #0]
 800f458:	4630      	mov	r0, r6
 800f45a:	b022      	add	sp, #136	; 0x88
 800f45c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f460:	3b63      	subs	r3, #99	; 0x63
 800f462:	2b01      	cmp	r3, #1
 800f464:	f200 80e1 	bhi.w	800f62a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x238>
 800f468:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 800f46c:	8813      	ldrh	r3, [r2, #0]
 800f46e:	2b69      	cmp	r3, #105	; 0x69
 800f470:	d058      	beq.n	800f524 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x132>
 800f472:	d81b      	bhi.n	800f4ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0xba>
 800f474:	2b63      	cmp	r3, #99	; 0x63
 800f476:	d02e      	beq.n	800f4d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0xe4>
 800f478:	2b64      	cmp	r3, #100	; 0x64
 800f47a:	d053      	beq.n	800f524 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x132>
 800f47c:	2b58      	cmp	r3, #88	; 0x58
 800f47e:	d06f      	beq.n	800f560 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x16e>
 800f480:	f8ad 5044 	strh.w	r5, [sp, #68]	; 0x44
 800f484:	46a1      	mov	r9, r4
 800f486:	e02d      	b.n	800f4e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0xf2>
 800f488:	2b73      	cmp	r3, #115	; 0x73
 800f48a:	d0ed      	beq.n	800f468 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x76>
 800f48c:	d803      	bhi.n	800f496 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0xa4>
 800f48e:	2b6f      	cmp	r3, #111	; 0x6f
 800f490:	f040 80cb 	bne.w	800f62a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x238>
 800f494:	e7e8      	b.n	800f468 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x76>
 800f496:	2b75      	cmp	r3, #117	; 0x75
 800f498:	d0e6      	beq.n	800f468 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x76>
 800f49a:	2b78      	cmp	r3, #120	; 0x78
 800f49c:	e7f8      	b.n	800f490 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x9e>
 800f49e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f4a0:	f826 3012 	strh.w	r3, [r6, r2, lsl #1]
 800f4a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f4a6:	3302      	adds	r3, #2
 800f4a8:	9309      	str	r3, [sp, #36]	; 0x24
 800f4aa:	e7b7      	b.n	800f41c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x2a>
 800f4ac:	2b73      	cmp	r3, #115	; 0x73
 800f4ae:	d034      	beq.n	800f51a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x128>
 800f4b0:	d807      	bhi.n	800f4c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0xd0>
 800f4b2:	2b6f      	cmp	r3, #111	; 0x6f
 800f4b4:	d1e4      	bne.n	800f480 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x8e>
 800f4b6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f4b8:	f104 0904 	add.w	r9, r4, #4
 800f4bc:	1aba      	subs	r2, r7, r2
 800f4be:	2308      	movs	r3, #8
 800f4c0:	e048      	b.n	800f554 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x162>
 800f4c2:	2b75      	cmp	r3, #117	; 0x75
 800f4c4:	d041      	beq.n	800f54a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x158>
 800f4c6:	2b78      	cmp	r3, #120	; 0x78
 800f4c8:	d1da      	bne.n	800f480 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x8e>
 800f4ca:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f4cc:	f104 0904 	add.w	r9, r4, #4
 800f4d0:	1aba      	subs	r2, r7, r2
 800f4d2:	2310      	movs	r3, #16
 800f4d4:	e03e      	b.n	800f554 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x162>
 800f4d6:	7823      	ldrb	r3, [r4, #0]
 800f4d8:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 800f4dc:	f104 0904 	add.w	r9, r4, #4
 800f4e0:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 800f4e4:	aa0d      	add	r2, sp, #52	; 0x34
 800f4e6:	9205      	str	r2, [sp, #20]
 800f4e8:	f89d 202d 	ldrb.w	r2, [sp, #45]	; 0x2d
 800f4ec:	9204      	str	r2, [sp, #16]
 800f4ee:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800f4f0:	9203      	str	r2, [sp, #12]
 800f4f2:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800f4f6:	9202      	str	r2, [sp, #8]
 800f4f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f4fa:	9201      	str	r2, [sp, #4]
 800f4fc:	f89d 202f 	ldrb.w	r2, [sp, #47]	; 0x2f
 800f500:	9200      	str	r2, [sp, #0]
 800f502:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 800f506:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 800f50a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f50c:	e9cd 7606 	strd	r7, r6, [sp, #24]
 800f510:	a810      	add	r0, sp, #64	; 0x40
 800f512:	f7ff fe4b 	bl	800f1ac <_ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt>
 800f516:	464c      	mov	r4, r9
 800f518:	e7c4      	b.n	800f4a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0xb2>
 800f51a:	6823      	ldr	r3, [r4, #0]
 800f51c:	f104 0904 	add.w	r9, r4, #4
 800f520:	9310      	str	r3, [sp, #64]	; 0x40
 800f522:	e7df      	b.n	800f4e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0xf2>
 800f524:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f526:	6820      	ldr	r0, [r4, #0]
 800f528:	1aba      	subs	r2, r7, r2
 800f52a:	230a      	movs	r3, #10
 800f52c:	b292      	uxth	r2, r2
 800f52e:	4641      	mov	r1, r8
 800f530:	f7ff fdfb 	bl	800f12a <_ZN8touchgfx7Unicode4itoaElPtti>
 800f534:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800f538:	2b2d      	cmp	r3, #45	; 0x2d
 800f53a:	f104 0904 	add.w	r9, r4, #4
 800f53e:	d1d1      	bne.n	800f4e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0xf2>
 800f540:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800f544:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f546:	3302      	adds	r3, #2
 800f548:	e7ea      	b.n	800f520 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x12e>
 800f54a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f54c:	f104 0904 	add.w	r9, r4, #4
 800f550:	1aba      	subs	r2, r7, r2
 800f552:	230a      	movs	r3, #10
 800f554:	b292      	uxth	r2, r2
 800f556:	4641      	mov	r1, r8
 800f558:	6820      	ldr	r0, [r4, #0]
 800f55a:	f7ff fdc8 	bl	800f0ee <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 800f55e:	e7c1      	b.n	800f4e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0xf2>
 800f560:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f562:	6820      	ldr	r0, [r4, #0]
 800f564:	1aba      	subs	r2, r7, r2
 800f566:	b292      	uxth	r2, r2
 800f568:	2310      	movs	r3, #16
 800f56a:	4641      	mov	r1, r8
 800f56c:	f7ff fdbf 	bl	800f0ee <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 800f570:	f104 0904 	add.w	r9, r4, #4
 800f574:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 800f578:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 800f57c:	2b00      	cmp	r3, #0
 800f57e:	d0b1      	beq.n	800f4e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0xf2>
 800f580:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 800f584:	2919      	cmp	r1, #25
 800f586:	d8f7      	bhi.n	800f578 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x186>
 800f588:	3b20      	subs	r3, #32
 800f58a:	8013      	strh	r3, [r2, #0]
 800f58c:	e7f4      	b.n	800f578 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x186>
 800f58e:	2200      	movs	r2, #0
 800f590:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 800f594:	e760      	b.n	800f458 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x66>
 800f596:	459a      	cmp	sl, r3
 800f598:	f77f af40 	ble.w	800f41c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x2a>
 800f59c:	f109 0302 	add.w	r3, r9, #2
 800f5a0:	9309      	str	r3, [sp, #36]	; 0x24
 800f5a2:	ab0f      	add	r3, sp, #60	; 0x3c
 800f5a4:	9304      	str	r3, [sp, #16]
 800f5a6:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 800f5aa:	9303      	str	r3, [sp, #12]
 800f5ac:	ab0e      	add	r3, sp, #56	; 0x38
 800f5ae:	9302      	str	r3, [sp, #8]
 800f5b0:	ab0c      	add	r3, sp, #48	; 0x30
 800f5b2:	9301      	str	r3, [sp, #4]
 800f5b4:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 800f5b8:	9300      	str	r3, [sp, #0]
 800f5ba:	f10d 022d 	add.w	r2, sp, #45	; 0x2d
 800f5be:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 800f5c2:	f10d 0132 	add.w	r1, sp, #50	; 0x32
 800f5c6:	a809      	add	r0, sp, #36	; 0x24
 800f5c8:	f8ad 5032 	strh.w	r5, [sp, #50]	; 0x32
 800f5cc:	f88d 502d 	strb.w	r5, [sp, #45]	; 0x2d
 800f5d0:	f88d 502e 	strb.w	r5, [sp, #46]	; 0x2e
 800f5d4:	f88d 502f 	strb.w	r5, [sp, #47]	; 0x2f
 800f5d8:	f88d 5030 	strb.w	r5, [sp, #48]	; 0x30
 800f5dc:	950e      	str	r5, [sp, #56]	; 0x38
 800f5de:	f88d 5031 	strb.w	r5, [sp, #49]	; 0x31
 800f5e2:	950f      	str	r5, [sp, #60]	; 0x3c
 800f5e4:	f7ff fe92 	bl	800f30c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRtRbS5_S5_S5_RiS5_S6_>
 800f5e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f5ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f5ec:	2b00      	cmp	r3, #0
 800f5ee:	bfbe      	ittt	lt
 800f5f0:	6823      	ldrlt	r3, [r4, #0]
 800f5f2:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800f5f6:	930e      	strlt	r3, [sp, #56]	; 0x38
 800f5f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f5fa:	bfb8      	it	lt
 800f5fc:	3404      	addlt	r4, #4
 800f5fe:	2b00      	cmp	r3, #0
 800f600:	bfbe      	ittt	lt
 800f602:	6823      	ldrlt	r3, [r4, #0]
 800f604:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 800f608:	930f      	strlt	r3, [sp, #60]	; 0x3c
 800f60a:	8813      	ldrh	r3, [r2, #0]
 800f60c:	bfb8      	it	lt
 800f60e:	3404      	addlt	r4, #4
 800f610:	2b69      	cmp	r3, #105	; 0x69
 800f612:	f43f af29 	beq.w	800f468 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x76>
 800f616:	f63f af37 	bhi.w	800f488 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x96>
 800f61a:	2b58      	cmp	r3, #88	; 0x58
 800f61c:	f43f af24 	beq.w	800f468 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x76>
 800f620:	f63f af1e 	bhi.w	800f460 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0x6e>
 800f624:	2b25      	cmp	r3, #37	; 0x25
 800f626:	f43f af3a 	beq.w	800f49e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0xac>
 800f62a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f62c:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 800f630:	f8b9 2000 	ldrh.w	r2, [r9]
 800f634:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 800f638:	3301      	adds	r3, #1
 800f63a:	930d      	str	r3, [sp, #52]	; 0x34
 800f63c:	e732      	b.n	800f4a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list+0xb2>
	...

0800f640 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 800f640:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f642:	4605      	mov	r5, r0
 800f644:	b0a1      	sub	sp, #132	; 0x84
 800f646:	4610      	mov	r0, r2
 800f648:	460e      	mov	r6, r1
 800f64a:	4614      	mov	r4, r2
 800f64c:	461f      	mov	r7, r3
 800f64e:	f7ff fd31 	bl	800f0b4 <_ZN8touchgfx7Unicode6strlenEPKc>
 800f652:	283f      	cmp	r0, #63	; 0x3f
 800f654:	d906      	bls.n	800f664 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list+0x24>
 800f656:	4b0a      	ldr	r3, [pc, #40]	; (800f680 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list+0x40>)
 800f658:	4a0a      	ldr	r2, [pc, #40]	; (800f684 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list+0x44>)
 800f65a:	480b      	ldr	r0, [pc, #44]	; (800f688 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list+0x48>)
 800f65c:	f44f 71e0 	mov.w	r1, #448	; 0x1c0
 800f660:	f00b fda0 	bl	801b1a4 <__assert_func>
 800f664:	4621      	mov	r1, r4
 800f666:	2240      	movs	r2, #64	; 0x40
 800f668:	4668      	mov	r0, sp
 800f66a:	f7ff fd2f 	bl	800f0cc <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 800f66e:	463b      	mov	r3, r7
 800f670:	466a      	mov	r2, sp
 800f672:	4631      	mov	r1, r6
 800f674:	4628      	mov	r0, r5
 800f676:	f7ff febc 	bl	800f3f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list>
 800f67a:	b021      	add	sp, #132	; 0x84
 800f67c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f67e:	bf00      	nop
 800f680:	0801eee1 	.word	0x0801eee1
 800f684:	0801ef24 	.word	0x0801ef24
 800f688:	0801eefe 	.word	0x0801eefe

0800f68c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 800f68c:	b40c      	push	{r2, r3}
 800f68e:	b507      	push	{r0, r1, r2, lr}
 800f690:	ab04      	add	r3, sp, #16
 800f692:	f853 2b04 	ldr.w	r2, [r3], #4
 800f696:	9301      	str	r3, [sp, #4]
 800f698:	f7ff ffd2 	bl	800f640 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 800f69c:	b003      	add	sp, #12
 800f69e:	f85d eb04 	ldr.w	lr, [sp], #4
 800f6a2:	b002      	add	sp, #8
 800f6a4:	4770      	bx	lr
	...

0800f6a8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800f6a8:	4b01      	ldr	r3, [pc, #4]	; (800f6b0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800f6aa:	6018      	str	r0, [r3, #0]
 800f6ac:	4770      	bx	lr
 800f6ae:	bf00      	nop
 800f6b0:	20026f30 	.word	0x20026f30

0800f6b4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800f6b4:	4b07      	ldr	r3, [pc, #28]	; (800f6d4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x20>)
 800f6b6:	881a      	ldrh	r2, [r3, #0]
 800f6b8:	4282      	cmp	r2, r0
 800f6ba:	d809      	bhi.n	800f6d0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800f6bc:	4b06      	ldr	r3, [pc, #24]	; (800f6d8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x24>)
 800f6be:	881b      	ldrh	r3, [r3, #0]
 800f6c0:	4413      	add	r3, r2
 800f6c2:	4298      	cmp	r0, r3
 800f6c4:	da04      	bge.n	800f6d0 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800f6c6:	4b05      	ldr	r3, [pc, #20]	; (800f6dc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x28>)
 800f6c8:	681b      	ldr	r3, [r3, #0]
 800f6ca:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800f6ce:	4770      	bx	lr
 800f6d0:	2000      	movs	r0, #0
 800f6d2:	4770      	bx	lr
 800f6d4:	20026f50 	.word	0x20026f50
 800f6d8:	20026f54 	.word	0x20026f54
 800f6dc:	20026f34 	.word	0x20026f34

0800f6e0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800f6e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f6e4:	4d26      	ldr	r5, [pc, #152]	; (800f780 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800f6e6:	682b      	ldr	r3, [r5, #0]
 800f6e8:	2b00      	cmp	r3, #0
 800f6ea:	d046      	beq.n	800f77a <_ZN8touchgfx6Bitmap10clearCacheEv+0x9a>
 800f6ec:	4a25      	ldr	r2, [pc, #148]	; (800f784 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800f6ee:	4f26      	ldr	r7, [pc, #152]	; (800f788 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800f6f0:	8810      	ldrh	r0, [r2, #0]
 800f6f2:	883c      	ldrh	r4, [r7, #0]
 800f6f4:	4e25      	ldr	r6, [pc, #148]	; (800f78c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800f6f6:	4420      	add	r0, r4
 800f6f8:	1c42      	adds	r2, r0, #1
 800f6fa:	f022 0201 	bic.w	r2, r2, #1
 800f6fe:	0412      	lsls	r2, r2, #16
 800f700:	0c12      	lsrs	r2, r2, #16
 800f702:	0051      	lsls	r1, r2, #1
 800f704:	220e      	movs	r2, #14
 800f706:	fb02 fc04 	mul.w	ip, r2, r4
 800f70a:	ea4f 0880 	mov.w	r8, r0, lsl #2
 800f70e:	4c20      	ldr	r4, [pc, #128]	; (800f790 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800f710:	eb03 0208 	add.w	r2, r3, r8
 800f714:	eb08 0e01 	add.w	lr, r8, r1
 800f718:	6022      	str	r2, [r4, #0]
 800f71a:	eb03 020e 	add.w	r2, r3, lr
 800f71e:	6032      	str	r2, [r6, #0]
 800f720:	44e6      	add	lr, ip
 800f722:	4a1c      	ldr	r2, [pc, #112]	; (800f794 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800f724:	4473      	add	r3, lr
 800f726:	6013      	str	r3, [r2, #0]
 800f728:	4a1b      	ldr	r2, [pc, #108]	; (800f798 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800f72a:	2300      	movs	r3, #0
 800f72c:	8013      	strh	r3, [r2, #0]
 800f72e:	4a1b      	ldr	r2, [pc, #108]	; (800f79c <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800f730:	6812      	ldr	r2, [r2, #0]
 800f732:	eba2 0208 	sub.w	r2, r2, r8
 800f736:	1a52      	subs	r2, r2, r1
 800f738:	4919      	ldr	r1, [pc, #100]	; (800f7a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800f73a:	eba2 020c 	sub.w	r2, r2, ip
 800f73e:	600a      	str	r2, [r1, #0]
 800f740:	4a18      	ldr	r2, [pc, #96]	; (800f7a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800f742:	469c      	mov	ip, r3
 800f744:	8013      	strh	r3, [r2, #0]
 800f746:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f74a:	4283      	cmp	r3, r0
 800f74c:	d10d      	bne.n	800f76a <_ZN8touchgfx6Bitmap10clearCacheEv+0x8a>
 800f74e:	883d      	ldrh	r5, [r7, #0]
 800f750:	6830      	ldr	r0, [r6, #0]
 800f752:	2300      	movs	r3, #0
 800f754:	240e      	movs	r4, #14
 800f756:	429d      	cmp	r5, r3
 800f758:	d90f      	bls.n	800f77a <_ZN8touchgfx6Bitmap10clearCacheEv+0x9a>
 800f75a:	fb04 0203 	mla	r2, r4, r3, r0
 800f75e:	3301      	adds	r3, #1
 800f760:	7b11      	ldrb	r1, [r2, #12]
 800f762:	f36f 1145 	bfc	r1, #5, #1
 800f766:	7311      	strb	r1, [r2, #12]
 800f768:	e7f5      	b.n	800f756 <_ZN8touchgfx6Bitmap10clearCacheEv+0x76>
 800f76a:	682a      	ldr	r2, [r5, #0]
 800f76c:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800f770:	6822      	ldr	r2, [r4, #0]
 800f772:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800f776:	3301      	adds	r3, #1
 800f778:	e7e7      	b.n	800f74a <_ZN8touchgfx6Bitmap10clearCacheEv+0x6a>
 800f77a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f77e:	bf00      	nop
 800f780:	20026f34 	.word	0x20026f34
 800f784:	20026f50 	.word	0x20026f50
 800f788:	20026f54 	.word	0x20026f54
 800f78c:	20026f38 	.word	0x20026f38
 800f790:	20026f48 	.word	0x20026f48
 800f794:	20026f40 	.word	0x20026f40
 800f798:	20026f52 	.word	0x20026f52
 800f79c:	20026f3c 	.word	0x20026f3c
 800f7a0:	20026f4c 	.word	0x20026f4c
 800f7a4:	20026f44 	.word	0x20026f44

0800f7a8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800f7a8:	b510      	push	{r4, lr}
 800f7aa:	4b10      	ldr	r3, [pc, #64]	; (800f7ec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800f7ac:	681b      	ldr	r3, [r3, #0]
 800f7ae:	b9db      	cbnz	r3, 800f7e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f7b0:	b1d1      	cbz	r1, 800f7e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f7b2:	4b0f      	ldr	r3, [pc, #60]	; (800f7f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800f7b4:	801a      	strh	r2, [r3, #0]
 800f7b6:	4b0f      	ldr	r3, [pc, #60]	; (800f7f4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800f7b8:	881b      	ldrh	r3, [r3, #0]
 800f7ba:	b292      	uxth	r2, r2
 800f7bc:	240e      	movs	r4, #14
 800f7be:	4413      	add	r3, r2
 800f7c0:	4362      	muls	r2, r4
 800f7c2:	2406      	movs	r4, #6
 800f7c4:	fb04 2203 	mla	r2, r4, r3, r2
 800f7c8:	428a      	cmp	r2, r1
 800f7ca:	d305      	bcc.n	800f7d8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800f7cc:	4b0a      	ldr	r3, [pc, #40]	; (800f7f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800f7ce:	4a0b      	ldr	r2, [pc, #44]	; (800f7fc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800f7d0:	480b      	ldr	r0, [pc, #44]	; (800f800 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800f7d2:	2137      	movs	r1, #55	; 0x37
 800f7d4:	f00b fce6 	bl	801b1a4 <__assert_func>
 800f7d8:	4b0a      	ldr	r3, [pc, #40]	; (800f804 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800f7da:	6019      	str	r1, [r3, #0]
 800f7dc:	4b0a      	ldr	r3, [pc, #40]	; (800f808 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800f7de:	6018      	str	r0, [r3, #0]
 800f7e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f7e4:	f7ff bf7c 	b.w	800f6e0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800f7e8:	bd10      	pop	{r4, pc}
 800f7ea:	bf00      	nop
 800f7ec:	20026f40 	.word	0x20026f40
 800f7f0:	20026f54 	.word	0x20026f54
 800f7f4:	20026f50 	.word	0x20026f50
 800f7f8:	0801f006 	.word	0x0801f006
 800f7fc:	0801f05f 	.word	0x0801f05f
 800f800:	0801efe1 	.word	0x0801efe1
 800f804:	20026f3c 	.word	0x20026f3c
 800f808:	20026f34 	.word	0x20026f34

0800f80c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800f80c:	b470      	push	{r4, r5, r6}
 800f80e:	4c07      	ldr	r4, [pc, #28]	; (800f82c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800f810:	6826      	ldr	r6, [r4, #0]
 800f812:	4605      	mov	r5, r0
 800f814:	4610      	mov	r0, r2
 800f816:	9a03      	ldr	r2, [sp, #12]
 800f818:	b936      	cbnz	r6, 800f828 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800f81a:	6025      	str	r5, [r4, #0]
 800f81c:	4c04      	ldr	r4, [pc, #16]	; (800f830 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800f81e:	8021      	strh	r1, [r4, #0]
 800f820:	bc70      	pop	{r4, r5, r6}
 800f822:	4619      	mov	r1, r3
 800f824:	f7ff bfc0 	b.w	800f7a8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800f828:	bc70      	pop	{r4, r5, r6}
 800f82a:	4770      	bx	lr
 800f82c:	20026f58 	.word	0x20026f58
 800f830:	20026f50 	.word	0x20026f50

0800f834 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800f834:	b508      	push	{r3, lr}
 800f836:	4b14      	ldr	r3, [pc, #80]	; (800f888 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800f838:	6819      	ldr	r1, [r3, #0]
 800f83a:	b931      	cbnz	r1, 800f84a <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800f83c:	4b13      	ldr	r3, [pc, #76]	; (800f88c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800f83e:	4a14      	ldr	r2, [pc, #80]	; (800f890 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800f840:	4814      	ldr	r0, [pc, #80]	; (800f894 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800f842:	f240 21e6 	movw	r1, #742	; 0x2e6
 800f846:	f00b fcad 	bl	801b1a4 <__assert_func>
 800f84a:	4a13      	ldr	r2, [pc, #76]	; (800f898 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800f84c:	8803      	ldrh	r3, [r0, #0]
 800f84e:	8812      	ldrh	r2, [r2, #0]
 800f850:	4293      	cmp	r3, r2
 800f852:	d204      	bcs.n	800f85e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800f854:	2214      	movs	r2, #20
 800f856:	fb02 1303 	mla	r3, r2, r3, r1
 800f85a:	8918      	ldrh	r0, [r3, #8]
 800f85c:	bd08      	pop	{r3, pc}
 800f85e:	490f      	ldr	r1, [pc, #60]	; (800f89c <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800f860:	8809      	ldrh	r1, [r1, #0]
 800f862:	4411      	add	r1, r2
 800f864:	428b      	cmp	r3, r1
 800f866:	da06      	bge.n	800f876 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800f868:	1a9b      	subs	r3, r3, r2
 800f86a:	4a0d      	ldr	r2, [pc, #52]	; (800f8a0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800f86c:	6812      	ldr	r2, [r2, #0]
 800f86e:	210e      	movs	r1, #14
 800f870:	fb01 2303 	mla	r3, r1, r3, r2
 800f874:	e7f1      	b.n	800f85a <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800f876:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f87a:	4293      	cmp	r3, r2
 800f87c:	bf0a      	itet	eq
 800f87e:	4b09      	ldreq	r3, [pc, #36]	; (800f8a4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800f880:	2000      	movne	r0, #0
 800f882:	8818      	ldrheq	r0, [r3, #0]
 800f884:	e7ea      	b.n	800f85c <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800f886:	bf00      	nop
 800f888:	20026f58 	.word	0x20026f58
 800f88c:	0801e258 	.word	0x0801e258
 800f890:	0801f10c 	.word	0x0801f10c
 800f894:	0801efe1 	.word	0x0801efe1
 800f898:	20026f50 	.word	0x20026f50
 800f89c:	20026f54 	.word	0x20026f54
 800f8a0:	20026f38 	.word	0x20026f38
 800f8a4:	20026ea4 	.word	0x20026ea4

0800f8a8 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800f8a8:	b508      	push	{r3, lr}
 800f8aa:	4b14      	ldr	r3, [pc, #80]	; (800f8fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800f8ac:	6819      	ldr	r1, [r3, #0]
 800f8ae:	b931      	cbnz	r1, 800f8be <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800f8b0:	4b13      	ldr	r3, [pc, #76]	; (800f900 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800f8b2:	4a14      	ldr	r2, [pc, #80]	; (800f904 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800f8b4:	4814      	ldr	r0, [pc, #80]	; (800f908 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800f8b6:	f240 21fa 	movw	r1, #762	; 0x2fa
 800f8ba:	f00b fc73 	bl	801b1a4 <__assert_func>
 800f8be:	4a13      	ldr	r2, [pc, #76]	; (800f90c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800f8c0:	8803      	ldrh	r3, [r0, #0]
 800f8c2:	8812      	ldrh	r2, [r2, #0]
 800f8c4:	4293      	cmp	r3, r2
 800f8c6:	d204      	bcs.n	800f8d2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800f8c8:	2214      	movs	r2, #20
 800f8ca:	fb02 1303 	mla	r3, r2, r3, r1
 800f8ce:	8958      	ldrh	r0, [r3, #10]
 800f8d0:	bd08      	pop	{r3, pc}
 800f8d2:	490f      	ldr	r1, [pc, #60]	; (800f910 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800f8d4:	8809      	ldrh	r1, [r1, #0]
 800f8d6:	4411      	add	r1, r2
 800f8d8:	428b      	cmp	r3, r1
 800f8da:	da06      	bge.n	800f8ea <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800f8dc:	1a9b      	subs	r3, r3, r2
 800f8de:	4a0d      	ldr	r2, [pc, #52]	; (800f914 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800f8e0:	6812      	ldr	r2, [r2, #0]
 800f8e2:	210e      	movs	r1, #14
 800f8e4:	fb01 2303 	mla	r3, r1, r3, r2
 800f8e8:	e7f1      	b.n	800f8ce <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800f8ea:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f8ee:	4293      	cmp	r3, r2
 800f8f0:	bf0a      	itet	eq
 800f8f2:	4b09      	ldreq	r3, [pc, #36]	; (800f918 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800f8f4:	2000      	movne	r0, #0
 800f8f6:	8818      	ldrheq	r0, [r3, #0]
 800f8f8:	e7ea      	b.n	800f8d0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800f8fa:	bf00      	nop
 800f8fc:	20026f58 	.word	0x20026f58
 800f900:	0801e258 	.word	0x0801e258
 800f904:	0801f138 	.word	0x0801f138
 800f908:	0801efe1 	.word	0x0801efe1
 800f90c:	20026f50 	.word	0x20026f50
 800f910:	20026f54 	.word	0x20026f54
 800f914:	20026f38 	.word	0x20026f38
 800f918:	20026ea6 	.word	0x20026ea6

0800f91c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800f91c:	b510      	push	{r4, lr}
 800f91e:	4b23      	ldr	r3, [pc, #140]	; (800f9ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800f920:	681c      	ldr	r4, [r3, #0]
 800f922:	b934      	cbnz	r4, 800f932 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800f924:	4b22      	ldr	r3, [pc, #136]	; (800f9b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800f926:	4a23      	ldr	r2, [pc, #140]	; (800f9b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800f928:	4823      	ldr	r0, [pc, #140]	; (800f9b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800f92a:	f240 310e 	movw	r1, #782	; 0x30e
 800f92e:	f00b fc39 	bl	801b1a4 <__assert_func>
 800f932:	4a22      	ldr	r2, [pc, #136]	; (800f9bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800f934:	880b      	ldrh	r3, [r1, #0]
 800f936:	8812      	ldrh	r2, [r2, #0]
 800f938:	4293      	cmp	r3, r2
 800f93a:	d211      	bcs.n	800f960 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800f93c:	2214      	movs	r2, #20
 800f93e:	fb02 4303 	mla	r3, r2, r3, r4
 800f942:	8a1a      	ldrh	r2, [r3, #16]
 800f944:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800f948:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800f94c:	8a5b      	ldrh	r3, [r3, #18]
 800f94e:	8004      	strh	r4, [r0, #0]
 800f950:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800f954:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800f958:	8041      	strh	r1, [r0, #2]
 800f95a:	8082      	strh	r2, [r0, #4]
 800f95c:	80c3      	strh	r3, [r0, #6]
 800f95e:	e00e      	b.n	800f97e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800f960:	4917      	ldr	r1, [pc, #92]	; (800f9c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800f962:	8809      	ldrh	r1, [r1, #0]
 800f964:	4411      	add	r1, r2
 800f966:	428b      	cmp	r3, r1
 800f968:	da0a      	bge.n	800f980 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800f96a:	1a9b      	subs	r3, r3, r2
 800f96c:	4a15      	ldr	r2, [pc, #84]	; (800f9c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800f96e:	6812      	ldr	r2, [r2, #0]
 800f970:	210e      	movs	r1, #14
 800f972:	fb01 2303 	mla	r3, r1, r3, r2
 800f976:	681a      	ldr	r2, [r3, #0]
 800f978:	6002      	str	r2, [r0, #0]
 800f97a:	685a      	ldr	r2, [r3, #4]
 800f97c:	6042      	str	r2, [r0, #4]
 800f97e:	bd10      	pop	{r4, pc}
 800f980:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f984:	4293      	cmp	r3, r2
 800f986:	d10b      	bne.n	800f9a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800f988:	4b0f      	ldr	r3, [pc, #60]	; (800f9c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800f98a:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f98e:	4b0f      	ldr	r3, [pc, #60]	; (800f9cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800f990:	8081      	strh	r1, [r0, #4]
 800f992:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f996:	80c2      	strh	r2, [r0, #6]
 800f998:	2300      	movs	r3, #0
 800f99a:	8003      	strh	r3, [r0, #0]
 800f99c:	8043      	strh	r3, [r0, #2]
 800f99e:	e7ee      	b.n	800f97e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800f9a0:	2300      	movs	r3, #0
 800f9a2:	8003      	strh	r3, [r0, #0]
 800f9a4:	8043      	strh	r3, [r0, #2]
 800f9a6:	8083      	strh	r3, [r0, #4]
 800f9a8:	e7d8      	b.n	800f95c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800f9aa:	bf00      	nop
 800f9ac:	20026f58 	.word	0x20026f58
 800f9b0:	0801e258 	.word	0x0801e258
 800f9b4:	0801f0a5 	.word	0x0801f0a5
 800f9b8:	0801efe1 	.word	0x0801efe1
 800f9bc:	20026f50 	.word	0x20026f50
 800f9c0:	20026f54 	.word	0x20026f54
 800f9c4:	20026f38 	.word	0x20026f38
 800f9c8:	20026ea4 	.word	0x20026ea4
 800f9cc:	20026ea6 	.word	0x20026ea6

0800f9d0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800f9d0:	4b18      	ldr	r3, [pc, #96]	; (800fa34 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800f9d2:	681b      	ldr	r3, [r3, #0]
 800f9d4:	b34b      	cbz	r3, 800fa2a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800f9d6:	4a18      	ldr	r2, [pc, #96]	; (800fa38 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800f9d8:	8800      	ldrh	r0, [r0, #0]
 800f9da:	8812      	ldrh	r2, [r2, #0]
 800f9dc:	4290      	cmp	r0, r2
 800f9de:	d211      	bcs.n	800fa04 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800f9e0:	2214      	movs	r2, #20
 800f9e2:	fb02 3300 	mla	r3, r2, r0, r3
 800f9e6:	8a1a      	ldrh	r2, [r3, #16]
 800f9e8:	8919      	ldrh	r1, [r3, #8]
 800f9ea:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800f9ee:	428a      	cmp	r2, r1
 800f9f0:	db1d      	blt.n	800fa2e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800f9f2:	8a58      	ldrh	r0, [r3, #18]
 800f9f4:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800f9f8:	895b      	ldrh	r3, [r3, #10]
 800f9fa:	4298      	cmp	r0, r3
 800f9fc:	bfac      	ite	ge
 800f9fe:	2000      	movge	r0, #0
 800fa00:	2001      	movlt	r0, #1
 800fa02:	4770      	bx	lr
 800fa04:	4b0d      	ldr	r3, [pc, #52]	; (800fa3c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800fa06:	881b      	ldrh	r3, [r3, #0]
 800fa08:	4413      	add	r3, r2
 800fa0a:	4298      	cmp	r0, r3
 800fa0c:	da0d      	bge.n	800fa2a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800fa0e:	4b0c      	ldr	r3, [pc, #48]	; (800fa40 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800fa10:	681b      	ldr	r3, [r3, #0]
 800fa12:	1a80      	subs	r0, r0, r2
 800fa14:	220e      	movs	r2, #14
 800fa16:	fb02 3300 	mla	r3, r2, r0, r3
 800fa1a:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800fa1e:	891a      	ldrh	r2, [r3, #8]
 800fa20:	4291      	cmp	r1, r2
 800fa22:	db04      	blt.n	800fa2e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800fa24:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800fa28:	e7e6      	b.n	800f9f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800fa2a:	2000      	movs	r0, #0
 800fa2c:	4770      	bx	lr
 800fa2e:	2001      	movs	r0, #1
 800fa30:	4770      	bx	lr
 800fa32:	bf00      	nop
 800fa34:	20026f58 	.word	0x20026f58
 800fa38:	20026f50 	.word	0x20026f50
 800fa3c:	20026f54 	.word	0x20026f54
 800fa40:	20026f38 	.word	0x20026f38

0800fa44 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800fa44:	b508      	push	{r3, lr}
 800fa46:	4b12      	ldr	r3, [pc, #72]	; (800fa90 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800fa48:	6819      	ldr	r1, [r3, #0]
 800fa4a:	b931      	cbnz	r1, 800fa5a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800fa4c:	4b11      	ldr	r3, [pc, #68]	; (800fa94 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800fa4e:	4a12      	ldr	r2, [pc, #72]	; (800fa98 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800fa50:	4812      	ldr	r0, [pc, #72]	; (800fa9c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800fa52:	f240 3132 	movw	r1, #818	; 0x332
 800fa56:	f00b fba5 	bl	801b1a4 <__assert_func>
 800fa5a:	8803      	ldrh	r3, [r0, #0]
 800fa5c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800fa60:	4293      	cmp	r3, r2
 800fa62:	d012      	beq.n	800fa8a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800fa64:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fa68:	4293      	cmp	r3, r2
 800fa6a:	d103      	bne.n	800fa74 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800fa6c:	4b0c      	ldr	r3, [pc, #48]	; (800faa0 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800fa6e:	681b      	ldr	r3, [r3, #0]
 800fa70:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800fa72:	bd08      	pop	{r3, pc}
 800fa74:	4a0b      	ldr	r2, [pc, #44]	; (800faa4 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800fa76:	6812      	ldr	r2, [r2, #0]
 800fa78:	b11a      	cbz	r2, 800fa82 <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800fa7a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800fa7e:	2800      	cmp	r0, #0
 800fa80:	d1f7      	bne.n	800fa72 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fa82:	2214      	movs	r2, #20
 800fa84:	4353      	muls	r3, r2
 800fa86:	58c8      	ldr	r0, [r1, r3]
 800fa88:	e7f3      	b.n	800fa72 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fa8a:	2000      	movs	r0, #0
 800fa8c:	e7f1      	b.n	800fa72 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800fa8e:	bf00      	nop
 800fa90:	20026f58 	.word	0x20026f58
 800fa94:	0801e258 	.word	0x0801e258
 800fa98:	0801f0db 	.word	0x0801f0db
 800fa9c:	0801efe1 	.word	0x0801efe1
 800faa0:	20026eb0 	.word	0x20026eb0
 800faa4:	20026f34 	.word	0x20026f34

0800faa8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800faa8:	8802      	ldrh	r2, [r0, #0]
 800faaa:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800faae:	429a      	cmp	r2, r3
 800fab0:	d840      	bhi.n	800fb34 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800fab2:	4b21      	ldr	r3, [pc, #132]	; (800fb38 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>)
 800fab4:	881b      	ldrh	r3, [r3, #0]
 800fab6:	429a      	cmp	r2, r3
 800fab8:	d220      	bcs.n	800fafc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x54>
 800faba:	4b20      	ldr	r3, [pc, #128]	; (800fb3c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 800fabc:	6819      	ldr	r1, [r3, #0]
 800fabe:	2314      	movs	r3, #20
 800fac0:	fb03 1302 	mla	r3, r3, r2, r1
 800fac4:	6858      	ldr	r0, [r3, #4]
 800fac6:	2800      	cmp	r0, #0
 800fac8:	d035      	beq.n	800fb36 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800faca:	491d      	ldr	r1, [pc, #116]	; (800fb40 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800facc:	6809      	ldr	r1, [r1, #0]
 800face:	2900      	cmp	r1, #0
 800fad0:	d031      	beq.n	800fb36 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800fad2:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800fad6:	b371      	cbz	r1, 800fb36 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800fad8:	895a      	ldrh	r2, [r3, #10]
 800fada:	8918      	ldrh	r0, [r3, #8]
 800fadc:	4350      	muls	r0, r2
 800fade:	7c5a      	ldrb	r2, [r3, #17]
 800fae0:	7cdb      	ldrb	r3, [r3, #19]
 800fae2:	0952      	lsrs	r2, r2, #5
 800fae4:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800fae8:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800faec:	2b0b      	cmp	r3, #11
 800faee:	bf18      	it	ne
 800faf0:	0040      	lslne	r0, r0, #1
 800faf2:	3003      	adds	r0, #3
 800faf4:	f020 0003 	bic.w	r0, r0, #3
 800faf8:	4408      	add	r0, r1
 800fafa:	4770      	bx	lr
 800fafc:	4911      	ldr	r1, [pc, #68]	; (800fb44 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800fafe:	8809      	ldrh	r1, [r1, #0]
 800fb00:	4419      	add	r1, r3
 800fb02:	428a      	cmp	r2, r1
 800fb04:	da16      	bge.n	800fb34 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800fb06:	4910      	ldr	r1, [pc, #64]	; (800fb48 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800fb08:	6809      	ldr	r1, [r1, #0]
 800fb0a:	1ad3      	subs	r3, r2, r3
 800fb0c:	200e      	movs	r0, #14
 800fb0e:	fb00 1303 	mla	r3, r0, r3, r1
 800fb12:	7b19      	ldrb	r1, [r3, #12]
 800fb14:	f001 011f 	and.w	r1, r1, #31
 800fb18:	290b      	cmp	r1, #11
 800fb1a:	d10b      	bne.n	800fb34 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800fb1c:	8919      	ldrh	r1, [r3, #8]
 800fb1e:	8958      	ldrh	r0, [r3, #10]
 800fb20:	4b07      	ldr	r3, [pc, #28]	; (800fb40 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800fb22:	4348      	muls	r0, r1
 800fb24:	6819      	ldr	r1, [r3, #0]
 800fb26:	3003      	adds	r0, #3
 800fb28:	f020 0303 	bic.w	r3, r0, #3
 800fb2c:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800fb30:	4418      	add	r0, r3
 800fb32:	4770      	bx	lr
 800fb34:	2000      	movs	r0, #0
 800fb36:	4770      	bx	lr
 800fb38:	20026f50 	.word	0x20026f50
 800fb3c:	20026f58 	.word	0x20026f58
 800fb40:	20026f34 	.word	0x20026f34
 800fb44:	20026f54 	.word	0x20026f54
 800fb48:	20026f38 	.word	0x20026f38

0800fb4c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800fb4c:	4b19      	ldr	r3, [pc, #100]	; (800fbb4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800fb4e:	6819      	ldr	r1, [r3, #0]
 800fb50:	8803      	ldrh	r3, [r0, #0]
 800fb52:	b1e9      	cbz	r1, 800fb90 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800fb54:	4a18      	ldr	r2, [pc, #96]	; (800fbb8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800fb56:	8812      	ldrh	r2, [r2, #0]
 800fb58:	429a      	cmp	r2, r3
 800fb5a:	d90a      	bls.n	800fb72 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800fb5c:	2214      	movs	r2, #20
 800fb5e:	fb02 1303 	mla	r3, r2, r3, r1
 800fb62:	7c58      	ldrb	r0, [r3, #17]
 800fb64:	0942      	lsrs	r2, r0, #5
 800fb66:	7cd8      	ldrb	r0, [r3, #19]
 800fb68:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800fb6c:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800fb70:	4770      	bx	lr
 800fb72:	4912      	ldr	r1, [pc, #72]	; (800fbbc <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 800fb74:	8809      	ldrh	r1, [r1, #0]
 800fb76:	4411      	add	r1, r2
 800fb78:	428b      	cmp	r3, r1
 800fb7a:	da09      	bge.n	800fb90 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800fb7c:	1a9b      	subs	r3, r3, r2
 800fb7e:	4a10      	ldr	r2, [pc, #64]	; (800fbc0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 800fb80:	6812      	ldr	r2, [r2, #0]
 800fb82:	210e      	movs	r1, #14
 800fb84:	fb01 2303 	mla	r3, r1, r3, r2
 800fb88:	7b18      	ldrb	r0, [r3, #12]
 800fb8a:	f000 001f 	and.w	r0, r0, #31
 800fb8e:	4770      	bx	lr
 800fb90:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800fb94:	4293      	cmp	r3, r2
 800fb96:	d10a      	bne.n	800fbae <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 800fb98:	4b0a      	ldr	r3, [pc, #40]	; (800fbc4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 800fb9a:	681b      	ldr	r3, [r3, #0]
 800fb9c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800fba0:	b10a      	cbz	r2, 800fba6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 800fba2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800fba4:	b900      	cbnz	r0, 800fba8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800fba6:	6898      	ldr	r0, [r3, #8]
 800fba8:	6803      	ldr	r3, [r0, #0]
 800fbaa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800fbac:	4718      	bx	r3
 800fbae:	2000      	movs	r0, #0
 800fbb0:	4770      	bx	lr
 800fbb2:	bf00      	nop
 800fbb4:	20026f58 	.word	0x20026f58
 800fbb8:	20026f50 	.word	0x20026f50
 800fbbc:	20026f54 	.word	0x20026f54
 800fbc0:	20026f38 	.word	0x20026f38
 800fbc4:	20026eb0 	.word	0x20026eb0

0800fbc8 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800fbc8:	2010      	movs	r0, #16
 800fbca:	4770      	bx	lr

0800fbcc <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800fbcc:	2000      	movs	r0, #0
 800fbce:	4770      	bx	lr

0800fbd0 <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 800fbd0:	00d2      	lsls	r2, r2, #3
 800fbd2:	0209      	lsls	r1, r1, #8
 800fbd4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800fbd8:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 800fbdc:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 800fbe0:	4310      	orrs	r0, r2
 800fbe2:	4770      	bx	lr

0800fbe4 <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 800fbe4:	1209      	asrs	r1, r1, #8
 800fbe6:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800fbea:	4770      	bx	lr

0800fbec <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 800fbec:	f3c1 01cc 	ubfx	r1, r1, #3, #13
 800fbf0:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 800fbf4:	4770      	bx	lr

0800fbf6 <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 800fbf6:	00c9      	lsls	r1, r1, #3
 800fbf8:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800fbfc:	4770      	bx	lr

0800fbfe <_ZN8touchgfx8LCD16bpp4initEv>:
 800fbfe:	4770      	bx	lr

0800fc00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800fc00:	2bff      	cmp	r3, #255	; 0xff
 800fc02:	d050      	beq.n	800fca6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800fc04:	2a0b      	cmp	r2, #11
 800fc06:	d04a      	beq.n	800fc9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fc08:	d80e      	bhi.n	800fc28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800fc0a:	2a03      	cmp	r2, #3
 800fc0c:	d03f      	beq.n	800fc8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800fc0e:	d804      	bhi.n	800fc1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800fc10:	2a01      	cmp	r2, #1
 800fc12:	d03e      	beq.n	800fc92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800fc14:	d93f      	bls.n	800fc96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800fc16:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800fc18:	4770      	bx	lr
 800fc1a:	2a09      	cmp	r2, #9
 800fc1c:	d03f      	beq.n	800fc9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800fc1e:	d83c      	bhi.n	800fc9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fc20:	2a08      	cmp	r2, #8
 800fc22:	d03a      	beq.n	800fc9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800fc24:	2000      	movs	r0, #0
 800fc26:	4770      	bx	lr
 800fc28:	2a2f      	cmp	r2, #47	; 0x2f
 800fc2a:	d024      	beq.n	800fc76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800fc2c:	d80d      	bhi.n	800fc4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800fc2e:	2a2d      	cmp	r2, #45	; 0x2d
 800fc30:	d014      	beq.n	800fc5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800fc32:	d826      	bhi.n	800fc82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800fc34:	2a2c      	cmp	r2, #44	; 0x2c
 800fc36:	d1f5      	bne.n	800fc24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fc38:	684b      	ldr	r3, [r1, #4]
 800fc3a:	781b      	ldrb	r3, [r3, #0]
 800fc3c:	2b01      	cmp	r3, #1
 800fc3e:	d018      	beq.n	800fc72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800fc40:	d323      	bcc.n	800fc8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800fc42:	2b02      	cmp	r3, #2
 800fc44:	d1ee      	bne.n	800fc24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fc46:	6880      	ldr	r0, [r0, #8]
 800fc48:	4770      	bx	lr
 800fc4a:	2a31      	cmp	r2, #49	; 0x31
 800fc4c:	d004      	beq.n	800fc58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800fc4e:	d328      	bcc.n	800fca2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fc50:	2a32      	cmp	r2, #50	; 0x32
 800fc52:	d026      	beq.n	800fca2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800fc54:	2a33      	cmp	r2, #51	; 0x33
 800fc56:	d1e5      	bne.n	800fc24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fc58:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800fc5a:	4770      	bx	lr
 800fc5c:	684b      	ldr	r3, [r1, #4]
 800fc5e:	781b      	ldrb	r3, [r3, #0]
 800fc60:	2b01      	cmp	r3, #1
 800fc62:	d004      	beq.n	800fc6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800fc64:	d30b      	bcc.n	800fc7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800fc66:	2b02      	cmp	r3, #2
 800fc68:	d1dc      	bne.n	800fc24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fc6a:	6900      	ldr	r0, [r0, #16]
 800fc6c:	4770      	bx	lr
 800fc6e:	6a00      	ldr	r0, [r0, #32]
 800fc70:	4770      	bx	lr
 800fc72:	6980      	ldr	r0, [r0, #24]
 800fc74:	4770      	bx	lr
 800fc76:	684b      	ldr	r3, [r1, #4]
 800fc78:	781b      	ldrb	r3, [r3, #0]
 800fc7a:	2b00      	cmp	r3, #0
 800fc7c:	d1d2      	bne.n	800fc24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fc7e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800fc80:	4770      	bx	lr
 800fc82:	684b      	ldr	r3, [r1, #4]
 800fc84:	781b      	ldrb	r3, [r3, #0]
 800fc86:	2b00      	cmp	r3, #0
 800fc88:	d1cc      	bne.n	800fc24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fc8a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800fc8c:	4770      	bx	lr
 800fc8e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800fc90:	4770      	bx	lr
 800fc92:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800fc94:	4770      	bx	lr
 800fc96:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800fc98:	4770      	bx	lr
 800fc9a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800fc9c:	4770      	bx	lr
 800fc9e:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800fca0:	4770      	bx	lr
 800fca2:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800fca4:	4770      	bx	lr
 800fca6:	2a0b      	cmp	r2, #11
 800fca8:	d049      	beq.n	800fd3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fcaa:	d80e      	bhi.n	800fcca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800fcac:	2a03      	cmp	r2, #3
 800fcae:	d040      	beq.n	800fd32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800fcb0:	d804      	bhi.n	800fcbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800fcb2:	2a01      	cmp	r2, #1
 800fcb4:	d03f      	beq.n	800fd36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800fcb6:	d940      	bls.n	800fd3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800fcb8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800fcba:	4770      	bx	lr
 800fcbc:	2a09      	cmp	r2, #9
 800fcbe:	d03e      	beq.n	800fd3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800fcc0:	d801      	bhi.n	800fcc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800fcc2:	2a08      	cmp	r2, #8
 800fcc4:	d1ae      	bne.n	800fc24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fcc6:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800fcc8:	4770      	bx	lr
 800fcca:	2a2f      	cmp	r2, #47	; 0x2f
 800fccc:	d024      	beq.n	800fd18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800fcce:	d80d      	bhi.n	800fcec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800fcd0:	2a2d      	cmp	r2, #45	; 0x2d
 800fcd2:	d014      	beq.n	800fcfe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800fcd4:	d826      	bhi.n	800fd24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800fcd6:	2a2c      	cmp	r2, #44	; 0x2c
 800fcd8:	d1a4      	bne.n	800fc24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fcda:	684b      	ldr	r3, [r1, #4]
 800fcdc:	781b      	ldrb	r3, [r3, #0]
 800fcde:	2b01      	cmp	r3, #1
 800fce0:	d018      	beq.n	800fd14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800fce2:	d324      	bcc.n	800fd2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800fce4:	2b02      	cmp	r3, #2
 800fce6:	d19d      	bne.n	800fc24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fce8:	68c0      	ldr	r0, [r0, #12]
 800fcea:	4770      	bx	lr
 800fcec:	2a31      	cmp	r2, #49	; 0x31
 800fcee:	d004      	beq.n	800fcfa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800fcf0:	d327      	bcc.n	800fd42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fcf2:	2a32      	cmp	r2, #50	; 0x32
 800fcf4:	d025      	beq.n	800fd42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800fcf6:	2a33      	cmp	r2, #51	; 0x33
 800fcf8:	d194      	bne.n	800fc24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fcfa:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800fcfc:	4770      	bx	lr
 800fcfe:	684b      	ldr	r3, [r1, #4]
 800fd00:	781b      	ldrb	r3, [r3, #0]
 800fd02:	2b01      	cmp	r3, #1
 800fd04:	d004      	beq.n	800fd10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800fd06:	d30b      	bcc.n	800fd20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800fd08:	2b02      	cmp	r3, #2
 800fd0a:	d18b      	bne.n	800fc24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fd0c:	6940      	ldr	r0, [r0, #20]
 800fd0e:	4770      	bx	lr
 800fd10:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800fd12:	4770      	bx	lr
 800fd14:	69c0      	ldr	r0, [r0, #28]
 800fd16:	4770      	bx	lr
 800fd18:	684b      	ldr	r3, [r1, #4]
 800fd1a:	781b      	ldrb	r3, [r3, #0]
 800fd1c:	2b00      	cmp	r3, #0
 800fd1e:	d181      	bne.n	800fc24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fd20:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800fd22:	4770      	bx	lr
 800fd24:	684b      	ldr	r3, [r1, #4]
 800fd26:	781b      	ldrb	r3, [r3, #0]
 800fd28:	2b00      	cmp	r3, #0
 800fd2a:	f47f af7b 	bne.w	800fc24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800fd2e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800fd30:	4770      	bx	lr
 800fd32:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800fd34:	4770      	bx	lr
 800fd36:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800fd38:	4770      	bx	lr
 800fd3a:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800fd3c:	4770      	bx	lr
 800fd3e:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800fd40:	4770      	bx	lr
 800fd42:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800fd44:	4770      	bx	lr

0800fd46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800fd46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd4a:	b087      	sub	sp, #28
 800fd4c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800fd4e:	9205      	str	r2, [sp, #20]
 800fd50:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800fd54:	9202      	str	r2, [sp, #8]
 800fd56:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 800fd5a:	9101      	str	r1, [sp, #4]
 800fd5c:	6871      	ldr	r1, [r6, #4]
 800fd5e:	981a      	ldr	r0, [sp, #104]	; 0x68
 800fd60:	f89d 406c 	ldrb.w	r4, [sp, #108]	; 0x6c
 800fd64:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800fd68:	fb01 2505 	mla	r5, r1, r5, r2
 800fd6c:	6832      	ldr	r2, [r6, #0]
 800fd6e:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800fd72:	6802      	ldr	r2, [r0, #0]
 800fd74:	9203      	str	r2, [sp, #12]
 800fd76:	6842      	ldr	r2, [r0, #4]
 800fd78:	fa1f fe84 	uxth.w	lr, r4
 800fd7c:	3204      	adds	r2, #4
 800fd7e:	43e4      	mvns	r4, r4
 800fd80:	9204      	str	r2, [sp, #16]
 800fd82:	b2e4      	uxtb	r4, r4
 800fd84:	9a01      	ldr	r2, [sp, #4]
 800fd86:	2a00      	cmp	r2, #0
 800fd88:	dc03      	bgt.n	800fd92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800fd8a:	9a05      	ldr	r2, [sp, #20]
 800fd8c:	2a00      	cmp	r2, #0
 800fd8e:	f340 8119 	ble.w	800ffc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800fd92:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fd94:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fd98:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fd9a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fd9e:	2b00      	cmp	r3, #0
 800fda0:	dd0f      	ble.n	800fdc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800fda2:	1408      	asrs	r0, r1, #16
 800fda4:	d406      	bmi.n	800fdb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800fda6:	4540      	cmp	r0, r8
 800fda8:	da04      	bge.n	800fdb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800fdaa:	1410      	asrs	r0, r2, #16
 800fdac:	d402      	bmi.n	800fdb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800fdae:	9e02      	ldr	r6, [sp, #8]
 800fdb0:	42b0      	cmp	r0, r6
 800fdb2:	db07      	blt.n	800fdc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800fdb4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fdb6:	4401      	add	r1, r0
 800fdb8:	9814      	ldr	r0, [sp, #80]	; 0x50
 800fdba:	3b01      	subs	r3, #1
 800fdbc:	4402      	add	r2, r0
 800fdbe:	3502      	adds	r5, #2
 800fdc0:	e7ed      	b.n	800fd9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800fdc2:	d00f      	beq.n	800fde4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800fdc4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800fdc6:	1e58      	subs	r0, r3, #1
 800fdc8:	fb06 1600 	mla	r6, r6, r0, r1
 800fdcc:	1436      	asrs	r6, r6, #16
 800fdce:	d547      	bpl.n	800fe60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800fdd0:	469b      	mov	fp, r3
 800fdd2:	46aa      	mov	sl, r5
 800fdd4:	f1bb 0f00 	cmp.w	fp, #0
 800fdd8:	f300 809e 	bgt.w	800ff18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 800fddc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fde0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800fde4:	9b01      	ldr	r3, [sp, #4]
 800fde6:	2b00      	cmp	r3, #0
 800fde8:	f340 80ec 	ble.w	800ffc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800fdec:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fdf0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800fdf4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800fdf8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fdfa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fdfe:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fe02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fe06:	eef0 6a62 	vmov.f32	s13, s5
 800fe0a:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fe0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fe12:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fe16:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800fe1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fe1e:	eef0 6a43 	vmov.f32	s13, s6
 800fe22:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fe26:	ee12 2a90 	vmov	r2, s5
 800fe2a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fe2e:	fb92 f3f3 	sdiv	r3, r2, r3
 800fe32:	ee13 2a10 	vmov	r2, s6
 800fe36:	9313      	str	r3, [sp, #76]	; 0x4c
 800fe38:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fe3a:	fb92 f3f3 	sdiv	r3, r2, r3
 800fe3e:	9314      	str	r3, [sp, #80]	; 0x50
 800fe40:	9b01      	ldr	r3, [sp, #4]
 800fe42:	9a05      	ldr	r2, [sp, #20]
 800fe44:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fe48:	3b01      	subs	r3, #1
 800fe4a:	9301      	str	r3, [sp, #4]
 800fe4c:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800fe50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fe52:	eeb0 3a67 	vmov.f32	s6, s15
 800fe56:	bf08      	it	eq
 800fe58:	4613      	moveq	r3, r2
 800fe5a:	eef0 2a47 	vmov.f32	s5, s14
 800fe5e:	e791      	b.n	800fd84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800fe60:	4546      	cmp	r6, r8
 800fe62:	dab5      	bge.n	800fdd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800fe64:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800fe66:	fb06 2000 	mla	r0, r6, r0, r2
 800fe6a:	1400      	asrs	r0, r0, #16
 800fe6c:	d4b0      	bmi.n	800fdd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800fe6e:	9e02      	ldr	r6, [sp, #8]
 800fe70:	42b0      	cmp	r0, r6
 800fe72:	daad      	bge.n	800fdd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800fe74:	469a      	mov	sl, r3
 800fe76:	46ab      	mov	fp, r5
 800fe78:	f1ba 0f00 	cmp.w	sl, #0
 800fe7c:	ddae      	ble.n	800fddc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800fe7e:	9f03      	ldr	r7, [sp, #12]
 800fe80:	1410      	asrs	r0, r2, #16
 800fe82:	140e      	asrs	r6, r1, #16
 800fe84:	fb08 7000 	mla	r0, r8, r0, r7
 800fe88:	f10a 3aff 	add.w	sl, sl, #4294967295
 800fe8c:	5d80      	ldrb	r0, [r0, r6]
 800fe8e:	9e04      	ldr	r6, [sp, #16]
 800fe90:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800fe94:	f8bb 6000 	ldrh.w	r6, [fp]
 800fe98:	1237      	asrs	r7, r6, #8
 800fe9a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800fe9e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fea2:	fb17 f704 	smulbb	r7, r7, r4
 800fea6:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800feaa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800feae:	00f6      	lsls	r6, r6, #3
 800feb0:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800feb4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800feb8:	10c7      	asrs	r7, r0, #3
 800feba:	b2f6      	uxtb	r6, r6
 800febc:	00c0      	lsls	r0, r0, #3
 800febe:	fb19 f904 	smulbb	r9, r9, r4
 800fec2:	fb16 f604 	smulbb	r6, r6, r4
 800fec6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800feca:	b2c0      	uxtb	r0, r0
 800fecc:	fa1f fc8c 	uxth.w	ip, ip
 800fed0:	fb07 970e 	mla	r7, r7, lr, r9
 800fed4:	fb00 600e 	mla	r0, r0, lr, r6
 800fed8:	b280      	uxth	r0, r0
 800feda:	b2bf      	uxth	r7, r7
 800fedc:	f10c 0601 	add.w	r6, ip, #1
 800fee0:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800fee4:	f107 0901 	add.w	r9, r7, #1
 800fee8:	1c46      	adds	r6, r0, #1
 800feea:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800feee:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800fef2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800fef4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800fef8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800fefc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800ff00:	ea4c 0c06 	orr.w	ip, ip, r6
 800ff04:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800ff08:	4401      	add	r1, r0
 800ff0a:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ff0c:	ea4c 0c09 	orr.w	ip, ip, r9
 800ff10:	f82b cb02 	strh.w	ip, [fp], #2
 800ff14:	4402      	add	r2, r0
 800ff16:	e7af      	b.n	800fe78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800ff18:	140e      	asrs	r6, r1, #16
 800ff1a:	d44a      	bmi.n	800ffb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800ff1c:	4546      	cmp	r6, r8
 800ff1e:	da48      	bge.n	800ffb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800ff20:	1410      	asrs	r0, r2, #16
 800ff22:	d446      	bmi.n	800ffb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800ff24:	9f02      	ldr	r7, [sp, #8]
 800ff26:	42b8      	cmp	r0, r7
 800ff28:	da43      	bge.n	800ffb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800ff2a:	9f03      	ldr	r7, [sp, #12]
 800ff2c:	fb08 7000 	mla	r0, r8, r0, r7
 800ff30:	5d80      	ldrb	r0, [r0, r6]
 800ff32:	9e04      	ldr	r6, [sp, #16]
 800ff34:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800ff38:	f8ba 6000 	ldrh.w	r6, [sl]
 800ff3c:	1237      	asrs	r7, r6, #8
 800ff3e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800ff42:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ff46:	fb17 f704 	smulbb	r7, r7, r4
 800ff4a:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800ff4e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ff52:	00f6      	lsls	r6, r6, #3
 800ff54:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800ff58:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800ff5c:	10c7      	asrs	r7, r0, #3
 800ff5e:	b2f6      	uxtb	r6, r6
 800ff60:	00c0      	lsls	r0, r0, #3
 800ff62:	fb19 f904 	smulbb	r9, r9, r4
 800ff66:	fb16 f604 	smulbb	r6, r6, r4
 800ff6a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800ff6e:	b2c0      	uxtb	r0, r0
 800ff70:	fa1f fc8c 	uxth.w	ip, ip
 800ff74:	fb07 970e 	mla	r7, r7, lr, r9
 800ff78:	fb00 600e 	mla	r0, r0, lr, r6
 800ff7c:	b2bf      	uxth	r7, r7
 800ff7e:	b280      	uxth	r0, r0
 800ff80:	f10c 0601 	add.w	r6, ip, #1
 800ff84:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800ff88:	f107 0901 	add.w	r9, r7, #1
 800ff8c:	1c46      	adds	r6, r0, #1
 800ff8e:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800ff92:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800ff96:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ff9a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800ff9e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800ffa2:	ea4c 0c06 	orr.w	ip, ip, r6
 800ffa6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800ffaa:	ea4c 0c09 	orr.w	ip, ip, r9
 800ffae:	f8aa c000 	strh.w	ip, [sl]
 800ffb2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ffb4:	4401      	add	r1, r0
 800ffb6:	9814      	ldr	r0, [sp, #80]	; 0x50
 800ffb8:	f10a 0a02 	add.w	sl, sl, #2
 800ffbc:	4402      	add	r2, r0
 800ffbe:	f10b 3bff 	add.w	fp, fp, #4294967295
 800ffc2:	e707      	b.n	800fdd4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800ffc4:	b007      	add	sp, #28
 800ffc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ffca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800ffca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ffce:	b085      	sub	sp, #20
 800ffd0:	e9dd 7611 	ldrd	r7, r6, [sp, #68]	; 0x44
 800ffd4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ffd6:	9203      	str	r2, [sp, #12]
 800ffd8:	6842      	ldr	r2, [r0, #4]
 800ffda:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800ffdc:	9c18      	ldr	r4, [sp, #96]	; 0x60
 800ffde:	6800      	ldr	r0, [r0, #0]
 800ffe0:	f9bd c058 	ldrsh.w	ip, [sp, #88]	; 0x58
 800ffe4:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800ffe8:	4696      	mov	lr, r2
 800ffea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800ffec:	fb0e 2505 	mla	r5, lr, r5, r2
 800fff0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800fff4:	6860      	ldr	r0, [r4, #4]
 800fff6:	6822      	ldr	r2, [r4, #0]
 800fff8:	9201      	str	r2, [sp, #4]
 800fffa:	1d02      	adds	r2, r0, #4
 800fffc:	9202      	str	r2, [sp, #8]
 800fffe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010002:	2900      	cmp	r1, #0
 8010004:	dc03      	bgt.n	801000e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 8010006:	9a03      	ldr	r2, [sp, #12]
 8010008:	2a00      	cmp	r2, #0
 801000a:	f340 809b 	ble.w	8010144 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 801000e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010010:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8010014:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010016:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801001a:	2b00      	cmp	r3, #0
 801001c:	dd0e      	ble.n	801003c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 801001e:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8010022:	d406      	bmi.n	8010032 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8010024:	45e6      	cmp	lr, ip
 8010026:	da04      	bge.n	8010032 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8010028:	ea5f 4e20 	movs.w	lr, r0, asr #16
 801002c:	d401      	bmi.n	8010032 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 801002e:	45c6      	cmp	lr, r8
 8010030:	db05      	blt.n	801003e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8010032:	443c      	add	r4, r7
 8010034:	4430      	add	r0, r6
 8010036:	3b01      	subs	r3, #1
 8010038:	3502      	adds	r5, #2
 801003a:	e7ee      	b.n	801001a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 801003c:	d010      	beq.n	8010060 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 801003e:	f103 3eff 	add.w	lr, r3, #4294967295
 8010042:	fb07 490e 	mla	r9, r7, lr, r4
 8010046:	ea5f 4929 	movs.w	r9, r9, asr #16
 801004a:	d53d      	bpl.n	80100c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801004c:	469e      	mov	lr, r3
 801004e:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 8010052:	f1be 0f00 	cmp.w	lr, #0
 8010056:	dc58      	bgt.n	801010a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x140>
 8010058:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801005c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8010060:	2900      	cmp	r1, #0
 8010062:	dd6f      	ble.n	8010144 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 8010064:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010068:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801006c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010070:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010072:	3901      	subs	r1, #1
 8010074:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010078:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801007c:	eeb0 6a62 	vmov.f32	s12, s5
 8010080:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010084:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010088:	ee77 2a62 	vsub.f32	s5, s14, s5
 801008c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010090:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010094:	eeb0 6a43 	vmov.f32	s12, s6
 8010098:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801009c:	ee12 2a90 	vmov	r2, s5
 80100a0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80100a4:	fb92 f7f3 	sdiv	r7, r2, r3
 80100a8:	ee13 2a10 	vmov	r2, s6
 80100ac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80100b0:	fb92 f6f3 	sdiv	r6, r2, r3
 80100b4:	9a03      	ldr	r2, [sp, #12]
 80100b6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80100ba:	bf08      	it	eq
 80100bc:	4613      	moveq	r3, r2
 80100be:	eeb0 3a67 	vmov.f32	s6, s15
 80100c2:	eef0 2a47 	vmov.f32	s5, s14
 80100c6:	e79c      	b.n	8010002 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 80100c8:	45e1      	cmp	r9, ip
 80100ca:	dabf      	bge.n	801004c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 80100cc:	fb06 0e0e 	mla	lr, r6, lr, r0
 80100d0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80100d4:	d4ba      	bmi.n	801004c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 80100d6:	45c6      	cmp	lr, r8
 80100d8:	dab8      	bge.n	801004c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 80100da:	469e      	mov	lr, r3
 80100dc:	46aa      	mov	sl, r5
 80100de:	f1be 0f00 	cmp.w	lr, #0
 80100e2:	ddb9      	ble.n	8010058 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 80100e4:	9a01      	ldr	r2, [sp, #4]
 80100e6:	ea4f 4920 	mov.w	r9, r0, asr #16
 80100ea:	ea4f 4b24 	mov.w	fp, r4, asr #16
 80100ee:	fb0c 2909 	mla	r9, ip, r9, r2
 80100f2:	9a02      	ldr	r2, [sp, #8]
 80100f4:	f819 900b 	ldrb.w	r9, [r9, fp]
 80100f8:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 80100fc:	f82a 9b02 	strh.w	r9, [sl], #2
 8010100:	443c      	add	r4, r7
 8010102:	4430      	add	r0, r6
 8010104:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010108:	e7e9      	b.n	80100de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 801010a:	ea5f 4a24 	movs.w	sl, r4, asr #16
 801010e:	d414      	bmi.n	801013a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 8010110:	45e2      	cmp	sl, ip
 8010112:	da12      	bge.n	801013a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 8010114:	ea5f 4920 	movs.w	r9, r0, asr #16
 8010118:	d40f      	bmi.n	801013a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 801011a:	45c1      	cmp	r9, r8
 801011c:	da0d      	bge.n	801013a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 801011e:	9a01      	ldr	r2, [sp, #4]
 8010120:	fb0c 2909 	mla	r9, ip, r9, r2
 8010124:	9a02      	ldr	r2, [sp, #8]
 8010126:	f819 900a 	ldrb.w	r9, [r9, sl]
 801012a:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 801012e:	f06f 0201 	mvn.w	r2, #1
 8010132:	fb02 f90e 	mul.w	r9, r2, lr
 8010136:	f82b a009 	strh.w	sl, [fp, r9]
 801013a:	443c      	add	r4, r7
 801013c:	4430      	add	r0, r6
 801013e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010142:	e786      	b.n	8010052 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 8010144:	b005      	add	sp, #20
 8010146:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801014a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801014a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801014e:	b087      	sub	sp, #28
 8010150:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8010152:	9205      	str	r2, [sp, #20]
 8010154:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010158:	9202      	str	r2, [sp, #8]
 801015a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801015e:	9101      	str	r1, [sp, #4]
 8010160:	6871      	ldr	r1, [r6, #4]
 8010162:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8010164:	f89d 006c 	ldrb.w	r0, [sp, #108]	; 0x6c
 8010168:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 801016c:	fb01 2404 	mla	r4, r1, r4, r2
 8010170:	6832      	ldr	r2, [r6, #0]
 8010172:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010176:	682a      	ldr	r2, [r5, #0]
 8010178:	9203      	str	r2, [sp, #12]
 801017a:	686a      	ldr	r2, [r5, #4]
 801017c:	fa1f fc80 	uxth.w	ip, r0
 8010180:	3204      	adds	r2, #4
 8010182:	43c0      	mvns	r0, r0
 8010184:	9200      	str	r2, [sp, #0]
 8010186:	b2c0      	uxtb	r0, r0
 8010188:	9a01      	ldr	r2, [sp, #4]
 801018a:	2a00      	cmp	r2, #0
 801018c:	dc03      	bgt.n	8010196 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 801018e:	9a05      	ldr	r2, [sp, #20]
 8010190:	2a00      	cmp	r2, #0
 8010192:	f340 811b 	ble.w	80103cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 8010196:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010198:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801019c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801019e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80101a2:	2b00      	cmp	r3, #0
 80101a4:	dd0f      	ble.n	80101c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 80101a6:	140d      	asrs	r5, r1, #16
 80101a8:	d406      	bmi.n	80101b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 80101aa:	4575      	cmp	r5, lr
 80101ac:	da04      	bge.n	80101b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 80101ae:	1415      	asrs	r5, r2, #16
 80101b0:	d402      	bmi.n	80101b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 80101b2:	9e02      	ldr	r6, [sp, #8]
 80101b4:	42b5      	cmp	r5, r6
 80101b6:	db07      	blt.n	80101c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 80101b8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80101ba:	4429      	add	r1, r5
 80101bc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80101be:	3b01      	subs	r3, #1
 80101c0:	442a      	add	r2, r5
 80101c2:	3402      	adds	r4, #2
 80101c4:	e7ed      	b.n	80101a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 80101c6:	d00f      	beq.n	80101e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 80101c8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80101ca:	1e5d      	subs	r5, r3, #1
 80101cc:	fb06 1605 	mla	r6, r6, r5, r1
 80101d0:	1436      	asrs	r6, r6, #16
 80101d2:	d547      	bpl.n	8010264 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 80101d4:	469a      	mov	sl, r3
 80101d6:	46a1      	mov	r9, r4
 80101d8:	f1ba 0f00 	cmp.w	sl, #0
 80101dc:	f300 809f 	bgt.w	801031e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 80101e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80101e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80101e8:	9b01      	ldr	r3, [sp, #4]
 80101ea:	2b00      	cmp	r3, #0
 80101ec:	f340 80ee 	ble.w	80103cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 80101f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80101f4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80101f8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80101fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80101fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010202:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010206:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801020a:	eef0 6a62 	vmov.f32	s13, s5
 801020e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010212:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010216:	ee77 2a62 	vsub.f32	s5, s14, s5
 801021a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801021e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010222:	eef0 6a43 	vmov.f32	s13, s6
 8010226:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801022a:	ee12 2a90 	vmov	r2, s5
 801022e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010232:	fb92 f3f3 	sdiv	r3, r2, r3
 8010236:	ee13 2a10 	vmov	r2, s6
 801023a:	9313      	str	r3, [sp, #76]	; 0x4c
 801023c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801023e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010242:	9314      	str	r3, [sp, #80]	; 0x50
 8010244:	9b01      	ldr	r3, [sp, #4]
 8010246:	9a05      	ldr	r2, [sp, #20]
 8010248:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801024c:	3b01      	subs	r3, #1
 801024e:	9301      	str	r3, [sp, #4]
 8010250:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8010254:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010256:	eeb0 3a67 	vmov.f32	s6, s15
 801025a:	bf08      	it	eq
 801025c:	4613      	moveq	r3, r2
 801025e:	eef0 2a47 	vmov.f32	s5, s14
 8010262:	e791      	b.n	8010188 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 8010264:	4576      	cmp	r6, lr
 8010266:	dab5      	bge.n	80101d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010268:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801026a:	fb06 2505 	mla	r5, r6, r5, r2
 801026e:	142d      	asrs	r5, r5, #16
 8010270:	d4b0      	bmi.n	80101d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010272:	9e02      	ldr	r6, [sp, #8]
 8010274:	42b5      	cmp	r5, r6
 8010276:	daad      	bge.n	80101d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010278:	4699      	mov	r9, r3
 801027a:	46a2      	mov	sl, r4
 801027c:	f1b9 0f00 	cmp.w	r9, #0
 8010280:	ddae      	ble.n	80101e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8010282:	9f03      	ldr	r7, [sp, #12]
 8010284:	1415      	asrs	r5, r2, #16
 8010286:	140e      	asrs	r6, r1, #16
 8010288:	fb0e 7505 	mla	r5, lr, r5, r7
 801028c:	f109 39ff 	add.w	r9, r9, #4294967295
 8010290:	f815 8006 	ldrb.w	r8, [r5, r6]
 8010294:	9d00      	ldr	r5, [sp, #0]
 8010296:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801029a:	eb05 0b08 	add.w	fp, r5, r8
 801029e:	f8ba 5000 	ldrh.w	r5, [sl]
 80102a2:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80102a6:	f89b b001 	ldrb.w	fp, [fp, #1]
 80102aa:	122f      	asrs	r7, r5, #8
 80102ac:	fb16 f60c 	smulbb	r6, r6, ip
 80102b0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80102b4:	fb07 6700 	mla	r7, r7, r0, r6
 80102b8:	10ee      	asrs	r6, r5, #3
 80102ba:	fb1b fb0c 	smulbb	fp, fp, ip
 80102be:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80102c2:	fb06 b600 	mla	r6, r6, r0, fp
 80102c6:	b2b6      	uxth	r6, r6
 80102c8:	9604      	str	r6, [sp, #16]
 80102ca:	9e00      	ldr	r6, [sp, #0]
 80102cc:	00ed      	lsls	r5, r5, #3
 80102ce:	f816 8008 	ldrb.w	r8, [r6, r8]
 80102d2:	b2ed      	uxtb	r5, r5
 80102d4:	fb15 f500 	smulbb	r5, r5, r0
 80102d8:	b2bf      	uxth	r7, r7
 80102da:	fb08 580c 	mla	r8, r8, ip, r5
 80102de:	fa1f f888 	uxth.w	r8, r8
 80102e2:	1c7d      	adds	r5, r7, #1
 80102e4:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 80102e8:	f108 0501 	add.w	r5, r8, #1
 80102ec:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 80102f0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80102f4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80102f8:	432f      	orrs	r7, r5
 80102fa:	9d04      	ldr	r5, [sp, #16]
 80102fc:	f105 0b01 	add.w	fp, r5, #1
 8010300:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 8010304:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010306:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801030a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801030e:	4429      	add	r1, r5
 8010310:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010312:	ea47 070b 	orr.w	r7, r7, fp
 8010316:	f82a 7b02 	strh.w	r7, [sl], #2
 801031a:	442a      	add	r2, r5
 801031c:	e7ae      	b.n	801027c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 801031e:	140e      	asrs	r6, r1, #16
 8010320:	d44b      	bmi.n	80103ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8010322:	4576      	cmp	r6, lr
 8010324:	da49      	bge.n	80103ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8010326:	1415      	asrs	r5, r2, #16
 8010328:	d447      	bmi.n	80103ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 801032a:	9f02      	ldr	r7, [sp, #8]
 801032c:	42bd      	cmp	r5, r7
 801032e:	da44      	bge.n	80103ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8010330:	9f03      	ldr	r7, [sp, #12]
 8010332:	fb0e 7505 	mla	r5, lr, r5, r7
 8010336:	f815 8006 	ldrb.w	r8, [r5, r6]
 801033a:	9d00      	ldr	r5, [sp, #0]
 801033c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8010340:	eb05 0b08 	add.w	fp, r5, r8
 8010344:	f8b9 5000 	ldrh.w	r5, [r9]
 8010348:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801034c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8010350:	122f      	asrs	r7, r5, #8
 8010352:	fb16 f60c 	smulbb	r6, r6, ip
 8010356:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801035a:	fb07 6700 	mla	r7, r7, r0, r6
 801035e:	10ee      	asrs	r6, r5, #3
 8010360:	fb1b fb0c 	smulbb	fp, fp, ip
 8010364:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010368:	fb06 b600 	mla	r6, r6, r0, fp
 801036c:	b2b6      	uxth	r6, r6
 801036e:	9604      	str	r6, [sp, #16]
 8010370:	9e00      	ldr	r6, [sp, #0]
 8010372:	00ed      	lsls	r5, r5, #3
 8010374:	f816 8008 	ldrb.w	r8, [r6, r8]
 8010378:	b2ed      	uxtb	r5, r5
 801037a:	fb15 f500 	smulbb	r5, r5, r0
 801037e:	b2bf      	uxth	r7, r7
 8010380:	fb08 580c 	mla	r8, r8, ip, r5
 8010384:	fa1f f888 	uxth.w	r8, r8
 8010388:	1c7d      	adds	r5, r7, #1
 801038a:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 801038e:	f108 0501 	add.w	r5, r8, #1
 8010392:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 8010396:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801039a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801039e:	432f      	orrs	r7, r5
 80103a0:	9d04      	ldr	r5, [sp, #16]
 80103a2:	f105 0b01 	add.w	fp, r5, #1
 80103a6:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 80103aa:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80103ae:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80103b2:	ea47 070b 	orr.w	r7, r7, fp
 80103b6:	f8a9 7000 	strh.w	r7, [r9]
 80103ba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80103bc:	4429      	add	r1, r5
 80103be:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80103c0:	f109 0902 	add.w	r9, r9, #2
 80103c4:	442a      	add	r2, r5
 80103c6:	f10a 3aff 	add.w	sl, sl, #4294967295
 80103ca:	e705      	b.n	80101d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 80103cc:	b007      	add	sp, #28
 80103ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080103d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80103d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80103d8:	b085      	sub	sp, #20
 80103da:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80103de:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80103e0:	9203      	str	r2, [sp, #12]
 80103e2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80103e6:	6870      	ldr	r0, [r6, #4]
 80103e8:	9d18      	ldr	r5, [sp, #96]	; 0x60
 80103ea:	f9bd 7058 	ldrsh.w	r7, [sp, #88]	; 0x58
 80103ee:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 80103f2:	9101      	str	r1, [sp, #4]
 80103f4:	fb00 2404 	mla	r4, r0, r4, r2
 80103f8:	6832      	ldr	r2, [r6, #0]
 80103fa:	686e      	ldr	r6, [r5, #4]
 80103fc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010400:	682a      	ldr	r2, [r5, #0]
 8010402:	9202      	str	r2, [sp, #8]
 8010404:	3604      	adds	r6, #4
 8010406:	9a01      	ldr	r2, [sp, #4]
 8010408:	2a00      	cmp	r2, #0
 801040a:	dc03      	bgt.n	8010414 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 801040c:	9a03      	ldr	r2, [sp, #12]
 801040e:	2a00      	cmp	r2, #0
 8010410:	f340 80c7 	ble.w	80105a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 8010414:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010416:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801041a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801041c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010420:	2b00      	cmp	r3, #0
 8010422:	dd0e      	ble.n	8010442 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8010424:	1405      	asrs	r5, r0, #16
 8010426:	d405      	bmi.n	8010434 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8010428:	42bd      	cmp	r5, r7
 801042a:	da03      	bge.n	8010434 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 801042c:	1415      	asrs	r5, r2, #16
 801042e:	d401      	bmi.n	8010434 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8010430:	4545      	cmp	r5, r8
 8010432:	db07      	blt.n	8010444 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8010434:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8010436:	4428      	add	r0, r5
 8010438:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801043a:	3b01      	subs	r3, #1
 801043c:	442a      	add	r2, r5
 801043e:	3402      	adds	r4, #2
 8010440:	e7ee      	b.n	8010420 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 8010442:	d010      	beq.n	8010466 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8010444:	9911      	ldr	r1, [sp, #68]	; 0x44
 8010446:	1e5d      	subs	r5, r3, #1
 8010448:	fb01 0c05 	mla	ip, r1, r5, r0
 801044c:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 8010450:	d545      	bpl.n	80104de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 8010452:	469e      	mov	lr, r3
 8010454:	eb04 0b43 	add.w	fp, r4, r3, lsl #1
 8010458:	f1be 0f00 	cmp.w	lr, #0
 801045c:	dc72      	bgt.n	8010544 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 801045e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010462:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010466:	9b01      	ldr	r3, [sp, #4]
 8010468:	2b00      	cmp	r3, #0
 801046a:	f340 809a 	ble.w	80105a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 801046e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010472:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010476:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801047a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801047c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010480:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010484:	eeb0 6a62 	vmov.f32	s12, s5
 8010488:	ee61 7a27 	vmul.f32	s15, s2, s15
 801048c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010490:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010494:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8010498:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801049c:	eeb0 6a43 	vmov.f32	s12, s6
 80104a0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80104a4:	ee12 2a90 	vmov	r2, s5
 80104a8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80104ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80104b0:	ee13 2a10 	vmov	r2, s6
 80104b4:	9311      	str	r3, [sp, #68]	; 0x44
 80104b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80104b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80104bc:	9312      	str	r3, [sp, #72]	; 0x48
 80104be:	9b01      	ldr	r3, [sp, #4]
 80104c0:	9a03      	ldr	r2, [sp, #12]
 80104c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80104c6:	3b01      	subs	r3, #1
 80104c8:	9301      	str	r3, [sp, #4]
 80104ca:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80104ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80104d0:	eeb0 3a67 	vmov.f32	s6, s15
 80104d4:	bf08      	it	eq
 80104d6:	4613      	moveq	r3, r2
 80104d8:	eef0 2a47 	vmov.f32	s5, s14
 80104dc:	e793      	b.n	8010406 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32>
 80104de:	45bc      	cmp	ip, r7
 80104e0:	dab7      	bge.n	8010452 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 80104e2:	9912      	ldr	r1, [sp, #72]	; 0x48
 80104e4:	fb01 2505 	mla	r5, r1, r5, r2
 80104e8:	142d      	asrs	r5, r5, #16
 80104ea:	d4b2      	bmi.n	8010452 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 80104ec:	4545      	cmp	r5, r8
 80104ee:	dab0      	bge.n	8010452 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 80104f0:	469e      	mov	lr, r3
 80104f2:	46a2      	mov	sl, r4
 80104f4:	f1be 0f00 	cmp.w	lr, #0
 80104f8:	ddb1      	ble.n	801045e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 80104fa:	9902      	ldr	r1, [sp, #8]
 80104fc:	1415      	asrs	r5, r2, #16
 80104fe:	fb07 1505 	mla	r5, r7, r5, r1
 8010502:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8010506:	4928      	ldr	r1, [pc, #160]	; (80105a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>)
 8010508:	f815 c00c 	ldrb.w	ip, [r5, ip]
 801050c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8010510:	eb06 0b0c 	add.w	fp, r6, ip
 8010514:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010518:	f89b 5001 	ldrb.w	r5, [fp, #1]
 801051c:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8010520:	00ed      	lsls	r5, r5, #3
 8010522:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8010526:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801052a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801052c:	ea49 0505 	orr.w	r5, r9, r5
 8010530:	f816 900c 	ldrb.w	r9, [r6, ip]
 8010534:	4408      	add	r0, r1
 8010536:	9912      	ldr	r1, [sp, #72]	; 0x48
 8010538:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 801053c:	f82a 5b02 	strh.w	r5, [sl], #2
 8010540:	440a      	add	r2, r1
 8010542:	e7d7      	b.n	80104f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x120>
 8010544:	ea5f 4c20 	movs.w	ip, r0, asr #16
 8010548:	d424      	bmi.n	8010594 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801054a:	45bc      	cmp	ip, r7
 801054c:	da22      	bge.n	8010594 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801054e:	1415      	asrs	r5, r2, #16
 8010550:	d420      	bmi.n	8010594 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8010552:	4545      	cmp	r5, r8
 8010554:	da1e      	bge.n	8010594 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8010556:	9902      	ldr	r1, [sp, #8]
 8010558:	fb07 1505 	mla	r5, r7, r5, r1
 801055c:	f06f 0101 	mvn.w	r1, #1
 8010560:	f815 c00c 	ldrb.w	ip, [r5, ip]
 8010564:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8010568:	eb06 050c 	add.w	r5, r6, ip
 801056c:	fb01 f90e 	mul.w	r9, r1, lr
 8010570:	f895 a002 	ldrb.w	sl, [r5, #2]
 8010574:	786d      	ldrb	r5, [r5, #1]
 8010576:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801057a:	00ed      	lsls	r5, r5, #3
 801057c:	ea01 2a0a 	and.w	sl, r1, sl, lsl #8
 8010580:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010584:	ea4a 0505 	orr.w	r5, sl, r5
 8010588:	f816 a00c 	ldrb.w	sl, [r6, ip]
 801058c:	ea45 05da 	orr.w	r5, r5, sl, lsr #3
 8010590:	f82b 5009 	strh.w	r5, [fp, r9]
 8010594:	9911      	ldr	r1, [sp, #68]	; 0x44
 8010596:	4408      	add	r0, r1
 8010598:	9912      	ldr	r1, [sp, #72]	; 0x48
 801059a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801059e:	440a      	add	r2, r1
 80105a0:	e75a      	b.n	8010458 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 80105a2:	b005      	add	sp, #20
 80105a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80105a8:	fffff800 	.word	0xfffff800

080105ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80105ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105b0:	b087      	sub	sp, #28
 80105b2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80105b6:	9204      	str	r2, [sp, #16]
 80105b8:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80105bc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80105be:	9201      	str	r2, [sp, #4]
 80105c0:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 80105c4:	9205      	str	r2, [sp, #20]
 80105c6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80105ca:	9100      	str	r1, [sp, #0]
 80105cc:	6869      	ldr	r1, [r5, #4]
 80105ce:	981a      	ldr	r0, [sp, #104]	; 0x68
 80105d0:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 80105d4:	fb01 2404 	mla	r4, r1, r4, r2
 80105d8:	682a      	ldr	r2, [r5, #0]
 80105da:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80105de:	6802      	ldr	r2, [r0, #0]
 80105e0:	9202      	str	r2, [sp, #8]
 80105e2:	6842      	ldr	r2, [r0, #4]
 80105e4:	3204      	adds	r2, #4
 80105e6:	9203      	str	r2, [sp, #12]
 80105e8:	9a00      	ldr	r2, [sp, #0]
 80105ea:	2a00      	cmp	r2, #0
 80105ec:	dc03      	bgt.n	80105f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 80105ee:	9a04      	ldr	r2, [sp, #16]
 80105f0:	2a00      	cmp	r2, #0
 80105f2:	f340 812c 	ble.w	801084e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 80105f6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80105f8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80105fc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80105fe:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010602:	2b00      	cmp	r3, #0
 8010604:	dd0f      	ble.n	8010626 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 8010606:	1402      	asrs	r2, r0, #16
 8010608:	d406      	bmi.n	8010618 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 801060a:	4572      	cmp	r2, lr
 801060c:	da04      	bge.n	8010618 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 801060e:	140a      	asrs	r2, r1, #16
 8010610:	d402      	bmi.n	8010618 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8010612:	9d01      	ldr	r5, [sp, #4]
 8010614:	42aa      	cmp	r2, r5
 8010616:	db07      	blt.n	8010628 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 8010618:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801061a:	4410      	add	r0, r2
 801061c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801061e:	3b01      	subs	r3, #1
 8010620:	4411      	add	r1, r2
 8010622:	3402      	adds	r4, #2
 8010624:	e7ed      	b.n	8010602 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56>
 8010626:	d00f      	beq.n	8010648 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8010628:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801062a:	1e5a      	subs	r2, r3, #1
 801062c:	fb05 0502 	mla	r5, r5, r2, r0
 8010630:	142d      	asrs	r5, r5, #16
 8010632:	d545      	bpl.n	80106c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 8010634:	4699      	mov	r9, r3
 8010636:	46a0      	mov	r8, r4
 8010638:	f1b9 0f00 	cmp.w	r9, #0
 801063c:	f300 80a7 	bgt.w	801078e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8010640:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010644:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010648:	9b00      	ldr	r3, [sp, #0]
 801064a:	2b00      	cmp	r3, #0
 801064c:	f340 80ff 	ble.w	801084e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 8010650:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010654:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010658:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801065c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801065e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010662:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010666:	eeb0 6a62 	vmov.f32	s12, s5
 801066a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801066e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010672:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010676:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801067a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801067e:	eeb0 6a43 	vmov.f32	s12, s6
 8010682:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010686:	ee12 2a90 	vmov	r2, s5
 801068a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801068e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010692:	ee13 2a10 	vmov	r2, s6
 8010696:	9313      	str	r3, [sp, #76]	; 0x4c
 8010698:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801069a:	fb92 f3f3 	sdiv	r3, r2, r3
 801069e:	9314      	str	r3, [sp, #80]	; 0x50
 80106a0:	9b00      	ldr	r3, [sp, #0]
 80106a2:	9a04      	ldr	r2, [sp, #16]
 80106a4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80106a8:	3b01      	subs	r3, #1
 80106aa:	9300      	str	r3, [sp, #0]
 80106ac:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80106b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80106b2:	eeb0 3a67 	vmov.f32	s6, s15
 80106b6:	bf08      	it	eq
 80106b8:	4613      	moveq	r3, r2
 80106ba:	eef0 2a47 	vmov.f32	s5, s14
 80106be:	e793      	b.n	80105e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3c>
 80106c0:	4575      	cmp	r5, lr
 80106c2:	dab7      	bge.n	8010634 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 80106c4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80106c6:	fb05 1202 	mla	r2, r5, r2, r1
 80106ca:	1412      	asrs	r2, r2, #16
 80106cc:	d4b2      	bmi.n	8010634 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 80106ce:	9d01      	ldr	r5, [sp, #4]
 80106d0:	42aa      	cmp	r2, r5
 80106d2:	daaf      	bge.n	8010634 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 80106d4:	f04f 0800 	mov.w	r8, #0
 80106d8:	eba3 0208 	sub.w	r2, r3, r8
 80106dc:	2a00      	cmp	r2, #0
 80106de:	ddaf      	ble.n	8010640 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 80106e0:	9e02      	ldr	r6, [sp, #8]
 80106e2:	140a      	asrs	r2, r1, #16
 80106e4:	1405      	asrs	r5, r0, #16
 80106e6:	fb0e 6202 	mla	r2, lr, r2, r6
 80106ea:	5d52      	ldrb	r2, [r2, r5]
 80106ec:	9d03      	ldr	r5, [sp, #12]
 80106ee:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80106f2:	0e2e      	lsrs	r6, r5, #24
 80106f4:	d044      	beq.n	8010780 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 80106f6:	9a05      	ldr	r2, [sp, #20]
 80106f8:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80106fc:	4356      	muls	r6, r2
 80106fe:	1c72      	adds	r2, r6, #1
 8010700:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010704:	1212      	asrs	r2, r2, #8
 8010706:	fa1f f982 	uxth.w	r9, r2
 801070a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801070e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010712:	43d2      	mvns	r2, r2
 8010714:	b2d2      	uxtb	r2, r2
 8010716:	fb16 f609 	smulbb	r6, r6, r9
 801071a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801071e:	fb07 6702 	mla	r7, r7, r2, r6
 8010722:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010726:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801072a:	b2ed      	uxtb	r5, r5
 801072c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010730:	fa5f fc8c 	uxtb.w	ip, ip
 8010734:	fb15 f509 	smulbb	r5, r5, r9
 8010738:	fb0c 5502 	mla	r5, ip, r2, r5
 801073c:	b2bf      	uxth	r7, r7
 801073e:	fb1a fa09 	smulbb	sl, sl, r9
 8010742:	b2ad      	uxth	r5, r5
 8010744:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010748:	fb06 a602 	mla	r6, r6, r2, sl
 801074c:	1c7a      	adds	r2, r7, #1
 801074e:	f105 0a01 	add.w	sl, r5, #1
 8010752:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010756:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801075a:	b2b6      	uxth	r6, r6
 801075c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010760:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010764:	ea47 070a 	orr.w	r7, r7, sl
 8010768:	f106 0a01 	add.w	sl, r6, #1
 801076c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010770:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010774:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010778:	ea47 070a 	orr.w	r7, r7, sl
 801077c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010780:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010782:	4410      	add	r0, r2
 8010784:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010786:	f108 0801 	add.w	r8, r8, #1
 801078a:	4411      	add	r1, r2
 801078c:	e7a4      	b.n	80106d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 801078e:	1405      	asrs	r5, r0, #16
 8010790:	d454      	bmi.n	801083c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8010792:	4575      	cmp	r5, lr
 8010794:	da52      	bge.n	801083c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8010796:	140a      	asrs	r2, r1, #16
 8010798:	d450      	bmi.n	801083c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 801079a:	9e01      	ldr	r6, [sp, #4]
 801079c:	42b2      	cmp	r2, r6
 801079e:	da4d      	bge.n	801083c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 80107a0:	9e02      	ldr	r6, [sp, #8]
 80107a2:	fb0e 6202 	mla	r2, lr, r2, r6
 80107a6:	5d52      	ldrb	r2, [r2, r5]
 80107a8:	9d03      	ldr	r5, [sp, #12]
 80107aa:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80107ae:	0e2e      	lsrs	r6, r5, #24
 80107b0:	d044      	beq.n	801083c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 80107b2:	9a05      	ldr	r2, [sp, #20]
 80107b4:	f8b8 c000 	ldrh.w	ip, [r8]
 80107b8:	4356      	muls	r6, r2
 80107ba:	1c72      	adds	r2, r6, #1
 80107bc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80107c0:	1212      	asrs	r2, r2, #8
 80107c2:	fa1f fa82 	uxth.w	sl, r2
 80107c6:	ea4f 272c 	mov.w	r7, ip, asr #8
 80107ca:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80107ce:	43d2      	mvns	r2, r2
 80107d0:	b2d2      	uxtb	r2, r2
 80107d2:	fb16 f60a 	smulbb	r6, r6, sl
 80107d6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80107da:	fb07 6702 	mla	r7, r7, r2, r6
 80107de:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 80107e2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80107e6:	b2ed      	uxtb	r5, r5
 80107e8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80107ec:	fa5f fc8c 	uxtb.w	ip, ip
 80107f0:	fb15 f50a 	smulbb	r5, r5, sl
 80107f4:	fb0c 5502 	mla	r5, ip, r2, r5
 80107f8:	b2bf      	uxth	r7, r7
 80107fa:	fb1b fb0a 	smulbb	fp, fp, sl
 80107fe:	b2ad      	uxth	r5, r5
 8010800:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010804:	fb06 b602 	mla	r6, r6, r2, fp
 8010808:	1c7a      	adds	r2, r7, #1
 801080a:	f105 0b01 	add.w	fp, r5, #1
 801080e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010812:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 8010816:	b2b6      	uxth	r6, r6
 8010818:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801081c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010820:	ea47 070b 	orr.w	r7, r7, fp
 8010824:	f106 0b01 	add.w	fp, r6, #1
 8010828:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801082c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8010830:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8010834:	ea47 070b 	orr.w	r7, r7, fp
 8010838:	f8a8 7000 	strh.w	r7, [r8]
 801083c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801083e:	4410      	add	r0, r2
 8010840:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010842:	f108 0802 	add.w	r8, r8, #2
 8010846:	4411      	add	r1, r2
 8010848:	f109 39ff 	add.w	r9, r9, #4294967295
 801084c:	e6f4      	b.n	8010638 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 801084e:	b007      	add	sp, #28
 8010850:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010854 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010858:	b087      	sub	sp, #28
 801085a:	468b      	mov	fp, r1
 801085c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801085e:	9205      	str	r2, [sp, #20]
 8010860:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010864:	9201      	str	r2, [sp, #4]
 8010866:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801086a:	6869      	ldr	r1, [r5, #4]
 801086c:	981a      	ldr	r0, [sp, #104]	; 0x68
 801086e:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 8010872:	fb01 2404 	mla	r4, r1, r4, r2
 8010876:	682a      	ldr	r2, [r5, #0]
 8010878:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801087c:	6802      	ldr	r2, [r0, #0]
 801087e:	9203      	str	r2, [sp, #12]
 8010880:	6842      	ldr	r2, [r0, #4]
 8010882:	3204      	adds	r2, #4
 8010884:	9204      	str	r2, [sp, #16]
 8010886:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801088a:	f1bb 0f00 	cmp.w	fp, #0
 801088e:	dc03      	bgt.n	8010898 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 8010890:	9a05      	ldr	r2, [sp, #20]
 8010892:	2a00      	cmp	r2, #0
 8010894:	f340 814a 	ble.w	8010b2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 8010898:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801089a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801089e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80108a0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80108a4:	2b00      	cmp	r3, #0
 80108a6:	dd0f      	ble.n	80108c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80108a8:	1408      	asrs	r0, r1, #16
 80108aa:	d406      	bmi.n	80108ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 80108ac:	4540      	cmp	r0, r8
 80108ae:	da04      	bge.n	80108ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 80108b0:	1410      	asrs	r0, r2, #16
 80108b2:	d402      	bmi.n	80108ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 80108b4:	9d01      	ldr	r5, [sp, #4]
 80108b6:	42a8      	cmp	r0, r5
 80108b8:	db07      	blt.n	80108ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 80108ba:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80108bc:	4401      	add	r1, r0
 80108be:	9814      	ldr	r0, [sp, #80]	; 0x50
 80108c0:	3b01      	subs	r3, #1
 80108c2:	4402      	add	r2, r0
 80108c4:	3402      	adds	r4, #2
 80108c6:	e7ed      	b.n	80108a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 80108c8:	d018      	beq.n	80108fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa8>
 80108ca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80108cc:	1e58      	subs	r0, r3, #1
 80108ce:	fb05 1500 	mla	r5, r5, r0, r1
 80108d2:	142d      	asrs	r5, r5, #16
 80108d4:	d40a      	bmi.n	80108ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 80108d6:	4545      	cmp	r5, r8
 80108d8:	da08      	bge.n	80108ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 80108da:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80108dc:	fb05 2000 	mla	r0, r5, r0, r2
 80108e0:	1400      	asrs	r0, r0, #16
 80108e2:	d403      	bmi.n	80108ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 80108e4:	9d01      	ldr	r5, [sp, #4]
 80108e6:	42a8      	cmp	r0, r5
 80108e8:	f2c0 80b7 	blt.w	8010a5a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x206>
 80108ec:	2600      	movs	r6, #0
 80108ee:	1998      	adds	r0, r3, r6
 80108f0:	2800      	cmp	r0, #0
 80108f2:	dc3e      	bgt.n	8010972 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11e>
 80108f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80108f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80108fc:	f1bb 0f00 	cmp.w	fp, #0
 8010900:	f340 8114 	ble.w	8010b2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 8010904:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010908:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801090c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010910:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010912:	f1bb 0b01 	subs.w	fp, fp, #1
 8010916:	ee31 1a05 	vadd.f32	s2, s2, s10
 801091a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801091e:	eeb0 6a62 	vmov.f32	s12, s5
 8010922:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010926:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801092a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801092e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010932:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010936:	eeb0 6a43 	vmov.f32	s12, s6
 801093a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801093e:	ee12 2a90 	vmov	r2, s5
 8010942:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010946:	fb92 f3f3 	sdiv	r3, r2, r3
 801094a:	ee13 2a10 	vmov	r2, s6
 801094e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010952:	9313      	str	r3, [sp, #76]	; 0x4c
 8010954:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010956:	fb92 f3f3 	sdiv	r3, r2, r3
 801095a:	9a05      	ldr	r2, [sp, #20]
 801095c:	9314      	str	r3, [sp, #80]	; 0x50
 801095e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010962:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010964:	eeb0 3a67 	vmov.f32	s6, s15
 8010968:	bf08      	it	eq
 801096a:	4613      	moveq	r3, r2
 801096c:	eef0 2a47 	vmov.f32	s5, s14
 8010970:	e78b      	b.n	801088a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 8010972:	140d      	asrs	r5, r1, #16
 8010974:	d459      	bmi.n	8010a2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010976:	4545      	cmp	r5, r8
 8010978:	da57      	bge.n	8010a2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801097a:	1410      	asrs	r0, r2, #16
 801097c:	d455      	bmi.n	8010a2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801097e:	9f01      	ldr	r7, [sp, #4]
 8010980:	42b8      	cmp	r0, r7
 8010982:	da52      	bge.n	8010a2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010984:	9f03      	ldr	r7, [sp, #12]
 8010986:	fb08 7000 	mla	r0, r8, r0, r7
 801098a:	5d40      	ldrb	r0, [r0, r5]
 801098c:	9d04      	ldr	r5, [sp, #16]
 801098e:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8010992:	0e07      	lsrs	r7, r0, #24
 8010994:	2fff      	cmp	r7, #255	; 0xff
 8010996:	d04e      	beq.n	8010a36 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8010998:	b2fd      	uxtb	r5, r7
 801099a:	2f00      	cmp	r7, #0
 801099c:	d045      	beq.n	8010a2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801099e:	f06f 0701 	mvn.w	r7, #1
 80109a2:	4377      	muls	r7, r6
 80109a4:	fa1f f985 	uxth.w	r9, r5
 80109a8:	f834 e007 	ldrh.w	lr, [r4, r7]
 80109ac:	9702      	str	r7, [sp, #8]
 80109ae:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80109b2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80109b6:	43ed      	mvns	r5, r5
 80109b8:	b2ed      	uxtb	r5, r5
 80109ba:	fb17 f709 	smulbb	r7, r7, r9
 80109be:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80109c2:	fb0c 7c05 	mla	ip, ip, r5, r7
 80109c6:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80109ca:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80109ce:	b2c0      	uxtb	r0, r0
 80109d0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80109d4:	fa5f fe8e 	uxtb.w	lr, lr
 80109d8:	fb10 f009 	smulbb	r0, r0, r9
 80109dc:	fb0e 0005 	mla	r0, lr, r5, r0
 80109e0:	b280      	uxth	r0, r0
 80109e2:	fa1f fc8c 	uxth.w	ip, ip
 80109e6:	fb1a fa09 	smulbb	sl, sl, r9
 80109ea:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80109ee:	fb07 a705 	mla	r7, r7, r5, sl
 80109f2:	f100 0a01 	add.w	sl, r0, #1
 80109f6:	f10c 0501 	add.w	r5, ip, #1
 80109fa:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80109fe:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8010a02:	b2bf      	uxth	r7, r7
 8010a04:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010a08:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010a0c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010a10:	f107 0a01 	add.w	sl, r7, #1
 8010a14:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010a18:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010a1c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010a20:	9802      	ldr	r0, [sp, #8]
 8010a22:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010a26:	f824 c000 	strh.w	ip, [r4, r0]
 8010a2a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010a2c:	4401      	add	r1, r0
 8010a2e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010a30:	3e01      	subs	r6, #1
 8010a32:	4402      	add	r2, r0
 8010a34:	e75b      	b.n	80108ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8010a36:	f06f 0501 	mvn.w	r5, #1
 8010a3a:	fb05 f706 	mul.w	r7, r5, r6
 8010a3e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8010a42:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8010a46:	0945      	lsrs	r5, r0, #5
 8010a48:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010a4c:	ea4c 0505 	orr.w	r5, ip, r5
 8010a50:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010a54:	4305      	orrs	r5, r0
 8010a56:	53e5      	strh	r5, [r4, r7]
 8010a58:	e7e7      	b.n	8010a2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010a5a:	f04f 0e00 	mov.w	lr, #0
 8010a5e:	eba3 000e 	sub.w	r0, r3, lr
 8010a62:	2800      	cmp	r0, #0
 8010a64:	f77f af46 	ble.w	80108f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 8010a68:	9e03      	ldr	r6, [sp, #12]
 8010a6a:	1410      	asrs	r0, r2, #16
 8010a6c:	140d      	asrs	r5, r1, #16
 8010a6e:	fb08 6000 	mla	r0, r8, r0, r6
 8010a72:	5d40      	ldrb	r0, [r0, r5]
 8010a74:	9d04      	ldr	r5, [sp, #16]
 8010a76:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8010a7a:	0e06      	lsrs	r6, r0, #24
 8010a7c:	2eff      	cmp	r6, #255	; 0xff
 8010a7e:	d048      	beq.n	8010b12 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8010a80:	b2f5      	uxtb	r5, r6
 8010a82:	2e00      	cmp	r6, #0
 8010a84:	d03e      	beq.n	8010b04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8010a86:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8010a8a:	fa1f f985 	uxth.w	r9, r5
 8010a8e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010a92:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8010a96:	43ed      	mvns	r5, r5
 8010a98:	b2ed      	uxtb	r5, r5
 8010a9a:	fb16 f609 	smulbb	r6, r6, r9
 8010a9e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010aa2:	fb07 6705 	mla	r7, r7, r5, r6
 8010aa6:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8010aaa:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010aae:	b2c0      	uxtb	r0, r0
 8010ab0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010ab4:	fa5f fc8c 	uxtb.w	ip, ip
 8010ab8:	fb10 f009 	smulbb	r0, r0, r9
 8010abc:	fb0c 0005 	mla	r0, ip, r5, r0
 8010ac0:	b2bf      	uxth	r7, r7
 8010ac2:	fb1a fa09 	smulbb	sl, sl, r9
 8010ac6:	b280      	uxth	r0, r0
 8010ac8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010acc:	fb06 a605 	mla	r6, r6, r5, sl
 8010ad0:	1c7d      	adds	r5, r7, #1
 8010ad2:	f100 0a01 	add.w	sl, r0, #1
 8010ad6:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8010ada:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8010ade:	b2b6      	uxth	r6, r6
 8010ae0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010ae4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010ae8:	ea47 070a 	orr.w	r7, r7, sl
 8010aec:	f106 0a01 	add.w	sl, r6, #1
 8010af0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010af4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010af8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010afc:	ea47 070a 	orr.w	r7, r7, sl
 8010b00:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8010b04:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010b06:	4401      	add	r1, r0
 8010b08:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010b0a:	f10e 0e01 	add.w	lr, lr, #1
 8010b0e:	4402      	add	r2, r0
 8010b10:	e7a5      	b.n	8010a5e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20a>
 8010b12:	4d08      	ldr	r5, [pc, #32]	; (8010b34 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e0>)
 8010b14:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 8010b18:	0945      	lsrs	r5, r0, #5
 8010b1a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010b1e:	4335      	orrs	r5, r6
 8010b20:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010b24:	4305      	orrs	r5, r0
 8010b26:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 8010b2a:	e7eb      	b.n	8010b04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8010b2c:	b007      	add	sp, #28
 8010b2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b32:	bf00      	nop
 8010b34:	fffff800 	.word	0xfffff800

08010b38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010b38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b3c:	b087      	sub	sp, #28
 8010b3e:	468b      	mov	fp, r1
 8010b40:	9204      	str	r2, [sp, #16]
 8010b42:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010b46:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8010b48:	9201      	str	r2, [sp, #4]
 8010b4a:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 8010b4e:	9205      	str	r2, [sp, #20]
 8010b50:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010b54:	6869      	ldr	r1, [r5, #4]
 8010b56:	981a      	ldr	r0, [sp, #104]	; 0x68
 8010b58:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 8010b5c:	fb01 2404 	mla	r4, r1, r4, r2
 8010b60:	682a      	ldr	r2, [r5, #0]
 8010b62:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010b66:	6802      	ldr	r2, [r0, #0]
 8010b68:	9202      	str	r2, [sp, #8]
 8010b6a:	6842      	ldr	r2, [r0, #4]
 8010b6c:	9203      	str	r2, [sp, #12]
 8010b6e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010b72:	f1bb 0f00 	cmp.w	fp, #0
 8010b76:	dc03      	bgt.n	8010b80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 8010b78:	9a04      	ldr	r2, [sp, #16]
 8010b7a:	2a00      	cmp	r2, #0
 8010b7c:	f340 8136 	ble.w	8010dec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8010b80:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010b82:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010b86:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010b88:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010b8c:	2b00      	cmp	r3, #0
 8010b8e:	dd0f      	ble.n	8010bb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010b90:	1408      	asrs	r0, r1, #16
 8010b92:	d406      	bmi.n	8010ba2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010b94:	4540      	cmp	r0, r8
 8010b96:	da04      	bge.n	8010ba2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010b98:	1410      	asrs	r0, r2, #16
 8010b9a:	d402      	bmi.n	8010ba2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010b9c:	9d01      	ldr	r5, [sp, #4]
 8010b9e:	42a8      	cmp	r0, r5
 8010ba0:	db07      	blt.n	8010bb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 8010ba2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010ba4:	4401      	add	r1, r0
 8010ba6:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010ba8:	3b01      	subs	r3, #1
 8010baa:	4402      	add	r2, r0
 8010bac:	3402      	adds	r4, #2
 8010bae:	e7ed      	b.n	8010b8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 8010bb0:	d00f      	beq.n	8010bd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8010bb2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010bb4:	1e58      	subs	r0, r3, #1
 8010bb6:	fb05 1500 	mla	r5, r5, r0, r1
 8010bba:	142d      	asrs	r5, r5, #16
 8010bbc:	d544      	bpl.n	8010c48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8010bbe:	9300      	str	r3, [sp, #0]
 8010bc0:	46a2      	mov	sl, r4
 8010bc2:	9800      	ldr	r0, [sp, #0]
 8010bc4:	2800      	cmp	r0, #0
 8010bc6:	f300 80ab 	bgt.w	8010d20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8010bca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010bce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010bd2:	f1bb 0f00 	cmp.w	fp, #0
 8010bd6:	f340 8109 	ble.w	8010dec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8010bda:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010bde:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010be2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010be6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010be8:	f1bb 0b01 	subs.w	fp, fp, #1
 8010bec:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010bf0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010bf4:	eeb0 6a62 	vmov.f32	s12, s5
 8010bf8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010bfc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010c00:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010c04:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010c08:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010c0c:	eeb0 6a43 	vmov.f32	s12, s6
 8010c10:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010c14:	ee12 2a90 	vmov	r2, s5
 8010c18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010c1c:	fb92 f3f3 	sdiv	r3, r2, r3
 8010c20:	ee13 2a10 	vmov	r2, s6
 8010c24:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010c28:	9313      	str	r3, [sp, #76]	; 0x4c
 8010c2a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010c2c:	fb92 f3f3 	sdiv	r3, r2, r3
 8010c30:	9a04      	ldr	r2, [sp, #16]
 8010c32:	9314      	str	r3, [sp, #80]	; 0x50
 8010c34:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010c38:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010c3a:	eeb0 3a67 	vmov.f32	s6, s15
 8010c3e:	bf08      	it	eq
 8010c40:	4613      	moveq	r3, r2
 8010c42:	eef0 2a47 	vmov.f32	s5, s14
 8010c46:	e794      	b.n	8010b72 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 8010c48:	4545      	cmp	r5, r8
 8010c4a:	dab8      	bge.n	8010bbe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 8010c4c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010c4e:	fb05 2000 	mla	r0, r5, r0, r2
 8010c52:	1400      	asrs	r0, r0, #16
 8010c54:	d4b3      	bmi.n	8010bbe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 8010c56:	9d01      	ldr	r5, [sp, #4]
 8010c58:	42a8      	cmp	r0, r5
 8010c5a:	dab0      	bge.n	8010bbe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 8010c5c:	f04f 0900 	mov.w	r9, #0
 8010c60:	eba3 0009 	sub.w	r0, r3, r9
 8010c64:	2800      	cmp	r0, #0
 8010c66:	ddb0      	ble.n	8010bca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8010c68:	140d      	asrs	r5, r1, #16
 8010c6a:	1410      	asrs	r0, r2, #16
 8010c6c:	fb08 5000 	mla	r0, r8, r0, r5
 8010c70:	9d03      	ldr	r5, [sp, #12]
 8010c72:	5c2e      	ldrb	r6, [r5, r0]
 8010c74:	2e00      	cmp	r6, #0
 8010c76:	d04c      	beq.n	8010d12 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1da>
 8010c78:	9d02      	ldr	r5, [sp, #8]
 8010c7a:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 8010c7e:	9805      	ldr	r0, [sp, #20]
 8010c80:	f834 5019 	ldrh.w	r5, [r4, r9, lsl #1]
 8010c84:	4346      	muls	r6, r0
 8010c86:	1c70      	adds	r0, r6, #1
 8010c88:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 8010c8c:	1200      	asrs	r0, r0, #8
 8010c8e:	b287      	uxth	r7, r0
 8010c90:	122e      	asrs	r6, r5, #8
 8010c92:	43c0      	mvns	r0, r0
 8010c94:	b2c0      	uxtb	r0, r0
 8010c96:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010c9a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010c9e:	fb16 f600 	smulbb	r6, r6, r0
 8010ca2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010ca6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010caa:	00ed      	lsls	r5, r5, #3
 8010cac:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010cb0:	b2ed      	uxtb	r5, r5
 8010cb2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010cb6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010cba:	fb15 f500 	smulbb	r5, r5, r0
 8010cbe:	fa5f fe8e 	uxtb.w	lr, lr
 8010cc2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010cc6:	fb0e 5507 	mla	r5, lr, r7, r5
 8010cca:	fb1a fa00 	smulbb	sl, sl, r0
 8010cce:	fa1f fc8c 	uxth.w	ip, ip
 8010cd2:	b2ad      	uxth	r5, r5
 8010cd4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010cd8:	fb06 a607 	mla	r6, r6, r7, sl
 8010cdc:	f10c 0001 	add.w	r0, ip, #1
 8010ce0:	f105 0a01 	add.w	sl, r5, #1
 8010ce4:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8010ce8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010cec:	b2b6      	uxth	r6, r6
 8010cee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010cf2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010cf6:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010cfa:	f106 0a01 	add.w	sl, r6, #1
 8010cfe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010d02:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010d06:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010d0a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010d0e:	f824 c019 	strh.w	ip, [r4, r9, lsl #1]
 8010d12:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010d14:	4401      	add	r1, r0
 8010d16:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010d18:	f109 0901 	add.w	r9, r9, #1
 8010d1c:	4402      	add	r2, r0
 8010d1e:	e79f      	b.n	8010c60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x128>
 8010d20:	1408      	asrs	r0, r1, #16
 8010d22:	d459      	bmi.n	8010dd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8010d24:	4540      	cmp	r0, r8
 8010d26:	da57      	bge.n	8010dd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8010d28:	1415      	asrs	r5, r2, #16
 8010d2a:	d455      	bmi.n	8010dd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8010d2c:	9e01      	ldr	r6, [sp, #4]
 8010d2e:	42b5      	cmp	r5, r6
 8010d30:	da52      	bge.n	8010dd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8010d32:	fb08 0005 	mla	r0, r8, r5, r0
 8010d36:	9d03      	ldr	r5, [sp, #12]
 8010d38:	5c2e      	ldrb	r6, [r5, r0]
 8010d3a:	2e00      	cmp	r6, #0
 8010d3c:	d04c      	beq.n	8010dd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 8010d3e:	9d02      	ldr	r5, [sp, #8]
 8010d40:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 8010d44:	9805      	ldr	r0, [sp, #20]
 8010d46:	f8ba 5000 	ldrh.w	r5, [sl]
 8010d4a:	4346      	muls	r6, r0
 8010d4c:	1c70      	adds	r0, r6, #1
 8010d4e:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 8010d52:	1200      	asrs	r0, r0, #8
 8010d54:	b287      	uxth	r7, r0
 8010d56:	122e      	asrs	r6, r5, #8
 8010d58:	43c0      	mvns	r0, r0
 8010d5a:	b2c0      	uxtb	r0, r0
 8010d5c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010d60:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010d64:	fb16 f600 	smulbb	r6, r6, r0
 8010d68:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8010d6c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010d70:	00ed      	lsls	r5, r5, #3
 8010d72:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010d76:	b2ed      	uxtb	r5, r5
 8010d78:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010d7c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010d80:	fb15 f500 	smulbb	r5, r5, r0
 8010d84:	fa5f fe8e 	uxtb.w	lr, lr
 8010d88:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010d8c:	fb0e 5507 	mla	r5, lr, r7, r5
 8010d90:	fb19 f900 	smulbb	r9, r9, r0
 8010d94:	fa1f fc8c 	uxth.w	ip, ip
 8010d98:	b2ad      	uxth	r5, r5
 8010d9a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010d9e:	fb06 9607 	mla	r6, r6, r7, r9
 8010da2:	f10c 0001 	add.w	r0, ip, #1
 8010da6:	f105 0901 	add.w	r9, r5, #1
 8010daa:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8010dae:	eb09 2915 	add.w	r9, r9, r5, lsr #8
 8010db2:	b2b6      	uxth	r6, r6
 8010db4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8010db8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010dbc:	ea4c 0c09 	orr.w	ip, ip, r9
 8010dc0:	f106 0901 	add.w	r9, r6, #1
 8010dc4:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 8010dc8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8010dcc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8010dd0:	ea4c 0c09 	orr.w	ip, ip, r9
 8010dd4:	f8aa c000 	strh.w	ip, [sl]
 8010dd8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010dda:	4401      	add	r1, r0
 8010ddc:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010dde:	4402      	add	r2, r0
 8010de0:	9800      	ldr	r0, [sp, #0]
 8010de2:	3801      	subs	r0, #1
 8010de4:	f10a 0a02 	add.w	sl, sl, #2
 8010de8:	9000      	str	r0, [sp, #0]
 8010dea:	e6ea      	b.n	8010bc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 8010dec:	b007      	add	sp, #28
 8010dee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010df2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010df2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010df6:	b087      	sub	sp, #28
 8010df8:	468b      	mov	fp, r1
 8010dfa:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8010dfc:	9205      	str	r2, [sp, #20]
 8010dfe:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010e02:	9202      	str	r2, [sp, #8]
 8010e04:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8010e08:	6869      	ldr	r1, [r5, #4]
 8010e0a:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 8010e0c:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 8010e10:	fb01 2000 	mla	r0, r1, r0, r2
 8010e14:	682a      	ldr	r2, [r5, #0]
 8010e16:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8010e1a:	6822      	ldr	r2, [r4, #0]
 8010e1c:	9201      	str	r2, [sp, #4]
 8010e1e:	6862      	ldr	r2, [r4, #4]
 8010e20:	9204      	str	r2, [sp, #16]
 8010e22:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010e26:	f1bb 0f00 	cmp.w	fp, #0
 8010e2a:	dc03      	bgt.n	8010e34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 8010e2c:	9a05      	ldr	r2, [sp, #20]
 8010e2e:	2a00      	cmp	r2, #0
 8010e30:	f340 813d 	ble.w	80110ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8010e34:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010e36:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010e3a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010e3c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010e40:	2b00      	cmp	r3, #0
 8010e42:	dd0f      	ble.n	8010e64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8010e44:	140c      	asrs	r4, r1, #16
 8010e46:	d406      	bmi.n	8010e56 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8010e48:	454c      	cmp	r4, r9
 8010e4a:	da04      	bge.n	8010e56 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8010e4c:	1414      	asrs	r4, r2, #16
 8010e4e:	d402      	bmi.n	8010e56 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8010e50:	9d02      	ldr	r5, [sp, #8]
 8010e52:	42ac      	cmp	r4, r5
 8010e54:	db07      	blt.n	8010e66 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8010e56:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010e58:	4421      	add	r1, r4
 8010e5a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010e5c:	3b01      	subs	r3, #1
 8010e5e:	4422      	add	r2, r4
 8010e60:	3002      	adds	r0, #2
 8010e62:	e7ed      	b.n	8010e40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e>
 8010e64:	d018      	beq.n	8010e98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa6>
 8010e66:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010e68:	1e5c      	subs	r4, r3, #1
 8010e6a:	fb05 1504 	mla	r5, r5, r4, r1
 8010e6e:	142d      	asrs	r5, r5, #16
 8010e70:	d40a      	bmi.n	8010e88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8010e72:	454d      	cmp	r5, r9
 8010e74:	da08      	bge.n	8010e88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8010e76:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010e78:	fb05 2404 	mla	r4, r5, r4, r2
 8010e7c:	1424      	asrs	r4, r4, #16
 8010e7e:	d403      	bmi.n	8010e88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8010e80:	9d02      	ldr	r5, [sp, #8]
 8010e82:	42ac      	cmp	r4, r5
 8010e84:	f2c0 80ae 	blt.w	8010fe4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f2>
 8010e88:	2600      	movs	r6, #0
 8010e8a:	199c      	adds	r4, r3, r6
 8010e8c:	2c00      	cmp	r4, #0
 8010e8e:	dc3e      	bgt.n	8010f0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 8010e90:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010e94:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010e98:	f1bb 0f00 	cmp.w	fp, #0
 8010e9c:	f340 8107 	ble.w	80110ae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8010ea0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010ea4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010ea8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010eac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010eae:	f1bb 0b01 	subs.w	fp, fp, #1
 8010eb2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010eb6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010eba:	eeb0 6a62 	vmov.f32	s12, s5
 8010ebe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010ec2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010ec6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010eca:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010ece:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010ed2:	eeb0 6a43 	vmov.f32	s12, s6
 8010ed6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010eda:	ee12 2a90 	vmov	r2, s5
 8010ede:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010ee2:	fb92 f3f3 	sdiv	r3, r2, r3
 8010ee6:	ee13 2a10 	vmov	r2, s6
 8010eea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010eee:	9313      	str	r3, [sp, #76]	; 0x4c
 8010ef0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010ef2:	fb92 f3f3 	sdiv	r3, r2, r3
 8010ef6:	9a05      	ldr	r2, [sp, #20]
 8010ef8:	9314      	str	r3, [sp, #80]	; 0x50
 8010efa:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010efe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010f00:	eeb0 3a67 	vmov.f32	s6, s15
 8010f04:	bf08      	it	eq
 8010f06:	4613      	moveq	r3, r2
 8010f08:	eef0 2a47 	vmov.f32	s5, s14
 8010f0c:	e78b      	b.n	8010e26 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34>
 8010f0e:	140c      	asrs	r4, r1, #16
 8010f10:	d45a      	bmi.n	8010fc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010f12:	454c      	cmp	r4, r9
 8010f14:	da58      	bge.n	8010fc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010f16:	1415      	asrs	r5, r2, #16
 8010f18:	d456      	bmi.n	8010fc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010f1a:	9f02      	ldr	r7, [sp, #8]
 8010f1c:	42bd      	cmp	r5, r7
 8010f1e:	da53      	bge.n	8010fc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010f20:	fb09 4505 	mla	r5, r9, r5, r4
 8010f24:	9c04      	ldr	r4, [sp, #16]
 8010f26:	5d64      	ldrb	r4, [r4, r5]
 8010f28:	2cff      	cmp	r4, #255	; 0xff
 8010f2a:	d053      	beq.n	8010fd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8010f2c:	2c00      	cmp	r4, #0
 8010f2e:	d04b      	beq.n	8010fc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010f30:	9f01      	ldr	r7, [sp, #4]
 8010f32:	f837 8015 	ldrh.w	r8, [r7, r5, lsl #1]
 8010f36:	f06f 0501 	mvn.w	r5, #1
 8010f3a:	4375      	muls	r5, r6
 8010f3c:	9503      	str	r5, [sp, #12]
 8010f3e:	5b45      	ldrh	r5, [r0, r5]
 8010f40:	fa1f fc84 	uxth.w	ip, r4
 8010f44:	122f      	asrs	r7, r5, #8
 8010f46:	43e4      	mvns	r4, r4
 8010f48:	b2e4      	uxtb	r4, r4
 8010f4a:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8010f4e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010f52:	fb17 f704 	smulbb	r7, r7, r4
 8010f56:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010f5a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8010f5e:	00ed      	lsls	r5, r5, #3
 8010f60:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8010f64:	b2ed      	uxtb	r5, r5
 8010f66:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8010f6a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8010f6e:	fb15 f504 	smulbb	r5, r5, r4
 8010f72:	fa5f f888 	uxtb.w	r8, r8
 8010f76:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010f7a:	fb08 550c 	mla	r5, r8, ip, r5
 8010f7e:	fb1a fa04 	smulbb	sl, sl, r4
 8010f82:	fa1f fe8e 	uxth.w	lr, lr
 8010f86:	b2ad      	uxth	r5, r5
 8010f88:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010f8c:	fb07 a70c 	mla	r7, r7, ip, sl
 8010f90:	f10e 0401 	add.w	r4, lr, #1
 8010f94:	f105 0a01 	add.w	sl, r5, #1
 8010f98:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8010f9c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010fa0:	b2bf      	uxth	r7, r7
 8010fa2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010fa6:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8010faa:	ea4e 0e0a 	orr.w	lr, lr, sl
 8010fae:	f107 0a01 	add.w	sl, r7, #1
 8010fb2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010fb6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010fba:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010fbe:	9c03      	ldr	r4, [sp, #12]
 8010fc0:	ea4e 0e0a 	orr.w	lr, lr, sl
 8010fc4:	f820 e004 	strh.w	lr, [r0, r4]
 8010fc8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010fca:	4421      	add	r1, r4
 8010fcc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010fce:	3e01      	subs	r6, #1
 8010fd0:	4422      	add	r2, r4
 8010fd2:	e75a      	b.n	8010e8a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010fd4:	9c01      	ldr	r4, [sp, #4]
 8010fd6:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8010fda:	f06f 0401 	mvn.w	r4, #1
 8010fde:	4374      	muls	r4, r6
 8010fe0:	5305      	strh	r5, [r0, r4]
 8010fe2:	e7f1      	b.n	8010fc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010fe4:	f04f 0800 	mov.w	r8, #0
 8010fe8:	eba3 0408 	sub.w	r4, r3, r8
 8010fec:	2c00      	cmp	r4, #0
 8010fee:	f77f af4f 	ble.w	8010e90 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8010ff2:	140c      	asrs	r4, r1, #16
 8010ff4:	1415      	asrs	r5, r2, #16
 8010ff6:	fb09 4505 	mla	r5, r9, r5, r4
 8010ffa:	9c04      	ldr	r4, [sp, #16]
 8010ffc:	5d64      	ldrb	r4, [r4, r5]
 8010ffe:	2cff      	cmp	r4, #255	; 0xff
 8011000:	d04f      	beq.n	80110a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8011002:	2c00      	cmp	r4, #0
 8011004:	d046      	beq.n	8011094 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 8011006:	9e01      	ldr	r6, [sp, #4]
 8011008:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801100c:	f830 5018 	ldrh.w	r5, [r0, r8, lsl #1]
 8011010:	b2a7      	uxth	r7, r4
 8011012:	122e      	asrs	r6, r5, #8
 8011014:	43e4      	mvns	r4, r4
 8011016:	b2e4      	uxtb	r4, r4
 8011018:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801101c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8011020:	fb16 f604 	smulbb	r6, r6, r4
 8011024:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8011028:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801102c:	00ed      	lsls	r5, r5, #3
 801102e:	fb0c 6c07 	mla	ip, ip, r7, r6
 8011032:	b2ed      	uxtb	r5, r5
 8011034:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011038:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801103c:	fb15 f504 	smulbb	r5, r5, r4
 8011040:	fa5f fe8e 	uxtb.w	lr, lr
 8011044:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8011048:	fb0e 5507 	mla	r5, lr, r7, r5
 801104c:	fb1a fa04 	smulbb	sl, sl, r4
 8011050:	fa1f fc8c 	uxth.w	ip, ip
 8011054:	b2ad      	uxth	r5, r5
 8011056:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801105a:	fb06 a607 	mla	r6, r6, r7, sl
 801105e:	f10c 0401 	add.w	r4, ip, #1
 8011062:	f105 0a01 	add.w	sl, r5, #1
 8011066:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801106a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801106e:	b2b6      	uxth	r6, r6
 8011070:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011074:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011078:	ea4c 0c0a 	orr.w	ip, ip, sl
 801107c:	f106 0a01 	add.w	sl, r6, #1
 8011080:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011084:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011088:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801108c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011090:	f820 c018 	strh.w	ip, [r0, r8, lsl #1]
 8011094:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011096:	4421      	add	r1, r4
 8011098:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801109a:	f108 0801 	add.w	r8, r8, #1
 801109e:	4422      	add	r2, r4
 80110a0:	e7a2      	b.n	8010fe8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80110a2:	9c01      	ldr	r4, [sp, #4]
 80110a4:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80110a8:	f820 4018 	strh.w	r4, [r0, r8, lsl #1]
 80110ac:	e7f2      	b.n	8011094 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 80110ae:	b007      	add	sp, #28
 80110b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080110b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80110b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80110b8:	b085      	sub	sp, #20
 80110ba:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80110bc:	9203      	str	r2, [sp, #12]
 80110be:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 80110c2:	9201      	str	r2, [sp, #4]
 80110c4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80110c8:	9100      	str	r1, [sp, #0]
 80110ca:	6841      	ldr	r1, [r0, #4]
 80110cc:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 80110d0:	f9bd 8058 	ldrsh.w	r8, [sp, #88]	; 0x58
 80110d4:	fb01 2404 	mla	r4, r1, r4, r2
 80110d8:	6802      	ldr	r2, [r0, #0]
 80110da:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80110de:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80110e0:	fa1f fe85 	uxth.w	lr, r5
 80110e4:	6812      	ldr	r2, [r2, #0]
 80110e6:	9202      	str	r2, [sp, #8]
 80110e8:	43ed      	mvns	r5, r5
 80110ea:	b2ed      	uxtb	r5, r5
 80110ec:	9a00      	ldr	r2, [sp, #0]
 80110ee:	2a00      	cmp	r2, #0
 80110f0:	dc03      	bgt.n	80110fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 80110f2:	9a03      	ldr	r2, [sp, #12]
 80110f4:	2a00      	cmp	r2, #0
 80110f6:	f340 8117 	ble.w	8011328 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 80110fa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80110fc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011100:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011102:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011106:	2b00      	cmp	r3, #0
 8011108:	dd0f      	ble.n	801112a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 801110a:	1408      	asrs	r0, r1, #16
 801110c:	d406      	bmi.n	801111c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 801110e:	4540      	cmp	r0, r8
 8011110:	da04      	bge.n	801111c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8011112:	1410      	asrs	r0, r2, #16
 8011114:	d402      	bmi.n	801111c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8011116:	9e01      	ldr	r6, [sp, #4]
 8011118:	42b0      	cmp	r0, r6
 801111a:	db07      	blt.n	801112c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 801111c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801111e:	4401      	add	r1, r0
 8011120:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011122:	3b01      	subs	r3, #1
 8011124:	4402      	add	r2, r0
 8011126:	3402      	adds	r4, #2
 8011128:	e7ed      	b.n	8011106 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52>
 801112a:	d069      	beq.n	8011200 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x14c>
 801112c:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801112e:	1e58      	subs	r0, r3, #1
 8011130:	fb06 1600 	mla	r6, r6, r0, r1
 8011134:	1436      	asrs	r6, r6, #16
 8011136:	d459      	bmi.n	80111ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 8011138:	4546      	cmp	r6, r8
 801113a:	da57      	bge.n	80111ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 801113c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801113e:	fb06 2000 	mla	r0, r6, r0, r2
 8011142:	1400      	asrs	r0, r0, #16
 8011144:	d452      	bmi.n	80111ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 8011146:	9e01      	ldr	r6, [sp, #4]
 8011148:	42b0      	cmp	r0, r6
 801114a:	da4f      	bge.n	80111ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 801114c:	469a      	mov	sl, r3
 801114e:	46a3      	mov	fp, r4
 8011150:	f1ba 0f00 	cmp.w	sl, #0
 8011154:	dd50      	ble.n	80111f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x144>
 8011156:	140e      	asrs	r6, r1, #16
 8011158:	1410      	asrs	r0, r2, #16
 801115a:	fb08 6000 	mla	r0, r8, r0, r6
 801115e:	9e02      	ldr	r6, [sp, #8]
 8011160:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8011164:	f8bb 6000 	ldrh.w	r6, [fp]
 8011168:	1237      	asrs	r7, r6, #8
 801116a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801116e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011172:	fb17 f705 	smulbb	r7, r7, r5
 8011176:	ea4f 09e6 	mov.w	r9, r6, asr #3
 801117a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801117e:	00f6      	lsls	r6, r6, #3
 8011180:	fb0c 7c0e 	mla	ip, ip, lr, r7
 8011184:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011188:	10c7      	asrs	r7, r0, #3
 801118a:	b2f6      	uxtb	r6, r6
 801118c:	00c0      	lsls	r0, r0, #3
 801118e:	fb19 f905 	smulbb	r9, r9, r5
 8011192:	fb16 f605 	smulbb	r6, r6, r5
 8011196:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801119a:	b2c0      	uxtb	r0, r0
 801119c:	fa1f fc8c 	uxth.w	ip, ip
 80111a0:	fb07 970e 	mla	r7, r7, lr, r9
 80111a4:	fb00 600e 	mla	r0, r0, lr, r6
 80111a8:	b280      	uxth	r0, r0
 80111aa:	b2bf      	uxth	r7, r7
 80111ac:	f10c 0601 	add.w	r6, ip, #1
 80111b0:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 80111b4:	f107 0901 	add.w	r9, r7, #1
 80111b8:	1c46      	adds	r6, r0, #1
 80111ba:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 80111be:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80111c2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80111c4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80111c8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80111cc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80111d0:	ea4c 0c06 	orr.w	ip, ip, r6
 80111d4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80111d8:	4401      	add	r1, r0
 80111da:	9812      	ldr	r0, [sp, #72]	; 0x48
 80111dc:	ea4c 0c09 	orr.w	ip, ip, r9
 80111e0:	f82b cb02 	strh.w	ip, [fp], #2
 80111e4:	4402      	add	r2, r0
 80111e6:	f10a 3aff 	add.w	sl, sl, #4294967295
 80111ea:	e7b1      	b.n	8011150 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 80111ec:	f04f 0900 	mov.w	r9, #0
 80111f0:	eb03 0009 	add.w	r0, r3, r9
 80111f4:	2800      	cmp	r0, #0
 80111f6:	dc41      	bgt.n	801127c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c8>
 80111f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80111fc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011200:	9b00      	ldr	r3, [sp, #0]
 8011202:	2b00      	cmp	r3, #0
 8011204:	f340 8090 	ble.w	8011328 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8011208:	ee30 0a04 	vadd.f32	s0, s0, s8
 801120c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8011210:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8011214:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011216:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801121a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801121e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011222:	eef0 6a62 	vmov.f32	s13, s5
 8011226:	ee61 7a27 	vmul.f32	s15, s2, s15
 801122a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801122e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011232:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8011236:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801123a:	eef0 6a43 	vmov.f32	s13, s6
 801123e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011242:	ee12 2a90 	vmov	r2, s5
 8011246:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801124a:	fb92 f3f3 	sdiv	r3, r2, r3
 801124e:	ee13 2a10 	vmov	r2, s6
 8011252:	9311      	str	r3, [sp, #68]	; 0x44
 8011254:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011256:	fb92 f3f3 	sdiv	r3, r2, r3
 801125a:	9312      	str	r3, [sp, #72]	; 0x48
 801125c:	9b00      	ldr	r3, [sp, #0]
 801125e:	9a03      	ldr	r2, [sp, #12]
 8011260:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8011264:	3b01      	subs	r3, #1
 8011266:	9300      	str	r3, [sp, #0]
 8011268:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801126c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801126e:	eeb0 3a67 	vmov.f32	s6, s15
 8011272:	bf08      	it	eq
 8011274:	4613      	moveq	r3, r2
 8011276:	eef0 2a47 	vmov.f32	s5, s14
 801127a:	e737      	b.n	80110ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 801127c:	140e      	asrs	r6, r1, #16
 801127e:	d44c      	bmi.n	801131a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8011280:	4546      	cmp	r6, r8
 8011282:	da4a      	bge.n	801131a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8011284:	1410      	asrs	r0, r2, #16
 8011286:	d448      	bmi.n	801131a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8011288:	9f01      	ldr	r7, [sp, #4]
 801128a:	42b8      	cmp	r0, r7
 801128c:	da45      	bge.n	801131a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 801128e:	fb08 6000 	mla	r0, r8, r0, r6
 8011292:	9e02      	ldr	r6, [sp, #8]
 8011294:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8011298:	f06f 0601 	mvn.w	r6, #1
 801129c:	fb06 fb09 	mul.w	fp, r6, r9
 80112a0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80112a4:	f834 600b 	ldrh.w	r6, [r4, fp]
 80112a8:	1237      	asrs	r7, r6, #8
 80112aa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80112ae:	fb17 f705 	smulbb	r7, r7, r5
 80112b2:	ea4f 0ae6 	mov.w	sl, r6, asr #3
 80112b6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80112ba:	00f6      	lsls	r6, r6, #3
 80112bc:	fb0c 7c0e 	mla	ip, ip, lr, r7
 80112c0:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80112c4:	10c7      	asrs	r7, r0, #3
 80112c6:	b2f6      	uxtb	r6, r6
 80112c8:	00c0      	lsls	r0, r0, #3
 80112ca:	fb1a fa05 	smulbb	sl, sl, r5
 80112ce:	fb16 f605 	smulbb	r6, r6, r5
 80112d2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80112d6:	b2c0      	uxtb	r0, r0
 80112d8:	fa1f fc8c 	uxth.w	ip, ip
 80112dc:	fb07 a70e 	mla	r7, r7, lr, sl
 80112e0:	fb00 600e 	mla	r0, r0, lr, r6
 80112e4:	b2bf      	uxth	r7, r7
 80112e6:	b280      	uxth	r0, r0
 80112e8:	f10c 0601 	add.w	r6, ip, #1
 80112ec:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 80112f0:	f107 0a01 	add.w	sl, r7, #1
 80112f4:	1c46      	adds	r6, r0, #1
 80112f6:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 80112fa:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80112fe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011302:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011306:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801130a:	ea4c 0c06 	orr.w	ip, ip, r6
 801130e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011312:	ea4c 0c0a 	orr.w	ip, ip, sl
 8011316:	f824 c00b 	strh.w	ip, [r4, fp]
 801131a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801131c:	4401      	add	r1, r0
 801131e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8011320:	f109 39ff 	add.w	r9, r9, #4294967295
 8011324:	4402      	add	r2, r0
 8011326:	e763      	b.n	80111f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x13c>
 8011328:	b005      	add	sp, #20
 801132a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801132e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801132e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011332:	9811      	ldr	r0, [sp, #68]	; 0x44
 8011334:	9201      	str	r2, [sp, #4]
 8011336:	e9dd 2512 	ldrd	r2, r5, [sp, #72]	; 0x48
 801133a:	6844      	ldr	r4, [r0, #4]
 801133c:	6800      	ldr	r0, [r0, #0]
 801133e:	f9bd c050 	ldrsh.w	ip, [sp, #80]	; 0x50
 8011342:	f9bd e054 	ldrsh.w	lr, [sp, #84]	; 0x54
 8011346:	fb04 2505 	mla	r5, r4, r5, r2
 801134a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801134e:	9816      	ldr	r0, [sp, #88]	; 0x58
 8011350:	e9dd 760f 	ldrd	r7, r6, [sp, #60]	; 0x3c
 8011354:	6802      	ldr	r2, [r0, #0]
 8011356:	9200      	str	r2, [sp, #0]
 8011358:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801135c:	2900      	cmp	r1, #0
 801135e:	dc03      	bgt.n	8011368 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 8011360:	9a01      	ldr	r2, [sp, #4]
 8011362:	2a00      	cmp	r2, #0
 8011364:	f340 8095 	ble.w	8011492 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 8011368:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801136a:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 801136e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8011370:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011374:	2b00      	cmp	r3, #0
 8011376:	dd0e      	ble.n	8011396 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8011378:	ea5f 4824 	movs.w	r8, r4, asr #16
 801137c:	d406      	bmi.n	801138c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 801137e:	45e0      	cmp	r8, ip
 8011380:	da04      	bge.n	801138c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8011382:	ea5f 4820 	movs.w	r8, r0, asr #16
 8011386:	d401      	bmi.n	801138c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8011388:	45f0      	cmp	r8, lr
 801138a:	db05      	blt.n	8011398 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801138c:	443c      	add	r4, r7
 801138e:	4430      	add	r0, r6
 8011390:	3b01      	subs	r3, #1
 8011392:	3502      	adds	r5, #2
 8011394:	e7ee      	b.n	8011374 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 8011396:	d010      	beq.n	80113ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8011398:	f103 38ff 	add.w	r8, r3, #4294967295
 801139c:	fb07 4908 	mla	r9, r7, r8, r4
 80113a0:	ea5f 4929 	movs.w	r9, r9, asr #16
 80113a4:	d53d      	bpl.n	8011422 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 80113a6:	4698      	mov	r8, r3
 80113a8:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 80113ac:	f1b8 0f00 	cmp.w	r8, #0
 80113b0:	dc55      	bgt.n	801145e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x130>
 80113b2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80113b6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80113ba:	2900      	cmp	r1, #0
 80113bc:	dd69      	ble.n	8011492 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 80113be:	ee30 0a04 	vadd.f32	s0, s0, s8
 80113c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80113c6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80113ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80113cc:	3901      	subs	r1, #1
 80113ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80113d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80113d6:	eeb0 6a62 	vmov.f32	s12, s5
 80113da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80113de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80113e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80113e6:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 80113ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80113ee:	eeb0 6a43 	vmov.f32	s12, s6
 80113f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80113f6:	ee12 2a90 	vmov	r2, s5
 80113fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80113fe:	fb92 f7f3 	sdiv	r7, r2, r3
 8011402:	ee13 2a10 	vmov	r2, s6
 8011406:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801140a:	fb92 f6f3 	sdiv	r6, r2, r3
 801140e:	9a01      	ldr	r2, [sp, #4]
 8011410:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 8011414:	bf08      	it	eq
 8011416:	4613      	moveq	r3, r2
 8011418:	eeb0 3a67 	vmov.f32	s6, s15
 801141c:	eef0 2a47 	vmov.f32	s5, s14
 8011420:	e79c      	b.n	801135c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e>
 8011422:	45e1      	cmp	r9, ip
 8011424:	dabf      	bge.n	80113a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011426:	fb06 0808 	mla	r8, r6, r8, r0
 801142a:	ea5f 4828 	movs.w	r8, r8, asr #16
 801142e:	d4ba      	bmi.n	80113a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011430:	45f0      	cmp	r8, lr
 8011432:	dab8      	bge.n	80113a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011434:	4698      	mov	r8, r3
 8011436:	46aa      	mov	sl, r5
 8011438:	f1b8 0f00 	cmp.w	r8, #0
 801143c:	ddb9      	ble.n	80113b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 801143e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8011442:	ea4f 4b24 	mov.w	fp, r4, asr #16
 8011446:	fb0c b909 	mla	r9, ip, r9, fp
 801144a:	9a00      	ldr	r2, [sp, #0]
 801144c:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 8011450:	f82a 9b02 	strh.w	r9, [sl], #2
 8011454:	443c      	add	r4, r7
 8011456:	4430      	add	r0, r6
 8011458:	f108 38ff 	add.w	r8, r8, #4294967295
 801145c:	e7ec      	b.n	8011438 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 801145e:	ea5f 4a24 	movs.w	sl, r4, asr #16
 8011462:	d411      	bmi.n	8011488 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8011464:	45e2      	cmp	sl, ip
 8011466:	da0f      	bge.n	8011488 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8011468:	ea5f 4920 	movs.w	r9, r0, asr #16
 801146c:	d40c      	bmi.n	8011488 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 801146e:	45f1      	cmp	r9, lr
 8011470:	da0a      	bge.n	8011488 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8011472:	fb0c a909 	mla	r9, ip, r9, sl
 8011476:	9a00      	ldr	r2, [sp, #0]
 8011478:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 801147c:	f06f 0201 	mvn.w	r2, #1
 8011480:	fb02 f908 	mul.w	r9, r2, r8
 8011484:	f82b a009 	strh.w	sl, [fp, r9]
 8011488:	443c      	add	r4, r7
 801148a:	4430      	add	r0, r6
 801148c:	f108 38ff 	add.w	r8, r8, #4294967295
 8011490:	e78c      	b.n	80113ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8011492:	b003      	add	sp, #12
 8011494:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011498 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011498:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801149c:	b087      	sub	sp, #28
 801149e:	468b      	mov	fp, r1
 80114a0:	9204      	str	r2, [sp, #16]
 80114a2:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80114a6:	9815      	ldr	r0, [sp, #84]	; 0x54
 80114a8:	9201      	str	r2, [sp, #4]
 80114aa:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 80114ae:	9205      	str	r2, [sp, #20]
 80114b0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80114b4:	6841      	ldr	r1, [r0, #4]
 80114b6:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 80114ba:	fb01 2404 	mla	r4, r1, r4, r2
 80114be:	6802      	ldr	r2, [r0, #0]
 80114c0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80114c4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80114c6:	6812      	ldr	r2, [r2, #0]
 80114c8:	9203      	str	r2, [sp, #12]
 80114ca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80114ce:	f1bb 0f00 	cmp.w	fp, #0
 80114d2:	dc03      	bgt.n	80114dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 80114d4:	9a04      	ldr	r2, [sp, #16]
 80114d6:	2a00      	cmp	r2, #0
 80114d8:	f340 812c 	ble.w	8011734 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 80114dc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80114de:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80114e2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80114e4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80114e8:	2b00      	cmp	r3, #0
 80114ea:	dd0f      	ble.n	801150c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80114ec:	1402      	asrs	r2, r0, #16
 80114ee:	d406      	bmi.n	80114fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 80114f0:	4542      	cmp	r2, r8
 80114f2:	da04      	bge.n	80114fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 80114f4:	140a      	asrs	r2, r1, #16
 80114f6:	d402      	bmi.n	80114fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 80114f8:	9d01      	ldr	r5, [sp, #4]
 80114fa:	42aa      	cmp	r2, r5
 80114fc:	db07      	blt.n	801150e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 80114fe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011500:	4410      	add	r0, r2
 8011502:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011504:	3b01      	subs	r3, #1
 8011506:	4411      	add	r1, r2
 8011508:	3402      	adds	r4, #2
 801150a:	e7ed      	b.n	80114e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 801150c:	d01a      	beq.n	8011544 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 801150e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011510:	1e5a      	subs	r2, r3, #1
 8011512:	fb05 0502 	mla	r5, r5, r2, r0
 8011516:	142d      	asrs	r5, r5, #16
 8011518:	d40a      	bmi.n	8011530 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 801151a:	4545      	cmp	r5, r8
 801151c:	da08      	bge.n	8011530 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 801151e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011520:	fb05 1202 	mla	r2, r5, r2, r1
 8011524:	1412      	asrs	r2, r2, #16
 8011526:	d403      	bmi.n	8011530 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8011528:	9d01      	ldr	r5, [sp, #4]
 801152a:	42aa      	cmp	r2, r5
 801152c:	f2c0 80a6 	blt.w	801167c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 8011530:	f04f 0c00 	mov.w	ip, #0
 8011534:	eb03 020c 	add.w	r2, r3, ip
 8011538:	2a00      	cmp	r2, #0
 801153a:	dc3e      	bgt.n	80115ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x122>
 801153c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011540:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011544:	f1bb 0f00 	cmp.w	fp, #0
 8011548:	f340 80f4 	ble.w	8011734 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801154c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011550:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011554:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011558:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801155a:	f1bb 0b01 	subs.w	fp, fp, #1
 801155e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011562:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011566:	eeb0 6a62 	vmov.f32	s12, s5
 801156a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801156e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011572:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011576:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801157a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801157e:	eeb0 6a43 	vmov.f32	s12, s6
 8011582:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011586:	ee12 2a90 	vmov	r2, s5
 801158a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801158e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011592:	ee13 2a10 	vmov	r2, s6
 8011596:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801159a:	9313      	str	r3, [sp, #76]	; 0x4c
 801159c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801159e:	fb92 f3f3 	sdiv	r3, r2, r3
 80115a2:	9a04      	ldr	r2, [sp, #16]
 80115a4:	9314      	str	r3, [sp, #80]	; 0x50
 80115a6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80115aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80115ac:	eeb0 3a67 	vmov.f32	s6, s15
 80115b0:	bf08      	it	eq
 80115b2:	4613      	moveq	r3, r2
 80115b4:	eef0 2a47 	vmov.f32	s5, s14
 80115b8:	e789      	b.n	80114ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 80115ba:	1405      	asrs	r5, r0, #16
 80115bc:	d457      	bmi.n	801166e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80115be:	4545      	cmp	r5, r8
 80115c0:	da55      	bge.n	801166e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80115c2:	140a      	asrs	r2, r1, #16
 80115c4:	d453      	bmi.n	801166e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80115c6:	9e01      	ldr	r6, [sp, #4]
 80115c8:	42b2      	cmp	r2, r6
 80115ca:	da50      	bge.n	801166e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80115cc:	fb08 5202 	mla	r2, r8, r2, r5
 80115d0:	9d03      	ldr	r5, [sp, #12]
 80115d2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80115d6:	0e2e      	lsrs	r6, r5, #24
 80115d8:	d049      	beq.n	801166e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80115da:	f06f 0201 	mvn.w	r2, #1
 80115de:	fb02 f20c 	mul.w	r2, r2, ip
 80115e2:	9202      	str	r2, [sp, #8]
 80115e4:	f834 e002 	ldrh.w	lr, [r4, r2]
 80115e8:	9a05      	ldr	r2, [sp, #20]
 80115ea:	4356      	muls	r6, r2
 80115ec:	1c72      	adds	r2, r6, #1
 80115ee:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80115f2:	1212      	asrs	r2, r2, #8
 80115f4:	fa1f f982 	uxth.w	r9, r2
 80115f8:	ea4f 272e 	mov.w	r7, lr, asr #8
 80115fc:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011600:	43d2      	mvns	r2, r2
 8011602:	b2d2      	uxtb	r2, r2
 8011604:	fb16 f609 	smulbb	r6, r6, r9
 8011608:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801160c:	fb07 6702 	mla	r7, r7, r2, r6
 8011610:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011614:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011618:	b2ed      	uxtb	r5, r5
 801161a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801161e:	fa5f fe8e 	uxtb.w	lr, lr
 8011622:	fb15 f509 	smulbb	r5, r5, r9
 8011626:	fb0e 5502 	mla	r5, lr, r2, r5
 801162a:	b2bf      	uxth	r7, r7
 801162c:	fb1a fa09 	smulbb	sl, sl, r9
 8011630:	b2ad      	uxth	r5, r5
 8011632:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011636:	fb06 a602 	mla	r6, r6, r2, sl
 801163a:	1c7a      	adds	r2, r7, #1
 801163c:	f105 0a01 	add.w	sl, r5, #1
 8011640:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011644:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011648:	b2b6      	uxth	r6, r6
 801164a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801164e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011652:	ea47 070a 	orr.w	r7, r7, sl
 8011656:	f106 0a01 	add.w	sl, r6, #1
 801165a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801165e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011662:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011666:	9a02      	ldr	r2, [sp, #8]
 8011668:	ea47 070a 	orr.w	r7, r7, sl
 801166c:	52a7      	strh	r7, [r4, r2]
 801166e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011670:	4410      	add	r0, r2
 8011672:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011674:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011678:	4411      	add	r1, r2
 801167a:	e75b      	b.n	8011534 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801167c:	f04f 0e00 	mov.w	lr, #0
 8011680:	eba3 020e 	sub.w	r2, r3, lr
 8011684:	2a00      	cmp	r2, #0
 8011686:	f77f af59 	ble.w	801153c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 801168a:	1405      	asrs	r5, r0, #16
 801168c:	140a      	asrs	r2, r1, #16
 801168e:	fb08 5202 	mla	r2, r8, r2, r5
 8011692:	9d03      	ldr	r5, [sp, #12]
 8011694:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011698:	0e2e      	lsrs	r6, r5, #24
 801169a:	d044      	beq.n	8011726 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28e>
 801169c:	9a05      	ldr	r2, [sp, #20]
 801169e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80116a2:	4356      	muls	r6, r2
 80116a4:	1c72      	adds	r2, r6, #1
 80116a6:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80116aa:	1212      	asrs	r2, r2, #8
 80116ac:	fa1f f982 	uxth.w	r9, r2
 80116b0:	ea4f 272c 	mov.w	r7, ip, asr #8
 80116b4:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80116b8:	43d2      	mvns	r2, r2
 80116ba:	b2d2      	uxtb	r2, r2
 80116bc:	fb16 f609 	smulbb	r6, r6, r9
 80116c0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80116c4:	fb07 6702 	mla	r7, r7, r2, r6
 80116c8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80116cc:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80116d0:	b2ed      	uxtb	r5, r5
 80116d2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80116d6:	fa5f fc8c 	uxtb.w	ip, ip
 80116da:	fb15 f509 	smulbb	r5, r5, r9
 80116de:	fb0c 5502 	mla	r5, ip, r2, r5
 80116e2:	b2bf      	uxth	r7, r7
 80116e4:	fb1a fa09 	smulbb	sl, sl, r9
 80116e8:	b2ad      	uxth	r5, r5
 80116ea:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80116ee:	fb06 a602 	mla	r6, r6, r2, sl
 80116f2:	1c7a      	adds	r2, r7, #1
 80116f4:	f105 0a01 	add.w	sl, r5, #1
 80116f8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80116fc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011700:	b2b6      	uxth	r6, r6
 8011702:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011706:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801170a:	ea47 070a 	orr.w	r7, r7, sl
 801170e:	f106 0a01 	add.w	sl, r6, #1
 8011712:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011716:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801171a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801171e:	ea47 070a 	orr.w	r7, r7, sl
 8011722:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8011726:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011728:	4410      	add	r0, r2
 801172a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801172c:	f10e 0e01 	add.w	lr, lr, #1
 8011730:	4411      	add	r1, r2
 8011732:	e7a5      	b.n	8011680 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8011734:	b007      	add	sp, #28
 8011736:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801173c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801173c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011740:	b087      	sub	sp, #28
 8011742:	468b      	mov	fp, r1
 8011744:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8011746:	9205      	str	r2, [sp, #20]
 8011748:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 801174c:	9201      	str	r2, [sp, #4]
 801174e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8011752:	6861      	ldr	r1, [r4, #4]
 8011754:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 8011758:	fb01 2000 	mla	r0, r1, r0, r2
 801175c:	6822      	ldr	r2, [r4, #0]
 801175e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8011762:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8011764:	6812      	ldr	r2, [r2, #0]
 8011766:	9203      	str	r2, [sp, #12]
 8011768:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801176c:	f1bb 0f00 	cmp.w	fp, #0
 8011770:	dc03      	bgt.n	801177a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 8011772:	9a05      	ldr	r2, [sp, #20]
 8011774:	2a00      	cmp	r2, #0
 8011776:	f340 814b 	ble.w	8011a10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 801177a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801177c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011780:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011782:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011786:	2b00      	cmp	r3, #0
 8011788:	dd0f      	ble.n	80117aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801178a:	140c      	asrs	r4, r1, #16
 801178c:	d406      	bmi.n	801179c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 801178e:	454c      	cmp	r4, r9
 8011790:	da04      	bge.n	801179c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8011792:	1414      	asrs	r4, r2, #16
 8011794:	d402      	bmi.n	801179c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8011796:	9d01      	ldr	r5, [sp, #4]
 8011798:	42ac      	cmp	r4, r5
 801179a:	db07      	blt.n	80117ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801179c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801179e:	4421      	add	r1, r4
 80117a0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80117a2:	3b01      	subs	r3, #1
 80117a4:	4422      	add	r2, r4
 80117a6:	3002      	adds	r0, #2
 80117a8:	e7ed      	b.n	8011786 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 80117aa:	d018      	beq.n	80117de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa2>
 80117ac:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80117ae:	1e5c      	subs	r4, r3, #1
 80117b0:	fb05 1504 	mla	r5, r5, r4, r1
 80117b4:	142d      	asrs	r5, r5, #16
 80117b6:	d40a      	bmi.n	80117ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 80117b8:	454d      	cmp	r5, r9
 80117ba:	da08      	bge.n	80117ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 80117bc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80117be:	fb05 2404 	mla	r4, r5, r4, r2
 80117c2:	1424      	asrs	r4, r4, #16
 80117c4:	d403      	bmi.n	80117ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 80117c6:	9d01      	ldr	r5, [sp, #4]
 80117c8:	42ac      	cmp	r4, r5
 80117ca:	f2c0 80bb 	blt.w	8011944 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x208>
 80117ce:	2700      	movs	r7, #0
 80117d0:	19dc      	adds	r4, r3, r7
 80117d2:	2c00      	cmp	r4, #0
 80117d4:	dc3e      	bgt.n	8011854 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x118>
 80117d6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80117da:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80117de:	f1bb 0f00 	cmp.w	fp, #0
 80117e2:	f340 8115 	ble.w	8011a10 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 80117e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80117ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80117ee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80117f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80117f4:	f1bb 0b01 	subs.w	fp, fp, #1
 80117f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80117fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011800:	eeb0 6a62 	vmov.f32	s12, s5
 8011804:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011808:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801180c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011810:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011814:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011818:	eeb0 6a43 	vmov.f32	s12, s6
 801181c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011820:	ee12 2a90 	vmov	r2, s5
 8011824:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011828:	fb92 f3f3 	sdiv	r3, r2, r3
 801182c:	ee13 2a10 	vmov	r2, s6
 8011830:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011834:	9313      	str	r3, [sp, #76]	; 0x4c
 8011836:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011838:	fb92 f3f3 	sdiv	r3, r2, r3
 801183c:	9a05      	ldr	r2, [sp, #20]
 801183e:	9314      	str	r3, [sp, #80]	; 0x50
 8011840:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011844:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011846:	eeb0 3a67 	vmov.f32	s6, s15
 801184a:	bf08      	it	eq
 801184c:	4613      	moveq	r3, r2
 801184e:	eef0 2a47 	vmov.f32	s5, s14
 8011852:	e78b      	b.n	801176c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30>
 8011854:	140d      	asrs	r5, r1, #16
 8011856:	d45c      	bmi.n	8011912 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011858:	454d      	cmp	r5, r9
 801185a:	da5a      	bge.n	8011912 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801185c:	1414      	asrs	r4, r2, #16
 801185e:	d458      	bmi.n	8011912 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011860:	9e01      	ldr	r6, [sp, #4]
 8011862:	42b4      	cmp	r4, r6
 8011864:	da55      	bge.n	8011912 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011866:	fb09 5404 	mla	r4, r9, r4, r5
 801186a:	9d03      	ldr	r5, [sp, #12]
 801186c:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8011870:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 8011874:	d04d      	beq.n	8011912 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011876:	0a26      	lsrs	r6, r4, #8
 8011878:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801187c:	fa5f f58e 	uxtb.w	r5, lr
 8011880:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8011884:	9604      	str	r6, [sp, #16]
 8011886:	d04a      	beq.n	801191e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8011888:	f06f 0601 	mvn.w	r6, #1
 801188c:	437e      	muls	r6, r7
 801188e:	fa1f fa85 	uxth.w	sl, r5
 8011892:	f830 8006 	ldrh.w	r8, [r0, r6]
 8011896:	9602      	str	r6, [sp, #8]
 8011898:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801189c:	43ed      	mvns	r5, r5
 801189e:	fa5f fc8c 	uxtb.w	ip, ip
 80118a2:	b2ed      	uxtb	r5, r5
 80118a4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80118a8:	fb1c fc0a 	smulbb	ip, ip, sl
 80118ac:	fb0e cc05 	mla	ip, lr, r5, ip
 80118b0:	b2e4      	uxtb	r4, r4
 80118b2:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 80118b6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80118ba:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80118be:	fa5f f888 	uxtb.w	r8, r8
 80118c2:	fb14 f40a 	smulbb	r4, r4, sl
 80118c6:	fb08 4405 	mla	r4, r8, r5, r4
 80118ca:	b2a4      	uxth	r4, r4
 80118cc:	fa1f fc8c 	uxth.w	ip, ip
 80118d0:	fb16 f60a 	smulbb	r6, r6, sl
 80118d4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80118d8:	fb0e 6e05 	mla	lr, lr, r5, r6
 80118dc:	1c66      	adds	r6, r4, #1
 80118de:	f10c 0501 	add.w	r5, ip, #1
 80118e2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80118e6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80118ea:	fa1f fe8e 	uxth.w	lr, lr
 80118ee:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80118f2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80118f6:	ea4c 0c06 	orr.w	ip, ip, r6
 80118fa:	f10e 0601 	add.w	r6, lr, #1
 80118fe:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 8011902:	0976      	lsrs	r6, r6, #5
 8011904:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011908:	9c02      	ldr	r4, [sp, #8]
 801190a:	ea4c 0c06 	orr.w	ip, ip, r6
 801190e:	f820 c004 	strh.w	ip, [r0, r4]
 8011912:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8011914:	4421      	add	r1, r4
 8011916:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011918:	3f01      	subs	r7, #1
 801191a:	4422      	add	r2, r4
 801191c:	e758      	b.n	80117d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 801191e:	4e3e      	ldr	r6, [pc, #248]	; (8011a18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 8011920:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011924:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 8011928:	ea4c 0c04 	orr.w	ip, ip, r4
 801192c:	9c04      	ldr	r4, [sp, #16]
 801192e:	f06f 0501 	mvn.w	r5, #1
 8011932:	00e6      	lsls	r6, r4, #3
 8011934:	437d      	muls	r5, r7
 8011936:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 801193a:	ea4c 0c04 	orr.w	ip, ip, r4
 801193e:	f820 c005 	strh.w	ip, [r0, r5]
 8011942:	e7e6      	b.n	8011912 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011944:	f04f 0800 	mov.w	r8, #0
 8011948:	eba3 0408 	sub.w	r4, r3, r8
 801194c:	2c00      	cmp	r4, #0
 801194e:	f77f af42 	ble.w	80117d6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8011952:	140d      	asrs	r5, r1, #16
 8011954:	1414      	asrs	r4, r2, #16
 8011956:	fb09 5404 	mla	r4, r9, r4, r5
 801195a:	9d03      	ldr	r5, [sp, #12]
 801195c:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8011960:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 8011964:	d042      	beq.n	80119ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8011966:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801196a:	fa5f f58c 	uxtb.w	r5, ip
 801196e:	ea4f 4714 	mov.w	r7, r4, lsr #16
 8011972:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8011976:	d040      	beq.n	80119fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8011978:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 801197c:	fa1f fa85 	uxth.w	sl, r5
 8011980:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011984:	43ed      	mvns	r5, r5
 8011986:	b2ff      	uxtb	r7, r7
 8011988:	b2ed      	uxtb	r5, r5
 801198a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801198e:	fb17 f70a 	smulbb	r7, r7, sl
 8011992:	fb0c 7705 	mla	r7, ip, r5, r7
 8011996:	b2e4      	uxtb	r4, r4
 8011998:	ea4f 0cee 	mov.w	ip, lr, asr #3
 801199c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80119a0:	fa5f fe8e 	uxtb.w	lr, lr
 80119a4:	fb14 f40a 	smulbb	r4, r4, sl
 80119a8:	fb0e 4405 	mla	r4, lr, r5, r4
 80119ac:	b2f6      	uxtb	r6, r6
 80119ae:	b2bf      	uxth	r7, r7
 80119b0:	fb16 f60a 	smulbb	r6, r6, sl
 80119b4:	b2a4      	uxth	r4, r4
 80119b6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80119ba:	fb0c 6c05 	mla	ip, ip, r5, r6
 80119be:	1c7d      	adds	r5, r7, #1
 80119c0:	1c66      	adds	r6, r4, #1
 80119c2:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 80119c6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80119ca:	fa1f fc8c 	uxth.w	ip, ip
 80119ce:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80119d2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80119d6:	4337      	orrs	r7, r6
 80119d8:	f10c 0601 	add.w	r6, ip, #1
 80119dc:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80119e0:	0976      	lsrs	r6, r6, #5
 80119e2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80119e6:	4337      	orrs	r7, r6
 80119e8:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 80119ec:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80119ee:	4421      	add	r1, r4
 80119f0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80119f2:	f108 0801 	add.w	r8, r8, #1
 80119f6:	4422      	add	r2, r4
 80119f8:	e7a6      	b.n	8011948 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20c>
 80119fa:	4d07      	ldr	r5, [pc, #28]	; (8011a18 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 80119fc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8011a00:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 8011a04:	00f6      	lsls	r6, r6, #3
 8011a06:	4327      	orrs	r7, r4
 8011a08:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8011a0c:	4327      	orrs	r7, r4
 8011a0e:	e7eb      	b.n	80119e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ac>
 8011a10:	b007      	add	sp, #28
 8011a12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a16:	bf00      	nop
 8011a18:	fffff800 	.word	0xfffff800

08011a1c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011a1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a20:	b089      	sub	sp, #36	; 0x24
 8011a22:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011a26:	9206      	str	r2, [sp, #24]
 8011a28:	f9bd 2068 	ldrsh.w	r2, [sp, #104]	; 0x68
 8011a2c:	9202      	str	r2, [sp, #8]
 8011a2e:	f9bd 206c 	ldrsh.w	r2, [sp, #108]	; 0x6c
 8011a32:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8011a34:	9203      	str	r2, [sp, #12]
 8011a36:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 8011a3a:	9207      	str	r2, [sp, #28]
 8011a3c:	e9dd 2518 	ldrd	r2, r5, [sp, #96]	; 0x60
 8011a40:	6860      	ldr	r0, [r4, #4]
 8011a42:	9101      	str	r1, [sp, #4]
 8011a44:	fb00 2505 	mla	r5, r0, r5, r2
 8011a48:	6822      	ldr	r2, [r4, #0]
 8011a4a:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8011a4e:	9a02      	ldr	r2, [sp, #8]
 8011a50:	3201      	adds	r2, #1
 8011a52:	f022 0201 	bic.w	r2, r2, #1
 8011a56:	9204      	str	r2, [sp, #16]
 8011a58:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8011a5a:	6812      	ldr	r2, [r2, #0]
 8011a5c:	9205      	str	r2, [sp, #20]
 8011a5e:	9a01      	ldr	r2, [sp, #4]
 8011a60:	2a00      	cmp	r2, #0
 8011a62:	dc03      	bgt.n	8011a6c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 8011a64:	9a06      	ldr	r2, [sp, #24]
 8011a66:	2a00      	cmp	r2, #0
 8011a68:	f340 8153 	ble.w	8011d12 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8011a6c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011a6e:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8011a72:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011a74:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011a78:	2b00      	cmp	r3, #0
 8011a7a:	dd10      	ble.n	8011a9e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 8011a7c:	1422      	asrs	r2, r4, #16
 8011a7e:	d407      	bmi.n	8011a90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8011a80:	9e02      	ldr	r6, [sp, #8]
 8011a82:	4296      	cmp	r6, r2
 8011a84:	dd04      	ble.n	8011a90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8011a86:	1402      	asrs	r2, r0, #16
 8011a88:	d402      	bmi.n	8011a90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8011a8a:	9e03      	ldr	r6, [sp, #12]
 8011a8c:	42b2      	cmp	r2, r6
 8011a8e:	db07      	blt.n	8011aa0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 8011a90:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8011a92:	4414      	add	r4, r2
 8011a94:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8011a96:	3b01      	subs	r3, #1
 8011a98:	4410      	add	r0, r2
 8011a9a:	3502      	adds	r5, #2
 8011a9c:	e7ec      	b.n	8011a78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5c>
 8011a9e:	d00f      	beq.n	8011ac0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 8011aa0:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8011aa2:	1e5a      	subs	r2, r3, #1
 8011aa4:	fb06 4602 	mla	r6, r6, r2, r4
 8011aa8:	1436      	asrs	r6, r6, #16
 8011aaa:	d545      	bpl.n	8011b38 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 8011aac:	469a      	mov	sl, r3
 8011aae:	46a9      	mov	r9, r5
 8011ab0:	f1ba 0f00 	cmp.w	sl, #0
 8011ab4:	f300 80ba 	bgt.w	8011c2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x210>
 8011ab8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011abc:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8011ac0:	9b01      	ldr	r3, [sp, #4]
 8011ac2:	2b00      	cmp	r3, #0
 8011ac4:	f340 8125 	ble.w	8011d12 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8011ac8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011acc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011ad0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011ad4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011ad6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011ada:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011ade:	eeb0 6a62 	vmov.f32	s12, s5
 8011ae2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011ae6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011aea:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011aee:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 8011af2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011af6:	eeb0 6a43 	vmov.f32	s12, s6
 8011afa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011afe:	ee12 2a90 	vmov	r2, s5
 8011b02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011b06:	fb92 f3f3 	sdiv	r3, r2, r3
 8011b0a:	ee13 2a10 	vmov	r2, s6
 8011b0e:	9315      	str	r3, [sp, #84]	; 0x54
 8011b10:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011b12:	fb92 f3f3 	sdiv	r3, r2, r3
 8011b16:	9316      	str	r3, [sp, #88]	; 0x58
 8011b18:	9b01      	ldr	r3, [sp, #4]
 8011b1a:	9a06      	ldr	r2, [sp, #24]
 8011b1c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011b20:	3b01      	subs	r3, #1
 8011b22:	9301      	str	r3, [sp, #4]
 8011b24:	ed8d 6a14 	vstr	s12, [sp, #80]	; 0x50
 8011b28:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011b2a:	eeb0 3a67 	vmov.f32	s6, s15
 8011b2e:	bf08      	it	eq
 8011b30:	4613      	moveq	r3, r2
 8011b32:	eef0 2a47 	vmov.f32	s5, s14
 8011b36:	e792      	b.n	8011a5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 8011b38:	9f02      	ldr	r7, [sp, #8]
 8011b3a:	42b7      	cmp	r7, r6
 8011b3c:	ddb6      	ble.n	8011aac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 8011b3e:	9e16      	ldr	r6, [sp, #88]	; 0x58
 8011b40:	fb06 0202 	mla	r2, r6, r2, r0
 8011b44:	1412      	asrs	r2, r2, #16
 8011b46:	d4b1      	bmi.n	8011aac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 8011b48:	9e03      	ldr	r6, [sp, #12]
 8011b4a:	42b2      	cmp	r2, r6
 8011b4c:	daae      	bge.n	8011aac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 8011b4e:	f04f 0800 	mov.w	r8, #0
 8011b52:	eba3 0208 	sub.w	r2, r3, r8
 8011b56:	2a00      	cmp	r2, #0
 8011b58:	ddae      	ble.n	8011ab8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8011b5a:	9904      	ldr	r1, [sp, #16]
 8011b5c:	1422      	asrs	r2, r4, #16
 8011b5e:	1406      	asrs	r6, r0, #16
 8011b60:	fb01 2606 	mla	r6, r1, r6, r2
 8011b64:	0872      	lsrs	r2, r6, #1
 8011b66:	9905      	ldr	r1, [sp, #20]
 8011b68:	5c8a      	ldrb	r2, [r1, r2]
 8011b6a:	07f1      	lsls	r1, r6, #31
 8011b6c:	bf54      	ite	pl
 8011b6e:	f002 020f 	andpl.w	r2, r2, #15
 8011b72:	1112      	asrmi	r2, r2, #4
 8011b74:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011b78:	b2d2      	uxtb	r2, r2
 8011b7a:	2a00      	cmp	r2, #0
 8011b7c:	d04f      	beq.n	8011c1e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8011b7e:	4966      	ldr	r1, [pc, #408]	; (8011d18 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 8011b80:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8011b84:	680e      	ldr	r6, [r1, #0]
 8011b86:	9907      	ldr	r1, [sp, #28]
 8011b88:	434a      	muls	r2, r1
 8011b8a:	1c57      	adds	r7, r2, #1
 8011b8c:	eb07 2222 	add.w	r2, r7, r2, asr #8
 8011b90:	1212      	asrs	r2, r2, #8
 8011b92:	ea4f 2c26 	mov.w	ip, r6, asr #8
 8011b96:	fa1f fa82 	uxth.w	sl, r2
 8011b9a:	ea4f 272e 	mov.w	r7, lr, asr #8
 8011b9e:	43d2      	mvns	r2, r2
 8011ba0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011ba4:	b2d2      	uxtb	r2, r2
 8011ba6:	fb1c fc0a 	smulbb	ip, ip, sl
 8011baa:	f3c6 09cc 	ubfx	r9, r6, #3, #13
 8011bae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011bb2:	495a      	ldr	r1, [pc, #360]	; (8011d1c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>)
 8011bb4:	fb07 c702 	mla	r7, r7, r2, ip
 8011bb8:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011bbc:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8011bc0:	fb19 f90a 	smulbb	r9, r9, sl
 8011bc4:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011bc8:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 8011bcc:	fb0c 9c02 	mla	ip, ip, r2, r9
 8011bd0:	b2f6      	uxtb	r6, r6
 8011bd2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011bd6:	fa1f fc8c 	uxth.w	ip, ip
 8011bda:	fa5f fe8e 	uxtb.w	lr, lr
 8011bde:	fb16 f60a 	smulbb	r6, r6, sl
 8011be2:	b2bf      	uxth	r7, r7
 8011be4:	fb0e 6602 	mla	r6, lr, r2, r6
 8011be8:	f10c 0901 	add.w	r9, ip, #1
 8011bec:	b2b6      	uxth	r6, r6
 8011bee:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8011bf2:	f107 0b01 	add.w	fp, r7, #1
 8011bf6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8011bfa:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 8011bfe:	f106 0e01 	add.w	lr, r6, #1
 8011c02:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8011c06:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011c0a:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8011c0e:	ea4c 0c07 	orr.w	ip, ip, r7
 8011c12:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8011c16:	ea4c 0c0e 	orr.w	ip, ip, lr
 8011c1a:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8011c1e:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8011c20:	4414      	add	r4, r2
 8011c22:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8011c24:	f108 0801 	add.w	r8, r8, #1
 8011c28:	4410      	add	r0, r2
 8011c2a:	e792      	b.n	8011b52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x136>
 8011c2c:	1422      	asrs	r2, r4, #16
 8011c2e:	d467      	bmi.n	8011d00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8011c30:	9e02      	ldr	r6, [sp, #8]
 8011c32:	4296      	cmp	r6, r2
 8011c34:	dd64      	ble.n	8011d00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8011c36:	1406      	asrs	r6, r0, #16
 8011c38:	d462      	bmi.n	8011d00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8011c3a:	9f03      	ldr	r7, [sp, #12]
 8011c3c:	42be      	cmp	r6, r7
 8011c3e:	da5f      	bge.n	8011d00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8011c40:	9f04      	ldr	r7, [sp, #16]
 8011c42:	fb06 2607 	mla	r6, r6, r7, r2
 8011c46:	0872      	lsrs	r2, r6, #1
 8011c48:	9f05      	ldr	r7, [sp, #20]
 8011c4a:	5cba      	ldrb	r2, [r7, r2]
 8011c4c:	07f6      	lsls	r6, r6, #31
 8011c4e:	bf54      	ite	pl
 8011c50:	f002 020f 	andpl.w	r2, r2, #15
 8011c54:	1112      	asrmi	r2, r2, #4
 8011c56:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011c5a:	b2d2      	uxtb	r2, r2
 8011c5c:	2a00      	cmp	r2, #0
 8011c5e:	d04f      	beq.n	8011d00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8011c60:	9f07      	ldr	r7, [sp, #28]
 8011c62:	4e2d      	ldr	r6, [pc, #180]	; (8011d18 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 8011c64:	f8b9 e000 	ldrh.w	lr, [r9]
 8011c68:	6836      	ldr	r6, [r6, #0]
 8011c6a:	492c      	ldr	r1, [pc, #176]	; (8011d1c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>)
 8011c6c:	437a      	muls	r2, r7
 8011c6e:	1c57      	adds	r7, r2, #1
 8011c70:	eb07 2222 	add.w	r2, r7, r2, asr #8
 8011c74:	1212      	asrs	r2, r2, #8
 8011c76:	ea4f 2c26 	mov.w	ip, r6, asr #8
 8011c7a:	fa1f fb82 	uxth.w	fp, r2
 8011c7e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8011c82:	43d2      	mvns	r2, r2
 8011c84:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011c88:	b2d2      	uxtb	r2, r2
 8011c8a:	fb1c fc0b 	smulbb	ip, ip, fp
 8011c8e:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 8011c92:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011c96:	fb07 c702 	mla	r7, r7, r2, ip
 8011c9a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8011c9e:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8011ca2:	fb18 f80b 	smulbb	r8, r8, fp
 8011ca6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011caa:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 8011cae:	fb0c 8c02 	mla	ip, ip, r2, r8
 8011cb2:	b2f6      	uxtb	r6, r6
 8011cb4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011cb8:	fa1f fc8c 	uxth.w	ip, ip
 8011cbc:	fa5f fe8e 	uxtb.w	lr, lr
 8011cc0:	fb16 f60b 	smulbb	r6, r6, fp
 8011cc4:	b2bf      	uxth	r7, r7
 8011cc6:	fb0e 6602 	mla	r6, lr, r2, r6
 8011cca:	f10c 0801 	add.w	r8, ip, #1
 8011cce:	b2b6      	uxth	r6, r6
 8011cd0:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 8011cd4:	f107 0801 	add.w	r8, r7, #1
 8011cd8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8011cdc:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 8011ce0:	f106 0e01 	add.w	lr, r6, #1
 8011ce4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8011ce8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011cec:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8011cf0:	ea4c 0c07 	orr.w	ip, ip, r7
 8011cf4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8011cf8:	ea4c 0c0e 	orr.w	ip, ip, lr
 8011cfc:	f8a9 c000 	strh.w	ip, [r9]
 8011d00:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8011d02:	4414      	add	r4, r2
 8011d04:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8011d06:	f109 0902 	add.w	r9, r9, #2
 8011d0a:	4410      	add	r0, r2
 8011d0c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8011d10:	e6ce      	b.n	8011ab0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8011d12:	b009      	add	sp, #36	; 0x24
 8011d14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d18:	20026eb8 	.word	0x20026eb8
 8011d1c:	0007fff8 	.word	0x0007fff8

08011d20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8011d20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d24:	b087      	sub	sp, #28
 8011d26:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011d2a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8011d2c:	9205      	str	r2, [sp, #20]
 8011d2e:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8011d32:	9201      	str	r2, [sp, #4]
 8011d34:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8011d38:	6860      	ldr	r0, [r4, #4]
 8011d3a:	f9bd b060 	ldrsh.w	fp, [sp, #96]	; 0x60
 8011d3e:	9100      	str	r1, [sp, #0]
 8011d40:	fb00 2505 	mla	r5, r0, r5, r2
 8011d44:	6822      	ldr	r2, [r4, #0]
 8011d46:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8011d4a:	f10b 0201 	add.w	r2, fp, #1
 8011d4e:	f022 0201 	bic.w	r2, r2, #1
 8011d52:	9203      	str	r2, [sp, #12]
 8011d54:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8011d56:	6812      	ldr	r2, [r2, #0]
 8011d58:	9204      	str	r2, [sp, #16]
 8011d5a:	9a00      	ldr	r2, [sp, #0]
 8011d5c:	2a00      	cmp	r2, #0
 8011d5e:	dc03      	bgt.n	8011d68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 8011d60:	9a05      	ldr	r2, [sp, #20]
 8011d62:	2a00      	cmp	r2, #0
 8011d64:	f340 815c 	ble.w	8012020 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>
 8011d68:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011d6a:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8011d6e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011d70:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011d74:	2b00      	cmp	r3, #0
 8011d76:	dd0f      	ble.n	8011d98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011d78:	1422      	asrs	r2, r4, #16
 8011d7a:	d406      	bmi.n	8011d8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011d7c:	4593      	cmp	fp, r2
 8011d7e:	dd04      	ble.n	8011d8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011d80:	1402      	asrs	r2, r0, #16
 8011d82:	d402      	bmi.n	8011d8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011d84:	9e01      	ldr	r6, [sp, #4]
 8011d86:	42b2      	cmp	r2, r6
 8011d88:	db07      	blt.n	8011d9a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 8011d8a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011d8c:	4414      	add	r4, r2
 8011d8e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011d90:	3b01      	subs	r3, #1
 8011d92:	4410      	add	r0, r2
 8011d94:	3502      	adds	r5, #2
 8011d96:	e7ed      	b.n	8011d74 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 8011d98:	d018      	beq.n	8011dcc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 8011d9a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8011d9c:	1e5a      	subs	r2, r3, #1
 8011d9e:	fb06 4602 	mla	r6, r6, r2, r4
 8011da2:	1436      	asrs	r6, r6, #16
 8011da4:	d40a      	bmi.n	8011dbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8011da6:	45b3      	cmp	fp, r6
 8011da8:	dd08      	ble.n	8011dbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8011daa:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8011dac:	fb06 0202 	mla	r2, r6, r2, r0
 8011db0:	1412      	asrs	r2, r2, #16
 8011db2:	d403      	bmi.n	8011dbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8011db4:	9e01      	ldr	r6, [sp, #4]
 8011db6:	42b2      	cmp	r2, r6
 8011db8:	f2c0 80bf 	blt.w	8011f3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21a>
 8011dbc:	2700      	movs	r7, #0
 8011dbe:	19da      	adds	r2, r3, r7
 8011dc0:	2a00      	cmp	r2, #0
 8011dc2:	dc3f      	bgt.n	8011e44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x124>
 8011dc4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011dc8:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8011dcc:	9b00      	ldr	r3, [sp, #0]
 8011dce:	2b00      	cmp	r3, #0
 8011dd0:	f340 8126 	ble.w	8012020 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>
 8011dd4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011dd8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011ddc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011de0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011de2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011de6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011dea:	eeb0 6a62 	vmov.f32	s12, s5
 8011dee:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011df2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011df6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011dfa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011dfe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011e02:	eeb0 6a43 	vmov.f32	s12, s6
 8011e06:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011e0a:	ee12 2a90 	vmov	r2, s5
 8011e0e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011e12:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e16:	ee13 2a10 	vmov	r2, s6
 8011e1a:	9313      	str	r3, [sp, #76]	; 0x4c
 8011e1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e1e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e22:	9314      	str	r3, [sp, #80]	; 0x50
 8011e24:	9b00      	ldr	r3, [sp, #0]
 8011e26:	9a05      	ldr	r2, [sp, #20]
 8011e28:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011e2c:	3b01      	subs	r3, #1
 8011e2e:	9300      	str	r3, [sp, #0]
 8011e30:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011e34:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e36:	eeb0 3a67 	vmov.f32	s6, s15
 8011e3a:	bf08      	it	eq
 8011e3c:	4613      	moveq	r3, r2
 8011e3e:	eef0 2a47 	vmov.f32	s5, s14
 8011e42:	e78a      	b.n	8011d5a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 8011e44:	1422      	asrs	r2, r4, #16
 8011e46:	d466      	bmi.n	8011f16 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011e48:	4593      	cmp	fp, r2
 8011e4a:	dd64      	ble.n	8011f16 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011e4c:	1406      	asrs	r6, r0, #16
 8011e4e:	d462      	bmi.n	8011f16 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011e50:	9901      	ldr	r1, [sp, #4]
 8011e52:	428e      	cmp	r6, r1
 8011e54:	da5f      	bge.n	8011f16 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011e56:	9903      	ldr	r1, [sp, #12]
 8011e58:	fb06 2601 	mla	r6, r6, r1, r2
 8011e5c:	0872      	lsrs	r2, r6, #1
 8011e5e:	9904      	ldr	r1, [sp, #16]
 8011e60:	5c8a      	ldrb	r2, [r1, r2]
 8011e62:	07f6      	lsls	r6, r6, #31
 8011e64:	bf54      	ite	pl
 8011e66:	f002 020f 	andpl.w	r2, r2, #15
 8011e6a:	1112      	asrmi	r2, r2, #4
 8011e6c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011e70:	b2d2      	uxtb	r2, r2
 8011e72:	2a00      	cmp	r2, #0
 8011e74:	d04f      	beq.n	8011f16 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011e76:	496c      	ldr	r1, [pc, #432]	; (8012028 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x308>)
 8011e78:	680e      	ldr	r6, [r1, #0]
 8011e7a:	496c      	ldr	r1, [pc, #432]	; (801202c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30c>)
 8011e7c:	ea4f 2926 	mov.w	r9, r6, asr #8
 8011e80:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 8011e84:	2aff      	cmp	r2, #255	; 0xff
 8011e86:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 8011e8a:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8011e8e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8011e92:	b2f6      	uxtb	r6, r6
 8011e94:	d045      	beq.n	8011f22 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8011e96:	f06f 0101 	mvn.w	r1, #1
 8011e9a:	4379      	muls	r1, r7
 8011e9c:	fa1f fa82 	uxth.w	sl, r2
 8011ea0:	f835 e001 	ldrh.w	lr, [r5, r1]
 8011ea4:	9102      	str	r1, [sp, #8]
 8011ea6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011eaa:	43d2      	mvns	r2, r2
 8011eac:	b2d2      	uxtb	r2, r2
 8011eae:	fb19 f90a 	smulbb	r9, r9, sl
 8011eb2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011eb6:	fb0c 9c02 	mla	ip, ip, r2, r9
 8011eba:	ea4f 09ee 	mov.w	r9, lr, asr #3
 8011ebe:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011ec2:	fb18 f80a 	smulbb	r8, r8, sl
 8011ec6:	fb09 8802 	mla	r8, r9, r2, r8
 8011eca:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011ece:	fa1f f888 	uxth.w	r8, r8
 8011ed2:	fa5f fe8e 	uxtb.w	lr, lr
 8011ed6:	fb16 f60a 	smulbb	r6, r6, sl
 8011eda:	fa1f fc8c 	uxth.w	ip, ip
 8011ede:	fb0e 6602 	mla	r6, lr, r2, r6
 8011ee2:	f108 0901 	add.w	r9, r8, #1
 8011ee6:	b2b6      	uxth	r6, r6
 8011ee8:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 8011eec:	f10c 0901 	add.w	r9, ip, #1
 8011ef0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8011ef4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8011ef8:	1c72      	adds	r2, r6, #1
 8011efa:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8011efe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011f02:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8011f06:	ea48 080c 	orr.w	r8, r8, ip
 8011f0a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011f0e:	ea48 0806 	orr.w	r8, r8, r6
 8011f12:	f825 8001 	strh.w	r8, [r5, r1]
 8011f16:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011f18:	4414      	add	r4, r2
 8011f1a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011f1c:	3f01      	subs	r7, #1
 8011f1e:	4410      	add	r0, r2
 8011f20:	e74d      	b.n	8011dbe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8011f22:	f06f 0201 	mvn.w	r2, #1
 8011f26:	08f6      	lsrs	r6, r6, #3
 8011f28:	fb02 fe07 	mul.w	lr, r2, r7
 8011f2c:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 8011f30:	ea46 06c8 	orr.w	r6, r6, r8, lsl #3
 8011f34:	f825 600e 	strh.w	r6, [r5, lr]
 8011f38:	e7ed      	b.n	8011f16 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011f3a:	f04f 0e00 	mov.w	lr, #0
 8011f3e:	eba3 020e 	sub.w	r2, r3, lr
 8011f42:	2a00      	cmp	r2, #0
 8011f44:	f77f af3e 	ble.w	8011dc4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 8011f48:	9903      	ldr	r1, [sp, #12]
 8011f4a:	1422      	asrs	r2, r4, #16
 8011f4c:	1406      	asrs	r6, r0, #16
 8011f4e:	fb01 2606 	mla	r6, r1, r6, r2
 8011f52:	0872      	lsrs	r2, r6, #1
 8011f54:	9904      	ldr	r1, [sp, #16]
 8011f56:	5c8a      	ldrb	r2, [r1, r2]
 8011f58:	07f1      	lsls	r1, r6, #31
 8011f5a:	bf54      	ite	pl
 8011f5c:	f002 020f 	andpl.w	r2, r2, #15
 8011f60:	1112      	asrmi	r2, r2, #4
 8011f62:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011f66:	b2d2      	uxtb	r2, r2
 8011f68:	2a00      	cmp	r2, #0
 8011f6a:	d04a      	beq.n	8012002 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e2>
 8011f6c:	492e      	ldr	r1, [pc, #184]	; (8012028 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x308>)
 8011f6e:	680e      	ldr	r6, [r1, #0]
 8011f70:	492e      	ldr	r1, [pc, #184]	; (801202c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30c>)
 8011f72:	ea4f 2926 	mov.w	r9, r6, asr #8
 8011f76:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 8011f7a:	2aff      	cmp	r2, #255	; 0xff
 8011f7c:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 8011f80:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8011f84:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8011f88:	b2f6      	uxtb	r6, r6
 8011f8a:	d041      	beq.n	8012010 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f0>
 8011f8c:	f835 c01e 	ldrh.w	ip, [r5, lr, lsl #1]
 8011f90:	fa1f fa82 	uxth.w	sl, r2
 8011f94:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011f98:	43d2      	mvns	r2, r2
 8011f9a:	b2d2      	uxtb	r2, r2
 8011f9c:	fb19 f90a 	smulbb	r9, r9, sl
 8011fa0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011fa4:	fb07 9702 	mla	r7, r7, r2, r9
 8011fa8:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8011fac:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011fb0:	fb18 f80a 	smulbb	r8, r8, sl
 8011fb4:	fb09 8802 	mla	r8, r9, r2, r8
 8011fb8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011fbc:	fa1f f888 	uxth.w	r8, r8
 8011fc0:	fa5f fc8c 	uxtb.w	ip, ip
 8011fc4:	fb16 f60a 	smulbb	r6, r6, sl
 8011fc8:	b2bf      	uxth	r7, r7
 8011fca:	fb0c 6602 	mla	r6, ip, r2, r6
 8011fce:	f108 0901 	add.w	r9, r8, #1
 8011fd2:	b2b6      	uxth	r6, r6
 8011fd4:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 8011fd8:	f107 0901 	add.w	r9, r7, #1
 8011fdc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8011fe0:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8011fe4:	1c72      	adds	r2, r6, #1
 8011fe6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8011fea:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011fee:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8011ff2:	ea48 0807 	orr.w	r8, r8, r7
 8011ff6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011ffa:	ea48 0806 	orr.w	r8, r8, r6
 8011ffe:	f825 801e 	strh.w	r8, [r5, lr, lsl #1]
 8012002:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012004:	4414      	add	r4, r2
 8012006:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012008:	f10e 0e01 	add.w	lr, lr, #1
 801200c:	4410      	add	r0, r2
 801200e:	e796      	b.n	8011f3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21e>
 8012010:	08f6      	lsrs	r6, r6, #3
 8012012:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 8012016:	ea46 06c8 	orr.w	r6, r6, r8, lsl #3
 801201a:	f825 601e 	strh.w	r6, [r5, lr, lsl #1]
 801201e:	e7f0      	b.n	8012002 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e2>
 8012020:	b007      	add	sp, #28
 8012022:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012026:	bf00      	nop
 8012028:	20026eb8 	.word	0x20026eb8
 801202c:	0007fff8 	.word	0x0007fff8

08012030 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8012030:	4770      	bx	lr

08012032 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8012032:	4770      	bx	lr

08012034 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8012034:	4770      	bx	lr

08012036 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8012036:	4770      	bx	lr

08012038 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012038:	4770      	bx	lr

0801203a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801203a:	4770      	bx	lr

0801203c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801203c:	4770      	bx	lr

0801203e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801203e:	4770      	bx	lr

08012040 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012040:	4770      	bx	lr

08012042 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8012042:	4770      	bx	lr

08012044 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012044:	4770      	bx	lr

08012046 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012046:	4770      	bx	lr

08012048 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012048:	4770      	bx	lr

0801204a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801204a:	4770      	bx	lr

0801204c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801204c:	4770      	bx	lr

0801204e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801204e:	4770      	bx	lr

08012050 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8012050:	4770      	bx	lr

08012052 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8012052:	4770      	bx	lr

08012054 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8012054:	4770      	bx	lr

08012056 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8012056:	4770      	bx	lr

08012058 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012058:	4770      	bx	lr

0801205a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801205a:	4770      	bx	lr

0801205c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801205c:	4770      	bx	lr

0801205e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801205e:	4770      	bx	lr

08012060 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8012060:	4770      	bx	lr

08012062 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8012062:	4770      	bx	lr

08012064 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8012064:	4770      	bx	lr

08012066 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8012066:	4770      	bx	lr

08012068 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8012068:	b508      	push	{r3, lr}
 801206a:	4b06      	ldr	r3, [pc, #24]	; (8012084 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 801206c:	8818      	ldrh	r0, [r3, #0]
 801206e:	b928      	cbnz	r0, 801207c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8012070:	4b05      	ldr	r3, [pc, #20]	; (8012088 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 8012072:	4a06      	ldr	r2, [pc, #24]	; (801208c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 8012074:	4806      	ldr	r0, [pc, #24]	; (8012090 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 8012076:	21d7      	movs	r1, #215	; 0xd7
 8012078:	f009 f894 	bl	801b1a4 <__assert_func>
 801207c:	0040      	lsls	r0, r0, #1
 801207e:	b280      	uxth	r0, r0
 8012080:	bd08      	pop	{r3, pc}
 8012082:	bf00      	nop
 8012084:	20026eaa 	.word	0x20026eaa
 8012088:	0801f505 	.word	0x0801f505
 801208c:	0801fa8b 	.word	0x0801fa8b
 8012090:	0801f547 	.word	0x0801f547

08012094 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8012094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012098:	b08d      	sub	sp, #52	; 0x34
 801209a:	460f      	mov	r7, r1
 801209c:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 80120a0:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 80120a4:	4616      	mov	r6, r2
 80120a6:	f1b9 0f00 	cmp.w	r9, #0
 80120aa:	d046      	beq.n	801213a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 80120ac:	6810      	ldr	r0, [r2, #0]
 80120ae:	6851      	ldr	r1, [r2, #4]
 80120b0:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8012278 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>
 80120b4:	ad08      	add	r5, sp, #32
 80120b6:	c503      	stmia	r5!, {r0, r1}
 80120b8:	6818      	ldr	r0, [r3, #0]
 80120ba:	6859      	ldr	r1, [r3, #4]
 80120bc:	ad0a      	add	r5, sp, #40	; 0x28
 80120be:	c503      	stmia	r5!, {r0, r1}
 80120c0:	a808      	add	r0, sp, #32
 80120c2:	f7fb f95f 	bl	800d384 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80120c6:	4631      	mov	r1, r6
 80120c8:	a80a      	add	r0, sp, #40	; 0x28
 80120ca:	f7fb f943 	bl	800d354 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80120ce:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80120d2:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 80120d6:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 80120da:	f8d8 0000 	ldr.w	r0, [r8]
 80120de:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	; 0x2c
 80120e2:	fb16 2103 	smlabb	r1, r6, r3, r2
 80120e6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80120ea:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80120ee:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80120f2:	440a      	add	r2, r1
 80120f4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80120f8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80120fc:	4413      	add	r3, r2
 80120fe:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8012102:	6803      	ldr	r3, [r0, #0]
 8012104:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012106:	4798      	blx	r3
 8012108:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801210c:	d018      	beq.n	8012140 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 801210e:	f010 0f04 	tst.w	r0, #4
 8012112:	d019      	beq.n	8012148 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8012114:	f8d8 0000 	ldr.w	r0, [r8]
 8012118:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801211c:	6801      	ldr	r1, [r0, #0]
 801211e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8012122:	e9cd 9403 	strd	r9, r4, [sp, #12]
 8012126:	b2bf      	uxth	r7, r7
 8012128:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 801212c:	9402      	str	r4, [sp, #8]
 801212e:	b2ad      	uxth	r5, r5
 8012130:	9701      	str	r7, [sp, #4]
 8012132:	9500      	str	r5, [sp, #0]
 8012134:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 8012136:	4631      	mov	r1, r6
 8012138:	47a0      	blx	r4
 801213a:	b00d      	add	sp, #52	; 0x34
 801213c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012140:	b914      	cbnz	r4, 8012148 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8012142:	f010 0f01 	tst.w	r0, #1
 8012146:	e7e4      	b.n	8012112 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8012148:	f8d8 0000 	ldr.w	r0, [r8]
 801214c:	6803      	ldr	r3, [r0, #0]
 801214e:	6a1b      	ldr	r3, [r3, #32]
 8012150:	4798      	blx	r3
 8012152:	4a48      	ldr	r2, [pc, #288]	; (8012274 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e0>)
 8012154:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8012158:	8814      	ldrh	r4, [r2, #0]
 801215a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801215e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012162:	fb01 3404 	mla	r4, r1, r4, r3
 8012166:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801216a:	4692      	mov	sl, r2
 801216c:	d118      	bne.n	80121a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x10c>
 801216e:	ea4f 0b45 	mov.w	fp, r5, lsl #1
 8012172:	f04f 0900 	mov.w	r9, #0
 8012176:	f8d8 0000 	ldr.w	r0, [r8]
 801217a:	45b9      	cmp	r9, r7
 801217c:	6803      	ldr	r3, [r0, #0]
 801217e:	da73      	bge.n	8012268 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 8012180:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8012182:	4632      	mov	r2, r6
 8012184:	465b      	mov	r3, fp
 8012186:	4621      	mov	r1, r4
 8012188:	47a8      	blx	r5
 801218a:	f8ba 3000 	ldrh.w	r3, [sl]
 801218e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012192:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8012196:	f109 0901 	add.w	r9, r9, #1
 801219a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801219e:	e7ea      	b.n	8012176 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xe2>
 80121a0:	f1c9 08ff 	rsb	r8, r9, #255	; 0xff
 80121a4:	ea25 7ae5 	bic.w	sl, r5, r5, asr #31
 80121a8:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 80121ac:	f04f 0b00 	mov.w	fp, #0
 80121b0:	fa1f f389 	uxth.w	r3, r9
 80121b4:	fa1f f888 	uxth.w	r8, r8
 80121b8:	9207      	str	r2, [sp, #28]
 80121ba:	45bb      	cmp	fp, r7
 80121bc:	da54      	bge.n	8012268 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 80121be:	f04f 0e00 	mov.w	lr, #0
 80121c2:	45ae      	cmp	lr, r5
 80121c4:	da41      	bge.n	801224a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1b6>
 80121c6:	f834 101e 	ldrh.w	r1, [r4, lr, lsl #1]
 80121ca:	f836 201e 	ldrh.w	r2, [r6, lr, lsl #1]
 80121ce:	1208      	asrs	r0, r1, #8
 80121d0:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80121d4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80121d8:	fb10 f008 	smulbb	r0, r0, r8
 80121dc:	ea4f 09e1 	mov.w	r9, r1, asr #3
 80121e0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80121e4:	00c9      	lsls	r1, r1, #3
 80121e6:	fb0c 0c03 	mla	ip, ip, r3, r0
 80121ea:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80121ee:	10d0      	asrs	r0, r2, #3
 80121f0:	b2c9      	uxtb	r1, r1
 80121f2:	00d2      	lsls	r2, r2, #3
 80121f4:	fa1f fc8c 	uxth.w	ip, ip
 80121f8:	fb19 f908 	smulbb	r9, r9, r8
 80121fc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8012200:	b2d2      	uxtb	r2, r2
 8012202:	fb11 f108 	smulbb	r1, r1, r8
 8012206:	fb00 9003 	mla	r0, r0, r3, r9
 801220a:	fb02 1203 	mla	r2, r2, r3, r1
 801220e:	f10c 0901 	add.w	r9, ip, #1
 8012212:	b292      	uxth	r2, r2
 8012214:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8012218:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801221c:	f102 0c01 	add.w	ip, r2, #1
 8012220:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8012224:	b280      	uxth	r0, r0
 8012226:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801222a:	ea49 0c02 	orr.w	ip, r9, r2
 801222e:	f100 0901 	add.w	r9, r0, #1
 8012232:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 8012236:	0940      	lsrs	r0, r0, #5
 8012238:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801223c:	ea4c 0c00 	orr.w	ip, ip, r0
 8012240:	f824 c01e 	strh.w	ip, [r4, lr, lsl #1]
 8012244:	f10e 0e01 	add.w	lr, lr, #1
 8012248:	e7bb      	b.n	80121c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x12e>
 801224a:	9a07      	ldr	r2, [sp, #28]
 801224c:	8812      	ldrh	r2, [r2, #0]
 801224e:	1b52      	subs	r2, r2, r5
 8012250:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 8012254:	4414      	add	r4, r2
 8012256:	f9bd 2024 	ldrsh.w	r2, [sp, #36]	; 0x24
 801225a:	1b52      	subs	r2, r2, r5
 801225c:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 8012260:	4416      	add	r6, r2
 8012262:	f10b 0b01 	add.w	fp, fp, #1
 8012266:	e7a8      	b.n	80121ba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x126>
 8012268:	4b03      	ldr	r3, [pc, #12]	; (8012278 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>)
 801226a:	6818      	ldr	r0, [r3, #0]
 801226c:	6803      	ldr	r3, [r0, #0]
 801226e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012270:	4798      	blx	r3
 8012272:	e762      	b.n	801213a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8012274:	20026eaa 	.word	0x20026eaa
 8012278:	20026eb0 	.word	0x20026eb0

0801227c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801227c:	b510      	push	{r4, lr}
 801227e:	2104      	movs	r1, #4
 8012280:	4604      	mov	r4, r0
 8012282:	f008 ff63 	bl	801b14c <_ZdlPvj>
 8012286:	4620      	mov	r0, r4
 8012288:	bd10      	pop	{r4, pc}

0801228a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801228a:	b510      	push	{r4, lr}
 801228c:	2104      	movs	r1, #4
 801228e:	4604      	mov	r4, r0
 8012290:	f008 ff5c 	bl	801b14c <_ZdlPvj>
 8012294:	4620      	mov	r0, r4
 8012296:	bd10      	pop	{r4, pc}

08012298 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8012298:	b510      	push	{r4, lr}
 801229a:	2104      	movs	r1, #4
 801229c:	4604      	mov	r4, r0
 801229e:	f008 ff55 	bl	801b14c <_ZdlPvj>
 80122a2:	4620      	mov	r0, r4
 80122a4:	bd10      	pop	{r4, pc}

080122a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80122a6:	b510      	push	{r4, lr}
 80122a8:	2104      	movs	r1, #4
 80122aa:	4604      	mov	r4, r0
 80122ac:	f008 ff4e 	bl	801b14c <_ZdlPvj>
 80122b0:	4620      	mov	r0, r4
 80122b2:	bd10      	pop	{r4, pc}

080122b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80122b4:	b510      	push	{r4, lr}
 80122b6:	2104      	movs	r1, #4
 80122b8:	4604      	mov	r4, r0
 80122ba:	f008 ff47 	bl	801b14c <_ZdlPvj>
 80122be:	4620      	mov	r0, r4
 80122c0:	bd10      	pop	{r4, pc}

080122c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80122c2:	b510      	push	{r4, lr}
 80122c4:	2104      	movs	r1, #4
 80122c6:	4604      	mov	r4, r0
 80122c8:	f008 ff40 	bl	801b14c <_ZdlPvj>
 80122cc:	4620      	mov	r0, r4
 80122ce:	bd10      	pop	{r4, pc}

080122d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80122d0:	b510      	push	{r4, lr}
 80122d2:	2104      	movs	r1, #4
 80122d4:	4604      	mov	r4, r0
 80122d6:	f008 ff39 	bl	801b14c <_ZdlPvj>
 80122da:	4620      	mov	r0, r4
 80122dc:	bd10      	pop	{r4, pc}

080122de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80122de:	b510      	push	{r4, lr}
 80122e0:	2104      	movs	r1, #4
 80122e2:	4604      	mov	r4, r0
 80122e4:	f008 ff32 	bl	801b14c <_ZdlPvj>
 80122e8:	4620      	mov	r0, r4
 80122ea:	bd10      	pop	{r4, pc}

080122ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80122ec:	b510      	push	{r4, lr}
 80122ee:	2104      	movs	r1, #4
 80122f0:	4604      	mov	r4, r0
 80122f2:	f008 ff2b 	bl	801b14c <_ZdlPvj>
 80122f6:	4620      	mov	r0, r4
 80122f8:	bd10      	pop	{r4, pc}

080122fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80122fa:	b510      	push	{r4, lr}
 80122fc:	2104      	movs	r1, #4
 80122fe:	4604      	mov	r4, r0
 8012300:	f008 ff24 	bl	801b14c <_ZdlPvj>
 8012304:	4620      	mov	r0, r4
 8012306:	bd10      	pop	{r4, pc}

08012308 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012308:	b510      	push	{r4, lr}
 801230a:	2104      	movs	r1, #4
 801230c:	4604      	mov	r4, r0
 801230e:	f008 ff1d 	bl	801b14c <_ZdlPvj>
 8012312:	4620      	mov	r0, r4
 8012314:	bd10      	pop	{r4, pc}

08012316 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012316:	b510      	push	{r4, lr}
 8012318:	2104      	movs	r1, #4
 801231a:	4604      	mov	r4, r0
 801231c:	f008 ff16 	bl	801b14c <_ZdlPvj>
 8012320:	4620      	mov	r0, r4
 8012322:	bd10      	pop	{r4, pc}

08012324 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8012324:	b510      	push	{r4, lr}
 8012326:	2104      	movs	r1, #4
 8012328:	4604      	mov	r4, r0
 801232a:	f008 ff0f 	bl	801b14c <_ZdlPvj>
 801232e:	4620      	mov	r0, r4
 8012330:	bd10      	pop	{r4, pc}

08012332 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8012332:	b510      	push	{r4, lr}
 8012334:	2104      	movs	r1, #4
 8012336:	4604      	mov	r4, r0
 8012338:	f008 ff08 	bl	801b14c <_ZdlPvj>
 801233c:	4620      	mov	r0, r4
 801233e:	bd10      	pop	{r4, pc}

08012340 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012340:	b510      	push	{r4, lr}
 8012342:	2104      	movs	r1, #4
 8012344:	4604      	mov	r4, r0
 8012346:	f008 ff01 	bl	801b14c <_ZdlPvj>
 801234a:	4620      	mov	r0, r4
 801234c:	bd10      	pop	{r4, pc}

0801234e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801234e:	b510      	push	{r4, lr}
 8012350:	2104      	movs	r1, #4
 8012352:	4604      	mov	r4, r0
 8012354:	f008 fefa 	bl	801b14c <_ZdlPvj>
 8012358:	4620      	mov	r0, r4
 801235a:	bd10      	pop	{r4, pc}

0801235c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801235c:	b510      	push	{r4, lr}
 801235e:	2104      	movs	r1, #4
 8012360:	4604      	mov	r4, r0
 8012362:	f008 fef3 	bl	801b14c <_ZdlPvj>
 8012366:	4620      	mov	r0, r4
 8012368:	bd10      	pop	{r4, pc}

0801236a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801236a:	b510      	push	{r4, lr}
 801236c:	2104      	movs	r1, #4
 801236e:	4604      	mov	r4, r0
 8012370:	f008 feec 	bl	801b14c <_ZdlPvj>
 8012374:	4620      	mov	r0, r4
 8012376:	bd10      	pop	{r4, pc}

08012378 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8012378:	b510      	push	{r4, lr}
 801237a:	2104      	movs	r1, #4
 801237c:	4604      	mov	r4, r0
 801237e:	f008 fee5 	bl	801b14c <_ZdlPvj>
 8012382:	4620      	mov	r0, r4
 8012384:	bd10      	pop	{r4, pc}

08012386 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8012386:	b510      	push	{r4, lr}
 8012388:	2104      	movs	r1, #4
 801238a:	4604      	mov	r4, r0
 801238c:	f008 fede 	bl	801b14c <_ZdlPvj>
 8012390:	4620      	mov	r0, r4
 8012392:	bd10      	pop	{r4, pc}

08012394 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8012394:	b510      	push	{r4, lr}
 8012396:	2104      	movs	r1, #4
 8012398:	4604      	mov	r4, r0
 801239a:	f008 fed7 	bl	801b14c <_ZdlPvj>
 801239e:	4620      	mov	r0, r4
 80123a0:	bd10      	pop	{r4, pc}

080123a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80123a2:	b510      	push	{r4, lr}
 80123a4:	2104      	movs	r1, #4
 80123a6:	4604      	mov	r4, r0
 80123a8:	f008 fed0 	bl	801b14c <_ZdlPvj>
 80123ac:	4620      	mov	r0, r4
 80123ae:	bd10      	pop	{r4, pc}

080123b0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80123b0:	b510      	push	{r4, lr}
 80123b2:	2104      	movs	r1, #4
 80123b4:	4604      	mov	r4, r0
 80123b6:	f008 fec9 	bl	801b14c <_ZdlPvj>
 80123ba:	4620      	mov	r0, r4
 80123bc:	bd10      	pop	{r4, pc}

080123be <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80123be:	b510      	push	{r4, lr}
 80123c0:	2104      	movs	r1, #4
 80123c2:	4604      	mov	r4, r0
 80123c4:	f008 fec2 	bl	801b14c <_ZdlPvj>
 80123c8:	4620      	mov	r0, r4
 80123ca:	bd10      	pop	{r4, pc}

080123cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80123cc:	b510      	push	{r4, lr}
 80123ce:	2104      	movs	r1, #4
 80123d0:	4604      	mov	r4, r0
 80123d2:	f008 febb 	bl	801b14c <_ZdlPvj>
 80123d6:	4620      	mov	r0, r4
 80123d8:	bd10      	pop	{r4, pc}

080123da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80123da:	b510      	push	{r4, lr}
 80123dc:	2104      	movs	r1, #4
 80123de:	4604      	mov	r4, r0
 80123e0:	f008 feb4 	bl	801b14c <_ZdlPvj>
 80123e4:	4620      	mov	r0, r4
 80123e6:	bd10      	pop	{r4, pc}

080123e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80123e8:	b510      	push	{r4, lr}
 80123ea:	2104      	movs	r1, #4
 80123ec:	4604      	mov	r4, r0
 80123ee:	f008 fead 	bl	801b14c <_ZdlPvj>
 80123f2:	4620      	mov	r0, r4
 80123f4:	bd10      	pop	{r4, pc}

080123f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80123f6:	b510      	push	{r4, lr}
 80123f8:	2104      	movs	r1, #4
 80123fa:	4604      	mov	r4, r0
 80123fc:	f008 fea6 	bl	801b14c <_ZdlPvj>
 8012400:	4620      	mov	r0, r4
 8012402:	bd10      	pop	{r4, pc}

08012404 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8012404:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012408:	460e      	mov	r6, r1
 801240a:	b08b      	sub	sp, #44	; 0x2c
 801240c:	4615      	mov	r5, r2
 801240e:	461c      	mov	r4, r3
 8012410:	b323      	cbz	r3, 801245c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8012412:	4608      	mov	r0, r1
 8012414:	f7f8 fbe2 	bl	800abdc <_ZNK8touchgfx4Rect7isEmptyEv>
 8012418:	bb00      	cbnz	r0, 801245c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 801241a:	6830      	ldr	r0, [r6, #0]
 801241c:	6871      	ldr	r1, [r6, #4]
 801241e:	4e55      	ldr	r6, [pc, #340]	; (8012574 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 8012420:	ab08      	add	r3, sp, #32
 8012422:	c303      	stmia	r3!, {r0, r1}
 8012424:	a808      	add	r0, sp, #32
 8012426:	f7fa ffad 	bl	800d384 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801242a:	6830      	ldr	r0, [r6, #0]
 801242c:	6803      	ldr	r3, [r0, #0]
 801242e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012430:	4798      	blx	r3
 8012432:	2cff      	cmp	r4, #255	; 0xff
 8012434:	d015      	beq.n	8012462 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5e>
 8012436:	f010 0f08 	tst.w	r0, #8
 801243a:	d015      	beq.n	8012468 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x64>
 801243c:	6830      	ldr	r0, [r6, #0]
 801243e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8012442:	6801      	ldr	r1, [r0, #0]
 8012444:	9402      	str	r4, [sp, #8]
 8012446:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 801244a:	9401      	str	r4, [sp, #4]
 801244c:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8012450:	9400      	str	r4, [sp, #0]
 8012452:	6c8c      	ldr	r4, [r1, #72]	; 0x48
 8012454:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8012458:	4629      	mov	r1, r5
 801245a:	47a0      	blx	r4
 801245c:	b00b      	add	sp, #44	; 0x2c
 801245e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012462:	f010 0f02 	tst.w	r0, #2
 8012466:	e7e8      	b.n	801243a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8012468:	6830      	ldr	r0, [r6, #0]
 801246a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801246e:	6803      	ldr	r3, [r0, #0]
 8012470:	f9bd 9026 	ldrsh.w	r9, [sp, #38]	; 0x26
 8012474:	6a1b      	ldr	r3, [r3, #32]
 8012476:	4798      	blx	r3
 8012478:	4a3f      	ldr	r2, [pc, #252]	; (8012578 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x174>)
 801247a:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801247e:	8816      	ldrh	r6, [r2, #0]
 8012480:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012484:	2cff      	cmp	r4, #255	; 0xff
 8012486:	fb06 1303 	mla	r3, r6, r3, r1
 801248a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801248e:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 8012492:	4616      	mov	r6, r2
 8012494:	ea28 71e8 	bic.w	r1, r8, r8, asr #31
 8012498:	d10a      	bne.n	80124b0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xac>
 801249a:	0049      	lsls	r1, r1, #1
 801249c:	2200      	movs	r2, #0
 801249e:	454a      	cmp	r2, r9
 80124a0:	da62      	bge.n	8012568 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x164>
 80124a2:	2300      	movs	r3, #0
 80124a4:	4543      	cmp	r3, r8
 80124a6:	da58      	bge.n	801255a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x156>
 80124a8:	f820 5013 	strh.w	r5, [r0, r3, lsl #1]
 80124ac:	3301      	adds	r3, #1
 80124ae:	e7f9      	b.n	80124a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>
 80124b0:	122b      	asrs	r3, r5, #8
 80124b2:	f1c4 07ff 	rsb	r7, r4, #255	; 0xff
 80124b6:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80124ba:	b2a4      	uxth	r4, r4
 80124bc:	4363      	muls	r3, r4
 80124be:	9305      	str	r3, [sp, #20]
 80124c0:	f3c5 06cc 	ubfx	r6, r5, #3, #13
 80124c4:	00eb      	lsls	r3, r5, #3
 80124c6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80124ca:	b2db      	uxtb	r3, r3
 80124cc:	0049      	lsls	r1, r1, #1
 80124ce:	4366      	muls	r6, r4
 80124d0:	4363      	muls	r3, r4
 80124d2:	9106      	str	r1, [sp, #24]
 80124d4:	f04f 0c00 	mov.w	ip, #0
 80124d8:	b2bf      	uxth	r7, r7
 80124da:	9207      	str	r2, [sp, #28]
 80124dc:	45cc      	cmp	ip, r9
 80124de:	da43      	bge.n	8012568 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x164>
 80124e0:	4682      	mov	sl, r0
 80124e2:	f04f 0e00 	mov.w	lr, #0
 80124e6:	45c6      	cmp	lr, r8
 80124e8:	da2d      	bge.n	8012546 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x142>
 80124ea:	f8ba 2000 	ldrh.w	r2, [sl]
 80124ee:	9905      	ldr	r1, [sp, #20]
 80124f0:	1214      	asrs	r4, r2, #8
 80124f2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80124f6:	fb14 f407 	smulbb	r4, r4, r7
 80124fa:	440c      	add	r4, r1
 80124fc:	10d1      	asrs	r1, r2, #3
 80124fe:	00d2      	lsls	r2, r2, #3
 8012500:	b2d2      	uxtb	r2, r2
 8012502:	fb12 f207 	smulbb	r2, r2, r7
 8012506:	b2a4      	uxth	r4, r4
 8012508:	441a      	add	r2, r3
 801250a:	b292      	uxth	r2, r2
 801250c:	1c65      	adds	r5, r4, #1
 801250e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8012512:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8012516:	fb11 f107 	smulbb	r1, r1, r7
 801251a:	1c55      	adds	r5, r2, #1
 801251c:	4431      	add	r1, r6
 801251e:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 8012522:	b289      	uxth	r1, r1
 8012524:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012528:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801252c:	4314      	orrs	r4, r2
 801252e:	1c4a      	adds	r2, r1, #1
 8012530:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8012534:	0949      	lsrs	r1, r1, #5
 8012536:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801253a:	430c      	orrs	r4, r1
 801253c:	f82a 4b02 	strh.w	r4, [sl], #2
 8012540:	f10e 0e01 	add.w	lr, lr, #1
 8012544:	e7cf      	b.n	80124e6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xe2>
 8012546:	9a07      	ldr	r2, [sp, #28]
 8012548:	9906      	ldr	r1, [sp, #24]
 801254a:	8812      	ldrh	r2, [r2, #0]
 801254c:	ebcb 0242 	rsb	r2, fp, r2, lsl #1
 8012550:	440a      	add	r2, r1
 8012552:	4410      	add	r0, r2
 8012554:	f10c 0c01 	add.w	ip, ip, #1
 8012558:	e7c0      	b.n	80124dc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd8>
 801255a:	8833      	ldrh	r3, [r6, #0]
 801255c:	ebcb 0343 	rsb	r3, fp, r3, lsl #1
 8012560:	440b      	add	r3, r1
 8012562:	4418      	add	r0, r3
 8012564:	3201      	adds	r2, #1
 8012566:	e79a      	b.n	801249e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9a>
 8012568:	4b02      	ldr	r3, [pc, #8]	; (8012574 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 801256a:	6818      	ldr	r0, [r3, #0]
 801256c:	6803      	ldr	r3, [r0, #0]
 801256e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012570:	4798      	blx	r3
 8012572:	e773      	b.n	801245c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8012574:	20026eb0 	.word	0x20026eb0
 8012578:	20026eaa 	.word	0x20026eaa

0801257c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801257c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012580:	4d9b      	ldr	r5, [pc, #620]	; (80127f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 8012582:	4690      	mov	r8, r2
 8012584:	682a      	ldr	r2, [r5, #0]
 8012586:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 801258a:	2a02      	cmp	r2, #2
 801258c:	b08f      	sub	sp, #60	; 0x3c
 801258e:	4604      	mov	r4, r0
 8012590:	4689      	mov	r9, r1
 8012592:	d106      	bne.n	80125a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8012594:	4b97      	ldr	r3, [pc, #604]	; (80127f4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 8012596:	4a98      	ldr	r2, [pc, #608]	; (80127f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8012598:	f240 21c2 	movw	r1, #706	; 0x2c2
 801259c:	4897      	ldr	r0, [pc, #604]	; (80127fc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 801259e:	f008 fe01 	bl	801b1a4 <__assert_func>
 80125a2:	ae0e      	add	r6, sp, #56	; 0x38
 80125a4:	f826 3d24 	strh.w	r3, [r6, #-36]!
 80125a8:	4630      	mov	r0, r6
 80125aa:	f7fd facf 	bl	800fb4c <_ZNK8touchgfx6Bitmap9getFormatEv>
 80125ae:	6823      	ldr	r3, [r4, #0]
 80125b0:	4607      	mov	r7, r0
 80125b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80125b4:	4620      	mov	r0, r4
 80125b6:	4798      	blx	r3
 80125b8:	4287      	cmp	r7, r0
 80125ba:	d004      	beq.n	80125c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 80125bc:	4b90      	ldr	r3, [pc, #576]	; (8012800 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 80125be:	4a8e      	ldr	r2, [pc, #568]	; (80127f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 80125c0:	f44f 7131 	mov.w	r1, #708	; 0x2c4
 80125c4:	e7ea      	b.n	801259c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80125c6:	4630      	mov	r0, r6
 80125c8:	f7fd fa3c 	bl	800fa44 <_ZNK8touchgfx6Bitmap7getDataEv>
 80125cc:	4607      	mov	r7, r0
 80125ce:	b920      	cbnz	r0, 80125da <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 80125d0:	4b8c      	ldr	r3, [pc, #560]	; (8012804 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x288>)
 80125d2:	4a89      	ldr	r2, [pc, #548]	; (80127f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 80125d4:	f240 21c6 	movw	r1, #710	; 0x2c6
 80125d8:	e7e0      	b.n	801259c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80125da:	f8d8 0000 	ldr.w	r0, [r8]
 80125de:	f8d8 1004 	ldr.w	r1, [r8, #4]
 80125e2:	f9b8 a000 	ldrsh.w	sl, [r8]
 80125e6:	ab06      	add	r3, sp, #24
 80125e8:	c303      	stmia	r3!, {r0, r1}
 80125ea:	f8d9 1004 	ldr.w	r1, [r9, #4]
 80125ee:	f8d9 0000 	ldr.w	r0, [r9]
 80125f2:	f9b8 9002 	ldrsh.w	r9, [r8, #2]
 80125f6:	ab08      	add	r3, sp, #32
 80125f8:	c303      	stmia	r3!, {r0, r1}
 80125fa:	4630      	mov	r0, r6
 80125fc:	f7fd f91a 	bl	800f834 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012600:	4680      	mov	r8, r0
 8012602:	4630      	mov	r0, r6
 8012604:	f7fd f950 	bl	800f8a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012608:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801260c:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8012610:	f10d 0920 	add.w	r9, sp, #32
 8012614:	a806      	add	r0, sp, #24
 8012616:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 801261a:	f8ad 802c 	strh.w	r8, [sp, #44]	; 0x2c
 801261e:	f7fa feb1 	bl	800d384 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012622:	4648      	mov	r0, r9
 8012624:	f7fa feae 	bl	800d384 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012628:	a80a      	add	r0, sp, #40	; 0x28
 801262a:	f7fa feab 	bl	800d384 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801262e:	4e76      	ldr	r6, [pc, #472]	; (8012808 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x28c>)
 8012630:	4b76      	ldr	r3, [pc, #472]	; (801280c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 8012632:	f9b6 2000 	ldrsh.w	r2, [r6]
 8012636:	f9b3 3000 	ldrsh.w	r3, [r3]
 801263a:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801263e:	2100      	movs	r1, #0
 8012640:	910c      	str	r1, [sp, #48]	; 0x30
 8012642:	4648      	mov	r0, r9
 8012644:	a90c      	add	r1, sp, #48	; 0x30
 8012646:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801264a:	f7f8 fa83 	bl	800ab54 <_ZN8touchgfx4RectaNERKS0_>
 801264e:	4648      	mov	r0, r9
 8012650:	f7f8 fac4 	bl	800abdc <_ZNK8touchgfx4Rect7isEmptyEv>
 8012654:	2800      	cmp	r0, #0
 8012656:	f040 80bd 	bne.w	80127d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 801265a:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 801265e:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8012662:	4288      	cmp	r0, r1
 8012664:	db37      	blt.n	80126d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8012666:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 801266a:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801266e:	429a      	cmp	r2, r3
 8012670:	db31      	blt.n	80126d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8012672:	f8bd c024 	ldrh.w	ip, [sp, #36]	; 0x24
 8012676:	4460      	add	r0, ip
 8012678:	f8bd c01c 	ldrh.w	ip, [sp, #28]
 801267c:	4461      	add	r1, ip
 801267e:	b200      	sxth	r0, r0
 8012680:	b209      	sxth	r1, r1
 8012682:	4288      	cmp	r0, r1
 8012684:	dc27      	bgt.n	80126d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8012686:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 801268a:	440a      	add	r2, r1
 801268c:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8012690:	440b      	add	r3, r1
 8012692:	b212      	sxth	r2, r2
 8012694:	b21b      	sxth	r3, r3
 8012696:	429a      	cmp	r2, r3
 8012698:	dc1d      	bgt.n	80126d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 801269a:	6823      	ldr	r3, [r4, #0]
 801269c:	4620      	mov	r0, r4
 801269e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80126a0:	4798      	blx	r3
 80126a2:	4682      	mov	sl, r0
 80126a4:	6828      	ldr	r0, [r5, #0]
 80126a6:	6803      	ldr	r3, [r0, #0]
 80126a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80126aa:	4798      	blx	r3
 80126ac:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80126b0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80126b4:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80126b8:	1a9b      	subs	r3, r3, r2
 80126ba:	b29b      	uxth	r3, r3
 80126bc:	b21c      	sxth	r4, r3
 80126be:	2c00      	cmp	r4, #0
 80126c0:	dc0e      	bgt.n	80126e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x164>
 80126c2:	bf1f      	itttt	ne
 80126c4:	f8ad 2020 	strhne.w	r2, [sp, #32]
 80126c8:	f8bd 2024 	ldrhne.w	r2, [sp, #36]	; 0x24
 80126cc:	189b      	addne	r3, r3, r2
 80126ce:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 80126d2:	463c      	mov	r4, r7
 80126d4:	e00a      	b.n	80126ec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x170>
 80126d6:	4b4e      	ldr	r3, [pc, #312]	; (8012810 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x294>)
 80126d8:	4a47      	ldr	r2, [pc, #284]	; (80127f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 80126da:	f44f 7135 	mov.w	r1, #724	; 0x2d4
 80126de:	e75d      	b.n	801259c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 80126e0:	ebab 0303 	sub.w	r3, fp, r3
 80126e4:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 80126e8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80126ec:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80126f0:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80126f4:	1a5b      	subs	r3, r3, r1
 80126f6:	b29b      	uxth	r3, r3
 80126f8:	b21a      	sxth	r2, r3
 80126fa:	2a00      	cmp	r2, #0
 80126fc:	dd4a      	ble.n	8012794 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x218>
 80126fe:	fb02 f20b 	mul.w	r2, r2, fp
 8012702:	eb04 0442 	add.w	r4, r4, r2, lsl #1
 8012706:	f8bd 202e 	ldrh.w	r2, [sp, #46]	; 0x2e
 801270a:	1ad3      	subs	r3, r2, r3
 801270c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012710:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8012714:	2b00      	cmp	r3, #0
 8012716:	dd5d      	ble.n	80127d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8012718:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801271c:	f1bc 0f00 	cmp.w	ip, #0
 8012720:	dd58      	ble.n	80127d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 8012722:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 8012726:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801272a:	fb0a f801 	mul.w	r8, sl, r1
 801272e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8012732:	4480      	add	r8, r0
 8012734:	8830      	ldrh	r0, [r6, #0]
 8012736:	f9bd 6024 	ldrsh.w	r6, [sp, #36]	; 0x24
 801273a:	42b3      	cmp	r3, r6
 801273c:	bfa8      	it	ge
 801273e:	4633      	movge	r3, r6
 8012740:	1a82      	subs	r2, r0, r2
 8012742:	4293      	cmp	r3, r2
 8012744:	bfa8      	it	ge
 8012746:	4613      	movge	r3, r2
 8012748:	4a30      	ldr	r2, [pc, #192]	; (801280c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 801274a:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 801274e:	8812      	ldrh	r2, [r2, #0]
 8012750:	4566      	cmp	r6, ip
 8012752:	eba2 0101 	sub.w	r1, r2, r1
 8012756:	bfa8      	it	ge
 8012758:	4666      	movge	r6, ip
 801275a:	428e      	cmp	r6, r1
 801275c:	4632      	mov	r2, r6
 801275e:	bfa8      	it	ge
 8012760:	460a      	movge	r2, r1
 8012762:	4298      	cmp	r0, r3
 8012764:	9202      	str	r2, [sp, #8]
 8012766:	d01e      	beq.n	80127a6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x22a>
 8012768:	005b      	lsls	r3, r3, #1
 801276a:	9303      	str	r3, [sp, #12]
 801276c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8012770:	f04f 0900 	mov.w	r9, #0
 8012774:	9b02      	ldr	r3, [sp, #8]
 8012776:	454b      	cmp	r3, r9
 8012778:	dd2c      	ble.n	80127d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 801277a:	6828      	ldr	r0, [r5, #0]
 801277c:	6803      	ldr	r3, [r0, #0]
 801277e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012780:	4642      	mov	r2, r8
 8012782:	461e      	mov	r6, r3
 8012784:	4621      	mov	r1, r4
 8012786:	9b03      	ldr	r3, [sp, #12]
 8012788:	47b0      	blx	r6
 801278a:	44d0      	add	r8, sl
 801278c:	445c      	add	r4, fp
 801278e:	f109 0901 	add.w	r9, r9, #1
 8012792:	e7ef      	b.n	8012774 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f8>
 8012794:	bf1f      	itttt	ne
 8012796:	f8bd 2026 	ldrhne.w	r2, [sp, #38]	; 0x26
 801279a:	f8ad 1022 	strhne.w	r1, [sp, #34]	; 0x22
 801279e:	189b      	addne	r3, r3, r2
 80127a0:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 80127a4:	e7b4      	b.n	8012710 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x194>
 80127a6:	4558      	cmp	r0, fp
 80127a8:	d1de      	bne.n	8012768 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ec>
 80127aa:	6828      	ldr	r0, [r5, #0]
 80127ac:	6803      	ldr	r3, [r0, #0]
 80127ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80127b0:	4798      	blx	r3
 80127b2:	07c3      	lsls	r3, r0, #31
 80127b4:	d512      	bpl.n	80127dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 80127b6:	6828      	ldr	r0, [r5, #0]
 80127b8:	9b02      	ldr	r3, [sp, #8]
 80127ba:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 80127be:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80127c2:	6803      	ldr	r3, [r0, #0]
 80127c4:	f8cd b000 	str.w	fp, [sp]
 80127c8:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 80127ca:	e899 0006 	ldmia.w	r9, {r1, r2}
 80127ce:	4623      	mov	r3, r4
 80127d0:	47a8      	blx	r5
 80127d2:	4607      	mov	r7, r0
 80127d4:	4638      	mov	r0, r7
 80127d6:	b00f      	add	sp, #60	; 0x3c
 80127d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80127dc:	6828      	ldr	r0, [r5, #0]
 80127de:	6803      	ldr	r3, [r0, #0]
 80127e0:	6add      	ldr	r5, [r3, #44]	; 0x2c
 80127e2:	9b02      	ldr	r3, [sp, #8]
 80127e4:	4642      	mov	r2, r8
 80127e6:	fb03 f30a 	mul.w	r3, r3, sl
 80127ea:	4621      	mov	r1, r4
 80127ec:	47a8      	blx	r5
 80127ee:	e7f1      	b.n	80127d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 80127f0:	20026eb0 	.word	0x20026eb0
 80127f4:	0801f2f7 	.word	0x0801f2f7
 80127f8:	0801fb3b 	.word	0x0801fb3b
 80127fc:	0801f3ab 	.word	0x0801f3ab
 8012800:	0801f3dd 	.word	0x0801f3dd
 8012804:	0801f432 	.word	0x0801f432
 8012808:	20026eaa 	.word	0x20026eaa
 801280c:	20026eac 	.word	0x20026eac
 8012810:	0801f470 	.word	0x0801f470

08012814 <_ZN8touchgfx8LCD16bppC1Ev>:
 8012814:	2200      	movs	r2, #0
 8012816:	4910      	ldr	r1, [pc, #64]	; (8012858 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8012818:	6042      	str	r2, [r0, #4]
 801281a:	6001      	str	r1, [r0, #0]
 801281c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8012820:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8012824:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8012828:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801282c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8012830:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8012834:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8012838:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801283c:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8012840:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8012844:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8012848:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801284c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8012850:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8012854:	4770      	bx	lr
 8012856:	bf00      	nop
 8012858:	0801f7b4 	.word	0x0801f7b4

0801285c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801285c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012860:	460c      	mov	r4, r1
 8012862:	b08d      	sub	sp, #52	; 0x34
 8012864:	4682      	mov	sl, r0
 8012866:	6808      	ldr	r0, [r1, #0]
 8012868:	6849      	ldr	r1, [r1, #4]
 801286a:	469b      	mov	fp, r3
 801286c:	ab08      	add	r3, sp, #32
 801286e:	c303      	stmia	r3!, {r0, r1}
 8012870:	6810      	ldr	r0, [r2, #0]
 8012872:	6851      	ldr	r1, [r2, #4]
 8012874:	ab0a      	add	r3, sp, #40	; 0x28
 8012876:	c303      	stmia	r3!, {r0, r1}
 8012878:	a808      	add	r0, sp, #32
 801287a:	f7fa fd83 	bl	800d384 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801287e:	4621      	mov	r1, r4
 8012880:	a80a      	add	r0, sp, #40	; 0x28
 8012882:	f7fa fd67 	bl	800d354 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012886:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801288a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801288e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8012892:	4c60      	ldr	r4, [pc, #384]	; (8012a14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8012894:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8012898:	6820      	ldr	r0, [r4, #0]
 801289a:	f9bd 902e 	ldrsh.w	r9, [sp, #46]	; 0x2e
 801289e:	fb11 2103 	smlabb	r1, r1, r3, r2
 80128a2:	eb0a 0a81 	add.w	sl, sl, r1, lsl #2
 80128a6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80128aa:	440a      	add	r2, r1
 80128ac:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80128b0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80128b4:	4413      	add	r3, r2
 80128b6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80128ba:	6803      	ldr	r3, [r0, #0]
 80128bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80128be:	4798      	blx	r3
 80128c0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80128c4:	d119      	bne.n	80128fa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 80128c6:	f010 0f20 	tst.w	r0, #32
 80128ca:	6820      	ldr	r0, [r4, #0]
 80128cc:	d018      	beq.n	8012900 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 80128ce:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 80128d2:	6801      	ldr	r1, [r0, #0]
 80128d4:	9402      	str	r4, [sp, #8]
 80128d6:	fa1f f489 	uxth.w	r4, r9
 80128da:	9401      	str	r4, [sp, #4]
 80128dc:	fa1f f488 	uxth.w	r4, r8
 80128e0:	f8cd b00c 	str.w	fp, [sp, #12]
 80128e4:	9400      	str	r4, [sp, #0]
 80128e6:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 80128e8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80128ec:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80128f0:	4651      	mov	r1, sl
 80128f2:	47a0      	blx	r4
 80128f4:	b00d      	add	sp, #52	; 0x34
 80128f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128fa:	f010 0f40 	tst.w	r0, #64	; 0x40
 80128fe:	e7e4      	b.n	80128ca <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8012900:	6803      	ldr	r3, [r0, #0]
 8012902:	6a1b      	ldr	r3, [r3, #32]
 8012904:	4798      	blx	r3
 8012906:	4a44      	ldr	r2, [pc, #272]	; (8012a18 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1bc>)
 8012908:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801290c:	8813      	ldrh	r3, [r2, #0]
 801290e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8012912:	9207      	str	r2, [sp, #28]
 8012914:	fb04 1303 	mla	r3, r4, r3, r1
 8012918:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801291c:	ea28 73e8 	bic.w	r3, r8, r8, asr #31
 8012920:	0099      	lsls	r1, r3, #2
 8012922:	005b      	lsls	r3, r3, #1
 8012924:	9106      	str	r1, [sp, #24]
 8012926:	9305      	str	r3, [sp, #20]
 8012928:	f04f 0c00 	mov.w	ip, #0
 801292c:	45cc      	cmp	ip, r9
 801292e:	da6b      	bge.n	8012a08 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1ac>
 8012930:	2300      	movs	r3, #0
 8012932:	4543      	cmp	r3, r8
 8012934:	da55      	bge.n	80129e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x186>
 8012936:	f85a 4023 	ldr.w	r4, [sl, r3, lsl #2]
 801293a:	0e25      	lsrs	r5, r4, #24
 801293c:	d013      	beq.n	8012966 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 801293e:	2dff      	cmp	r5, #255	; 0xff
 8012940:	ea4f 2714 	mov.w	r7, r4, lsr #8
 8012944:	d111      	bne.n	801296a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 8012946:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801294a:	d10e      	bne.n	801296a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 801294c:	0962      	lsrs	r2, r4, #5
 801294e:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8012952:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012956:	f027 0707 	bic.w	r7, r7, #7
 801295a:	4317      	orrs	r7, r2
 801295c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012960:	433c      	orrs	r4, r7
 8012962:	f820 4013 	strh.w	r4, [r0, r3, lsl #1]
 8012966:	3301      	adds	r3, #1
 8012968:	e7e3      	b.n	8012932 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd6>
 801296a:	fb0b f505 	mul.w	r5, fp, r5
 801296e:	1c6a      	adds	r2, r5, #1
 8012970:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 8012974:	eb02 2225 	add.w	r2, r2, r5, asr #8
 8012978:	1212      	asrs	r2, r2, #8
 801297a:	fa1f fe82 	uxth.w	lr, r2
 801297e:	120e      	asrs	r6, r1, #8
 8012980:	f3c4 4507 	ubfx	r5, r4, #16, #8
 8012984:	43d2      	mvns	r2, r2
 8012986:	b2d2      	uxtb	r2, r2
 8012988:	fb15 f50e 	smulbb	r5, r5, lr
 801298c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012990:	fb06 5602 	mla	r6, r6, r2, r5
 8012994:	b2e4      	uxtb	r4, r4
 8012996:	10cd      	asrs	r5, r1, #3
 8012998:	00c9      	lsls	r1, r1, #3
 801299a:	b2c9      	uxtb	r1, r1
 801299c:	fb14 f40e 	smulbb	r4, r4, lr
 80129a0:	fb01 4402 	mla	r4, r1, r2, r4
 80129a4:	b2ff      	uxtb	r7, r7
 80129a6:	b2b6      	uxth	r6, r6
 80129a8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80129ac:	b2a4      	uxth	r4, r4
 80129ae:	fb17 f70e 	smulbb	r7, r7, lr
 80129b2:	fb05 7702 	mla	r7, r5, r2, r7
 80129b6:	1c72      	adds	r2, r6, #1
 80129b8:	1c65      	adds	r5, r4, #1
 80129ba:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80129be:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 80129c2:	b2bf      	uxth	r7, r7
 80129c4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80129c8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80129cc:	432e      	orrs	r6, r5
 80129ce:	1c7d      	adds	r5, r7, #1
 80129d0:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 80129d4:	097f      	lsrs	r7, r7, #5
 80129d6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80129da:	433e      	orrs	r6, r7
 80129dc:	f820 6013 	strh.w	r6, [r0, r3, lsl #1]
 80129e0:	e7c1      	b.n	8012966 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 80129e2:	9b07      	ldr	r3, [sp, #28]
 80129e4:	9a05      	ldr	r2, [sp, #20]
 80129e6:	881b      	ldrh	r3, [r3, #0]
 80129e8:	eba3 0308 	sub.w	r3, r3, r8
 80129ec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80129f0:	4418      	add	r0, r3
 80129f2:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80129f6:	9a06      	ldr	r2, [sp, #24]
 80129f8:	eba3 0308 	sub.w	r3, r3, r8
 80129fc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8012a00:	449a      	add	sl, r3
 8012a02:	f10c 0c01 	add.w	ip, ip, #1
 8012a06:	e791      	b.n	801292c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd0>
 8012a08:	4b02      	ldr	r3, [pc, #8]	; (8012a14 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8012a0a:	6818      	ldr	r0, [r3, #0]
 8012a0c:	6803      	ldr	r3, [r0, #0]
 8012a0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012a10:	4798      	blx	r3
 8012a12:	e76f      	b.n	80128f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8012a14:	20026eb0 	.word	0x20026eb0
 8012a18:	20026eaa 	.word	0x20026eaa

08012a1c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8012a1c:	b570      	push	{r4, r5, r6, lr}
 8012a1e:	9d04      	ldr	r5, [sp, #16]
 8012a20:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8012a24:	460c      	mov	r4, r1
 8012a26:	4619      	mov	r1, r3
 8012a28:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8012a2c:	2a0c      	cmp	r2, #12
 8012a2e:	d820      	bhi.n	8012a72 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8012a30:	e8df f002 	tbb	[pc, r2]
 8012a34:	18121807 	.word	0x18121807
 8012a38:	18181818 	.word	0x18181818
 8012a3c:	18181818 	.word	0x18181818
 8012a40:	18          	.byte	0x18
 8012a41:	00          	.byte	0x00
 8012a42:	6802      	ldr	r2, [r0, #0]
 8012a44:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8012a48:	6916      	ldr	r6, [r2, #16]
 8012a4a:	462b      	mov	r3, r5
 8012a4c:	460a      	mov	r2, r1
 8012a4e:	46b4      	mov	ip, r6
 8012a50:	4621      	mov	r1, r4
 8012a52:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012a56:	4760      	bx	ip
 8012a58:	462a      	mov	r2, r5
 8012a5a:	4620      	mov	r0, r4
 8012a5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012a60:	f7ff befc 	b.w	801285c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8012a64:	4b03      	ldr	r3, [pc, #12]	; (8012a74 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 8012a66:	4a04      	ldr	r2, [pc, #16]	; (8012a78 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8012a68:	4804      	ldr	r0, [pc, #16]	; (8012a7c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 8012a6a:	f240 21bb 	movw	r1, #699	; 0x2bb
 8012a6e:	f008 fb99 	bl	801b1a4 <__assert_func>
 8012a72:	bd70      	pop	{r4, r5, r6, pc}
 8012a74:	0801f4d0 	.word	0x0801f4d0
 8012a78:	0801fbc1 	.word	0x0801fbc1
 8012a7c:	0801f3ab 	.word	0x0801f3ab

08012a80 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8012a80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a84:	b093      	sub	sp, #76	; 0x4c
 8012a86:	880f      	ldrh	r7, [r1, #0]
 8012a88:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8012a8c:	4681      	mov	r9, r0
 8012a8e:	4688      	mov	r8, r1
 8012a90:	4615      	mov	r5, r2
 8012a92:	b12f      	cbz	r7, 8012aa0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 8012a94:	4b71      	ldr	r3, [pc, #452]	; (8012c5c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8012a96:	4a72      	ldr	r2, [pc, #456]	; (8012c60 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8012a98:	4872      	ldr	r0, [pc, #456]	; (8012c64 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8012a9a:	21ec      	movs	r1, #236	; 0xec
 8012a9c:	f008 fb82 	bl	801b1a4 <__assert_func>
 8012aa0:	6810      	ldr	r0, [r2, #0]
 8012aa2:	6851      	ldr	r1, [r2, #4]
 8012aa4:	ac0e      	add	r4, sp, #56	; 0x38
 8012aa6:	c403      	stmia	r4!, {r0, r1}
 8012aa8:	6818      	ldr	r0, [r3, #0]
 8012aaa:	6859      	ldr	r1, [r3, #4]
 8012aac:	ac10      	add	r4, sp, #64	; 0x40
 8012aae:	c403      	stmia	r4!, {r0, r1}
 8012ab0:	a80e      	add	r0, sp, #56	; 0x38
 8012ab2:	f7fa fc67 	bl	800d384 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012ab6:	4629      	mov	r1, r5
 8012ab8:	a810      	add	r0, sp, #64	; 0x40
 8012aba:	f7fa fc4b 	bl	800d354 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012abe:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012ac2:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8012ac6:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8012aca:	4d67      	ldr	r5, [pc, #412]	; (8012c68 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 8012acc:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8012ad0:	6828      	ldr	r0, [r5, #0]
 8012ad2:	4c66      	ldr	r4, [pc, #408]	; (8012c6c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ec>)
 8012ad4:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012ad8:	4489      	add	r9, r1
 8012ada:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8012ade:	440a      	add	r2, r1
 8012ae0:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8012ae4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012ae8:	4413      	add	r3, r2
 8012aea:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8012aee:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 8012af2:	930a      	str	r3, [sp, #40]	; 0x28
 8012af4:	6803      	ldr	r3, [r0, #0]
 8012af6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012afa:	4798      	blx	r3
 8012afc:	2801      	cmp	r0, #1
 8012afe:	d11d      	bne.n	8012b3c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbc>
 8012b00:	220b      	movs	r2, #11
 8012b02:	9708      	str	r7, [sp, #32]
 8012b04:	9207      	str	r2, [sp, #28]
 8012b06:	8822      	ldrh	r2, [r4, #0]
 8012b08:	f8cd a010 	str.w	sl, [sp, #16]
 8012b0c:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8012b10:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8012b14:	9203      	str	r2, [sp, #12]
 8012b16:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8012b1a:	9202      	str	r2, [sp, #8]
 8012b1c:	fa1f f28b 	uxth.w	r2, fp
 8012b20:	9201      	str	r2, [sp, #4]
 8012b22:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8012b26:	9200      	str	r2, [sp, #0]
 8012b28:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012b2c:	6828      	ldr	r0, [r5, #0]
 8012b2e:	4642      	mov	r2, r8
 8012b30:	4649      	mov	r1, r9
 8012b32:	f7f8 ff3b 	bl	800b9ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8012b36:	b013      	add	sp, #76	; 0x4c
 8012b38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b3c:	6828      	ldr	r0, [r5, #0]
 8012b3e:	6803      	ldr	r3, [r0, #0]
 8012b40:	6a1b      	ldr	r3, [r3, #32]
 8012b42:	4798      	blx	r3
 8012b44:	8823      	ldrh	r3, [r4, #0]
 8012b46:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8012b4a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012b4e:	fb01 2303 	mla	r3, r1, r3, r2
 8012b52:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012b56:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
 8012b5a:	930b      	str	r3, [sp, #44]	; 0x2c
 8012b5c:	005b      	lsls	r3, r3, #1
 8012b5e:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8012b62:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012b64:	429f      	cmp	r7, r3
 8012b66:	da72      	bge.n	8012c4e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ce>
 8012b68:	2100      	movs	r1, #0
 8012b6a:	4559      	cmp	r1, fp
 8012b6c:	da5e      	bge.n	8012c2c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8012b6e:	f819 3001 	ldrb.w	r3, [r9, r1]
 8012b72:	2204      	movs	r2, #4
 8012b74:	fb12 2303 	smlabb	r3, r2, r3, r2
 8012b78:	f858 2003 	ldr.w	r2, [r8, r3]
 8012b7c:	0e15      	lsrs	r5, r2, #24
 8012b7e:	d013      	beq.n	8012ba8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8012b80:	2dff      	cmp	r5, #255	; 0xff
 8012b82:	ea4f 2412 	mov.w	r4, r2, lsr #8
 8012b86:	d111      	bne.n	8012bac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8012b88:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8012b8c:	d10e      	bne.n	8012bac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8012b8e:	0953      	lsrs	r3, r2, #5
 8012b90:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8012b94:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012b98:	f024 0407 	bic.w	r4, r4, #7
 8012b9c:	431c      	orrs	r4, r3
 8012b9e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8012ba2:	4314      	orrs	r4, r2
 8012ba4:	f820 4011 	strh.w	r4, [r0, r1, lsl #1]
 8012ba8:	3101      	adds	r1, #1
 8012baa:	e7de      	b.n	8012b6a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xea>
 8012bac:	fb0a f505 	mul.w	r5, sl, r5
 8012bb0:	1c6b      	adds	r3, r5, #1
 8012bb2:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8012bb6:	eb03 2325 	add.w	r3, r3, r5, asr #8
 8012bba:	121b      	asrs	r3, r3, #8
 8012bbc:	fa1f fe83 	uxth.w	lr, r3
 8012bc0:	ea4f 262c 	mov.w	r6, ip, asr #8
 8012bc4:	f3c2 4507 	ubfx	r5, r2, #16, #8
 8012bc8:	43db      	mvns	r3, r3
 8012bca:	b2db      	uxtb	r3, r3
 8012bcc:	fb15 f50e 	smulbb	r5, r5, lr
 8012bd0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012bd4:	fb06 5603 	mla	r6, r6, r3, r5
 8012bd8:	b2d2      	uxtb	r2, r2
 8012bda:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8012bde:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012be2:	fa5f fc8c 	uxtb.w	ip, ip
 8012be6:	fb12 f20e 	smulbb	r2, r2, lr
 8012bea:	fb0c 2203 	mla	r2, ip, r3, r2
 8012bee:	b2e4      	uxtb	r4, r4
 8012bf0:	b2b6      	uxth	r6, r6
 8012bf2:	fb14 f40e 	smulbb	r4, r4, lr
 8012bf6:	b292      	uxth	r2, r2
 8012bf8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012bfc:	fb05 4503 	mla	r5, r5, r3, r4
 8012c00:	1c73      	adds	r3, r6, #1
 8012c02:	1c54      	adds	r4, r2, #1
 8012c04:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8012c08:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8012c0c:	b2ad      	uxth	r5, r5
 8012c0e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8012c12:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8012c16:	4326      	orrs	r6, r4
 8012c18:	1c6c      	adds	r4, r5, #1
 8012c1a:	eb04 2415 	add.w	r4, r4, r5, lsr #8
 8012c1e:	0964      	lsrs	r4, r4, #5
 8012c20:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8012c24:	4326      	orrs	r6, r4
 8012c26:	f820 6011 	strh.w	r6, [r0, r1, lsl #1]
 8012c2a:	e7bd      	b.n	8012ba8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8012c2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012c2e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8012c30:	881b      	ldrh	r3, [r3, #0]
 8012c32:	eba3 030b 	sub.w	r3, r3, fp
 8012c36:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8012c3a:	4418      	add	r0, r3
 8012c3c:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8012c40:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8012c42:	eba3 030b 	sub.w	r3, r3, fp
 8012c46:	4413      	add	r3, r2
 8012c48:	4499      	add	r9, r3
 8012c4a:	3701      	adds	r7, #1
 8012c4c:	e789      	b.n	8012b62 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8012c4e:	4b06      	ldr	r3, [pc, #24]	; (8012c68 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 8012c50:	6818      	ldr	r0, [r3, #0]
 8012c52:	6803      	ldr	r3, [r0, #0]
 8012c54:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012c56:	4798      	blx	r3
 8012c58:	e76d      	b.n	8012b36 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb6>
 8012c5a:	bf00      	nop
 8012c5c:	0801f2a7 	.word	0x0801f2a7
 8012c60:	0801f992 	.word	0x0801f992
 8012c64:	0801f3ab 	.word	0x0801f3ab
 8012c68:	20026eb0 	.word	0x20026eb0
 8012c6c:	20026eaa 	.word	0x20026eaa

08012c70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8012c70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c74:	4614      	mov	r4, r2
 8012c76:	880a      	ldrh	r2, [r1, #0]
 8012c78:	b093      	sub	sp, #76	; 0x4c
 8012c7a:	2a02      	cmp	r2, #2
 8012c7c:	4606      	mov	r6, r0
 8012c7e:	4689      	mov	r9, r1
 8012c80:	f89d 7070 	ldrb.w	r7, [sp, #112]	; 0x70
 8012c84:	d006      	beq.n	8012c94 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8012c86:	4b7a      	ldr	r3, [pc, #488]	; (8012e70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 8012c88:	4a7a      	ldr	r2, [pc, #488]	; (8012e74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 8012c8a:	487b      	ldr	r0, [pc, #492]	; (8012e78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x208>)
 8012c8c:	f44f 71a3 	mov.w	r1, #326	; 0x146
 8012c90:	f008 fa88 	bl	801b1a4 <__assert_func>
 8012c94:	2f00      	cmp	r7, #0
 8012c96:	d04b      	beq.n	8012d30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8012c98:	6820      	ldr	r0, [r4, #0]
 8012c9a:	6861      	ldr	r1, [r4, #4]
 8012c9c:	f8df a1e0 	ldr.w	sl, [pc, #480]	; 8012e80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>
 8012ca0:	ad0e      	add	r5, sp, #56	; 0x38
 8012ca2:	c503      	stmia	r5!, {r0, r1}
 8012ca4:	6818      	ldr	r0, [r3, #0]
 8012ca6:	6859      	ldr	r1, [r3, #4]
 8012ca8:	ad10      	add	r5, sp, #64	; 0x40
 8012caa:	c503      	stmia	r5!, {r0, r1}
 8012cac:	a80e      	add	r0, sp, #56	; 0x38
 8012cae:	f7fa fb69 	bl	800d384 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012cb2:	4621      	mov	r1, r4
 8012cb4:	a810      	add	r0, sp, #64	; 0x40
 8012cb6:	f7fa fb4d 	bl	800d354 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012cba:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012cbe:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8012cc2:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8012cc6:	f8da 0000 	ldr.w	r0, [sl]
 8012cca:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	; 0x44
 8012cce:	f9bd 8046 	ldrsh.w	r8, [sp, #70]	; 0x46
 8012cd2:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012cd6:	1874      	adds	r4, r6, r1
 8012cd8:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8012cdc:	4e67      	ldr	r6, [pc, #412]	; (8012e7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x20c>)
 8012cde:	440a      	add	r2, r1
 8012ce0:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8012ce4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012ce8:	4413      	add	r3, r2
 8012cea:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8012cee:	6803      	ldr	r3, [r0, #0]
 8012cf0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012cf4:	4798      	blx	r3
 8012cf6:	2801      	cmp	r0, #1
 8012cf8:	d11d      	bne.n	8012d36 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 8012cfa:	2200      	movs	r2, #0
 8012cfc:	210b      	movs	r1, #11
 8012cfe:	e9cd 1207 	strd	r1, r2, [sp, #28]
 8012d02:	8831      	ldrh	r1, [r6, #0]
 8012d04:	9704      	str	r7, [sp, #16]
 8012d06:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8012d0a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8012d0e:	9203      	str	r2, [sp, #12]
 8012d10:	fa1f f288 	uxth.w	r2, r8
 8012d14:	9202      	str	r2, [sp, #8]
 8012d16:	b2ad      	uxth	r5, r5
 8012d18:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8012d1c:	9200      	str	r2, [sp, #0]
 8012d1e:	9501      	str	r5, [sp, #4]
 8012d20:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012d24:	f8da 0000 	ldr.w	r0, [sl]
 8012d28:	464a      	mov	r2, r9
 8012d2a:	4621      	mov	r1, r4
 8012d2c:	f7f8 fe3e 	bl	800b9ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8012d30:	b013      	add	sp, #76	; 0x4c
 8012d32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d36:	f8da 0000 	ldr.w	r0, [sl]
 8012d3a:	6803      	ldr	r3, [r0, #0]
 8012d3c:	6a1b      	ldr	r3, [r3, #32]
 8012d3e:	4798      	blx	r3
 8012d40:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012d44:	8833      	ldrh	r3, [r6, #0]
 8012d46:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8012d4a:	fb01 2303 	mla	r3, r1, r3, r2
 8012d4e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012d52:	2fff      	cmp	r7, #255	; 0xff
 8012d54:	f109 0304 	add.w	r3, r9, #4
 8012d58:	930a      	str	r3, [sp, #40]	; 0x28
 8012d5a:	ea25 72e5 	bic.w	r2, r5, r5, asr #31
 8012d5e:	d111      	bne.n	8012d84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x114>
 8012d60:	b212      	sxth	r2, r2
 8012d62:	ea4f 0e42 	mov.w	lr, r2, lsl #1
 8012d66:	2100      	movs	r1, #0
 8012d68:	4541      	cmp	r1, r8
 8012d6a:	da7a      	bge.n	8012e62 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 8012d6c:	2300      	movs	r3, #0
 8012d6e:	42ab      	cmp	r3, r5
 8012d70:	da6b      	bge.n	8012e4a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1da>
 8012d72:	f814 c003 	ldrb.w	ip, [r4, r3]
 8012d76:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8012d78:	f837 c01c 	ldrh.w	ip, [r7, ip, lsl #1]
 8012d7c:	f820 c013 	strh.w	ip, [r0, r3, lsl #1]
 8012d80:	3301      	adds	r3, #1
 8012d82:	e7f4      	b.n	8012d6e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xfe>
 8012d84:	b213      	sxth	r3, r2
 8012d86:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8012d8a:	930b      	str	r3, [sp, #44]	; 0x2c
 8012d8c:	005b      	lsls	r3, r3, #1
 8012d8e:	930c      	str	r3, [sp, #48]	; 0x30
 8012d90:	f04f 0900 	mov.w	r9, #0
 8012d94:	b2ba      	uxth	r2, r7
 8012d96:	fa1f fc8c 	uxth.w	ip, ip
 8012d9a:	960d      	str	r6, [sp, #52]	; 0x34
 8012d9c:	45c1      	cmp	r9, r8
 8012d9e:	da60      	bge.n	8012e62 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 8012da0:	46a3      	mov	fp, r4
 8012da2:	4682      	mov	sl, r0
 8012da4:	ebab 0304 	sub.w	r3, fp, r4
 8012da8:	429d      	cmp	r5, r3
 8012daa:	dd3e      	ble.n	8012e2a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ba>
 8012dac:	f81b 3b01 	ldrb.w	r3, [fp], #1
 8012db0:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8012db2:	f8ba 1000 	ldrh.w	r1, [sl]
 8012db6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012dba:	120e      	asrs	r6, r1, #8
 8012dbc:	121f      	asrs	r7, r3, #8
 8012dbe:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012dc2:	fb16 f60c 	smulbb	r6, r6, ip
 8012dc6:	ea4f 0ee1 	mov.w	lr, r1, asr #3
 8012dca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012dce:	00c9      	lsls	r1, r1, #3
 8012dd0:	fb07 6702 	mla	r7, r7, r2, r6
 8012dd4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8012dd8:	10de      	asrs	r6, r3, #3
 8012dda:	b2c9      	uxtb	r1, r1
 8012ddc:	00db      	lsls	r3, r3, #3
 8012dde:	fb1e fe0c 	smulbb	lr, lr, ip
 8012de2:	fb11 f10c 	smulbb	r1, r1, ip
 8012de6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012dea:	b2db      	uxtb	r3, r3
 8012dec:	b2bf      	uxth	r7, r7
 8012dee:	fb06 e602 	mla	r6, r6, r2, lr
 8012df2:	fb03 1302 	mla	r3, r3, r2, r1
 8012df6:	b2b6      	uxth	r6, r6
 8012df8:	b29b      	uxth	r3, r3
 8012dfa:	1c79      	adds	r1, r7, #1
 8012dfc:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8012e00:	f106 0e01 	add.w	lr, r6, #1
 8012e04:	1c59      	adds	r1, r3, #1
 8012e06:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8012e0a:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 8012e0e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012e12:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8012e16:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8012e1a:	430f      	orrs	r7, r1
 8012e1c:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8012e20:	ea47 070e 	orr.w	r7, r7, lr
 8012e24:	f82a 7b02 	strh.w	r7, [sl], #2
 8012e28:	e7bc      	b.n	8012da4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x134>
 8012e2a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012e2c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012e2e:	881b      	ldrh	r3, [r3, #0]
 8012e30:	1b5b      	subs	r3, r3, r5
 8012e32:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8012e36:	4418      	add	r0, r3
 8012e38:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8012e3c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8012e3e:	1b5b      	subs	r3, r3, r5
 8012e40:	440b      	add	r3, r1
 8012e42:	441c      	add	r4, r3
 8012e44:	f109 0901 	add.w	r9, r9, #1
 8012e48:	e7a8      	b.n	8012d9c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x12c>
 8012e4a:	8833      	ldrh	r3, [r6, #0]
 8012e4c:	1b5b      	subs	r3, r3, r5
 8012e4e:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 8012e52:	4418      	add	r0, r3
 8012e54:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8012e58:	1b5b      	subs	r3, r3, r5
 8012e5a:	4413      	add	r3, r2
 8012e5c:	441c      	add	r4, r3
 8012e5e:	3101      	adds	r1, #1
 8012e60:	e782      	b.n	8012d68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xf8>
 8012e62:	4b07      	ldr	r3, [pc, #28]	; (8012e80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>)
 8012e64:	6818      	ldr	r0, [r3, #0]
 8012e66:	6803      	ldr	r3, [r0, #0]
 8012e68:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012e6a:	4798      	blx	r3
 8012e6c:	e760      	b.n	8012d30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8012e6e:	bf00      	nop
 8012e70:	0801f165 	.word	0x0801f165
 8012e74:	0801f7fc 	.word	0x0801f7fc
 8012e78:	0801f3ab 	.word	0x0801f3ab
 8012e7c:	20026eaa 	.word	0x20026eaa
 8012e80:	20026eb0 	.word	0x20026eb0

08012e84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8012e84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e88:	4616      	mov	r6, r2
 8012e8a:	880a      	ldrh	r2, [r1, #0]
 8012e8c:	b093      	sub	sp, #76	; 0x4c
 8012e8e:	2a01      	cmp	r2, #1
 8012e90:	4681      	mov	r9, r0
 8012e92:	4688      	mov	r8, r1
 8012e94:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8012e98:	d006      	beq.n	8012ea8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 8012e9a:	4b6c      	ldr	r3, [pc, #432]	; (801304c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8012e9c:	4a6c      	ldr	r2, [pc, #432]	; (8013050 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1cc>)
 8012e9e:	486d      	ldr	r0, [pc, #436]	; (8013054 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>)
 8012ea0:	f240 11a1 	movw	r1, #417	; 0x1a1
 8012ea4:	f008 f97e 	bl	801b1a4 <__assert_func>
 8012ea8:	f1ba 0f00 	cmp.w	sl, #0
 8012eac:	d04a      	beq.n	8012f44 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8012eae:	6830      	ldr	r0, [r6, #0]
 8012eb0:	6871      	ldr	r1, [r6, #4]
 8012eb2:	4d69      	ldr	r5, [pc, #420]	; (8013058 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 8012eb4:	ac0e      	add	r4, sp, #56	; 0x38
 8012eb6:	c403      	stmia	r4!, {r0, r1}
 8012eb8:	6818      	ldr	r0, [r3, #0]
 8012eba:	6859      	ldr	r1, [r3, #4]
 8012ebc:	ac10      	add	r4, sp, #64	; 0x40
 8012ebe:	c403      	stmia	r4!, {r0, r1}
 8012ec0:	a80e      	add	r0, sp, #56	; 0x38
 8012ec2:	f7fa fa5f 	bl	800d384 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012ec6:	4631      	mov	r1, r6
 8012ec8:	a810      	add	r0, sp, #64	; 0x40
 8012eca:	f7fa fa43 	bl	800d354 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012ece:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012ed2:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8012ed6:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8012eda:	6828      	ldr	r0, [r5, #0]
 8012edc:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	; 0x44
 8012ee0:	4c5e      	ldr	r4, [pc, #376]	; (801305c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8012ee2:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012ee6:	4489      	add	r9, r1
 8012ee8:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8012eec:	440a      	add	r2, r1
 8012eee:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8012ef2:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012ef6:	4413      	add	r3, r2
 8012ef8:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8012efc:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 8012f00:	930a      	str	r3, [sp, #40]	; 0x28
 8012f02:	6803      	ldr	r3, [r0, #0]
 8012f04:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012f08:	4798      	blx	r3
 8012f0a:	2801      	cmp	r0, #1
 8012f0c:	d11d      	bne.n	8012f4a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 8012f0e:	220b      	movs	r2, #11
 8012f10:	2100      	movs	r1, #0
 8012f12:	e9cd 2107 	strd	r2, r1, [sp, #28]
 8012f16:	8822      	ldrh	r2, [r4, #0]
 8012f18:	f8cd a010 	str.w	sl, [sp, #16]
 8012f1c:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8012f20:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8012f24:	9203      	str	r2, [sp, #12]
 8012f26:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8012f2a:	9202      	str	r2, [sp, #8]
 8012f2c:	b2b6      	uxth	r6, r6
 8012f2e:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8012f32:	9200      	str	r2, [sp, #0]
 8012f34:	9601      	str	r6, [sp, #4]
 8012f36:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8012f3a:	6828      	ldr	r0, [r5, #0]
 8012f3c:	4642      	mov	r2, r8
 8012f3e:	4649      	mov	r1, r9
 8012f40:	f7f8 fd34 	bl	800b9ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8012f44:	b013      	add	sp, #76	; 0x4c
 8012f46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012f4a:	6828      	ldr	r0, [r5, #0]
 8012f4c:	6803      	ldr	r3, [r0, #0]
 8012f4e:	6a1b      	ldr	r3, [r3, #32]
 8012f50:	4798      	blx	r3
 8012f52:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8012f56:	8823      	ldrh	r3, [r4, #0]
 8012f58:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012f5c:	940d      	str	r4, [sp, #52]	; 0x34
 8012f5e:	fb01 2303 	mla	r3, r1, r3, r2
 8012f62:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012f66:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 8012f6a:	930b      	str	r3, [sp, #44]	; 0x2c
 8012f6c:	ea6f 010a 	mvn.w	r1, sl
 8012f70:	005b      	lsls	r3, r3, #1
 8012f72:	930c      	str	r3, [sp, #48]	; 0x30
 8012f74:	f04f 0e00 	mov.w	lr, #0
 8012f78:	b2c9      	uxtb	r1, r1
 8012f7a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012f7c:	459e      	cmp	lr, r3
 8012f7e:	da5f      	bge.n	8013040 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8012f80:	2700      	movs	r7, #0
 8012f82:	fa1f fb8a 	uxth.w	fp, sl
 8012f86:	42b7      	cmp	r7, r6
 8012f88:	da4a      	bge.n	8013020 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 8012f8a:	f819 3007 	ldrb.w	r3, [r9, r7]
 8012f8e:	2203      	movs	r2, #3
 8012f90:	2404      	movs	r4, #4
 8012f92:	fb12 4303 	smlabb	r3, r2, r3, r4
 8012f96:	eb08 0403 	add.w	r4, r8, r3
 8012f9a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8012f9e:	78a2      	ldrb	r2, [r4, #2]
 8012fa0:	7865      	ldrb	r5, [r4, #1]
 8012fa2:	f818 c003 	ldrb.w	ip, [r8, r3]
 8012fa6:	d10c      	bne.n	8012fc2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x13e>
 8012fa8:	4b2d      	ldr	r3, [pc, #180]	; (8013060 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8012faa:	00ed      	lsls	r5, r5, #3
 8012fac:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 8012fb0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012fb4:	432a      	orrs	r2, r5
 8012fb6:	ea42 02dc 	orr.w	r2, r2, ip, lsr #3
 8012fba:	f820 2017 	strh.w	r2, [r0, r7, lsl #1]
 8012fbe:	3701      	adds	r7, #1
 8012fc0:	e7e1      	b.n	8012f86 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x102>
 8012fc2:	f830 3017 	ldrh.w	r3, [r0, r7, lsl #1]
 8012fc6:	121c      	asrs	r4, r3, #8
 8012fc8:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8012fcc:	fb12 f20b 	smulbb	r2, r2, fp
 8012fd0:	fb04 2201 	mla	r2, r4, r1, r2
 8012fd4:	10dc      	asrs	r4, r3, #3
 8012fd6:	00db      	lsls	r3, r3, #3
 8012fd8:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8012fdc:	b2db      	uxtb	r3, r3
 8012fde:	fb15 f50b 	smulbb	r5, r5, fp
 8012fe2:	fb1c fc0b 	smulbb	ip, ip, fp
 8012fe6:	b292      	uxth	r2, r2
 8012fe8:	fb04 5501 	mla	r5, r4, r1, r5
 8012fec:	fb03 cc01 	mla	ip, r3, r1, ip
 8012ff0:	b2ad      	uxth	r5, r5
 8012ff2:	fa1f fc8c 	uxth.w	ip, ip
 8012ff6:	1c53      	adds	r3, r2, #1
 8012ff8:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8012ffc:	1c6c      	adds	r4, r5, #1
 8012ffe:	f10c 0301 	add.w	r3, ip, #1
 8013002:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8013006:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 801300a:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801300e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8013012:	096d      	lsrs	r5, r5, #5
 8013014:	ea42 020c 	orr.w	r2, r2, ip
 8013018:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801301c:	432a      	orrs	r2, r5
 801301e:	e7cc      	b.n	8012fba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x136>
 8013020:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013022:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013024:	881b      	ldrh	r3, [r3, #0]
 8013026:	1b9b      	subs	r3, r3, r6
 8013028:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801302c:	4418      	add	r0, r3
 801302e:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8013032:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013034:	1b9b      	subs	r3, r3, r6
 8013036:	4413      	add	r3, r2
 8013038:	4499      	add	r9, r3
 801303a:	f10e 0e01 	add.w	lr, lr, #1
 801303e:	e79c      	b.n	8012f7a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf6>
 8013040:	4b05      	ldr	r3, [pc, #20]	; (8013058 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 8013042:	6818      	ldr	r0, [r3, #0]
 8013044:	6803      	ldr	r3, [r0, #0]
 8013046:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8013048:	4798      	blx	r3
 801304a:	e77b      	b.n	8012f44 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 801304c:	0801f1b3 	.word	0x0801f1b3
 8013050:	0801f885 	.word	0x0801f885
 8013054:	0801f3ab 	.word	0x0801f3ab
 8013058:	20026eb0 	.word	0x20026eb0
 801305c:	20026eaa 	.word	0x20026eaa
 8013060:	fffff800 	.word	0xfffff800

08013064 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8013064:	b430      	push	{r4, r5}
 8013066:	780d      	ldrb	r5, [r1, #0]
 8013068:	f89d 4008 	ldrb.w	r4, [sp, #8]
 801306c:	2d01      	cmp	r5, #1
 801306e:	d00a      	beq.n	8013086 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8013070:	d305      	bcc.n	801307e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8013072:	2d02      	cmp	r5, #2
 8013074:	d10b      	bne.n	801308e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8013076:	9402      	str	r4, [sp, #8]
 8013078:	bc30      	pop	{r4, r5}
 801307a:	f7ff bdf9 	b.w	8012c70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801307e:	9402      	str	r4, [sp, #8]
 8013080:	bc30      	pop	{r4, r5}
 8013082:	f7ff bcfd 	b.w	8012a80 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8013086:	9402      	str	r4, [sp, #8]
 8013088:	bc30      	pop	{r4, r5}
 801308a:	f7ff befb 	b.w	8012e84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801308e:	bc30      	pop	{r4, r5}
 8013090:	4770      	bx	lr
	...

08013094 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8013094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013098:	4605      	mov	r5, r0
 801309a:	b089      	sub	sp, #36	; 0x24
 801309c:	6810      	ldr	r0, [r2, #0]
 801309e:	f89d 9048 	ldrb.w	r9, [sp, #72]	; 0x48
 80130a2:	460c      	mov	r4, r1
 80130a4:	6851      	ldr	r1, [r2, #4]
 80130a6:	ae04      	add	r6, sp, #16
 80130a8:	c603      	stmia	r6!, {r0, r1}
 80130aa:	6818      	ldr	r0, [r3, #0]
 80130ac:	6859      	ldr	r1, [r3, #4]
 80130ae:	ae06      	add	r6, sp, #24
 80130b0:	4617      	mov	r7, r2
 80130b2:	c603      	stmia	r6!, {r0, r1}
 80130b4:	a804      	add	r0, sp, #16
 80130b6:	f7fa f965 	bl	800d384 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80130ba:	4639      	mov	r1, r7
 80130bc:	a806      	add	r0, sp, #24
 80130be:	f7fa f949 	bl	800d354 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80130c2:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 80130c6:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80130ca:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80130ce:	f9bd 801c 	ldrsh.w	r8, [sp, #28]
 80130d2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80130d6:	eb05 0541 	add.w	r5, r5, r1, lsl #1
 80130da:	440c      	add	r4, r1
 80130dc:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 80130e0:	440a      	add	r2, r1
 80130e2:	f8ad 2018 	strh.w	r2, [sp, #24]
 80130e6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80130ea:	4413      	add	r3, r2
 80130ec:	f8ad 301a 	strh.w	r3, [sp, #26]
 80130f0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80130f4:	9300      	str	r3, [sp, #0]
 80130f6:	4b80      	ldr	r3, [pc, #512]	; (80132f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 80130f8:	6818      	ldr	r0, [r3, #0]
 80130fa:	6803      	ldr	r3, [r0, #0]
 80130fc:	6a1b      	ldr	r3, [r3, #32]
 80130fe:	4798      	blx	r3
 8013100:	4b7e      	ldr	r3, [pc, #504]	; (80132fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x268>)
 8013102:	f9bd 601a 	ldrsh.w	r6, [sp, #26]
 8013106:	881a      	ldrh	r2, [r3, #0]
 8013108:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 801310c:	fb06 1202 	mla	r2, r6, r2, r1
 8013110:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8013114:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013118:	ea28 72e8 	bic.w	r2, r8, r8, asr #31
 801311c:	b212      	sxth	r2, r2
 801311e:	d117      	bne.n	8013150 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xbc>
 8013120:	9201      	str	r2, [sp, #4]
 8013122:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 8013126:	f04f 0a00 	mov.w	sl, #0
 801312a:	9302      	str	r3, [sp, #8]
 801312c:	9b00      	ldr	r3, [sp, #0]
 801312e:	459a      	cmp	sl, r3
 8013130:	f280 80d9 	bge.w	80132e6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 8013134:	2100      	movs	r1, #0
 8013136:	4541      	cmp	r1, r8
 8013138:	f280 80c1 	bge.w	80132be <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x22a>
 801313c:	5c63      	ldrb	r3, [r4, r1]
 801313e:	b12b      	cbz	r3, 801314c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 8013140:	2bff      	cmp	r3, #255	; 0xff
 8013142:	f835 e011 	ldrh.w	lr, [r5, r1, lsl #1]
 8013146:	d176      	bne.n	8013236 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x1a2>
 8013148:	f820 e011 	strh.w	lr, [r0, r1, lsl #1]
 801314c:	3101      	adds	r1, #1
 801314e:	e7f2      	b.n	8013136 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa2>
 8013150:	9202      	str	r2, [sp, #8]
 8013152:	0052      	lsls	r2, r2, #1
 8013154:	9201      	str	r2, [sp, #4]
 8013156:	f04f 0b00 	mov.w	fp, #0
 801315a:	9303      	str	r3, [sp, #12]
 801315c:	9b00      	ldr	r3, [sp, #0]
 801315e:	459b      	cmp	fp, r3
 8013160:	f280 80c1 	bge.w	80132e6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 8013164:	f04f 0c00 	mov.w	ip, #0
 8013168:	45c4      	cmp	ip, r8
 801316a:	da4f      	bge.n	801320c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x178>
 801316c:	f814 300c 	ldrb.w	r3, [r4, ip]
 8013170:	2b00      	cmp	r3, #0
 8013172:	d048      	beq.n	8013206 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 8013174:	fb09 f303 	mul.w	r3, r9, r3
 8013178:	1c5a      	adds	r2, r3, #1
 801317a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801317e:	121b      	asrs	r3, r3, #8
 8013180:	d041      	beq.n	8013206 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 8013182:	f830 201c 	ldrh.w	r2, [r0, ip, lsl #1]
 8013186:	f835 e01c 	ldrh.w	lr, [r5, ip, lsl #1]
 801318a:	b29e      	uxth	r6, r3
 801318c:	1211      	asrs	r1, r2, #8
 801318e:	43db      	mvns	r3, r3
 8013190:	b2db      	uxtb	r3, r3
 8013192:	ea4f 272e 	mov.w	r7, lr, asr #8
 8013196:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801319a:	fb11 f103 	smulbb	r1, r1, r3
 801319e:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80131a2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80131a6:	00d2      	lsls	r2, r2, #3
 80131a8:	fb07 1706 	mla	r7, r7, r6, r1
 80131ac:	b2d2      	uxtb	r2, r2
 80131ae:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80131b2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80131b6:	fb12 f203 	smulbb	r2, r2, r3
 80131ba:	fa5f fe8e 	uxtb.w	lr, lr
 80131be:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80131c2:	fb0e 2206 	mla	r2, lr, r6, r2
 80131c6:	fb1a fa03 	smulbb	sl, sl, r3
 80131ca:	b2bf      	uxth	r7, r7
 80131cc:	b292      	uxth	r2, r2
 80131ce:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80131d2:	fb01 a106 	mla	r1, r1, r6, sl
 80131d6:	1c7b      	adds	r3, r7, #1
 80131d8:	f102 0a01 	add.w	sl, r2, #1
 80131dc:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80131e0:	eb0a 2a12 	add.w	sl, sl, r2, lsr #8
 80131e4:	b289      	uxth	r1, r1
 80131e6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80131ea:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80131ee:	ea47 070a 	orr.w	r7, r7, sl
 80131f2:	f101 0a01 	add.w	sl, r1, #1
 80131f6:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 80131fa:	0949      	lsrs	r1, r1, #5
 80131fc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013200:	430f      	orrs	r7, r1
 8013202:	f820 701c 	strh.w	r7, [r0, ip, lsl #1]
 8013206:	f10c 0c01 	add.w	ip, ip, #1
 801320a:	e7ad      	b.n	8013168 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xd4>
 801320c:	9b03      	ldr	r3, [sp, #12]
 801320e:	9a01      	ldr	r2, [sp, #4]
 8013210:	881b      	ldrh	r3, [r3, #0]
 8013212:	eba3 0308 	sub.w	r3, r3, r8
 8013216:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801321a:	4418      	add	r0, r3
 801321c:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8013220:	eba3 0308 	sub.w	r3, r3, r8
 8013224:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8013228:	4415      	add	r5, r2
 801322a:	9a02      	ldr	r2, [sp, #8]
 801322c:	4413      	add	r3, r2
 801322e:	441c      	add	r4, r3
 8013230:	f10b 0b01 	add.w	fp, fp, #1
 8013234:	e792      	b.n	801315c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xc8>
 8013236:	f830 2011 	ldrh.w	r2, [r0, r1, lsl #1]
 801323a:	b29f      	uxth	r7, r3
 801323c:	1216      	asrs	r6, r2, #8
 801323e:	43db      	mvns	r3, r3
 8013240:	b2db      	uxtb	r3, r3
 8013242:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013246:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801324a:	fb16 f603 	smulbb	r6, r6, r3
 801324e:	ea4f 09e2 	mov.w	r9, r2, asr #3
 8013252:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013256:	00d2      	lsls	r2, r2, #3
 8013258:	fb0c 6c07 	mla	ip, ip, r7, r6
 801325c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8013260:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013264:	b2d2      	uxtb	r2, r2
 8013266:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801326a:	fa1f fc8c 	uxth.w	ip, ip
 801326e:	fb19 f903 	smulbb	r9, r9, r3
 8013272:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013276:	fa5f fe8e 	uxtb.w	lr, lr
 801327a:	fb12 f203 	smulbb	r2, r2, r3
 801327e:	fb06 9607 	mla	r6, r6, r7, r9
 8013282:	fb0e 2207 	mla	r2, lr, r7, r2
 8013286:	f10c 0901 	add.w	r9, ip, #1
 801328a:	b292      	uxth	r2, r2
 801328c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8013290:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8013294:	f102 0c01 	add.w	ip, r2, #1
 8013298:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801329c:	b2b6      	uxth	r6, r6
 801329e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80132a2:	ea49 0c02 	orr.w	ip, r9, r2
 80132a6:	f106 0901 	add.w	r9, r6, #1
 80132aa:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 80132ae:	0976      	lsrs	r6, r6, #5
 80132b0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80132b4:	ea4c 0c06 	orr.w	ip, ip, r6
 80132b8:	f820 c011 	strh.w	ip, [r0, r1, lsl #1]
 80132bc:	e746      	b.n	801314c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 80132be:	9b02      	ldr	r3, [sp, #8]
 80132c0:	881b      	ldrh	r3, [r3, #0]
 80132c2:	eba3 0308 	sub.w	r3, r3, r8
 80132c6:	eb0b 0343 	add.w	r3, fp, r3, lsl #1
 80132ca:	4418      	add	r0, r3
 80132cc:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80132d0:	eba3 0308 	sub.w	r3, r3, r8
 80132d4:	eb0b 0243 	add.w	r2, fp, r3, lsl #1
 80132d8:	4415      	add	r5, r2
 80132da:	9a01      	ldr	r2, [sp, #4]
 80132dc:	4413      	add	r3, r2
 80132de:	441c      	add	r4, r3
 80132e0:	f10a 0a01 	add.w	sl, sl, #1
 80132e4:	e722      	b.n	801312c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x98>
 80132e6:	4b04      	ldr	r3, [pc, #16]	; (80132f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 80132e8:	6818      	ldr	r0, [r3, #0]
 80132ea:	6803      	ldr	r3, [r0, #0]
 80132ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80132ee:	4798      	blx	r3
 80132f0:	b009      	add	sp, #36	; 0x24
 80132f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80132f6:	bf00      	nop
 80132f8:	20026eb0 	.word	0x20026eb0
 80132fc:	20026eaa 	.word	0x20026eaa

08013300 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8013300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013304:	b089      	sub	sp, #36	; 0x24
 8013306:	4682      	mov	sl, r0
 8013308:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801330c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801330e:	460d      	mov	r5, r1
 8013310:	4691      	mov	r9, r2
 8013312:	4698      	mov	r8, r3
 8013314:	b3ae      	cbz	r6, 8013382 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8013316:	4608      	mov	r0, r1
 8013318:	f7fc fa8c 	bl	800f834 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801331c:	4607      	mov	r7, r0
 801331e:	4628      	mov	r0, r5
 8013320:	f7fc fac2 	bl	800f8a8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013324:	f8ad 000e 	strh.w	r0, [sp, #14]
 8013328:	4628      	mov	r0, r5
 801332a:	f8ad 9008 	strh.w	r9, [sp, #8]
 801332e:	f8ad 800a 	strh.w	r8, [sp, #10]
 8013332:	f8ad 700c 	strh.w	r7, [sp, #12]
 8013336:	f7fc fc09 	bl	800fb4c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801333a:	b178      	cbz	r0, 801335c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 801333c:	4628      	mov	r0, r5
 801333e:	f7fc fc05 	bl	800fb4c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013342:	2802      	cmp	r0, #2
 8013344:	d00a      	beq.n	801335c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8013346:	4628      	mov	r0, r5
 8013348:	f7fc fc00 	bl	800fb4c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801334c:	280b      	cmp	r0, #11
 801334e:	d005      	beq.n	801335c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8013350:	4b69      	ldr	r3, [pc, #420]	; (80134f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 8013352:	4a6a      	ldr	r2, [pc, #424]	; (80134fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 8013354:	486a      	ldr	r0, [pc, #424]	; (8013500 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 8013356:	214f      	movs	r1, #79	; 0x4f
 8013358:	f007 ff24 	bl	801b1a4 <__assert_func>
 801335c:	4628      	mov	r0, r5
 801335e:	f7fc fb71 	bl	800fa44 <_ZNK8touchgfx6Bitmap7getDataEv>
 8013362:	4607      	mov	r7, r0
 8013364:	4628      	mov	r0, r5
 8013366:	f7fc fb9f 	bl	800faa8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801336a:	4681      	mov	r9, r0
 801336c:	4628      	mov	r0, r5
 801336e:	f7fc fbed 	bl	800fb4c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8013372:	2802      	cmp	r0, #2
 8013374:	d108      	bne.n	8013388 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8013376:	4633      	mov	r3, r6
 8013378:	4622      	mov	r2, r4
 801337a:	a902      	add	r1, sp, #8
 801337c:	4638      	mov	r0, r7
 801337e:	f7ff fa6d 	bl	801285c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8013382:	b009      	add	sp, #36	; 0x24
 8013384:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013388:	4628      	mov	r0, r5
 801338a:	f7fc fbdf 	bl	800fb4c <_ZNK8touchgfx6Bitmap9getFormatEv>
 801338e:	280b      	cmp	r0, #11
 8013390:	d107      	bne.n	80133a2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 8013392:	9600      	str	r6, [sp, #0]
 8013394:	4623      	mov	r3, r4
 8013396:	aa02      	add	r2, sp, #8
 8013398:	4649      	mov	r1, r9
 801339a:	4638      	mov	r0, r7
 801339c:	f7ff fe62 	bl	8013064 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80133a0:	e7ef      	b.n	8013382 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 80133a2:	4628      	mov	r0, r5
 80133a4:	f7fc fb14 	bl	800f9d0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80133a8:	b950      	cbnz	r0, 80133c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 80133aa:	e9cd 6000 	strd	r6, r0, [sp]
 80133ae:	f8da 3000 	ldr.w	r3, [sl]
 80133b2:	aa02      	add	r2, sp, #8
 80133b4:	691d      	ldr	r5, [r3, #16]
 80133b6:	4639      	mov	r1, r7
 80133b8:	4623      	mov	r3, r4
 80133ba:	4650      	mov	r0, sl
 80133bc:	47a8      	blx	r5
 80133be:	e7e0      	b.n	8013382 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 80133c0:	f10d 0818 	add.w	r8, sp, #24
 80133c4:	4629      	mov	r1, r5
 80133c6:	4640      	mov	r0, r8
 80133c8:	f7fc faa8 	bl	800f91c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80133cc:	e898 0003 	ldmia.w	r8, {r0, r1}
 80133d0:	ad04      	add	r5, sp, #16
 80133d2:	e885 0003 	stmia.w	r5, {r0, r1}
 80133d6:	4628      	mov	r0, r5
 80133d8:	4621      	mov	r1, r4
 80133da:	f7f7 fbbb 	bl	800ab54 <_ZN8touchgfx4RectaNERKS0_>
 80133de:	4628      	mov	r0, r5
 80133e0:	f7f7 fbfc 	bl	800abdc <_ZNK8touchgfx4Rect7isEmptyEv>
 80133e4:	b138      	cbz	r0, 80133f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 80133e6:	9600      	str	r6, [sp, #0]
 80133e8:	4623      	mov	r3, r4
 80133ea:	aa02      	add	r2, sp, #8
 80133ec:	4649      	mov	r1, r9
 80133ee:	4638      	mov	r0, r7
 80133f0:	f7ff fe50 	bl	8013094 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80133f4:	e7c5      	b.n	8013382 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 80133f6:	e9cd 6000 	strd	r6, r0, [sp]
 80133fa:	f8da 3000 	ldr.w	r3, [sl]
 80133fe:	aa02      	add	r2, sp, #8
 8013400:	f8d3 b010 	ldr.w	fp, [r3, #16]
 8013404:	4639      	mov	r1, r7
 8013406:	462b      	mov	r3, r5
 8013408:	4650      	mov	r0, sl
 801340a:	47d8      	blx	fp
 801340c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013410:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013414:	4293      	cmp	r3, r2
 8013416:	dd13      	ble.n	8013440 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 8013418:	f9b4 0000 	ldrsh.w	r0, [r4]
 801341c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8013420:	f8ad 0018 	strh.w	r0, [sp, #24]
 8013424:	1a9b      	subs	r3, r3, r2
 8013426:	f8ad 201a 	strh.w	r2, [sp, #26]
 801342a:	f8ad 101c 	strh.w	r1, [sp, #28]
 801342e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013432:	9600      	str	r6, [sp, #0]
 8013434:	4643      	mov	r3, r8
 8013436:	aa02      	add	r2, sp, #8
 8013438:	4649      	mov	r1, r9
 801343a:	4638      	mov	r0, r7
 801343c:	f7ff fe2a 	bl	8013094 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013440:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8013444:	f9b4 2000 	ldrsh.w	r2, [r4]
 8013448:	4293      	cmp	r3, r2
 801344a:	dd13      	ble.n	8013474 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801344c:	1a9b      	subs	r3, r3, r2
 801344e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8013452:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8013456:	f8ad 2018 	strh.w	r2, [sp, #24]
 801345a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801345e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013462:	f8ad 101e 	strh.w	r1, [sp, #30]
 8013466:	9600      	str	r6, [sp, #0]
 8013468:	4643      	mov	r3, r8
 801346a:	aa02      	add	r2, sp, #8
 801346c:	4649      	mov	r1, r9
 801346e:	4638      	mov	r0, r7
 8013470:	f7ff fe10 	bl	8013094 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8013474:	88a2      	ldrh	r2, [r4, #4]
 8013476:	8823      	ldrh	r3, [r4, #0]
 8013478:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801347c:	4413      	add	r3, r2
 801347e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013482:	440a      	add	r2, r1
 8013484:	b29b      	uxth	r3, r3
 8013486:	b292      	uxth	r2, r2
 8013488:	b211      	sxth	r1, r2
 801348a:	b218      	sxth	r0, r3
 801348c:	4288      	cmp	r0, r1
 801348e:	dd13      	ble.n	80134b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 8013490:	1a9b      	subs	r3, r3, r2
 8013492:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8013496:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 801349a:	f8ad 1018 	strh.w	r1, [sp, #24]
 801349e:	f8ad 301c 	strh.w	r3, [sp, #28]
 80134a2:	f8ad 001e 	strh.w	r0, [sp, #30]
 80134a6:	9600      	str	r6, [sp, #0]
 80134a8:	4643      	mov	r3, r8
 80134aa:	aa02      	add	r2, sp, #8
 80134ac:	4649      	mov	r1, r9
 80134ae:	4638      	mov	r0, r7
 80134b0:	f8ad 501a 	strh.w	r5, [sp, #26]
 80134b4:	f7ff fdee 	bl	8013094 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80134b8:	88e2      	ldrh	r2, [r4, #6]
 80134ba:	8863      	ldrh	r3, [r4, #2]
 80134bc:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80134c0:	4413      	add	r3, r2
 80134c2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80134c6:	440a      	add	r2, r1
 80134c8:	b29b      	uxth	r3, r3
 80134ca:	b292      	uxth	r2, r2
 80134cc:	b211      	sxth	r1, r2
 80134ce:	b218      	sxth	r0, r3
 80134d0:	4288      	cmp	r0, r1
 80134d2:	f77f af56 	ble.w	8013382 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 80134d6:	f9b4 5000 	ldrsh.w	r5, [r4]
 80134da:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80134de:	f8ad 5018 	strh.w	r5, [sp, #24]
 80134e2:	1a9b      	subs	r3, r3, r2
 80134e4:	f8ad 301e 	strh.w	r3, [sp, #30]
 80134e8:	f8ad 101a 	strh.w	r1, [sp, #26]
 80134ec:	f8ad 001c 	strh.w	r0, [sp, #28]
 80134f0:	9600      	str	r6, [sp, #0]
 80134f2:	4643      	mov	r3, r8
 80134f4:	e779      	b.n	80133ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 80134f6:	bf00      	nop
 80134f8:	0801f201 	.word	0x0801f201
 80134fc:	0801f90e 	.word	0x0801f90e
 8013500:	0801f3ab 	.word	0x0801f3ab

08013504 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8013504:	b508      	push	{r3, lr}
 8013506:	b180      	cbz	r0, 801352a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8013508:	2902      	cmp	r1, #2
 801350a:	d014      	beq.n	8013536 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 801350c:	2903      	cmp	r1, #3
 801350e:	d01d      	beq.n	801354c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8013510:	2901      	cmp	r1, #1
 8013512:	d101      	bne.n	8013518 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8013514:	2001      	movs	r0, #1
 8013516:	bd08      	pop	{r3, pc}
 8013518:	4b0e      	ldr	r3, [pc, #56]	; (8013554 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801351a:	8818      	ldrh	r0, [r3, #0]
 801351c:	b990      	cbnz	r0, 8013544 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801351e:	4b0e      	ldr	r3, [pc, #56]	; (8013558 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8013520:	4a0e      	ldr	r2, [pc, #56]	; (801355c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8013522:	480f      	ldr	r0, [pc, #60]	; (8013560 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8013524:	21d7      	movs	r1, #215	; 0xd7
 8013526:	f007 fe3d 	bl	801b1a4 <__assert_func>
 801352a:	2902      	cmp	r1, #2
 801352c:	d00e      	beq.n	801354c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 801352e:	2903      	cmp	r1, #3
 8013530:	d0f2      	beq.n	8013518 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8013532:	2901      	cmp	r1, #1
 8013534:	d1ee      	bne.n	8013514 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8013536:	4b07      	ldr	r3, [pc, #28]	; (8013554 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8013538:	8818      	ldrh	r0, [r3, #0]
 801353a:	2800      	cmp	r0, #0
 801353c:	d0ef      	beq.n	801351e <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 801353e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013542:	e7e8      	b.n	8013516 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013544:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8013548:	4240      	negs	r0, r0
 801354a:	e7e4      	b.n	8013516 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801354c:	f04f 30ff 	mov.w	r0, #4294967295
 8013550:	e7e1      	b.n	8013516 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8013552:	bf00      	nop
 8013554:	20026eaa 	.word	0x20026eaa
 8013558:	0801f505 	.word	0x0801f505
 801355c:	0801fa8b 	.word	0x0801fa8b
 8013560:	0801f547 	.word	0x0801f547

08013564 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8013564:	b508      	push	{r3, lr}
 8013566:	b180      	cbz	r0, 801358a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8013568:	2902      	cmp	r1, #2
 801356a:	d014      	beq.n	8013596 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 801356c:	2903      	cmp	r1, #3
 801356e:	d018      	beq.n	80135a2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8013570:	2901      	cmp	r1, #1
 8013572:	d001      	beq.n	8013578 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8013574:	2001      	movs	r0, #1
 8013576:	e013      	b.n	80135a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8013578:	4b0e      	ldr	r3, [pc, #56]	; (80135b4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801357a:	8818      	ldrh	r0, [r3, #0]
 801357c:	b970      	cbnz	r0, 801359c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 801357e:	4b0e      	ldr	r3, [pc, #56]	; (80135b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8013580:	4a0e      	ldr	r2, [pc, #56]	; (80135bc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8013582:	480f      	ldr	r0, [pc, #60]	; (80135c0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8013584:	21d7      	movs	r1, #215	; 0xd7
 8013586:	f007 fe0d 	bl	801b1a4 <__assert_func>
 801358a:	2902      	cmp	r1, #2
 801358c:	d009      	beq.n	80135a2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 801358e:	2903      	cmp	r1, #3
 8013590:	d0f0      	beq.n	8013574 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8013592:	2901      	cmp	r1, #1
 8013594:	d1f0      	bne.n	8013578 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8013596:	f04f 30ff 	mov.w	r0, #4294967295
 801359a:	e001      	b.n	80135a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 801359c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80135a0:	bd08      	pop	{r3, pc}
 80135a2:	4b04      	ldr	r3, [pc, #16]	; (80135b4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80135a4:	8818      	ldrh	r0, [r3, #0]
 80135a6:	2800      	cmp	r0, #0
 80135a8:	d0e9      	beq.n	801357e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 80135aa:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80135ae:	4240      	negs	r0, r0
 80135b0:	e7f6      	b.n	80135a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80135b2:	bf00      	nop
 80135b4:	20026eaa 	.word	0x20026eaa
 80135b8:	0801f505 	.word	0x0801f505
 80135bc:	0801fa8b 	.word	0x0801fa8b
 80135c0:	0801f547 	.word	0x0801f547

080135c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80135c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80135c8:	b097      	sub	sp, #92	; 0x5c
 80135ca:	9109      	str	r1, [sp, #36]	; 0x24
 80135cc:	a912      	add	r1, sp, #72	; 0x48
 80135ce:	e881 000c 	stmia.w	r1, {r2, r3}
 80135d2:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 80135d6:	9306      	str	r3, [sp, #24]
 80135d8:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 80135dc:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 80135e0:	930e      	str	r3, [sp, #56]	; 0x38
 80135e2:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 80135e6:	930a      	str	r3, [sp, #40]	; 0x28
 80135e8:	7b4b      	ldrb	r3, [r1, #13]
 80135ea:	798f      	ldrb	r7, [r1, #6]
 80135ec:	f9bd 4080 	ldrsh.w	r4, [sp, #128]	; 0x80
 80135f0:	f8bd 6088 	ldrh.w	r6, [sp, #136]	; 0x88
 80135f4:	f8bd 508c 	ldrh.w	r5, [sp, #140]	; 0x8c
 80135f8:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 80135fc:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8013600:	0158      	lsls	r0, r3, #5
 8013602:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8013606:	4338      	orrs	r0, r7
 8013608:	9008      	str	r0, [sp, #32]
 801360a:	f000 8149 	beq.w	80138a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 801360e:	011b      	lsls	r3, r3, #4
 8013610:	79c8      	ldrb	r0, [r1, #7]
 8013612:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013616:	4303      	orrs	r3, r0
 8013618:	9307      	str	r3, [sp, #28]
 801361a:	f000 8141 	beq.w	80138a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 801361e:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8013622:	b29b      	uxth	r3, r3
 8013624:	2e00      	cmp	r6, #0
 8013626:	f000 80e5 	beq.w	80137f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x230>
 801362a:	1af6      	subs	r6, r6, r3
 801362c:	b2b6      	uxth	r6, r6
 801362e:	0433      	lsls	r3, r6, #16
 8013630:	d502      	bpl.n	8013638 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 8013632:	1ba4      	subs	r4, r4, r6
 8013634:	b224      	sxth	r4, r4
 8013636:	2600      	movs	r6, #0
 8013638:	f9b2 1000 	ldrsh.w	r1, [r2]
 801363c:	f8b2 a002 	ldrh.w	sl, [r2, #2]
 8013640:	f8bd 7020 	ldrh.w	r7, [sp, #32]
 8013644:	428c      	cmp	r4, r1
 8013646:	b28b      	uxth	r3, r1
 8013648:	bfbf      	itttt	lt
 801364a:	18f6      	addlt	r6, r6, r3
 801364c:	1b34      	sublt	r4, r6, r4
 801364e:	b2a6      	uxthlt	r6, r4
 8013650:	460c      	movlt	r4, r1
 8013652:	8891      	ldrh	r1, [r2, #4]
 8013654:	440b      	add	r3, r1
 8013656:	b21b      	sxth	r3, r3
 8013658:	930d      	str	r3, [sp, #52]	; 0x34
 801365a:	88d3      	ldrh	r3, [r2, #6]
 801365c:	9a06      	ldr	r2, [sp, #24]
 801365e:	449a      	add	sl, r3
 8013660:	fa0f f38a 	sxth.w	r3, sl
 8013664:	930c      	str	r3, [sp, #48]	; 0x30
 8013666:	4bb5      	ldr	r3, [pc, #724]	; (801393c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>)
 8013668:	f8bd a01c 	ldrh.w	sl, [sp, #28]
 801366c:	f893 9000 	ldrb.w	r9, [r3]
 8013670:	f109 3cff 	add.w	ip, r9, #4294967295
 8013674:	f1dc 0300 	rsbs	r3, ip, #0
 8013678:	eb43 030c 	adc.w	r3, r3, ip
 801367c:	930b      	str	r3, [sp, #44]	; 0x2c
 801367e:	4621      	mov	r1, r4
 8013680:	465b      	mov	r3, fp
 8013682:	a812      	add	r0, sp, #72	; 0x48
 8013684:	f7f9 fd56 	bl	800d134 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8013688:	4621      	mov	r1, r4
 801368a:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 801368e:	465b      	mov	r3, fp
 8013690:	9a06      	ldr	r2, [sp, #24]
 8013692:	a812      	add	r0, sp, #72	; 0x48
 8013694:	f7f9 fd66 	bl	800d164 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8013698:	a916      	add	r1, sp, #88	; 0x58
 801369a:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801369e:	a815      	add	r0, sp, #84	; 0x54
 80136a0:	f7f9 fe42 	bl	800d328 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80136a4:	f1bb 0f00 	cmp.w	fp, #0
 80136a8:	f040 80a7 	bne.w	80137fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x236>
 80136ac:	f1b9 0f01 	cmp.w	r9, #1
 80136b0:	f040 80ab 	bne.w	801380a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x246>
 80136b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80136b6:	2b00      	cmp	r3, #0
 80136b8:	f040 80f7 	bne.w	80138aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e6>
 80136bc:	4ba0      	ldr	r3, [pc, #640]	; (8013940 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 80136be:	6818      	ldr	r0, [r3, #0]
 80136c0:	6803      	ldr	r3, [r0, #0]
 80136c2:	6a1b      	ldr	r3, [r3, #32]
 80136c4:	4798      	blx	r3
 80136c6:	4a9f      	ldr	r2, [pc, #636]	; (8013944 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 80136c8:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80136cc:	8811      	ldrh	r1, [r2, #0]
 80136ce:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 80136d2:	fb01 2303 	mla	r3, r1, r3, r2
 80136d6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80136da:	f04f 0901 	mov.w	r9, #1
 80136de:	9307      	str	r3, [sp, #28]
 80136e0:	fa09 f308 	lsl.w	r3, r9, r8
 80136e4:	3b01      	subs	r3, #1
 80136e6:	b2db      	uxtb	r3, r3
 80136e8:	45c8      	cmp	r8, r9
 80136ea:	930f      	str	r3, [sp, #60]	; 0x3c
 80136ec:	f000 80df 	beq.w	80138ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ea>
 80136f0:	f1b8 0f02 	cmp.w	r8, #2
 80136f4:	f000 8153 	beq.w	801399e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3da>
 80136f8:	f1b8 0f04 	cmp.w	r8, #4
 80136fc:	f000 8146 	beq.w	801398c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c8>
 8013700:	b906      	cbnz	r6, 8013704 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x140>
 8013702:	b175      	cbz	r5, 8013722 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15e>
 8013704:	fb17 6305 	smlabb	r3, r7, r5, r6
 8013708:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801370a:	fb13 f308 	smulbb	r3, r3, r8
 801370e:	b29b      	uxth	r3, r3
 8013710:	ebaa 0a05 	sub.w	sl, sl, r5
 8013714:	eb02 02d3 	add.w	r2, r2, r3, lsr #3
 8013718:	9226      	str	r2, [sp, #152]	; 0x98
 801371a:	fa1f fa8a 	uxth.w	sl, sl
 801371e:	f003 0507 	and.w	r5, r3, #7
 8013722:	4659      	mov	r1, fp
 8013724:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013726:	f7ff feed 	bl	8013504 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801372a:	4659      	mov	r1, fp
 801372c:	9010      	str	r0, [sp, #64]	; 0x40
 801372e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013730:	f7ff ff18 	bl	8013564 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8013734:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013736:	9a06      	ldr	r2, [sp, #24]
 8013738:	1a9a      	subs	r2, r3, r2
 801373a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801373c:	1ba4      	subs	r4, r4, r6
 801373e:	1b1c      	subs	r4, r3, r4
 8013740:	9b08      	ldr	r3, [sp, #32]
 8013742:	4592      	cmp	sl, r2
 8013744:	bfa8      	it	ge
 8013746:	4692      	movge	sl, r2
 8013748:	429c      	cmp	r4, r3
 801374a:	bfd4      	ite	le
 801374c:	ebc6 0604 	rsble	r6, r6, r4
 8013750:	ebc6 0603 	rsbgt	r6, r6, r3
 8013754:	1bbf      	subs	r7, r7, r6
 8013756:	fb08 f307 	mul.w	r3, r8, r7
 801375a:	930b      	str	r3, [sp, #44]	; 0x2c
 801375c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801375e:	781a      	ldrb	r2, [r3, #0]
 8013760:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013762:	1219      	asrs	r1, r3, #8
 8013764:	f001 03f8 	and.w	r3, r1, #248	; 0xf8
 8013768:	930c      	str	r3, [sp, #48]	; 0x30
 801376a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801376c:	f3c3 01cc 	ubfx	r1, r3, #3, #13
 8013770:	f001 03fc 	and.w	r3, r1, #252	; 0xfc
 8013774:	930d      	str	r3, [sp, #52]	; 0x34
 8013776:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013778:	00d9      	lsls	r1, r3, #3
 801377a:	f001 03f8 	and.w	r3, r1, #248	; 0xf8
 801377e:	930e      	str	r3, [sp, #56]	; 0x38
 8013780:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013782:	0059      	lsls	r1, r3, #1
 8013784:	fb03 0016 	mls	r0, r3, r6, r0
 8013788:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 801378c:	434b      	muls	r3, r1
 801378e:	9106      	str	r1, [sp, #24]
 8013790:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8013792:	412a      	asrs	r2, r5
 8013794:	b289      	uxth	r1, r1
 8013796:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801379a:	b2d2      	uxtb	r2, r2
 801379c:	9110      	str	r1, [sp, #64]	; 0x40
 801379e:	9311      	str	r3, [sp, #68]	; 0x44
 80137a0:	f1ba 0f00 	cmp.w	sl, #0
 80137a4:	f340 80e4 	ble.w	8013970 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 80137a8:	f8dd c01c 	ldr.w	ip, [sp, #28]
 80137ac:	46b6      	mov	lr, r6
 80137ae:	f1be 0f00 	cmp.w	lr, #0
 80137b2:	f340 80c9 	ble.w	8013948 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>
 80137b6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80137b8:	4013      	ands	r3, r2
 80137ba:	d009      	beq.n	80137d0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x20c>
 80137bc:	fb13 f309 	smulbb	r3, r3, r9
 80137c0:	2bfe      	cmp	r3, #254	; 0xfe
 80137c2:	dd77      	ble.n	80138b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f0>
 80137c4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80137c6:	29ff      	cmp	r1, #255	; 0xff
 80137c8:	d174      	bne.n	80138b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f0>
 80137ca:	9810      	ldr	r0, [sp, #64]	; 0x40
 80137cc:	f8ac 0000 	strh.w	r0, [ip]
 80137d0:	4445      	add	r5, r8
 80137d2:	b2ad      	uxth	r5, r5
 80137d4:	2d07      	cmp	r5, #7
 80137d6:	bf81      	itttt	hi
 80137d8:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 80137da:	785a      	ldrbhi	r2, [r3, #1]
 80137dc:	3301      	addhi	r3, #1
 80137de:	9326      	strhi	r3, [sp, #152]	; 0x98
 80137e0:	9b06      	ldr	r3, [sp, #24]
 80137e2:	bf9a      	itte	ls
 80137e4:	fa42 f208 	asrls.w	r2, r2, r8
 80137e8:	b2d2      	uxtbls	r2, r2
 80137ea:	2500      	movhi	r5, #0
 80137ec:	449c      	add	ip, r3
 80137ee:	f10e 3eff 	add.w	lr, lr, #4294967295
 80137f2:	e7dc      	b.n	80137ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ea>
 80137f4:	441c      	add	r4, r3
 80137f6:	b224      	sxth	r4, r4
 80137f8:	e71e      	b.n	8013638 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 80137fa:	f1bb 0f01 	cmp.w	fp, #1
 80137fe:	f47f af59 	bne.w	80136b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013802:	f1b9 0f01 	cmp.w	r9, #1
 8013806:	f47f af55 	bne.w	80136b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801380a:	f8df 9134 	ldr.w	r9, [pc, #308]	; 8013940 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801380e:	f8d9 0000 	ldr.w	r0, [r9]
 8013812:	6803      	ldr	r3, [r0, #0]
 8013814:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013816:	4798      	blx	r3
 8013818:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 801381c:	464a      	mov	r2, r9
 801381e:	d006      	beq.n	801382e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26a>
 8013820:	f1b8 0f04 	cmp.w	r8, #4
 8013824:	d13f      	bne.n	80138a6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 8013826:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013828:	3300      	adds	r3, #0
 801382a:	bf18      	it	ne
 801382c:	2301      	movne	r3, #1
 801382e:	05c0      	lsls	r0, r0, #23
 8013830:	f140 80a7 	bpl.w	8013982 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3be>
 8013834:	f1b8 0f08 	cmp.w	r8, #8
 8013838:	f040 80a3 	bne.w	8013982 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3be>
 801383c:	2b00      	cmp	r3, #0
 801383e:	bf0c      	ite	eq
 8013840:	f44f 7180 	moveq.w	r1, #256	; 0x100
 8013844:	2180      	movne	r1, #128	; 0x80
 8013846:	2e00      	cmp	r6, #0
 8013848:	f47f af34 	bne.w	80136b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801384c:	2d00      	cmp	r5, #0
 801384e:	f47f af31 	bne.w	80136b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013852:	9b08      	ldr	r3, [sp, #32]
 8013854:	980d      	ldr	r0, [sp, #52]	; 0x34
 8013856:	18e3      	adds	r3, r4, r3
 8013858:	4283      	cmp	r3, r0
 801385a:	f73f af2b 	bgt.w	80136b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801385e:	e9dd 0306 	ldrd	r0, r3, [sp, #24]
 8013862:	4403      	add	r3, r0
 8013864:	980c      	ldr	r0, [sp, #48]	; 0x30
 8013866:	4283      	cmp	r3, r0
 8013868:	f73f af24 	bgt.w	80136b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801386c:	6810      	ldr	r0, [r2, #0]
 801386e:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8013872:	6804      	ldr	r4, [r0, #0]
 8013874:	9105      	str	r1, [sp, #20]
 8013876:	f1b8 0f08 	cmp.w	r8, #8
 801387a:	bf18      	it	ne
 801387c:	3701      	addne	r7, #1
 801387e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013880:	9104      	str	r1, [sp, #16]
 8013882:	bf18      	it	ne
 8013884:	f027 0701 	bicne.w	r7, r7, #1
 8013888:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801388a:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 801388e:	bf18      	it	ne
 8013890:	b2bf      	uxthne	r7, r7
 8013892:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8013896:	e9cd 7a00 	strd	r7, sl, [sp]
 801389a:	9926      	ldr	r1, [sp, #152]	; 0x98
 801389c:	6c24      	ldr	r4, [r4, #64]	; 0x40
 801389e:	47a0      	blx	r4
 80138a0:	b017      	add	sp, #92	; 0x5c
 80138a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80138a6:	2300      	movs	r3, #0
 80138a8:	e7c1      	b.n	801382e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26a>
 80138aa:	9809      	ldr	r0, [sp, #36]	; 0x24
 80138ac:	e70b      	b.n	80136c6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 80138ae:	f04f 09ff 	mov.w	r9, #255	; 0xff
 80138b2:	e725      	b.n	8013700 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 80138b4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80138b6:	f8bc 4000 	ldrh.w	r4, [ip]
 80138ba:	fb11 f303 	smulbb	r3, r1, r3
 80138be:	b29b      	uxth	r3, r3
 80138c0:	1c59      	adds	r1, r3, #1
 80138c2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80138c6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80138ca:	990c      	ldr	r1, [sp, #48]	; 0x30
 80138cc:	b29f      	uxth	r7, r3
 80138ce:	1220      	asrs	r0, r4, #8
 80138d0:	43db      	mvns	r3, r3
 80138d2:	b2db      	uxtb	r3, r3
 80138d4:	fb11 f107 	smulbb	r1, r1, r7
 80138d8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80138dc:	fb00 1003 	mla	r0, r0, r3, r1
 80138e0:	b281      	uxth	r1, r0
 80138e2:	980d      	ldr	r0, [sp, #52]	; 0x34
 80138e4:	9108      	str	r1, [sp, #32]
 80138e6:	fb17 fb00 	smulbb	fp, r7, r0
 80138ea:	980e      	ldr	r0, [sp, #56]	; 0x38
 80138ec:	10e1      	asrs	r1, r4, #3
 80138ee:	00e4      	lsls	r4, r4, #3
 80138f0:	fb17 f700 	smulbb	r7, r7, r0
 80138f4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80138f8:	b2e4      	uxtb	r4, r4
 80138fa:	fb01 b103 	mla	r1, r1, r3, fp
 80138fe:	fb04 7703 	mla	r7, r4, r3, r7
 8013902:	9b08      	ldr	r3, [sp, #32]
 8013904:	9808      	ldr	r0, [sp, #32]
 8013906:	b2bf      	uxth	r7, r7
 8013908:	3301      	adds	r3, #1
 801390a:	f107 0b01 	add.w	fp, r7, #1
 801390e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8013912:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 8013916:	b289      	uxth	r1, r1
 8013918:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801391c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8013920:	ea40 000b 	orr.w	r0, r0, fp
 8013924:	f101 0b01 	add.w	fp, r1, #1
 8013928:	eb0b 2b11 	add.w	fp, fp, r1, lsr #8
 801392c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013930:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8013934:	ea40 000b 	orr.w	r0, r0, fp
 8013938:	e748      	b.n	80137cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 801393a:	bf00      	nop
 801393c:	20026ea8 	.word	0x20026ea8
 8013940:	20026eb0 	.word	0x20026eb0
 8013944:	20026eaa 	.word	0x20026eaa
 8013948:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801394a:	b153      	cbz	r3, 8013962 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39e>
 801394c:	441d      	add	r5, r3
 801394e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013950:	b2ad      	uxth	r5, r5
 8013952:	eb03 03d5 	add.w	r3, r3, r5, lsr #3
 8013956:	f005 0507 	and.w	r5, r5, #7
 801395a:	781a      	ldrb	r2, [r3, #0]
 801395c:	9326      	str	r3, [sp, #152]	; 0x98
 801395e:	412a      	asrs	r2, r5
 8013960:	b2d2      	uxtb	r2, r2
 8013962:	9b07      	ldr	r3, [sp, #28]
 8013964:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013966:	440b      	add	r3, r1
 8013968:	9307      	str	r3, [sp, #28]
 801396a:	f10a 3aff 	add.w	sl, sl, #4294967295
 801396e:	e717      	b.n	80137a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1dc>
 8013970:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013972:	2b00      	cmp	r3, #0
 8013974:	d194      	bne.n	80138a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8013976:	4b0b      	ldr	r3, [pc, #44]	; (80139a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e0>)
 8013978:	6818      	ldr	r0, [r3, #0]
 801397a:	6803      	ldr	r3, [r0, #0]
 801397c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801397e:	4798      	blx	r3
 8013980:	e78e      	b.n	80138a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8013982:	2b00      	cmp	r3, #0
 8013984:	f43f ae96 	beq.w	80136b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013988:	2180      	movs	r1, #128	; 0x80
 801398a:	e75c      	b.n	8013846 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x282>
 801398c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801398e:	b11b      	cbz	r3, 8013998 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d4>
 8013990:	07fb      	lsls	r3, r7, #31
 8013992:	d501      	bpl.n	8013998 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d4>
 8013994:	3701      	adds	r7, #1
 8013996:	b2bf      	uxth	r7, r7
 8013998:	f04f 0911 	mov.w	r9, #17
 801399c:	e6b0      	b.n	8013700 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 801399e:	f04f 0955 	mov.w	r9, #85	; 0x55
 80139a2:	e6ad      	b.n	8013700 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 80139a4:	20026eb0 	.word	0x20026eb0

080139a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 80139a8:	b538      	push	{r3, r4, r5, lr}
 80139aa:	4c15      	ldr	r4, [pc, #84]	; (8013a00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80139ac:	7823      	ldrb	r3, [r4, #0]
 80139ae:	f3bf 8f5b 	dmb	ish
 80139b2:	07da      	lsls	r2, r3, #31
 80139b4:	4605      	mov	r5, r0
 80139b6:	d40b      	bmi.n	80139d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80139b8:	4620      	mov	r0, r4
 80139ba:	f007 fbc9 	bl	801b150 <__cxa_guard_acquire>
 80139be:	b138      	cbz	r0, 80139d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80139c0:	4620      	mov	r0, r4
 80139c2:	f007 fbd1 	bl	801b168 <__cxa_guard_release>
 80139c6:	4a0f      	ldr	r2, [pc, #60]	; (8013a04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80139c8:	490f      	ldr	r1, [pc, #60]	; (8013a08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80139ca:	4810      	ldr	r0, [pc, #64]	; (8013a0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80139cc:	f007 fbb6 	bl	801b13c <__aeabi_atexit>
 80139d0:	4c0f      	ldr	r4, [pc, #60]	; (8013a10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80139d2:	7823      	ldrb	r3, [r4, #0]
 80139d4:	f3bf 8f5b 	dmb	ish
 80139d8:	07db      	lsls	r3, r3, #31
 80139da:	d40b      	bmi.n	80139f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80139dc:	4620      	mov	r0, r4
 80139de:	f007 fbb7 	bl	801b150 <__cxa_guard_acquire>
 80139e2:	b138      	cbz	r0, 80139f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80139e4:	4620      	mov	r0, r4
 80139e6:	f007 fbbf 	bl	801b168 <__cxa_guard_release>
 80139ea:	4a06      	ldr	r2, [pc, #24]	; (8013a04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80139ec:	4909      	ldr	r1, [pc, #36]	; (8013a14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80139ee:	480a      	ldr	r0, [pc, #40]	; (8013a18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80139f0:	f007 fba4 	bl	801b13c <__aeabi_atexit>
 80139f4:	4b05      	ldr	r3, [pc, #20]	; (8013a0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80139f6:	612b      	str	r3, [r5, #16]
 80139f8:	4b07      	ldr	r3, [pc, #28]	; (8013a18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80139fa:	616b      	str	r3, [r5, #20]
 80139fc:	bd38      	pop	{r3, r4, r5, pc}
 80139fe:	bf00      	nop
 8013a00:	20026f9c 	.word	0x20026f9c
 8013a04:	20000000 	.word	0x20000000
 8013a08:	08012063 	.word	0x08012063
 8013a0c:	20000068 	.word	0x20000068
 8013a10:	20026fa0 	.word	0x20026fa0
 8013a14:	08012061 	.word	0x08012061
 8013a18:	2000006c 	.word	0x2000006c

08013a1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8013a1c:	b538      	push	{r3, r4, r5, lr}
 8013a1e:	4c15      	ldr	r4, [pc, #84]	; (8013a74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8013a20:	7823      	ldrb	r3, [r4, #0]
 8013a22:	f3bf 8f5b 	dmb	ish
 8013a26:	07da      	lsls	r2, r3, #31
 8013a28:	4605      	mov	r5, r0
 8013a2a:	d40b      	bmi.n	8013a44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8013a2c:	4620      	mov	r0, r4
 8013a2e:	f007 fb8f 	bl	801b150 <__cxa_guard_acquire>
 8013a32:	b138      	cbz	r0, 8013a44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8013a34:	4620      	mov	r0, r4
 8013a36:	f007 fb97 	bl	801b168 <__cxa_guard_release>
 8013a3a:	4a0f      	ldr	r2, [pc, #60]	; (8013a78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8013a3c:	490f      	ldr	r1, [pc, #60]	; (8013a7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8013a3e:	4810      	ldr	r0, [pc, #64]	; (8013a80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8013a40:	f007 fb7c 	bl	801b13c <__aeabi_atexit>
 8013a44:	4c0f      	ldr	r4, [pc, #60]	; (8013a84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8013a46:	7823      	ldrb	r3, [r4, #0]
 8013a48:	f3bf 8f5b 	dmb	ish
 8013a4c:	07db      	lsls	r3, r3, #31
 8013a4e:	d40b      	bmi.n	8013a68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013a50:	4620      	mov	r0, r4
 8013a52:	f007 fb7d 	bl	801b150 <__cxa_guard_acquire>
 8013a56:	b138      	cbz	r0, 8013a68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013a58:	4620      	mov	r0, r4
 8013a5a:	f007 fb85 	bl	801b168 <__cxa_guard_release>
 8013a5e:	4a06      	ldr	r2, [pc, #24]	; (8013a78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8013a60:	4909      	ldr	r1, [pc, #36]	; (8013a88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8013a62:	480a      	ldr	r0, [pc, #40]	; (8013a8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8013a64:	f007 fb6a 	bl	801b13c <__aeabi_atexit>
 8013a68:	4b05      	ldr	r3, [pc, #20]	; (8013a80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8013a6a:	60ab      	str	r3, [r5, #8]
 8013a6c:	4b07      	ldr	r3, [pc, #28]	; (8013a8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8013a6e:	60eb      	str	r3, [r5, #12]
 8013a70:	bd38      	pop	{r3, r4, r5, pc}
 8013a72:	bf00      	nop
 8013a74:	20026f74 	.word	0x20026f74
 8013a78:	20000000 	.word	0x20000000
 8013a7c:	08012067 	.word	0x08012067
 8013a80:	20000040 	.word	0x20000040
 8013a84:	20026f78 	.word	0x20026f78
 8013a88:	08012065 	.word	0x08012065
 8013a8c:	20000044 	.word	0x20000044

08013a90 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8013a90:	b510      	push	{r4, lr}
 8013a92:	4604      	mov	r4, r0
 8013a94:	f7ff ff88 	bl	80139a8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8013a98:	4620      	mov	r0, r4
 8013a9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013a9e:	f7ff bfbd 	b.w	8013a1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08013aa4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8013aa4:	b538      	push	{r3, r4, r5, lr}
 8013aa6:	4c15      	ldr	r4, [pc, #84]	; (8013afc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8013aa8:	7823      	ldrb	r3, [r4, #0]
 8013aaa:	f3bf 8f5b 	dmb	ish
 8013aae:	07da      	lsls	r2, r3, #31
 8013ab0:	4605      	mov	r5, r0
 8013ab2:	d40b      	bmi.n	8013acc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8013ab4:	4620      	mov	r0, r4
 8013ab6:	f007 fb4b 	bl	801b150 <__cxa_guard_acquire>
 8013aba:	b138      	cbz	r0, 8013acc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8013abc:	4620      	mov	r0, r4
 8013abe:	f007 fb53 	bl	801b168 <__cxa_guard_release>
 8013ac2:	4a0f      	ldr	r2, [pc, #60]	; (8013b00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8013ac4:	490f      	ldr	r1, [pc, #60]	; (8013b04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8013ac6:	4810      	ldr	r0, [pc, #64]	; (8013b08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8013ac8:	f007 fb38 	bl	801b13c <__aeabi_atexit>
 8013acc:	4c0f      	ldr	r4, [pc, #60]	; (8013b0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8013ace:	7823      	ldrb	r3, [r4, #0]
 8013ad0:	f3bf 8f5b 	dmb	ish
 8013ad4:	07db      	lsls	r3, r3, #31
 8013ad6:	d40b      	bmi.n	8013af0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8013ad8:	4620      	mov	r0, r4
 8013ada:	f007 fb39 	bl	801b150 <__cxa_guard_acquire>
 8013ade:	b138      	cbz	r0, 8013af0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8013ae0:	4620      	mov	r0, r4
 8013ae2:	f007 fb41 	bl	801b168 <__cxa_guard_release>
 8013ae6:	4a06      	ldr	r2, [pc, #24]	; (8013b00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8013ae8:	4909      	ldr	r1, [pc, #36]	; (8013b10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8013aea:	480a      	ldr	r0, [pc, #40]	; (8013b14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8013aec:	f007 fb26 	bl	801b13c <__aeabi_atexit>
 8013af0:	4b05      	ldr	r3, [pc, #20]	; (8013b08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8013af2:	622b      	str	r3, [r5, #32]
 8013af4:	4b07      	ldr	r3, [pc, #28]	; (8013b14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8013af6:	626b      	str	r3, [r5, #36]	; 0x24
 8013af8:	bd38      	pop	{r3, r4, r5, pc}
 8013afa:	bf00      	nop
 8013afc:	20026fa4 	.word	0x20026fa4
 8013b00:	20000000 	.word	0x20000000
 8013b04:	0801205b 	.word	0x0801205b
 8013b08:	20000070 	.word	0x20000070
 8013b0c:	20026fa8 	.word	0x20026fa8
 8013b10:	08012059 	.word	0x08012059
 8013b14:	20000074 	.word	0x20000074

08013b18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8013b18:	b538      	push	{r3, r4, r5, lr}
 8013b1a:	4c15      	ldr	r4, [pc, #84]	; (8013b70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8013b1c:	7823      	ldrb	r3, [r4, #0]
 8013b1e:	f3bf 8f5b 	dmb	ish
 8013b22:	07da      	lsls	r2, r3, #31
 8013b24:	4605      	mov	r5, r0
 8013b26:	d40b      	bmi.n	8013b40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8013b28:	4620      	mov	r0, r4
 8013b2a:	f007 fb11 	bl	801b150 <__cxa_guard_acquire>
 8013b2e:	b138      	cbz	r0, 8013b40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8013b30:	4620      	mov	r0, r4
 8013b32:	f007 fb19 	bl	801b168 <__cxa_guard_release>
 8013b36:	4a0f      	ldr	r2, [pc, #60]	; (8013b74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8013b38:	490f      	ldr	r1, [pc, #60]	; (8013b78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8013b3a:	4810      	ldr	r0, [pc, #64]	; (8013b7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8013b3c:	f007 fafe 	bl	801b13c <__aeabi_atexit>
 8013b40:	4c0f      	ldr	r4, [pc, #60]	; (8013b80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8013b42:	7823      	ldrb	r3, [r4, #0]
 8013b44:	f3bf 8f5b 	dmb	ish
 8013b48:	07db      	lsls	r3, r3, #31
 8013b4a:	d40b      	bmi.n	8013b64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8013b4c:	4620      	mov	r0, r4
 8013b4e:	f007 faff 	bl	801b150 <__cxa_guard_acquire>
 8013b52:	b138      	cbz	r0, 8013b64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8013b54:	4620      	mov	r0, r4
 8013b56:	f007 fb07 	bl	801b168 <__cxa_guard_release>
 8013b5a:	4a06      	ldr	r2, [pc, #24]	; (8013b74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8013b5c:	4909      	ldr	r1, [pc, #36]	; (8013b84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8013b5e:	480a      	ldr	r0, [pc, #40]	; (8013b88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8013b60:	f007 faec 	bl	801b13c <__aeabi_atexit>
 8013b64:	4b05      	ldr	r3, [pc, #20]	; (8013b7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8013b66:	61ab      	str	r3, [r5, #24]
 8013b68:	4b07      	ldr	r3, [pc, #28]	; (8013b88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8013b6a:	61eb      	str	r3, [r5, #28]
 8013b6c:	bd38      	pop	{r3, r4, r5, pc}
 8013b6e:	bf00      	nop
 8013b70:	20026f7c 	.word	0x20026f7c
 8013b74:	20000000 	.word	0x20000000
 8013b78:	0801205f 	.word	0x0801205f
 8013b7c:	20000048 	.word	0x20000048
 8013b80:	20026f80 	.word	0x20026f80
 8013b84:	0801205d 	.word	0x0801205d
 8013b88:	2000004c 	.word	0x2000004c

08013b8c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8013b8c:	b510      	push	{r4, lr}
 8013b8e:	4604      	mov	r4, r0
 8013b90:	f7ff ff88 	bl	8013aa4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8013b94:	4620      	mov	r0, r4
 8013b96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013b9a:	f7ff bfbd 	b.w	8013b18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08013ba0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8013ba0:	b538      	push	{r3, r4, r5, lr}
 8013ba2:	4c15      	ldr	r4, [pc, #84]	; (8013bf8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8013ba4:	7823      	ldrb	r3, [r4, #0]
 8013ba6:	f3bf 8f5b 	dmb	ish
 8013baa:	07da      	lsls	r2, r3, #31
 8013bac:	4605      	mov	r5, r0
 8013bae:	d40b      	bmi.n	8013bc8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8013bb0:	4620      	mov	r0, r4
 8013bb2:	f007 facd 	bl	801b150 <__cxa_guard_acquire>
 8013bb6:	b138      	cbz	r0, 8013bc8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8013bb8:	4620      	mov	r0, r4
 8013bba:	f007 fad5 	bl	801b168 <__cxa_guard_release>
 8013bbe:	4a0f      	ldr	r2, [pc, #60]	; (8013bfc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8013bc0:	490f      	ldr	r1, [pc, #60]	; (8013c00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8013bc2:	4810      	ldr	r0, [pc, #64]	; (8013c04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8013bc4:	f007 faba 	bl	801b13c <__aeabi_atexit>
 8013bc8:	4c0f      	ldr	r4, [pc, #60]	; (8013c08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8013bca:	7823      	ldrb	r3, [r4, #0]
 8013bcc:	f3bf 8f5b 	dmb	ish
 8013bd0:	07db      	lsls	r3, r3, #31
 8013bd2:	d40b      	bmi.n	8013bec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8013bd4:	4620      	mov	r0, r4
 8013bd6:	f007 fabb 	bl	801b150 <__cxa_guard_acquire>
 8013bda:	b138      	cbz	r0, 8013bec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8013bdc:	4620      	mov	r0, r4
 8013bde:	f007 fac3 	bl	801b168 <__cxa_guard_release>
 8013be2:	4a06      	ldr	r2, [pc, #24]	; (8013bfc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8013be4:	4909      	ldr	r1, [pc, #36]	; (8013c0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8013be6:	480a      	ldr	r0, [pc, #40]	; (8013c10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8013be8:	f007 faa8 	bl	801b13c <__aeabi_atexit>
 8013bec:	4b05      	ldr	r3, [pc, #20]	; (8013c04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8013bee:	632b      	str	r3, [r5, #48]	; 0x30
 8013bf0:	4b07      	ldr	r3, [pc, #28]	; (8013c10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8013bf2:	636b      	str	r3, [r5, #52]	; 0x34
 8013bf4:	bd38      	pop	{r3, r4, r5, pc}
 8013bf6:	bf00      	nop
 8013bf8:	20026fb4 	.word	0x20026fb4
 8013bfc:	20000000 	.word	0x20000000
 8013c00:	08012053 	.word	0x08012053
 8013c04:	20000080 	.word	0x20000080
 8013c08:	20026fb8 	.word	0x20026fb8
 8013c0c:	08012051 	.word	0x08012051
 8013c10:	20000084 	.word	0x20000084

08013c14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8013c14:	b538      	push	{r3, r4, r5, lr}
 8013c16:	4c15      	ldr	r4, [pc, #84]	; (8013c6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8013c18:	7823      	ldrb	r3, [r4, #0]
 8013c1a:	f3bf 8f5b 	dmb	ish
 8013c1e:	07da      	lsls	r2, r3, #31
 8013c20:	4605      	mov	r5, r0
 8013c22:	d40b      	bmi.n	8013c3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8013c24:	4620      	mov	r0, r4
 8013c26:	f007 fa93 	bl	801b150 <__cxa_guard_acquire>
 8013c2a:	b138      	cbz	r0, 8013c3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8013c2c:	4620      	mov	r0, r4
 8013c2e:	f007 fa9b 	bl	801b168 <__cxa_guard_release>
 8013c32:	4a0f      	ldr	r2, [pc, #60]	; (8013c70 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8013c34:	490f      	ldr	r1, [pc, #60]	; (8013c74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8013c36:	4810      	ldr	r0, [pc, #64]	; (8013c78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8013c38:	f007 fa80 	bl	801b13c <__aeabi_atexit>
 8013c3c:	4c0f      	ldr	r4, [pc, #60]	; (8013c7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8013c3e:	7823      	ldrb	r3, [r4, #0]
 8013c40:	f3bf 8f5b 	dmb	ish
 8013c44:	07db      	lsls	r3, r3, #31
 8013c46:	d40b      	bmi.n	8013c60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013c48:	4620      	mov	r0, r4
 8013c4a:	f007 fa81 	bl	801b150 <__cxa_guard_acquire>
 8013c4e:	b138      	cbz	r0, 8013c60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013c50:	4620      	mov	r0, r4
 8013c52:	f007 fa89 	bl	801b168 <__cxa_guard_release>
 8013c56:	4a06      	ldr	r2, [pc, #24]	; (8013c70 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8013c58:	4909      	ldr	r1, [pc, #36]	; (8013c80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8013c5a:	480a      	ldr	r0, [pc, #40]	; (8013c84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8013c5c:	f007 fa6e 	bl	801b13c <__aeabi_atexit>
 8013c60:	4b05      	ldr	r3, [pc, #20]	; (8013c78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8013c62:	62ab      	str	r3, [r5, #40]	; 0x28
 8013c64:	4b07      	ldr	r3, [pc, #28]	; (8013c84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8013c66:	62eb      	str	r3, [r5, #44]	; 0x2c
 8013c68:	bd38      	pop	{r3, r4, r5, pc}
 8013c6a:	bf00      	nop
 8013c6c:	20026f84 	.word	0x20026f84
 8013c70:	20000000 	.word	0x20000000
 8013c74:	08012057 	.word	0x08012057
 8013c78:	20000050 	.word	0x20000050
 8013c7c:	20026f88 	.word	0x20026f88
 8013c80:	08012055 	.word	0x08012055
 8013c84:	20000054 	.word	0x20000054

08013c88 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8013c88:	b510      	push	{r4, lr}
 8013c8a:	4604      	mov	r4, r0
 8013c8c:	f7ff ff88 	bl	8013ba0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8013c90:	4620      	mov	r0, r4
 8013c92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013c96:	f7ff bfbd 	b.w	8013c14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08013c9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8013c9c:	b538      	push	{r3, r4, r5, lr}
 8013c9e:	4c15      	ldr	r4, [pc, #84]	; (8013cf4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8013ca0:	7823      	ldrb	r3, [r4, #0]
 8013ca2:	f3bf 8f5b 	dmb	ish
 8013ca6:	07da      	lsls	r2, r3, #31
 8013ca8:	4605      	mov	r5, r0
 8013caa:	d40b      	bmi.n	8013cc4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8013cac:	4620      	mov	r0, r4
 8013cae:	f007 fa4f 	bl	801b150 <__cxa_guard_acquire>
 8013cb2:	b138      	cbz	r0, 8013cc4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8013cb4:	4620      	mov	r0, r4
 8013cb6:	f007 fa57 	bl	801b168 <__cxa_guard_release>
 8013cba:	4a0f      	ldr	r2, [pc, #60]	; (8013cf8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8013cbc:	490f      	ldr	r1, [pc, #60]	; (8013cfc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8013cbe:	4810      	ldr	r0, [pc, #64]	; (8013d00 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8013cc0:	f007 fa3c 	bl	801b13c <__aeabi_atexit>
 8013cc4:	4c0f      	ldr	r4, [pc, #60]	; (8013d04 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8013cc6:	7823      	ldrb	r3, [r4, #0]
 8013cc8:	f3bf 8f5b 	dmb	ish
 8013ccc:	07db      	lsls	r3, r3, #31
 8013cce:	d40b      	bmi.n	8013ce8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8013cd0:	4620      	mov	r0, r4
 8013cd2:	f007 fa3d 	bl	801b150 <__cxa_guard_acquire>
 8013cd6:	b138      	cbz	r0, 8013ce8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8013cd8:	4620      	mov	r0, r4
 8013cda:	f007 fa45 	bl	801b168 <__cxa_guard_release>
 8013cde:	4a06      	ldr	r2, [pc, #24]	; (8013cf8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8013ce0:	4909      	ldr	r1, [pc, #36]	; (8013d08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8013ce2:	480a      	ldr	r0, [pc, #40]	; (8013d0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8013ce4:	f007 fa2a 	bl	801b13c <__aeabi_atexit>
 8013ce8:	4b05      	ldr	r3, [pc, #20]	; (8013d00 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8013cea:	652b      	str	r3, [r5, #80]	; 0x50
 8013cec:	4b07      	ldr	r3, [pc, #28]	; (8013d0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8013cee:	656b      	str	r3, [r5, #84]	; 0x54
 8013cf0:	bd38      	pop	{r3, r4, r5, pc}
 8013cf2:	bf00      	nop
 8013cf4:	20026fbc 	.word	0x20026fbc
 8013cf8:	20000000 	.word	0x20000000
 8013cfc:	08012043 	.word	0x08012043
 8013d00:	20000088 	.word	0x20000088
 8013d04:	20026fc0 	.word	0x20026fc0
 8013d08:	08012041 	.word	0x08012041
 8013d0c:	2000008c 	.word	0x2000008c

08013d10 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8013d10:	b538      	push	{r3, r4, r5, lr}
 8013d12:	4c15      	ldr	r4, [pc, #84]	; (8013d68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8013d14:	7823      	ldrb	r3, [r4, #0]
 8013d16:	f3bf 8f5b 	dmb	ish
 8013d1a:	07da      	lsls	r2, r3, #31
 8013d1c:	4605      	mov	r5, r0
 8013d1e:	d40b      	bmi.n	8013d38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013d20:	4620      	mov	r0, r4
 8013d22:	f007 fa15 	bl	801b150 <__cxa_guard_acquire>
 8013d26:	b138      	cbz	r0, 8013d38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8013d28:	4620      	mov	r0, r4
 8013d2a:	f007 fa1d 	bl	801b168 <__cxa_guard_release>
 8013d2e:	4a0f      	ldr	r2, [pc, #60]	; (8013d6c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8013d30:	490f      	ldr	r1, [pc, #60]	; (8013d70 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8013d32:	4810      	ldr	r0, [pc, #64]	; (8013d74 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8013d34:	f007 fa02 	bl	801b13c <__aeabi_atexit>
 8013d38:	4c0f      	ldr	r4, [pc, #60]	; (8013d78 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8013d3a:	7823      	ldrb	r3, [r4, #0]
 8013d3c:	f3bf 8f5b 	dmb	ish
 8013d40:	07db      	lsls	r3, r3, #31
 8013d42:	d40b      	bmi.n	8013d5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8013d44:	4620      	mov	r0, r4
 8013d46:	f007 fa03 	bl	801b150 <__cxa_guard_acquire>
 8013d4a:	b138      	cbz	r0, 8013d5c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8013d4c:	4620      	mov	r0, r4
 8013d4e:	f007 fa0b 	bl	801b168 <__cxa_guard_release>
 8013d52:	4a06      	ldr	r2, [pc, #24]	; (8013d6c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8013d54:	4909      	ldr	r1, [pc, #36]	; (8013d7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8013d56:	480a      	ldr	r0, [pc, #40]	; (8013d80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8013d58:	f007 f9f0 	bl	801b13c <__aeabi_atexit>
 8013d5c:	4b05      	ldr	r3, [pc, #20]	; (8013d74 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8013d5e:	64ab      	str	r3, [r5, #72]	; 0x48
 8013d60:	4b07      	ldr	r3, [pc, #28]	; (8013d80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8013d62:	64eb      	str	r3, [r5, #76]	; 0x4c
 8013d64:	bd38      	pop	{r3, r4, r5, pc}
 8013d66:	bf00      	nop
 8013d68:	20026fc4 	.word	0x20026fc4
 8013d6c:	20000000 	.word	0x20000000
 8013d70:	08012047 	.word	0x08012047
 8013d74:	20000090 	.word	0x20000090
 8013d78:	20026fc8 	.word	0x20026fc8
 8013d7c:	08012045 	.word	0x08012045
 8013d80:	20000094 	.word	0x20000094

08013d84 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8013d84:	b538      	push	{r3, r4, r5, lr}
 8013d86:	4c15      	ldr	r4, [pc, #84]	; (8013ddc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8013d88:	7823      	ldrb	r3, [r4, #0]
 8013d8a:	f3bf 8f5b 	dmb	ish
 8013d8e:	07da      	lsls	r2, r3, #31
 8013d90:	4605      	mov	r5, r0
 8013d92:	d40b      	bmi.n	8013dac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8013d94:	4620      	mov	r0, r4
 8013d96:	f007 f9db 	bl	801b150 <__cxa_guard_acquire>
 8013d9a:	b138      	cbz	r0, 8013dac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8013d9c:	4620      	mov	r0, r4
 8013d9e:	f007 f9e3 	bl	801b168 <__cxa_guard_release>
 8013da2:	4a0f      	ldr	r2, [pc, #60]	; (8013de0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8013da4:	490f      	ldr	r1, [pc, #60]	; (8013de4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8013da6:	4810      	ldr	r0, [pc, #64]	; (8013de8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8013da8:	f007 f9c8 	bl	801b13c <__aeabi_atexit>
 8013dac:	4c0f      	ldr	r4, [pc, #60]	; (8013dec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8013dae:	7823      	ldrb	r3, [r4, #0]
 8013db0:	f3bf 8f5b 	dmb	ish
 8013db4:	07db      	lsls	r3, r3, #31
 8013db6:	d40b      	bmi.n	8013dd0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8013db8:	4620      	mov	r0, r4
 8013dba:	f007 f9c9 	bl	801b150 <__cxa_guard_acquire>
 8013dbe:	b138      	cbz	r0, 8013dd0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8013dc0:	4620      	mov	r0, r4
 8013dc2:	f007 f9d1 	bl	801b168 <__cxa_guard_release>
 8013dc6:	4a06      	ldr	r2, [pc, #24]	; (8013de0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8013dc8:	4909      	ldr	r1, [pc, #36]	; (8013df0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8013dca:	480a      	ldr	r0, [pc, #40]	; (8013df4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8013dcc:	f007 f9b6 	bl	801b13c <__aeabi_atexit>
 8013dd0:	4b05      	ldr	r3, [pc, #20]	; (8013de8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8013dd2:	642b      	str	r3, [r5, #64]	; 0x40
 8013dd4:	4b07      	ldr	r3, [pc, #28]	; (8013df4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8013dd6:	646b      	str	r3, [r5, #68]	; 0x44
 8013dd8:	bd38      	pop	{r3, r4, r5, pc}
 8013dda:	bf00      	nop
 8013ddc:	20026f8c 	.word	0x20026f8c
 8013de0:	20000000 	.word	0x20000000
 8013de4:	0801204b 	.word	0x0801204b
 8013de8:	20000058 	.word	0x20000058
 8013dec:	20026f90 	.word	0x20026f90
 8013df0:	08012049 	.word	0x08012049
 8013df4:	2000005c 	.word	0x2000005c

08013df8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8013df8:	b538      	push	{r3, r4, r5, lr}
 8013dfa:	4c15      	ldr	r4, [pc, #84]	; (8013e50 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8013dfc:	7823      	ldrb	r3, [r4, #0]
 8013dfe:	f3bf 8f5b 	dmb	ish
 8013e02:	07da      	lsls	r2, r3, #31
 8013e04:	4605      	mov	r5, r0
 8013e06:	d40b      	bmi.n	8013e20 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8013e08:	4620      	mov	r0, r4
 8013e0a:	f007 f9a1 	bl	801b150 <__cxa_guard_acquire>
 8013e0e:	b138      	cbz	r0, 8013e20 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8013e10:	4620      	mov	r0, r4
 8013e12:	f007 f9a9 	bl	801b168 <__cxa_guard_release>
 8013e16:	4a0f      	ldr	r2, [pc, #60]	; (8013e54 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8013e18:	490f      	ldr	r1, [pc, #60]	; (8013e58 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8013e1a:	4810      	ldr	r0, [pc, #64]	; (8013e5c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8013e1c:	f007 f98e 	bl	801b13c <__aeabi_atexit>
 8013e20:	4c0f      	ldr	r4, [pc, #60]	; (8013e60 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8013e22:	7823      	ldrb	r3, [r4, #0]
 8013e24:	f3bf 8f5b 	dmb	ish
 8013e28:	07db      	lsls	r3, r3, #31
 8013e2a:	d40b      	bmi.n	8013e44 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8013e2c:	4620      	mov	r0, r4
 8013e2e:	f007 f98f 	bl	801b150 <__cxa_guard_acquire>
 8013e32:	b138      	cbz	r0, 8013e44 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8013e34:	4620      	mov	r0, r4
 8013e36:	f007 f997 	bl	801b168 <__cxa_guard_release>
 8013e3a:	4a06      	ldr	r2, [pc, #24]	; (8013e54 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8013e3c:	4909      	ldr	r1, [pc, #36]	; (8013e64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8013e3e:	480a      	ldr	r0, [pc, #40]	; (8013e68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8013e40:	f007 f97c 	bl	801b13c <__aeabi_atexit>
 8013e44:	4b05      	ldr	r3, [pc, #20]	; (8013e5c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8013e46:	63ab      	str	r3, [r5, #56]	; 0x38
 8013e48:	4b07      	ldr	r3, [pc, #28]	; (8013e68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8013e4a:	63eb      	str	r3, [r5, #60]	; 0x3c
 8013e4c:	bd38      	pop	{r3, r4, r5, pc}
 8013e4e:	bf00      	nop
 8013e50:	20026fac 	.word	0x20026fac
 8013e54:	20000000 	.word	0x20000000
 8013e58:	0801204f 	.word	0x0801204f
 8013e5c:	20000078 	.word	0x20000078
 8013e60:	20026fb0 	.word	0x20026fb0
 8013e64:	0801204d 	.word	0x0801204d
 8013e68:	2000007c 	.word	0x2000007c

08013e6c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8013e6c:	b510      	push	{r4, lr}
 8013e6e:	4604      	mov	r4, r0
 8013e70:	f7ff ff14 	bl	8013c9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8013e74:	4620      	mov	r0, r4
 8013e76:	f7ff ff85 	bl	8013d84 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8013e7a:	4620      	mov	r0, r4
 8013e7c:	f7ff ff48 	bl	8013d10 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8013e80:	4620      	mov	r0, r4
 8013e82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013e86:	f7ff bfb7 	b.w	8013df8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08013e8c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8013e8c:	b538      	push	{r3, r4, r5, lr}
 8013e8e:	4c15      	ldr	r4, [pc, #84]	; (8013ee4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8013e90:	7823      	ldrb	r3, [r4, #0]
 8013e92:	f3bf 8f5b 	dmb	ish
 8013e96:	07da      	lsls	r2, r3, #31
 8013e98:	4605      	mov	r5, r0
 8013e9a:	d40b      	bmi.n	8013eb4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8013e9c:	4620      	mov	r0, r4
 8013e9e:	f007 f957 	bl	801b150 <__cxa_guard_acquire>
 8013ea2:	b138      	cbz	r0, 8013eb4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8013ea4:	4620      	mov	r0, r4
 8013ea6:	f007 f95f 	bl	801b168 <__cxa_guard_release>
 8013eaa:	4a0f      	ldr	r2, [pc, #60]	; (8013ee8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8013eac:	490f      	ldr	r1, [pc, #60]	; (8013eec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8013eae:	4810      	ldr	r0, [pc, #64]	; (8013ef0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8013eb0:	f007 f944 	bl	801b13c <__aeabi_atexit>
 8013eb4:	4c0f      	ldr	r4, [pc, #60]	; (8013ef4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8013eb6:	7823      	ldrb	r3, [r4, #0]
 8013eb8:	f3bf 8f5b 	dmb	ish
 8013ebc:	07db      	lsls	r3, r3, #31
 8013ebe:	d40b      	bmi.n	8013ed8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8013ec0:	4620      	mov	r0, r4
 8013ec2:	f007 f945 	bl	801b150 <__cxa_guard_acquire>
 8013ec6:	b138      	cbz	r0, 8013ed8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8013ec8:	4620      	mov	r0, r4
 8013eca:	f007 f94d 	bl	801b168 <__cxa_guard_release>
 8013ece:	4a06      	ldr	r2, [pc, #24]	; (8013ee8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8013ed0:	4909      	ldr	r1, [pc, #36]	; (8013ef8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8013ed2:	480a      	ldr	r0, [pc, #40]	; (8013efc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8013ed4:	f007 f932 	bl	801b13c <__aeabi_atexit>
 8013ed8:	4b05      	ldr	r3, [pc, #20]	; (8013ef0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8013eda:	662b      	str	r3, [r5, #96]	; 0x60
 8013edc:	4b07      	ldr	r3, [pc, #28]	; (8013efc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8013ede:	666b      	str	r3, [r5, #100]	; 0x64
 8013ee0:	bd38      	pop	{r3, r4, r5, pc}
 8013ee2:	bf00      	nop
 8013ee4:	20026f94 	.word	0x20026f94
 8013ee8:	20000000 	.word	0x20000000
 8013eec:	0801203b 	.word	0x0801203b
 8013ef0:	20000060 	.word	0x20000060
 8013ef4:	20026f98 	.word	0x20026f98
 8013ef8:	08012039 	.word	0x08012039
 8013efc:	20000064 	.word	0x20000064

08013f00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8013f00:	b538      	push	{r3, r4, r5, lr}
 8013f02:	4c15      	ldr	r4, [pc, #84]	; (8013f58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8013f04:	7823      	ldrb	r3, [r4, #0]
 8013f06:	f3bf 8f5b 	dmb	ish
 8013f0a:	07da      	lsls	r2, r3, #31
 8013f0c:	4605      	mov	r5, r0
 8013f0e:	d40b      	bmi.n	8013f28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8013f10:	4620      	mov	r0, r4
 8013f12:	f007 f91d 	bl	801b150 <__cxa_guard_acquire>
 8013f16:	b138      	cbz	r0, 8013f28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8013f18:	4620      	mov	r0, r4
 8013f1a:	f007 f925 	bl	801b168 <__cxa_guard_release>
 8013f1e:	4a0f      	ldr	r2, [pc, #60]	; (8013f5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8013f20:	490f      	ldr	r1, [pc, #60]	; (8013f60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8013f22:	4810      	ldr	r0, [pc, #64]	; (8013f64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8013f24:	f007 f90a 	bl	801b13c <__aeabi_atexit>
 8013f28:	4c0f      	ldr	r4, [pc, #60]	; (8013f68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8013f2a:	7823      	ldrb	r3, [r4, #0]
 8013f2c:	f3bf 8f5b 	dmb	ish
 8013f30:	07db      	lsls	r3, r3, #31
 8013f32:	d40b      	bmi.n	8013f4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8013f34:	4620      	mov	r0, r4
 8013f36:	f007 f90b 	bl	801b150 <__cxa_guard_acquire>
 8013f3a:	b138      	cbz	r0, 8013f4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8013f3c:	4620      	mov	r0, r4
 8013f3e:	f007 f913 	bl	801b168 <__cxa_guard_release>
 8013f42:	4a06      	ldr	r2, [pc, #24]	; (8013f5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8013f44:	4909      	ldr	r1, [pc, #36]	; (8013f6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8013f46:	480a      	ldr	r0, [pc, #40]	; (8013f70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8013f48:	f007 f8f8 	bl	801b13c <__aeabi_atexit>
 8013f4c:	4b05      	ldr	r3, [pc, #20]	; (8013f64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8013f4e:	65ab      	str	r3, [r5, #88]	; 0x58
 8013f50:	4b07      	ldr	r3, [pc, #28]	; (8013f70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8013f52:	65eb      	str	r3, [r5, #92]	; 0x5c
 8013f54:	bd38      	pop	{r3, r4, r5, pc}
 8013f56:	bf00      	nop
 8013f58:	20026f6c 	.word	0x20026f6c
 8013f5c:	20000000 	.word	0x20000000
 8013f60:	0801203f 	.word	0x0801203f
 8013f64:	20000038 	.word	0x20000038
 8013f68:	20026f70 	.word	0x20026f70
 8013f6c:	0801203d 	.word	0x0801203d
 8013f70:	2000003c 	.word	0x2000003c

08013f74 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8013f74:	b510      	push	{r4, lr}
 8013f76:	4604      	mov	r4, r0
 8013f78:	f7ff ff88 	bl	8013e8c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8013f7c:	4620      	mov	r0, r4
 8013f7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013f82:	f7ff bfbd 	b.w	8013f00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08013f88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8013f88:	b538      	push	{r3, r4, r5, lr}
 8013f8a:	4c15      	ldr	r4, [pc, #84]	; (8013fe0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8013f8c:	7823      	ldrb	r3, [r4, #0]
 8013f8e:	f3bf 8f5b 	dmb	ish
 8013f92:	07da      	lsls	r2, r3, #31
 8013f94:	4605      	mov	r5, r0
 8013f96:	d40b      	bmi.n	8013fb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8013f98:	4620      	mov	r0, r4
 8013f9a:	f007 f8d9 	bl	801b150 <__cxa_guard_acquire>
 8013f9e:	b138      	cbz	r0, 8013fb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8013fa0:	4620      	mov	r0, r4
 8013fa2:	f007 f8e1 	bl	801b168 <__cxa_guard_release>
 8013fa6:	4a0f      	ldr	r2, [pc, #60]	; (8013fe4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8013fa8:	490f      	ldr	r1, [pc, #60]	; (8013fe8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8013faa:	4810      	ldr	r0, [pc, #64]	; (8013fec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8013fac:	f007 f8c6 	bl	801b13c <__aeabi_atexit>
 8013fb0:	4c0f      	ldr	r4, [pc, #60]	; (8013ff0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8013fb2:	7823      	ldrb	r3, [r4, #0]
 8013fb4:	f3bf 8f5b 	dmb	ish
 8013fb8:	07db      	lsls	r3, r3, #31
 8013fba:	d40b      	bmi.n	8013fd4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8013fbc:	4620      	mov	r0, r4
 8013fbe:	f007 f8c7 	bl	801b150 <__cxa_guard_acquire>
 8013fc2:	b138      	cbz	r0, 8013fd4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8013fc4:	4620      	mov	r0, r4
 8013fc6:	f007 f8cf 	bl	801b168 <__cxa_guard_release>
 8013fca:	4a06      	ldr	r2, [pc, #24]	; (8013fe4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8013fcc:	4909      	ldr	r1, [pc, #36]	; (8013ff4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8013fce:	480a      	ldr	r0, [pc, #40]	; (8013ff8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8013fd0:	f007 f8b4 	bl	801b13c <__aeabi_atexit>
 8013fd4:	4b05      	ldr	r3, [pc, #20]	; (8013fec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8013fd6:	672b      	str	r3, [r5, #112]	; 0x70
 8013fd8:	4b07      	ldr	r3, [pc, #28]	; (8013ff8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8013fda:	676b      	str	r3, [r5, #116]	; 0x74
 8013fdc:	bd38      	pop	{r3, r4, r5, pc}
 8013fde:	bf00      	nop
 8013fe0:	20026f64 	.word	0x20026f64
 8013fe4:	20000000 	.word	0x20000000
 8013fe8:	08012033 	.word	0x08012033
 8013fec:	20000030 	.word	0x20000030
 8013ff0:	20026f68 	.word	0x20026f68
 8013ff4:	08012031 	.word	0x08012031
 8013ff8:	20000034 	.word	0x20000034

08013ffc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8013ffc:	b538      	push	{r3, r4, r5, lr}
 8013ffe:	4c15      	ldr	r4, [pc, #84]	; (8014054 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8014000:	7823      	ldrb	r3, [r4, #0]
 8014002:	f3bf 8f5b 	dmb	ish
 8014006:	07da      	lsls	r2, r3, #31
 8014008:	4605      	mov	r5, r0
 801400a:	d40b      	bmi.n	8014024 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801400c:	4620      	mov	r0, r4
 801400e:	f007 f89f 	bl	801b150 <__cxa_guard_acquire>
 8014012:	b138      	cbz	r0, 8014024 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8014014:	4620      	mov	r0, r4
 8014016:	f007 f8a7 	bl	801b168 <__cxa_guard_release>
 801401a:	4a0f      	ldr	r2, [pc, #60]	; (8014058 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801401c:	490f      	ldr	r1, [pc, #60]	; (801405c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801401e:	4810      	ldr	r0, [pc, #64]	; (8014060 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8014020:	f007 f88c 	bl	801b13c <__aeabi_atexit>
 8014024:	4c0f      	ldr	r4, [pc, #60]	; (8014064 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8014026:	7823      	ldrb	r3, [r4, #0]
 8014028:	f3bf 8f5b 	dmb	ish
 801402c:	07db      	lsls	r3, r3, #31
 801402e:	d40b      	bmi.n	8014048 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8014030:	4620      	mov	r0, r4
 8014032:	f007 f88d 	bl	801b150 <__cxa_guard_acquire>
 8014036:	b138      	cbz	r0, 8014048 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8014038:	4620      	mov	r0, r4
 801403a:	f007 f895 	bl	801b168 <__cxa_guard_release>
 801403e:	4a06      	ldr	r2, [pc, #24]	; (8014058 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8014040:	4909      	ldr	r1, [pc, #36]	; (8014068 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8014042:	480a      	ldr	r0, [pc, #40]	; (801406c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8014044:	f007 f87a 	bl	801b13c <__aeabi_atexit>
 8014048:	4b05      	ldr	r3, [pc, #20]	; (8014060 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801404a:	66ab      	str	r3, [r5, #104]	; 0x68
 801404c:	4b07      	ldr	r3, [pc, #28]	; (801406c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801404e:	66eb      	str	r3, [r5, #108]	; 0x6c
 8014050:	bd38      	pop	{r3, r4, r5, pc}
 8014052:	bf00      	nop
 8014054:	20026f5c 	.word	0x20026f5c
 8014058:	20000000 	.word	0x20000000
 801405c:	08012037 	.word	0x08012037
 8014060:	20000028 	.word	0x20000028
 8014064:	20026f60 	.word	0x20026f60
 8014068:	08012035 	.word	0x08012035
 801406c:	2000002c 	.word	0x2000002c

08014070 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8014070:	b510      	push	{r4, lr}
 8014072:	4604      	mov	r4, r0
 8014074:	f7ff ff88 	bl	8013f88 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8014078:	4620      	mov	r0, r4
 801407a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801407e:	f7ff bfbd 	b.w	8013ffc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08014082 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8014082:	b510      	push	{r4, lr}
 8014084:	4604      	mov	r4, r0
 8014086:	f7ff fff3 	bl	8014070 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801408a:	4620      	mov	r0, r4
 801408c:	f7ff ff72 	bl	8013f74 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8014090:	4620      	mov	r0, r4
 8014092:	f7ff fdf9 	bl	8013c88 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8014096:	4620      	mov	r0, r4
 8014098:	f7ff fcfa 	bl	8013a90 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801409c:	4620      	mov	r0, r4
 801409e:	f7ff fd75 	bl	8013b8c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80140a2:	4620      	mov	r0, r4
 80140a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80140a8:	f7ff bee0 	b.w	8013e6c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080140ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80140ac:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80140b0:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 80140b4:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 80140b8:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80140bc:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 80140c0:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 80140c4:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80140c8:	8808      	ldrh	r0, [r1, #0]
 80140ca:	fb0e 4708 	mla	r7, lr, r8, r4
 80140ce:	f1be 0f00 	cmp.w	lr, #0
 80140d2:	eb02 0a07 	add.w	sl, r2, r7
 80140d6:	db37      	blt.n	8014148 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80140d8:	45f3      	cmp	fp, lr
 80140da:	dd35      	ble.n	8014148 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 80140dc:	2c00      	cmp	r4, #0
 80140de:	db31      	blt.n	8014144 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80140e0:	45a0      	cmp	r8, r4
 80140e2:	dd2f      	ble.n	8014144 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 80140e4:	5dd2      	ldrb	r2, [r2, r7]
 80140e6:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 80140ea:	1c62      	adds	r2, r4, #1
 80140ec:	d42f      	bmi.n	801414e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80140ee:	4590      	cmp	r8, r2
 80140f0:	dd2d      	ble.n	801414e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80140f2:	b366      	cbz	r6, 801414e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80140f4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80140f8:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80140fc:	f11e 0e01 	adds.w	lr, lr, #1
 8014100:	d429      	bmi.n	8014156 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8014102:	45f3      	cmp	fp, lr
 8014104:	dd27      	ble.n	8014156 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8014106:	f1bc 0f00 	cmp.w	ip, #0
 801410a:	f000 80a0 	beq.w	801424e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 801410e:	2c00      	cmp	r4, #0
 8014110:	db1f      	blt.n	8014152 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8014112:	45a0      	cmp	r8, r4
 8014114:	dd1d      	ble.n	8014152 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8014116:	f81a 2008 	ldrb.w	r2, [sl, r8]
 801411a:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 801411e:	3401      	adds	r4, #1
 8014120:	d41c      	bmi.n	801415c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8014122:	45a0      	cmp	r8, r4
 8014124:	dd1a      	ble.n	801415c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8014126:	b1de      	cbz	r6, 8014160 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8014128:	44d0      	add	r8, sl
 801412a:	f898 2001 	ldrb.w	r2, [r8, #1]
 801412e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8014132:	2e0f      	cmp	r6, #15
 8014134:	d915      	bls.n	8014162 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8014136:	4b49      	ldr	r3, [pc, #292]	; (801425c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8014138:	4a49      	ldr	r2, [pc, #292]	; (8014260 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 801413a:	484a      	ldr	r0, [pc, #296]	; (8014264 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 801413c:	f240 3155 	movw	r1, #853	; 0x355
 8014140:	f007 f830 	bl	801b1a4 <__assert_func>
 8014144:	4681      	mov	r9, r0
 8014146:	e7d0      	b.n	80140ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8014148:	4607      	mov	r7, r0
 801414a:	4681      	mov	r9, r0
 801414c:	e7d6      	b.n	80140fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 801414e:	4607      	mov	r7, r0
 8014150:	e7d4      	b.n	80140fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8014152:	4686      	mov	lr, r0
 8014154:	e7e3      	b.n	801411e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8014156:	4603      	mov	r3, r0
 8014158:	4686      	mov	lr, r0
 801415a:	e7ea      	b.n	8014132 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 801415c:	4603      	mov	r3, r0
 801415e:	e7e8      	b.n	8014132 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8014160:	4603      	mov	r3, r0
 8014162:	f1bc 0f0f 	cmp.w	ip, #15
 8014166:	d8e6      	bhi.n	8014136 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014168:	ea4f 4409 	mov.w	r4, r9, lsl #16
 801416c:	fb16 f80c 	smulbb	r8, r6, ip
 8014170:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014174:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8014178:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801417c:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8014180:	ea44 0909 	orr.w	r9, r4, r9
 8014184:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8014188:	f1cc 0410 	rsb	r4, ip, #16
 801418c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014190:	1ba4      	subs	r4, r4, r6
 8014192:	041a      	lsls	r2, r3, #16
 8014194:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8014198:	ea4a 0707 	orr.w	r7, sl, r7
 801419c:	4377      	muls	r7, r6
 801419e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80141a2:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 80141a6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80141aa:	fb04 7409 	mla	r4, r4, r9, r7
 80141ae:	4313      	orrs	r3, r2
 80141b0:	ea4f 420e 	mov.w	r2, lr, lsl #16
 80141b4:	fb08 4303 	mla	r3, r8, r3, r4
 80141b8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80141bc:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 80141c0:	4322      	orrs	r2, r4
 80141c2:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 80141c6:	fb0c 3202 	mla	r2, ip, r2, r3
 80141ca:	0d53      	lsrs	r3, r2, #21
 80141cc:	0952      	lsrs	r2, r2, #5
 80141ce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80141d2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80141d6:	431a      	orrs	r2, r3
 80141d8:	b293      	uxth	r3, r2
 80141da:	b2af      	uxth	r7, r5
 80141dc:	1202      	asrs	r2, r0, #8
 80141de:	43ed      	mvns	r5, r5
 80141e0:	b2ed      	uxtb	r5, r5
 80141e2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80141e6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80141ea:	fb12 f205 	smulbb	r2, r2, r5
 80141ee:	10c6      	asrs	r6, r0, #3
 80141f0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80141f4:	fb0c 2c07 	mla	ip, ip, r7, r2
 80141f8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80141fc:	10da      	asrs	r2, r3, #3
 80141fe:	fb16 f605 	smulbb	r6, r6, r5
 8014202:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8014206:	fb02 6207 	mla	r2, r2, r7, r6
 801420a:	b296      	uxth	r6, r2
 801420c:	00c2      	lsls	r2, r0, #3
 801420e:	00dc      	lsls	r4, r3, #3
 8014210:	b2d2      	uxtb	r2, r2
 8014212:	b2e4      	uxtb	r4, r4
 8014214:	fb12 f205 	smulbb	r2, r2, r5
 8014218:	fb04 2207 	mla	r2, r4, r7, r2
 801421c:	fa1f fc8c 	uxth.w	ip, ip
 8014220:	b292      	uxth	r2, r2
 8014222:	f10c 0301 	add.w	r3, ip, #1
 8014226:	1c50      	adds	r0, r2, #1
 8014228:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801422c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8014230:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014234:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8014238:	4313      	orrs	r3, r2
 801423a:	1c72      	adds	r2, r6, #1
 801423c:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8014240:	0952      	lsrs	r2, r2, #5
 8014242:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014246:	4313      	orrs	r3, r2
 8014248:	800b      	strh	r3, [r1, #0]
 801424a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801424e:	2e0f      	cmp	r6, #15
 8014250:	f63f af71 	bhi.w	8014136 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8014254:	4603      	mov	r3, r0
 8014256:	4686      	mov	lr, r0
 8014258:	e786      	b.n	8014168 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 801425a:	bf00      	nop
 801425c:	0801f4bf 	.word	0x0801f4bf
 8014260:	0801fac6 	.word	0x0801fac6
 8014264:	0801f547 	.word	0x0801f547

08014268 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014268:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801426c:	ed2d 8b08 	vpush	{d8-d11}
 8014270:	b09b      	sub	sp, #108	; 0x6c
 8014272:	e9dd 982d 	ldrd	r9, r8, [sp, #180]	; 0xb4
 8014276:	9309      	str	r3, [sp, #36]	; 0x24
 8014278:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 801427c:	9e31      	ldr	r6, [sp, #196]	; 0xc4
 801427e:	930a      	str	r3, [sp, #40]	; 0x28
 8014280:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8014284:	930e      	str	r3, [sp, #56]	; 0x38
 8014286:	910d      	str	r1, [sp, #52]	; 0x34
 8014288:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801428c:	9018      	str	r0, [sp, #96]	; 0x60
 801428e:	6870      	ldr	r0, [r6, #4]
 8014290:	9217      	str	r2, [sp, #92]	; 0x5c
 8014292:	fb00 1303 	mla	r3, r0, r3, r1
 8014296:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8014298:	6831      	ldr	r1, [r6, #0]
 801429a:	6856      	ldr	r6, [r2, #4]
 801429c:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 80142a0:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 80142a4:	6813      	ldr	r3, [r2, #0]
 80142a6:	930c      	str	r3, [sp, #48]	; 0x30
 80142a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80142aa:	43db      	mvns	r3, r3
 80142ac:	b2db      	uxtb	r3, r3
 80142ae:	eeb0 aa40 	vmov.f32	s20, s0
 80142b2:	eef0 9a60 	vmov.f32	s19, s1
 80142b6:	eeb0 9a41 	vmov.f32	s18, s2
 80142ba:	eeb0 8a62 	vmov.f32	s16, s5
 80142be:	eef0 8a43 	vmov.f32	s17, s6
 80142c2:	eef0 ba44 	vmov.f32	s23, s8
 80142c6:	eeb0 ba64 	vmov.f32	s22, s9
 80142ca:	eef0 aa45 	vmov.f32	s21, s10
 80142ce:	3604      	adds	r6, #4
 80142d0:	930b      	str	r3, [sp, #44]	; 0x2c
 80142d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80142d4:	2b00      	cmp	r3, #0
 80142d6:	dc03      	bgt.n	80142e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80142d8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80142da:	2b00      	cmp	r3, #0
 80142dc:	f340 8215 	ble.w	801470a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 80142e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80142e2:	2b00      	cmp	r3, #0
 80142e4:	f340 8102 	ble.w	80144ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 80142e8:	ea5f 4229 	movs.w	r2, r9, asr #16
 80142ec:	ea4f 4328 	mov.w	r3, r8, asr #16
 80142f0:	d42c      	bmi.n	801434c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 80142f2:	1c51      	adds	r1, r2, #1
 80142f4:	428c      	cmp	r4, r1
 80142f6:	dd2c      	ble.n	8014352 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 80142f8:	2b00      	cmp	r3, #0
 80142fa:	db2a      	blt.n	8014352 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 80142fc:	980a      	ldr	r0, [sp, #40]	; 0x28
 80142fe:	1c59      	adds	r1, r3, #1
 8014300:	4288      	cmp	r0, r1
 8014302:	dd26      	ble.n	8014352 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8014304:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014306:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8014308:	3b01      	subs	r3, #1
 801430a:	fb02 9203 	mla	r2, r2, r3, r9
 801430e:	1412      	asrs	r2, r2, #16
 8014310:	d429      	bmi.n	8014366 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8014312:	3201      	adds	r2, #1
 8014314:	4294      	cmp	r4, r2
 8014316:	dd26      	ble.n	8014366 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8014318:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 801431a:	fb02 8303 	mla	r3, r2, r3, r8
 801431e:	141b      	asrs	r3, r3, #16
 8014320:	d421      	bmi.n	8014366 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8014322:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014324:	3301      	adds	r3, #1
 8014326:	429a      	cmp	r2, r3
 8014328:	dd1d      	ble.n	8014366 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801432a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801432e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8014332:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 8014336:	9312      	str	r3, [sp, #72]	; 0x48
 8014338:	f1be 0f00 	cmp.w	lr, #0
 801433c:	f300 8138 	bgt.w	80145b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x348>
 8014340:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014342:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8014346:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801434a:	e0d1      	b.n	80144f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x288>
 801434c:	1c51      	adds	r1, r2, #1
 801434e:	f040 80c3 	bne.w	80144d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8014352:	42a2      	cmp	r2, r4
 8014354:	f280 80c0 	bge.w	80144d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8014358:	1c5f      	adds	r7, r3, #1
 801435a:	f2c0 80bd 	blt.w	80144d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 801435e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014360:	4293      	cmp	r3, r2
 8014362:	f280 80b9 	bge.w	80144d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8014366:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801436a:	4657      	mov	r7, sl
 801436c:	f1bb 0f00 	cmp.w	fp, #0
 8014370:	dde6      	ble.n	8014340 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8014372:	ea5f 4229 	movs.w	r2, r9, asr #16
 8014376:	ea4f 4328 	mov.w	r3, r8, asr #16
 801437a:	f3c9 3003 	ubfx	r0, r9, #12, #4
 801437e:	f3c8 3103 	ubfx	r1, r8, #12, #4
 8014382:	f100 80fc 	bmi.w	801457e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x316>
 8014386:	f102 0c01 	add.w	ip, r2, #1
 801438a:	4564      	cmp	r4, ip
 801438c:	f340 80f9 	ble.w	8014582 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8014390:	2b00      	cmp	r3, #0
 8014392:	f2c0 80f6 	blt.w	8014582 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8014396:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8014398:	f103 0c01 	add.w	ip, r3, #1
 801439c:	4565      	cmp	r5, ip
 801439e:	f340 80f0 	ble.w	8014582 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 80143a2:	fb03 2304 	mla	r3, r3, r4, r2
 80143a6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80143a8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80143aa:	441a      	add	r2, r3
 80143ac:	5ceb      	ldrb	r3, [r5, r3]
 80143ae:	f836 e013 	ldrh.w	lr, [r6, r3, lsl #1]
 80143b2:	2800      	cmp	r0, #0
 80143b4:	f000 80db 	beq.w	801456e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x306>
 80143b8:	7853      	ldrb	r3, [r2, #1]
 80143ba:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80143be:	9313      	str	r3, [sp, #76]	; 0x4c
 80143c0:	b141      	cbz	r1, 80143d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 80143c2:	1913      	adds	r3, r2, r4
 80143c4:	5d12      	ldrb	r2, [r2, r4]
 80143c6:	785b      	ldrb	r3, [r3, #1]
 80143c8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80143cc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80143d0:	9210      	str	r2, [sp, #64]	; 0x40
 80143d2:	9314      	str	r3, [sp, #80]	; 0x50
 80143d4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80143d6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80143d8:	fb10 f201 	smulbb	r2, r0, r1
 80143dc:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80143e0:	10d2      	asrs	r2, r2, #3
 80143e2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80143e6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80143ea:	ea4c 0c03 	orr.w	ip, ip, r3
 80143ee:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 80143f2:	930f      	str	r3, [sp, #60]	; 0x3c
 80143f4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80143f6:	041b      	lsls	r3, r3, #16
 80143f8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80143fc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014400:	432b      	orrs	r3, r5
 8014402:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8014404:	4353      	muls	r3, r2
 8014406:	fb05 330c 	mla	r3, r5, ip, r3
 801440a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801440e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014412:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8014416:	ea4c 0e0e 	orr.w	lr, ip, lr
 801441a:	f1c1 0c10 	rsb	ip, r1, #16
 801441e:	ebac 0c00 	sub.w	ip, ip, r0
 8014422:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014426:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801442a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801442c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801442e:	0418      	lsls	r0, r3, #16
 8014430:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014434:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014438:	4318      	orrs	r0, r3
 801443a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801443e:	fb02 c200 	mla	r2, r2, r0, ip
 8014442:	0d53      	lsrs	r3, r2, #21
 8014444:	0952      	lsrs	r2, r2, #5
 8014446:	f8b7 c000 	ldrh.w	ip, [r7]
 801444a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801444e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014452:	431a      	orrs	r2, r3
 8014454:	b292      	uxth	r2, r2
 8014456:	ea4f 212c 	mov.w	r1, ip, asr #8
 801445a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801445e:	1210      	asrs	r0, r2, #8
 8014460:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014464:	fb11 f105 	smulbb	r1, r1, r5
 8014468:	ea4f 0eec 	mov.w	lr, ip, asr #3
 801446c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014470:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014474:	fb00 1003 	mla	r0, r0, r3, r1
 8014478:	fa5f fc8c 	uxtb.w	ip, ip
 801447c:	10d1      	asrs	r1, r2, #3
 801447e:	00d2      	lsls	r2, r2, #3
 8014480:	fb1c fc05 	smulbb	ip, ip, r5
 8014484:	b2d2      	uxtb	r2, r2
 8014486:	fb02 c203 	mla	r2, r2, r3, ip
 801448a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801448e:	b280      	uxth	r0, r0
 8014490:	b292      	uxth	r2, r2
 8014492:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014496:	fb1e fe05 	smulbb	lr, lr, r5
 801449a:	fb01 e103 	mla	r1, r1, r3, lr
 801449e:	f102 0c01 	add.w	ip, r2, #1
 80144a2:	1c43      	adds	r3, r0, #1
 80144a4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80144a8:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80144ac:	b289      	uxth	r1, r1
 80144ae:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80144b2:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80144b6:	4313      	orrs	r3, r2
 80144b8:	1c4a      	adds	r2, r1, #1
 80144ba:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80144be:	0949      	lsrs	r1, r1, #5
 80144c0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80144c4:	430b      	orrs	r3, r1
 80144c6:	803b      	strh	r3, [r7, #0]
 80144c8:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80144ca:	4499      	add	r9, r3
 80144cc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80144ce:	3702      	adds	r7, #2
 80144d0:	4498      	add	r8, r3
 80144d2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80144d6:	e749      	b.n	801436c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80144d8:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80144da:	4499      	add	r9, r3
 80144dc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80144de:	4498      	add	r8, r3
 80144e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80144e2:	3b01      	subs	r3, #1
 80144e4:	9309      	str	r3, [sp, #36]	; 0x24
 80144e6:	f10a 0a02 	add.w	sl, sl, #2
 80144ea:	e6f9      	b.n	80142e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80144ec:	f47f af0a 	bne.w	8014304 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 80144f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80144f2:	2b00      	cmp	r3, #0
 80144f4:	f340 8109 	ble.w	801470a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 80144f8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80144fc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014500:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8014504:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014506:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801450a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801450e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014512:	eef0 6a48 	vmov.f32	s13, s16
 8014516:	ee69 7a27 	vmul.f32	s15, s18, s15
 801451a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801451e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014522:	ee16 9a90 	vmov	r9, s13
 8014526:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801452a:	eef0 6a68 	vmov.f32	s13, s17
 801452e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014532:	ee18 2a10 	vmov	r2, s16
 8014536:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801453a:	fb92 f3f3 	sdiv	r3, r2, r3
 801453e:	ee18 2a90 	vmov	r2, s17
 8014542:	932f      	str	r3, [sp, #188]	; 0xbc
 8014544:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014546:	fb92 f3f3 	sdiv	r3, r2, r3
 801454a:	9330      	str	r3, [sp, #192]	; 0xc0
 801454c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801454e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8014550:	3b01      	subs	r3, #1
 8014552:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014556:	930d      	str	r3, [sp, #52]	; 0x34
 8014558:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801455a:	bf08      	it	eq
 801455c:	4613      	moveq	r3, r2
 801455e:	ee16 8a90 	vmov	r8, s13
 8014562:	9309      	str	r3, [sp, #36]	; 0x24
 8014564:	eef0 8a67 	vmov.f32	s17, s15
 8014568:	eeb0 8a47 	vmov.f32	s16, s14
 801456c:	e6b1      	b.n	80142d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801456e:	2900      	cmp	r1, #0
 8014570:	f43f af30 	beq.w	80143d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8014574:	5d13      	ldrb	r3, [r2, r4]
 8014576:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801457a:	9310      	str	r3, [sp, #64]	; 0x40
 801457c:	e72a      	b.n	80143d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 801457e:	1c55      	adds	r5, r2, #1
 8014580:	d1a2      	bne.n	80144c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8014582:	4294      	cmp	r4, r2
 8014584:	dda0      	ble.n	80144c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8014586:	1c5d      	adds	r5, r3, #1
 8014588:	db9e      	blt.n	80144c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 801458a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801458c:	429d      	cmp	r5, r3
 801458e:	dd9b      	ble.n	80144c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8014590:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8014594:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014596:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014598:	9202      	str	r2, [sp, #8]
 801459a:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801459e:	e9cd 4300 	strd	r4, r3, [sp]
 80145a2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80145a4:	9818      	ldr	r0, [sp, #96]	; 0x60
 80145a6:	4633      	mov	r3, r6
 80145a8:	4639      	mov	r1, r7
 80145aa:	f7ff fd7f 	bl	80140ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 80145ae:	e78b      	b.n	80144c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 80145b0:	ea4f 4329 	mov.w	r3, r9, asr #16
 80145b4:	ea4f 4228 	mov.w	r2, r8, asr #16
 80145b8:	fb04 3202 	mla	r2, r4, r2, r3
 80145bc:	990c      	ldr	r1, [sp, #48]	; 0x30
 80145be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80145c0:	4413      	add	r3, r2
 80145c2:	5c8a      	ldrb	r2, [r1, r2]
 80145c4:	f3c9 3c03 	ubfx	ip, r9, #12, #4
 80145c8:	f3c8 3003 	ubfx	r0, r8, #12, #4
 80145cc:	f836 1012 	ldrh.w	r1, [r6, r2, lsl #1]
 80145d0:	f1bc 0f00 	cmp.w	ip, #0
 80145d4:	f000 8091 	beq.w	80146fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x492>
 80145d8:	785a      	ldrb	r2, [r3, #1]
 80145da:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80145de:	9215      	str	r2, [sp, #84]	; 0x54
 80145e0:	b140      	cbz	r0, 80145f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 80145e2:	191a      	adds	r2, r3, r4
 80145e4:	5d1b      	ldrb	r3, [r3, r4]
 80145e6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80145ea:	9311      	str	r3, [sp, #68]	; 0x44
 80145ec:	7853      	ldrb	r3, [r2, #1]
 80145ee:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80145f2:	9316      	str	r3, [sp, #88]	; 0x58
 80145f4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80145f6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80145f8:	fb1c f200 	smulbb	r2, ip, r0
 80145fc:	041f      	lsls	r7, r3, #16
 80145fe:	10d2      	asrs	r2, r2, #3
 8014600:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014604:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8014608:	431f      	orrs	r7, r3
 801460a:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801460e:	9319      	str	r3, [sp, #100]	; 0x64
 8014610:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8014612:	041b      	lsls	r3, r3, #16
 8014614:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8014618:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801461c:	ea43 030b 	orr.w	r3, r3, fp
 8014620:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8014622:	4353      	muls	r3, r2
 8014624:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014628:	fb05 3707 	mla	r7, r5, r7, r3
 801462c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014630:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8014634:	ea43 0b01 	orr.w	fp, r3, r1
 8014638:	f1c0 0110 	rsb	r1, r0, #16
 801463c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801463e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8014640:	eba1 0c0c 	sub.w	ip, r1, ip
 8014644:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8014648:	fb0c 770b 	mla	r7, ip, fp, r7
 801464c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014650:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8014654:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014658:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801465c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8014660:	fb02 770c 	mla	r7, r2, ip, r7
 8014664:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014666:	0d79      	lsrs	r1, r7, #21
 8014668:	8812      	ldrh	r2, [r2, #0]
 801466a:	097f      	lsrs	r7, r7, #5
 801466c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014670:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014674:	430f      	orrs	r7, r1
 8014676:	1211      	asrs	r1, r2, #8
 8014678:	b2bb      	uxth	r3, r7
 801467a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801467e:	fb11 f105 	smulbb	r1, r1, r5
 8014682:	1218      	asrs	r0, r3, #8
 8014684:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014686:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801468a:	fb00 1005 	mla	r0, r0, r5, r1
 801468e:	10d7      	asrs	r7, r2, #3
 8014690:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8014692:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014696:	fb17 f705 	smulbb	r7, r7, r5
 801469a:	10d9      	asrs	r1, r3, #3
 801469c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801469e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80146a2:	fb01 7105 	mla	r1, r1, r5, r7
 80146a6:	00d2      	lsls	r2, r2, #3
 80146a8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80146aa:	b2d2      	uxtb	r2, r2
 80146ac:	fb12 f205 	smulbb	r2, r2, r5
 80146b0:	00db      	lsls	r3, r3, #3
 80146b2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80146b4:	b2db      	uxtb	r3, r3
 80146b6:	b280      	uxth	r0, r0
 80146b8:	fb03 2305 	mla	r3, r3, r5, r2
 80146bc:	b29b      	uxth	r3, r3
 80146be:	b289      	uxth	r1, r1
 80146c0:	1c42      	adds	r2, r0, #1
 80146c2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80146c6:	1c4f      	adds	r7, r1, #1
 80146c8:	1c5a      	adds	r2, r3, #1
 80146ca:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80146ce:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80146d2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80146d6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80146da:	0949      	lsrs	r1, r1, #5
 80146dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80146de:	4310      	orrs	r0, r2
 80146e0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80146e4:	4308      	orrs	r0, r1
 80146e6:	f823 0b02 	strh.w	r0, [r3], #2
 80146ea:	930f      	str	r3, [sp, #60]	; 0x3c
 80146ec:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80146ee:	4499      	add	r9, r3
 80146f0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80146f2:	f10e 3eff 	add.w	lr, lr, #4294967295
 80146f6:	4498      	add	r8, r3
 80146f8:	e61e      	b.n	8014338 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 80146fa:	2800      	cmp	r0, #0
 80146fc:	f43f af7a 	beq.w	80145f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8014700:	5d1b      	ldrb	r3, [r3, r4]
 8014702:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8014706:	9311      	str	r3, [sp, #68]	; 0x44
 8014708:	e774      	b.n	80145f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 801470a:	b01b      	add	sp, #108	; 0x6c
 801470c:	ecbd 8b08 	vpop	{d8-d11}
 8014710:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014714 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8014714:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014718:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 801471c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8014720:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8014724:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 8014728:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801472c:	8808      	ldrh	r0, [r1, #0]
 801472e:	fb06 570e 	mla	r7, r6, lr, r5
 8014732:	2e00      	cmp	r6, #0
 8014734:	eb02 0807 	add.w	r8, r2, r7
 8014738:	db38      	blt.n	80147ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801473a:	45b1      	cmp	r9, r6
 801473c:	dd36      	ble.n	80147ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 801473e:	2d00      	cmp	r5, #0
 8014740:	db32      	blt.n	80147a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8014742:	45ae      	cmp	lr, r5
 8014744:	dd30      	ble.n	80147a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 8014746:	5dd2      	ldrb	r2, [r2, r7]
 8014748:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801474c:	1c6a      	adds	r2, r5, #1
 801474e:	d430      	bmi.n	80147b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014750:	4596      	cmp	lr, r2
 8014752:	dd2e      	ble.n	80147b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014754:	b36c      	cbz	r4, 80147b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014756:	f898 2001 	ldrb.w	r2, [r8, #1]
 801475a:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801475e:	3601      	adds	r6, #1
 8014760:	d42b      	bmi.n	80147ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014762:	45b1      	cmp	r9, r6
 8014764:	dd29      	ble.n	80147ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014766:	f1bc 0f00 	cmp.w	ip, #0
 801476a:	d028      	beq.n	80147be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 801476c:	2d00      	cmp	r5, #0
 801476e:	db22      	blt.n	80147b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014770:	45ae      	cmp	lr, r5
 8014772:	dd20      	ble.n	80147b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014774:	f818 600e 	ldrb.w	r6, [r8, lr]
 8014778:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 801477c:	3501      	adds	r5, #1
 801477e:	d407      	bmi.n	8014790 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014780:	45ae      	cmp	lr, r5
 8014782:	dd05      	ble.n	8014790 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014784:	b134      	cbz	r4, 8014794 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8014786:	44c6      	add	lr, r8
 8014788:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801478c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014790:	2c0f      	cmp	r4, #15
 8014792:	d802      	bhi.n	801479a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8014794:	f1bc 0f0f 	cmp.w	ip, #15
 8014798:	d914      	bls.n	80147c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 801479a:	4b26      	ldr	r3, [pc, #152]	; (8014834 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 801479c:	4a26      	ldr	r2, [pc, #152]	; (8014838 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 801479e:	4827      	ldr	r0, [pc, #156]	; (801483c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 80147a0:	f240 3155 	movw	r1, #853	; 0x355
 80147a4:	f006 fcfe 	bl	801b1a4 <__assert_func>
 80147a8:	4607      	mov	r7, r0
 80147aa:	e7cf      	b.n	801474c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 80147ac:	4602      	mov	r2, r0
 80147ae:	4607      	mov	r7, r0
 80147b0:	e7d5      	b.n	801475e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 80147b2:	4602      	mov	r2, r0
 80147b4:	e7d3      	b.n	801475e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 80147b6:	4606      	mov	r6, r0
 80147b8:	e7e0      	b.n	801477c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 80147ba:	4606      	mov	r6, r0
 80147bc:	e7e8      	b.n	8014790 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 80147be:	2c0f      	cmp	r4, #15
 80147c0:	d8eb      	bhi.n	801479a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 80147c2:	4606      	mov	r6, r0
 80147c4:	043d      	lsls	r5, r7, #16
 80147c6:	fb14 f30c 	smulbb	r3, r4, ip
 80147ca:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 80147ce:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 80147d2:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80147d6:	10db      	asrs	r3, r3, #3
 80147d8:	432f      	orrs	r7, r5
 80147da:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80147de:	f1cc 0510 	rsb	r5, ip, #16
 80147e2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80147e6:	1b2d      	subs	r5, r5, r4
 80147e8:	ea4e 0202 	orr.w	r2, lr, r2
 80147ec:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 80147f0:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80147f4:	4354      	muls	r4, r2
 80147f6:	fb05 4507 	mla	r5, r5, r7, r4
 80147fa:	0404      	lsls	r4, r0, #16
 80147fc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8014800:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8014804:	4320      	orrs	r0, r4
 8014806:	fb03 5400 	mla	r4, r3, r0, r5
 801480a:	0430      	lsls	r0, r6, #16
 801480c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8014810:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8014814:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8014818:	4330      	orrs	r0, r6
 801481a:	fb03 4000 	mla	r0, r3, r0, r4
 801481e:	0d43      	lsrs	r3, r0, #21
 8014820:	0940      	lsrs	r0, r0, #5
 8014822:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014826:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801482a:	4318      	orrs	r0, r3
 801482c:	8008      	strh	r0, [r1, #0]
 801482e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014832:	bf00      	nop
 8014834:	0801f4bf 	.word	0x0801f4bf
 8014838:	0801fac6 	.word	0x0801fac6
 801483c:	0801f547 	.word	0x0801f547

08014840 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014840:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014844:	ed2d 8b0a 	vpush	{d8-d12}
 8014848:	b095      	sub	sp, #84	; 0x54
 801484a:	e9dd 9629 	ldrd	r9, r6, [sp, #164]	; 0xa4
 801484e:	9f2d      	ldr	r7, [sp, #180]	; 0xb4
 8014850:	9306      	str	r3, [sp, #24]
 8014852:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8014856:	9109      	str	r1, [sp, #36]	; 0x24
 8014858:	9307      	str	r3, [sp, #28]
 801485a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801485e:	9012      	str	r0, [sp, #72]	; 0x48
 8014860:	6878      	ldr	r0, [r7, #4]
 8014862:	9211      	str	r2, [sp, #68]	; 0x44
 8014864:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8014866:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 801486a:	fb00 1303 	mla	r3, r0, r3, r1
 801486e:	6839      	ldr	r1, [r7, #0]
 8014870:	6857      	ldr	r7, [r2, #4]
 8014872:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8014876:	6813      	ldr	r3, [r2, #0]
 8014878:	9308      	str	r3, [sp, #32]
 801487a:	eeb0 aa40 	vmov.f32	s20, s0
 801487e:	eef0 9a60 	vmov.f32	s19, s1
 8014882:	eeb0 9a41 	vmov.f32	s18, s2
 8014886:	eeb0 8a62 	vmov.f32	s16, s5
 801488a:	eef0 8a43 	vmov.f32	s17, s6
 801488e:	eeb0 ca44 	vmov.f32	s24, s8
 8014892:	eef0 ba64 	vmov.f32	s23, s9
 8014896:	eeb0 ba45 	vmov.f32	s22, s10
 801489a:	3704      	adds	r7, #4
 801489c:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 80148a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80148a2:	2b00      	cmp	r3, #0
 80148a4:	dc03      	bgt.n	80148ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 80148a6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80148a8:	2b00      	cmp	r3, #0
 80148aa:	f340 819a 	ble.w	8014be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 80148ae:	9b06      	ldr	r3, [sp, #24]
 80148b0:	2b00      	cmp	r3, #0
 80148b2:	f340 80c4 	ble.w	8014a3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80148b6:	ea5f 4229 	movs.w	r2, r9, asr #16
 80148ba:	ea4f 4326 	mov.w	r3, r6, asr #16
 80148be:	d429      	bmi.n	8014914 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 80148c0:	1c51      	adds	r1, r2, #1
 80148c2:	428c      	cmp	r4, r1
 80148c4:	dd29      	ble.n	801491a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 80148c6:	2b00      	cmp	r3, #0
 80148c8:	db27      	blt.n	801491a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 80148ca:	9807      	ldr	r0, [sp, #28]
 80148cc:	1c59      	adds	r1, r3, #1
 80148ce:	4288      	cmp	r0, r1
 80148d0:	dd23      	ble.n	801491a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 80148d2:	9b06      	ldr	r3, [sp, #24]
 80148d4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80148d6:	3b01      	subs	r3, #1
 80148d8:	fb02 9203 	mla	r2, r2, r3, r9
 80148dc:	1412      	asrs	r2, r2, #16
 80148de:	d425      	bmi.n	801492c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80148e0:	3201      	adds	r2, #1
 80148e2:	4294      	cmp	r4, r2
 80148e4:	dd22      	ble.n	801492c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80148e6:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80148e8:	fb02 6303 	mla	r3, r2, r3, r6
 80148ec:	141b      	asrs	r3, r3, #16
 80148ee:	d41d      	bmi.n	801492c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80148f0:	9a07      	ldr	r2, [sp, #28]
 80148f2:	3301      	adds	r3, #1
 80148f4:	429a      	cmp	r2, r3
 80148f6:	dd19      	ble.n	801492c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80148f8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80148fc:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 8014900:	f1b8 0f00 	cmp.w	r8, #0
 8014904:	f300 80f8 	bgt.w	8014af8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b8>
 8014908:	9b06      	ldr	r3, [sp, #24]
 801490a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801490e:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8014912:	e096      	b.n	8014a42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8014914:	1c51      	adds	r1, r2, #1
 8014916:	f040 8088 	bne.w	8014a2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 801491a:	42a2      	cmp	r2, r4
 801491c:	f280 8085 	bge.w	8014a2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8014920:	1c5a      	adds	r2, r3, #1
 8014922:	f2c0 8082 	blt.w	8014a2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8014926:	9a07      	ldr	r2, [sp, #28]
 8014928:	4293      	cmp	r3, r2
 801492a:	da7e      	bge.n	8014a2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 801492c:	f8dd b018 	ldr.w	fp, [sp, #24]
 8014930:	46d0      	mov	r8, sl
 8014932:	f1bb 0f00 	cmp.w	fp, #0
 8014936:	dde7      	ble.n	8014908 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8014938:	ea5f 4229 	movs.w	r2, r9, asr #16
 801493c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8014940:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8014944:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8014948:	f100 80c0 	bmi.w	8014acc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 801494c:	f102 0c01 	add.w	ip, r2, #1
 8014950:	4564      	cmp	r4, ip
 8014952:	f340 80bd 	ble.w	8014ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8014956:	2b00      	cmp	r3, #0
 8014958:	f2c0 80ba 	blt.w	8014ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 801495c:	9d07      	ldr	r5, [sp, #28]
 801495e:	f103 0c01 	add.w	ip, r3, #1
 8014962:	4565      	cmp	r5, ip
 8014964:	f340 80b4 	ble.w	8014ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8014968:	fb03 2304 	mla	r3, r3, r4, r2
 801496c:	9d08      	ldr	r5, [sp, #32]
 801496e:	9a08      	ldr	r2, [sp, #32]
 8014970:	441a      	add	r2, r3
 8014972:	5ceb      	ldrb	r3, [r5, r3]
 8014974:	f837 e013 	ldrh.w	lr, [r7, r3, lsl #1]
 8014978:	2800      	cmp	r0, #0
 801497a:	f000 809f 	beq.w	8014abc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27c>
 801497e:	7853      	ldrb	r3, [r2, #1]
 8014980:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014984:	930d      	str	r3, [sp, #52]	; 0x34
 8014986:	b141      	cbz	r1, 801499a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8014988:	1913      	adds	r3, r2, r4
 801498a:	5d12      	ldrb	r2, [r2, r4]
 801498c:	785b      	ldrb	r3, [r3, #1]
 801498e:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8014992:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014996:	920a      	str	r2, [sp, #40]	; 0x28
 8014998:	930e      	str	r3, [sp, #56]	; 0x38
 801499a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801499c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801499e:	fb10 f201 	smulbb	r2, r0, r1
 80149a2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80149a6:	10d2      	asrs	r2, r2, #3
 80149a8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80149ac:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80149b0:	ea4c 0c03 	orr.w	ip, ip, r3
 80149b4:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 80149b8:	930c      	str	r3, [sp, #48]	; 0x30
 80149ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80149bc:	041b      	lsls	r3, r3, #16
 80149be:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80149c2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80149c6:	432b      	orrs	r3, r5
 80149c8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80149ca:	4353      	muls	r3, r2
 80149cc:	fb05 330c 	mla	r3, r5, ip, r3
 80149d0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80149d4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80149d8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80149dc:	ea4c 0e0e 	orr.w	lr, ip, lr
 80149e0:	f1c1 0c10 	rsb	ip, r1, #16
 80149e4:	ebac 0c00 	sub.w	ip, ip, r0
 80149e8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80149ec:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80149f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80149f2:	0418      	lsls	r0, r3, #16
 80149f4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80149f8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80149fc:	4318      	orrs	r0, r3
 80149fe:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8014a02:	fb02 c200 	mla	r2, r2, r0, ip
 8014a06:	0d53      	lsrs	r3, r2, #21
 8014a08:	0952      	lsrs	r2, r2, #5
 8014a0a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014a0e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014a12:	431a      	orrs	r2, r3
 8014a14:	f8a8 2000 	strh.w	r2, [r8]
 8014a18:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014a1a:	4499      	add	r9, r3
 8014a1c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014a1e:	f108 0802 	add.w	r8, r8, #2
 8014a22:	441e      	add	r6, r3
 8014a24:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014a28:	e783      	b.n	8014932 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8014a2a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014a2c:	4499      	add	r9, r3
 8014a2e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014a30:	441e      	add	r6, r3
 8014a32:	9b06      	ldr	r3, [sp, #24]
 8014a34:	3b01      	subs	r3, #1
 8014a36:	9306      	str	r3, [sp, #24]
 8014a38:	f10a 0a02 	add.w	sl, sl, #2
 8014a3c:	e737      	b.n	80148ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8014a3e:	f47f af48 	bne.w	80148d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8014a42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a44:	2b00      	cmp	r3, #0
 8014a46:	f340 80cc 	ble.w	8014be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 8014a4a:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8014a4e:	ee79 9aab 	vadd.f32	s19, s19, s23
 8014a52:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8014a56:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014a58:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8014a5c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014a60:	eef0 6a48 	vmov.f32	s13, s16
 8014a64:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014a68:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014a6c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014a70:	ee16 9a90 	vmov	r9, s13
 8014a74:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014a78:	eef0 6a68 	vmov.f32	s13, s17
 8014a7c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014a80:	ee18 2a10 	vmov	r2, s16
 8014a84:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014a88:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a8c:	ee18 2a90 	vmov	r2, s17
 8014a90:	932b      	str	r3, [sp, #172]	; 0xac
 8014a92:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014a94:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a98:	932c      	str	r3, [sp, #176]	; 0xb0
 8014a9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a9c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014a9e:	3b01      	subs	r3, #1
 8014aa0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014aa4:	9309      	str	r3, [sp, #36]	; 0x24
 8014aa6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014aa8:	bf08      	it	eq
 8014aaa:	4613      	moveq	r3, r2
 8014aac:	ee16 6a90 	vmov	r6, s13
 8014ab0:	9306      	str	r3, [sp, #24]
 8014ab2:	eef0 8a67 	vmov.f32	s17, s15
 8014ab6:	eeb0 8a47 	vmov.f32	s16, s14
 8014aba:	e6f1      	b.n	80148a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8014abc:	2900      	cmp	r1, #0
 8014abe:	f43f af6c 	beq.w	801499a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8014ac2:	5d13      	ldrb	r3, [r2, r4]
 8014ac4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014ac8:	930a      	str	r3, [sp, #40]	; 0x28
 8014aca:	e766      	b.n	801499a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8014acc:	1c55      	adds	r5, r2, #1
 8014ace:	d1a3      	bne.n	8014a18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014ad0:	4294      	cmp	r4, r2
 8014ad2:	dda1      	ble.n	8014a18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014ad4:	1c5d      	adds	r5, r3, #1
 8014ad6:	db9f      	blt.n	8014a18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014ad8:	9d07      	ldr	r5, [sp, #28]
 8014ada:	429d      	cmp	r5, r3
 8014adc:	dd9c      	ble.n	8014a18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014ade:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8014ae2:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8014ae6:	e9cd 4500 	strd	r4, r5, [sp]
 8014aea:	463b      	mov	r3, r7
 8014aec:	9a08      	ldr	r2, [sp, #32]
 8014aee:	9812      	ldr	r0, [sp, #72]	; 0x48
 8014af0:	4641      	mov	r1, r8
 8014af2:	f7ff fe0f 	bl	8014714 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8014af6:	e78f      	b.n	8014a18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014af8:	ea4f 4329 	mov.w	r3, r9, asr #16
 8014afc:	1432      	asrs	r2, r6, #16
 8014afe:	fb04 3202 	mla	r2, r4, r2, r3
 8014b02:	9908      	ldr	r1, [sp, #32]
 8014b04:	9b08      	ldr	r3, [sp, #32]
 8014b06:	4413      	add	r3, r2
 8014b08:	5c8a      	ldrb	r2, [r1, r2]
 8014b0a:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 8014b0e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8014b12:	f837 1012 	ldrh.w	r1, [r7, r2, lsl #1]
 8014b16:	f1be 0f00 	cmp.w	lr, #0
 8014b1a:	d05b      	beq.n	8014bd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x394>
 8014b1c:	785a      	ldrb	r2, [r3, #1]
 8014b1e:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8014b22:	920f      	str	r2, [sp, #60]	; 0x3c
 8014b24:	b140      	cbz	r0, 8014b38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8014b26:	191a      	adds	r2, r3, r4
 8014b28:	5d1b      	ldrb	r3, [r3, r4]
 8014b2a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014b2e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014b30:	7853      	ldrb	r3, [r2, #1]
 8014b32:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014b36:	9310      	str	r3, [sp, #64]	; 0x40
 8014b38:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014b3a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8014b3c:	fb1e f200 	smulbb	r2, lr, r0
 8014b40:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014b44:	10d2      	asrs	r2, r2, #3
 8014b46:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8014b4a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014b4e:	ea4c 0c03 	orr.w	ip, ip, r3
 8014b52:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8014b56:	9313      	str	r3, [sp, #76]	; 0x4c
 8014b58:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014b5a:	041b      	lsls	r3, r3, #16
 8014b5c:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8014b60:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014b64:	ea43 030b 	orr.w	r3, r3, fp
 8014b68:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014b6a:	4353      	muls	r3, r2
 8014b6c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014b70:	fb05 3c0c 	mla	ip, r5, ip, r3
 8014b74:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014b78:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8014b7c:	ea43 0b01 	orr.w	fp, r3, r1
 8014b80:	f1c0 0110 	rsb	r1, r0, #16
 8014b84:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014b86:	eba1 0e0e 	sub.w	lr, r1, lr
 8014b8a:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8014b8e:	fb0e cc0b 	mla	ip, lr, fp, ip
 8014b92:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8014b96:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8014b9a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8014b9e:	ea4b 0e0e 	orr.w	lr, fp, lr
 8014ba2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8014ba6:	fb02 cc0e 	mla	ip, r2, lr, ip
 8014baa:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8014bae:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8014bb2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014bb6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8014bba:	ea43 0c0c 	orr.w	ip, r3, ip
 8014bbe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014bc0:	f823 cb02 	strh.w	ip, [r3], #2
 8014bc4:	930c      	str	r3, [sp, #48]	; 0x30
 8014bc6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014bc8:	4499      	add	r9, r3
 8014bca:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014bcc:	f108 38ff 	add.w	r8, r8, #4294967295
 8014bd0:	441e      	add	r6, r3
 8014bd2:	e695      	b.n	8014900 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 8014bd4:	2800      	cmp	r0, #0
 8014bd6:	d0af      	beq.n	8014b38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8014bd8:	5d1b      	ldrb	r3, [r3, r4]
 8014bda:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014bde:	930b      	str	r3, [sp, #44]	; 0x2c
 8014be0:	e7aa      	b.n	8014b38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8014be2:	b015      	add	sp, #84	; 0x54
 8014be4:	ecbd 8b0a 	vpop	{d8-d12}
 8014be8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014bec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8014bec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014bf0:	468b      	mov	fp, r1
 8014bf2:	8809      	ldrh	r1, [r1, #0]
 8014bf4:	b089      	sub	sp, #36	; 0x24
 8014bf6:	10cd      	asrs	r5, r1, #3
 8014bf8:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8014bfc:	ea4f 2921 	mov.w	r9, r1, asr #8
 8014c00:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8014c04:	00c9      	lsls	r1, r1, #3
 8014c06:	9500      	str	r5, [sp, #0]
 8014c08:	b2c9      	uxtb	r1, r1
 8014c0a:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8014c0e:	9101      	str	r1, [sp, #4]
 8014c10:	9900      	ldr	r1, [sp, #0]
 8014c12:	9202      	str	r2, [sp, #8]
 8014c14:	fb04 650e 	mla	r5, r4, lr, r6
 8014c18:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8014c1c:	eb02 0805 	add.w	r8, r2, r5
 8014c20:	0209      	lsls	r1, r1, #8
 8014c22:	9a01      	ldr	r2, [sp, #4]
 8014c24:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8014c28:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8014c2c:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8014c30:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8014c34:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8014c38:	4311      	orrs	r1, r2
 8014c3a:	2c00      	cmp	r4, #0
 8014c3c:	9107      	str	r1, [sp, #28]
 8014c3e:	db43      	blt.n	8014cc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8014c40:	45a2      	cmp	sl, r4
 8014c42:	dd41      	ble.n	8014cc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8014c44:	2e00      	cmp	r6, #0
 8014c46:	db3d      	blt.n	8014cc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8014c48:	45b6      	cmp	lr, r6
 8014c4a:	dd3b      	ble.n	8014cc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8014c4c:	9a02      	ldr	r2, [sp, #8]
 8014c4e:	5d55      	ldrb	r5, [r2, r5]
 8014c50:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014c54:	441d      	add	r5, r3
 8014c56:	1c72      	adds	r2, r6, #1
 8014c58:	d439      	bmi.n	8014cce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014c5a:	4596      	cmp	lr, r2
 8014c5c:	dd37      	ble.n	8014cce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014c5e:	2f00      	cmp	r7, #0
 8014c60:	d035      	beq.n	8014cce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014c62:	f898 1001 	ldrb.w	r1, [r8, #1]
 8014c66:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8014c6a:	4419      	add	r1, r3
 8014c6c:	3401      	adds	r4, #1
 8014c6e:	d432      	bmi.n	8014cd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014c70:	45a2      	cmp	sl, r4
 8014c72:	dd30      	ble.n	8014cd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014c74:	b378      	cbz	r0, 8014cd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014c76:	2e00      	cmp	r6, #0
 8014c78:	db2b      	blt.n	8014cd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8014c7a:	45b6      	cmp	lr, r6
 8014c7c:	dd29      	ble.n	8014cd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8014c7e:	f818 400e 	ldrb.w	r4, [r8, lr]
 8014c82:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8014c86:	441c      	add	r4, r3
 8014c88:	3601      	adds	r6, #1
 8014c8a:	d427      	bmi.n	8014cdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014c8c:	45b6      	cmp	lr, r6
 8014c8e:	dd25      	ble.n	8014cdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014c90:	b327      	cbz	r7, 8014cdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014c92:	44c6      	add	lr, r8
 8014c94:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8014c98:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014c9c:	4413      	add	r3, r2
 8014c9e:	782a      	ldrb	r2, [r5, #0]
 8014ca0:	9202      	str	r2, [sp, #8]
 8014ca2:	780a      	ldrb	r2, [r1, #0]
 8014ca4:	9203      	str	r2, [sp, #12]
 8014ca6:	7822      	ldrb	r2, [r4, #0]
 8014ca8:	9204      	str	r2, [sp, #16]
 8014caa:	2f0f      	cmp	r7, #15
 8014cac:	781a      	ldrb	r2, [r3, #0]
 8014cae:	9205      	str	r2, [sp, #20]
 8014cb0:	d801      	bhi.n	8014cb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8014cb2:	280f      	cmp	r0, #15
 8014cb4:	d914      	bls.n	8014ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8014cb6:	4b3f      	ldr	r3, [pc, #252]	; (8014db4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8014cb8:	4a3f      	ldr	r2, [pc, #252]	; (8014db8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8014cba:	4840      	ldr	r0, [pc, #256]	; (8014dbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8014cbc:	f240 3173 	movw	r1, #883	; 0x373
 8014cc0:	f006 fa70 	bl	801b1a4 <__assert_func>
 8014cc4:	ad07      	add	r5, sp, #28
 8014cc6:	e7c6      	b.n	8014c56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8014cc8:	a907      	add	r1, sp, #28
 8014cca:	460d      	mov	r5, r1
 8014ccc:	e7ce      	b.n	8014c6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8014cce:	a907      	add	r1, sp, #28
 8014cd0:	e7cc      	b.n	8014c6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8014cd2:	ac07      	add	r4, sp, #28
 8014cd4:	e7d8      	b.n	8014c88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8014cd6:	ab07      	add	r3, sp, #28
 8014cd8:	461c      	mov	r4, r3
 8014cda:	e7e0      	b.n	8014c9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8014cdc:	ab07      	add	r3, sp, #28
 8014cde:	e7de      	b.n	8014c9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8014ce0:	b2ba      	uxth	r2, r7
 8014ce2:	b280      	uxth	r0, r0
 8014ce4:	fb02 fa00 	mul.w	sl, r2, r0
 8014ce8:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8014cec:	0112      	lsls	r2, r2, #4
 8014cee:	b280      	uxth	r0, r0
 8014cf0:	f891 8002 	ldrb.w	r8, [r1, #2]
 8014cf4:	7849      	ldrb	r1, [r1, #1]
 8014cf6:	78ae      	ldrb	r6, [r5, #2]
 8014cf8:	786d      	ldrb	r5, [r5, #1]
 8014cfa:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8014cfe:	eba2 020a 	sub.w	r2, r2, sl
 8014d02:	b292      	uxth	r2, r2
 8014d04:	ebae 0e00 	sub.w	lr, lr, r0
 8014d08:	fa1f fe8e 	uxth.w	lr, lr
 8014d0c:	4351      	muls	r1, r2
 8014d0e:	fb02 f808 	mul.w	r8, r2, r8
 8014d12:	fb0e 8806 	mla	r8, lr, r6, r8
 8014d16:	fb0e 1505 	mla	r5, lr, r5, r1
 8014d1a:	78a6      	ldrb	r6, [r4, #2]
 8014d1c:	7861      	ldrb	r1, [r4, #1]
 8014d1e:	fa1f f78c 	uxth.w	r7, ip
 8014d22:	fb00 8806 	mla	r8, r0, r6, r8
 8014d26:	fb00 5501 	mla	r5, r0, r1, r5
 8014d2a:	789e      	ldrb	r6, [r3, #2]
 8014d2c:	7859      	ldrb	r1, [r3, #1]
 8014d2e:	9b00      	ldr	r3, [sp, #0]
 8014d30:	ea6f 0c0c 	mvn.w	ip, ip
 8014d34:	fa5f fc8c 	uxtb.w	ip, ip
 8014d38:	fb0a 5101 	mla	r1, sl, r1, r5
 8014d3c:	fb13 f50c 	smulbb	r5, r3, ip
 8014d40:	9b03      	ldr	r3, [sp, #12]
 8014d42:	435a      	muls	r2, r3
 8014d44:	9b02      	ldr	r3, [sp, #8]
 8014d46:	fb0e 2203 	mla	r2, lr, r3, r2
 8014d4a:	9b04      	ldr	r3, [sp, #16]
 8014d4c:	fb00 2003 	mla	r0, r0, r3, r2
 8014d50:	9b05      	ldr	r3, [sp, #20]
 8014d52:	fb0a 8606 	mla	r6, sl, r6, r8
 8014d56:	fb0a 0a03 	mla	sl, sl, r3, r0
 8014d5a:	9b01      	ldr	r3, [sp, #4]
 8014d5c:	fb19 f90c 	smulbb	r9, r9, ip
 8014d60:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8014d64:	fb13 fc0c 	smulbb	ip, r3, ip
 8014d68:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8014d6c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8014d70:	fb06 9607 	mla	r6, r6, r7, r9
 8014d74:	fb01 5107 	mla	r1, r1, r7, r5
 8014d78:	fb0a c707 	mla	r7, sl, r7, ip
 8014d7c:	b2b6      	uxth	r6, r6
 8014d7e:	b289      	uxth	r1, r1
 8014d80:	b2bf      	uxth	r7, r7
 8014d82:	f106 0901 	add.w	r9, r6, #1
 8014d86:	f107 0c01 	add.w	ip, r7, #1
 8014d8a:	1c4d      	adds	r5, r1, #1
 8014d8c:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8014d90:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8014d94:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8014d98:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014d9c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8014da0:	0949      	lsrs	r1, r1, #5
 8014da2:	433e      	orrs	r6, r7
 8014da4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014da8:	430e      	orrs	r6, r1
 8014daa:	f8ab 6000 	strh.w	r6, [fp]
 8014dae:	b009      	add	sp, #36	; 0x24
 8014db0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014db4:	0801f4bf 	.word	0x0801f4bf
 8014db8:	0801fa1d 	.word	0x0801fa1d
 8014dbc:	0801f547 	.word	0x0801f547

08014dc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014dc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014dc4:	ed2d 8b08 	vpush	{d8-d11}
 8014dc8:	b097      	sub	sp, #92	; 0x5c
 8014dca:	eeb0 aa40 	vmov.f32	s20, s0
 8014dce:	9309      	str	r3, [sp, #36]	; 0x24
 8014dd0:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8014dd4:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8014dd6:	930b      	str	r3, [sp, #44]	; 0x2c
 8014dd8:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 8014ddc:	9310      	str	r3, [sp, #64]	; 0x40
 8014dde:	910f      	str	r1, [sp, #60]	; 0x3c
 8014de0:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8014de4:	9015      	str	r0, [sp, #84]	; 0x54
 8014de6:	6860      	ldr	r0, [r4, #4]
 8014de8:	9213      	str	r2, [sp, #76]	; 0x4c
 8014dea:	fb00 1303 	mla	r3, r0, r3, r1
 8014dee:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8014df0:	6821      	ldr	r1, [r4, #0]
 8014df2:	6854      	ldr	r4, [r2, #4]
 8014df4:	f9bd 50c0 	ldrsh.w	r5, [sp, #192]	; 0xc0
 8014df8:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8014dfc:	930a      	str	r3, [sp, #40]	; 0x28
 8014dfe:	6813      	ldr	r3, [r2, #0]
 8014e00:	930e      	str	r3, [sp, #56]	; 0x38
 8014e02:	1d23      	adds	r3, r4, #4
 8014e04:	9308      	str	r3, [sp, #32]
 8014e06:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014e08:	43db      	mvns	r3, r3
 8014e0a:	b2db      	uxtb	r3, r3
 8014e0c:	eef0 9a60 	vmov.f32	s19, s1
 8014e10:	eeb0 9a41 	vmov.f32	s18, s2
 8014e14:	eeb0 8a62 	vmov.f32	s16, s5
 8014e18:	eef0 8a43 	vmov.f32	s17, s6
 8014e1c:	eef0 ba44 	vmov.f32	s23, s8
 8014e20:	eeb0 ba64 	vmov.f32	s22, s9
 8014e24:	eef0 aa45 	vmov.f32	s21, s10
 8014e28:	930c      	str	r3, [sp, #48]	; 0x30
 8014e2a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014e2c:	2b00      	cmp	r3, #0
 8014e2e:	dc03      	bgt.n	8014e38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8014e30:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8014e32:	2b00      	cmp	r3, #0
 8014e34:	f340 825c 	ble.w	80152f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 8014e38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014e3a:	2b00      	cmp	r3, #0
 8014e3c:	f340 8127 	ble.w	801508e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ce>
 8014e40:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014e42:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014e44:	1412      	asrs	r2, r2, #16
 8014e46:	ea4f 4323 	mov.w	r3, r3, asr #16
 8014e4a:	d430      	bmi.n	8014eae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8014e4c:	1c51      	adds	r1, r2, #1
 8014e4e:	428d      	cmp	r5, r1
 8014e50:	dd30      	ble.n	8014eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8014e52:	2b00      	cmp	r3, #0
 8014e54:	db2e      	blt.n	8014eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8014e56:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8014e58:	1c59      	adds	r1, r3, #1
 8014e5a:	4288      	cmp	r0, r1
 8014e5c:	dd2a      	ble.n	8014eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8014e5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014e60:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014e62:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014e64:	3b01      	subs	r3, #1
 8014e66:	fb02 1203 	mla	r2, r2, r3, r1
 8014e6a:	1412      	asrs	r2, r2, #16
 8014e6c:	d42c      	bmi.n	8014ec8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8014e6e:	3201      	adds	r2, #1
 8014e70:	4295      	cmp	r5, r2
 8014e72:	dd29      	ble.n	8014ec8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8014e74:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014e76:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8014e78:	fb02 1303 	mla	r3, r2, r3, r1
 8014e7c:	141b      	asrs	r3, r3, #16
 8014e7e:	d423      	bmi.n	8014ec8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8014e80:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014e82:	3301      	adds	r3, #1
 8014e84:	429a      	cmp	r2, r3
 8014e86:	dd1f      	ble.n	8014ec8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8014e88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014e8a:	9311      	str	r3, [sp, #68]	; 0x44
 8014e8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014e8e:	930d      	str	r3, [sp, #52]	; 0x34
 8014e90:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8014e94:	9312      	str	r3, [sp, #72]	; 0x48
 8014e96:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014e98:	2b00      	cmp	r3, #0
 8014e9a:	f300 8161 	bgt.w	8015160 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a0>
 8014e9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014ea0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014ea2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014ea6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014eaa:	930a      	str	r3, [sp, #40]	; 0x28
 8014eac:	e0f1      	b.n	8015092 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 8014eae:	1c51      	adds	r1, r2, #1
 8014eb0:	f040 80de 	bne.w	8015070 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014eb4:	42aa      	cmp	r2, r5
 8014eb6:	f280 80db 	bge.w	8015070 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014eba:	1c5f      	adds	r7, r3, #1
 8014ebc:	f2c0 80d8 	blt.w	8015070 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014ec0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014ec2:	4293      	cmp	r3, r2
 8014ec4:	f280 80d4 	bge.w	8015070 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014ec8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014eca:	9311      	str	r3, [sp, #68]	; 0x44
 8014ecc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014ece:	930d      	str	r3, [sp, #52]	; 0x34
 8014ed0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014ed2:	2b00      	cmp	r3, #0
 8014ed4:	dde3      	ble.n	8014e9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8014ed6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014ed8:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8014eda:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8014edc:	141a      	asrs	r2, r3, #16
 8014ede:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014ee0:	1400      	asrs	r0, r0, #16
 8014ee2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8014ee6:	f3c1 3103 	ubfx	r1, r1, #12, #4
 8014eea:	f100 8120 	bmi.w	801512e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36e>
 8014eee:	1c46      	adds	r6, r0, #1
 8014ef0:	42b5      	cmp	r5, r6
 8014ef2:	f340 811e 	ble.w	8015132 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8014ef6:	2a00      	cmp	r2, #0
 8014ef8:	f2c0 811b 	blt.w	8015132 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8014efc:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8014efe:	1c56      	adds	r6, r2, #1
 8014f00:	42b7      	cmp	r7, r6
 8014f02:	f340 8116 	ble.w	8015132 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 8014f06:	fb02 0005 	mla	r0, r2, r5, r0
 8014f0a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8014f0c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014f0e:	9c08      	ldr	r4, [sp, #32]
 8014f10:	4402      	add	r2, r0
 8014f12:	5c30      	ldrb	r0, [r6, r0]
 8014f14:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014f18:	9014      	str	r0, [sp, #80]	; 0x50
 8014f1a:	1826      	adds	r6, r4, r0
 8014f1c:	2b00      	cmp	r3, #0
 8014f1e:	f000 80f7 	beq.w	8015110 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x350>
 8014f22:	f892 e001 	ldrb.w	lr, [r2, #1]
 8014f26:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014f2a:	44a6      	add	lr, r4
 8014f2c:	2900      	cmp	r1, #0
 8014f2e:	f000 80f8 	beq.w	8015122 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 8014f32:	1950      	adds	r0, r2, r5
 8014f34:	5d52      	ldrb	r2, [r2, r5]
 8014f36:	7840      	ldrb	r0, [r0, #1]
 8014f38:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014f3c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014f40:	4422      	add	r2, r4
 8014f42:	4420      	add	r0, r4
 8014f44:	b29b      	uxth	r3, r3
 8014f46:	b289      	uxth	r1, r1
 8014f48:	fb03 fa01 	mul.w	sl, r3, r1
 8014f4c:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 8014f50:	011b      	lsls	r3, r3, #4
 8014f52:	b289      	uxth	r1, r1
 8014f54:	f89e c002 	ldrb.w	ip, [lr, #2]
 8014f58:	f896 b002 	ldrb.w	fp, [r6, #2]
 8014f5c:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8014f5e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014f60:	f8b7 8000 	ldrh.w	r8, [r7]
 8014f64:	f8bd 7040 	ldrh.w	r7, [sp, #64]	; 0x40
 8014f68:	f5c3 7980 	rsb	r9, r3, #256	; 0x100
 8014f6c:	eba3 030a 	sub.w	r3, r3, sl
 8014f70:	b29b      	uxth	r3, r3
 8014f72:	eba9 0901 	sub.w	r9, r9, r1
 8014f76:	fa1f f989 	uxth.w	r9, r9
 8014f7a:	fb03 fc0c 	mul.w	ip, r3, ip
 8014f7e:	fb09 cc0b 	mla	ip, r9, fp, ip
 8014f82:	f892 b002 	ldrb.w	fp, [r2, #2]
 8014f86:	fb01 cc0b 	mla	ip, r1, fp, ip
 8014f8a:	f890 b002 	ldrb.w	fp, [r0, #2]
 8014f8e:	fb0a cc0b 	mla	ip, sl, fp, ip
 8014f92:	ea4f 2b28 	mov.w	fp, r8, asr #8
 8014f96:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8014f9a:	fb1b fb04 	smulbb	fp, fp, r4
 8014f9e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8014fa2:	fb0c bc07 	mla	ip, ip, r7, fp
 8014fa6:	f896 b001 	ldrb.w	fp, [r6, #1]
 8014faa:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8014fae:	f89e e000 	ldrb.w	lr, [lr]
 8014fb2:	435e      	muls	r6, r3
 8014fb4:	fb09 660b 	mla	r6, r9, fp, r6
 8014fb8:	f892 b001 	ldrb.w	fp, [r2, #1]
 8014fbc:	fb01 660b 	mla	r6, r1, fp, r6
 8014fc0:	f890 b001 	ldrb.w	fp, [r0, #1]
 8014fc4:	fb0a 660b 	mla	r6, sl, fp, r6
 8014fc8:	ea4f 0be8 	mov.w	fp, r8, asr #3
 8014fcc:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8014fd0:	fb1b fb04 	smulbb	fp, fp, r4
 8014fd4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8014fd8:	fb06 b607 	mla	r6, r6, r7, fp
 8014fdc:	b2b4      	uxth	r4, r6
 8014fde:	9412      	str	r4, [sp, #72]	; 0x48
 8014fe0:	9e08      	ldr	r6, [sp, #32]
 8014fe2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014fe4:	f816 b004 	ldrb.w	fp, [r6, r4]
 8014fe8:	fb03 f30e 	mul.w	r3, r3, lr
 8014fec:	f892 e000 	ldrb.w	lr, [r2]
 8014ff0:	fb09 330b 	mla	r3, r9, fp, r3
 8014ff4:	fb01 330e 	mla	r3, r1, lr, r3
 8014ff8:	f890 e000 	ldrb.w	lr, [r0]
 8014ffc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015000:	fb0a 3e0e 	mla	lr, sl, lr, r3
 8015004:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015006:	fa5f f888 	uxtb.w	r8, r8
 801500a:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 801500e:	fb18 f803 	smulbb	r8, r8, r3
 8015012:	fb0e 8807 	mla	r8, lr, r7, r8
 8015016:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015018:	fa1f fc8c 	uxth.w	ip, ip
 801501c:	fa1f f888 	uxth.w	r8, r8
 8015020:	f103 0b01 	add.w	fp, r3, #1
 8015024:	f10c 0201 	add.w	r2, ip, #1
 8015028:	f108 0e01 	add.w	lr, r8, #1
 801502c:	eb0b 2613 	add.w	r6, fp, r3, lsr #8
 8015030:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8015034:	eb0e 2818 	add.w	r8, lr, r8, lsr #8
 8015038:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801503c:	f3c8 28c4 	ubfx	r8, r8, #11, #5
 8015040:	0976      	lsrs	r6, r6, #5
 8015042:	ea4c 0c08 	orr.w	ip, ip, r8
 8015046:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801504a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801504c:	ea4c 0606 	orr.w	r6, ip, r6
 8015050:	801e      	strh	r6, [r3, #0]
 8015052:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015054:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015056:	3302      	adds	r3, #2
 8015058:	930d      	str	r3, [sp, #52]	; 0x34
 801505a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801505c:	4413      	add	r3, r2
 801505e:	9329      	str	r3, [sp, #164]	; 0xa4
 8015060:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015062:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015064:	4413      	add	r3, r2
 8015066:	932a      	str	r3, [sp, #168]	; 0xa8
 8015068:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801506a:	3b01      	subs	r3, #1
 801506c:	9311      	str	r3, [sp, #68]	; 0x44
 801506e:	e72f      	b.n	8014ed0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8015070:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015072:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015074:	4413      	add	r3, r2
 8015076:	9329      	str	r3, [sp, #164]	; 0xa4
 8015078:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801507a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801507c:	4413      	add	r3, r2
 801507e:	932a      	str	r3, [sp, #168]	; 0xa8
 8015080:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015082:	3b01      	subs	r3, #1
 8015084:	9309      	str	r3, [sp, #36]	; 0x24
 8015086:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015088:	3302      	adds	r3, #2
 801508a:	930a      	str	r3, [sp, #40]	; 0x28
 801508c:	e6d4      	b.n	8014e38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 801508e:	f47f aee6 	bne.w	8014e5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8015092:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015094:	2b00      	cmp	r3, #0
 8015096:	f340 812b 	ble.w	80152f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 801509a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801509e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80150a2:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80150a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80150a8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80150ac:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80150b0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80150b4:	eef0 6a48 	vmov.f32	s13, s16
 80150b8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80150bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80150c0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80150c4:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80150c8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80150cc:	eef0 6a68 	vmov.f32	s13, s17
 80150d0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80150d4:	ee18 2a10 	vmov	r2, s16
 80150d8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80150dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80150e0:	ee18 2a90 	vmov	r2, s17
 80150e4:	932b      	str	r3, [sp, #172]	; 0xac
 80150e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80150e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80150ec:	932c      	str	r3, [sp, #176]	; 0xb0
 80150ee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80150f0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80150f2:	3b01      	subs	r3, #1
 80150f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80150f8:	930f      	str	r3, [sp, #60]	; 0x3c
 80150fa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80150fc:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8015100:	bf08      	it	eq
 8015102:	4613      	moveq	r3, r2
 8015104:	9309      	str	r3, [sp, #36]	; 0x24
 8015106:	eef0 8a67 	vmov.f32	s17, s15
 801510a:	eeb0 8a47 	vmov.f32	s16, s14
 801510e:	e68c      	b.n	8014e2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8015110:	b151      	cbz	r1, 8015128 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 8015112:	5d52      	ldrb	r2, [r2, r5]
 8015114:	9808      	ldr	r0, [sp, #32]
 8015116:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801511a:	4402      	add	r2, r0
 801511c:	4630      	mov	r0, r6
 801511e:	46b6      	mov	lr, r6
 8015120:	e710      	b.n	8014f44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 8015122:	4630      	mov	r0, r6
 8015124:	4632      	mov	r2, r6
 8015126:	e70d      	b.n	8014f44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 8015128:	4630      	mov	r0, r6
 801512a:	4632      	mov	r2, r6
 801512c:	e7f7      	b.n	801511e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x35e>
 801512e:	1c46      	adds	r6, r0, #1
 8015130:	d18f      	bne.n	8015052 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8015132:	4285      	cmp	r5, r0
 8015134:	dd8d      	ble.n	8015052 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8015136:	1c54      	adds	r4, r2, #1
 8015138:	db8b      	blt.n	8015052 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 801513a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801513c:	4294      	cmp	r4, r2
 801513e:	dd88      	ble.n	8015052 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8015140:	e9cd 2303 	strd	r2, r3, [sp, #12]
 8015144:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8015146:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015148:	9002      	str	r0, [sp, #8]
 801514a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801514e:	e9cd 5300 	strd	r5, r3, [sp]
 8015152:	e9dd 120d 	ldrd	r1, r2, [sp, #52]	; 0x34
 8015156:	9b08      	ldr	r3, [sp, #32]
 8015158:	9815      	ldr	r0, [sp, #84]	; 0x54
 801515a:	f7ff fd47 	bl	8014bec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801515e:	e778      	b.n	8015052 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8015160:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015162:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015164:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015166:	1410      	asrs	r0, r2, #16
 8015168:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801516c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801516e:	1412      	asrs	r2, r2, #16
 8015170:	fb05 2000 	mla	r0, r5, r0, r2
 8015174:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015176:	f814 a000 	ldrb.w	sl, [r4, r0]
 801517a:	4402      	add	r2, r0
 801517c:	9808      	ldr	r0, [sp, #32]
 801517e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8015182:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015186:	eb00 060a 	add.w	r6, r0, sl
 801518a:	2b00      	cmp	r3, #0
 801518c:	f000 80a1 	beq.w	80152d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 8015190:	f892 c001 	ldrb.w	ip, [r2, #1]
 8015194:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8015198:	4484      	add	ip, r0
 801519a:	2900      	cmp	r1, #0
 801519c:	f000 80a2 	beq.w	80152e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 80151a0:	1950      	adds	r0, r2, r5
 80151a2:	5d52      	ldrb	r2, [r2, r5]
 80151a4:	7840      	ldrb	r0, [r0, #1]
 80151a6:	9c08      	ldr	r4, [sp, #32]
 80151a8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80151ac:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80151b0:	4422      	add	r2, r4
 80151b2:	4420      	add	r0, r4
 80151b4:	b29b      	uxth	r3, r3
 80151b6:	b289      	uxth	r1, r1
 80151b8:	fb03 f901 	mul.w	r9, r3, r1
 80151bc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80151c0:	011b      	lsls	r3, r3, #4
 80151c2:	b289      	uxth	r1, r1
 80151c4:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80151c8:	f896 b002 	ldrb.w	fp, [r6, #2]
 80151cc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80151ce:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80151d2:	eba3 0309 	sub.w	r3, r3, r9
 80151d6:	b29b      	uxth	r3, r3
 80151d8:	eba8 0801 	sub.w	r8, r8, r1
 80151dc:	fa1f f888 	uxth.w	r8, r8
 80151e0:	435f      	muls	r7, r3
 80151e2:	fb08 770b 	mla	r7, r8, fp, r7
 80151e6:	f892 b002 	ldrb.w	fp, [r2, #2]
 80151ea:	f8b4 e000 	ldrh.w	lr, [r4]
 80151ee:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80151f0:	fb01 770b 	mla	r7, r1, fp, r7
 80151f4:	f890 b002 	ldrb.w	fp, [r0, #2]
 80151f8:	fb09 770b 	mla	r7, r9, fp, r7
 80151fc:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8015200:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8015204:	fb1b fb04 	smulbb	fp, fp, r4
 8015208:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801520a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801520e:	fb07 b704 	mla	r7, r7, r4, fp
 8015212:	f896 b001 	ldrb.w	fp, [r6, #1]
 8015216:	f89c 6001 	ldrb.w	r6, [ip, #1]
 801521a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801521c:	f89c c000 	ldrb.w	ip, [ip]
 8015220:	435e      	muls	r6, r3
 8015222:	fb08 660b 	mla	r6, r8, fp, r6
 8015226:	f892 b001 	ldrb.w	fp, [r2, #1]
 801522a:	fb01 660b 	mla	r6, r1, fp, r6
 801522e:	f890 b001 	ldrb.w	fp, [r0, #1]
 8015232:	fb09 660b 	mla	r6, r9, fp, r6
 8015236:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801523a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801523e:	fb1b fb04 	smulbb	fp, fp, r4
 8015242:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015244:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8015248:	fb06 b604 	mla	r6, r6, r4, fp
 801524c:	9c08      	ldr	r4, [sp, #32]
 801524e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8015252:	fb03 f30c 	mul.w	r3, r3, ip
 8015256:	f892 c000 	ldrb.w	ip, [r2]
 801525a:	fb08 330a 	mla	r3, r8, sl, r3
 801525e:	fb01 330c 	mla	r3, r1, ip, r3
 8015262:	f890 c000 	ldrb.w	ip, [r0]
 8015266:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801526a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801526e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015270:	fa5f fe8e 	uxtb.w	lr, lr
 8015274:	fb1e fe03 	smulbb	lr, lr, r3
 8015278:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801527a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801527e:	fb0c ec03 	mla	ip, ip, r3, lr
 8015282:	b2bf      	uxth	r7, r7
 8015284:	b2b6      	uxth	r6, r6
 8015286:	fa1f fc8c 	uxth.w	ip, ip
 801528a:	1c7b      	adds	r3, r7, #1
 801528c:	f10c 0201 	add.w	r2, ip, #1
 8015290:	f106 0b01 	add.w	fp, r6, #1
 8015294:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8015298:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 801529c:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 80152a0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80152a4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80152a8:	0976      	lsrs	r6, r6, #5
 80152aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80152ac:	4317      	orrs	r7, r2
 80152ae:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80152b2:	4337      	orrs	r7, r6
 80152b4:	f823 7b02 	strh.w	r7, [r3], #2
 80152b8:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80152ba:	930d      	str	r3, [sp, #52]	; 0x34
 80152bc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80152be:	4413      	add	r3, r2
 80152c0:	9329      	str	r3, [sp, #164]	; 0xa4
 80152c2:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80152c4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80152c6:	4413      	add	r3, r2
 80152c8:	932a      	str	r3, [sp, #168]	; 0xa8
 80152ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80152cc:	3b01      	subs	r3, #1
 80152ce:	9311      	str	r3, [sp, #68]	; 0x44
 80152d0:	e5e1      	b.n	8014e96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 80152d2:	b151      	cbz	r1, 80152ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52a>
 80152d4:	5d52      	ldrb	r2, [r2, r5]
 80152d6:	9808      	ldr	r0, [sp, #32]
 80152d8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80152dc:	4402      	add	r2, r0
 80152de:	4630      	mov	r0, r6
 80152e0:	46b4      	mov	ip, r6
 80152e2:	e767      	b.n	80151b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 80152e4:	4630      	mov	r0, r6
 80152e6:	4632      	mov	r2, r6
 80152e8:	e764      	b.n	80151b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 80152ea:	4630      	mov	r0, r6
 80152ec:	4632      	mov	r2, r6
 80152ee:	e7f7      	b.n	80152e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>
 80152f0:	b017      	add	sp, #92	; 0x5c
 80152f2:	ecbd 8b08 	vpop	{d8-d11}
 80152f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080152fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80152fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015300:	880e      	ldrh	r6, [r1, #0]
 8015302:	b085      	sub	sp, #20
 8015304:	0230      	lsls	r0, r6, #8
 8015306:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801530a:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 801530e:	0170      	lsls	r0, r6, #5
 8015310:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015314:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8015318:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 801531c:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8015320:	00f6      	lsls	r6, r6, #3
 8015322:	ea4b 0000 	orr.w	r0, fp, r0
 8015326:	b2f6      	uxtb	r6, r6
 8015328:	4691      	mov	r9, r2
 801532a:	fb05 7a0c 	mla	sl, r5, ip, r7
 801532e:	4306      	orrs	r6, r0
 8015330:	2d00      	cmp	r5, #0
 8015332:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8015336:	9603      	str	r6, [sp, #12]
 8015338:	eb09 0e0a 	add.w	lr, r9, sl
 801533c:	db42      	blt.n	80153c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 801533e:	45a8      	cmp	r8, r5
 8015340:	dd40      	ble.n	80153c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8015342:	2f00      	cmp	r7, #0
 8015344:	db3c      	blt.n	80153c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8015346:	45bc      	cmp	ip, r7
 8015348:	dd3a      	ble.n	80153c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 801534a:	f819 600a 	ldrb.w	r6, [r9, sl]
 801534e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8015352:	441e      	add	r6, r3
 8015354:	1c78      	adds	r0, r7, #1
 8015356:	d438      	bmi.n	80153ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8015358:	4584      	cmp	ip, r0
 801535a:	dd36      	ble.n	80153ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 801535c:	b3aa      	cbz	r2, 80153ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 801535e:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8015362:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8015366:	4418      	add	r0, r3
 8015368:	3501      	adds	r5, #1
 801536a:	d432      	bmi.n	80153d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 801536c:	45a8      	cmp	r8, r5
 801536e:	dd30      	ble.n	80153d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8015370:	b37c      	cbz	r4, 80153d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8015372:	2f00      	cmp	r7, #0
 8015374:	db2b      	blt.n	80153ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8015376:	45bc      	cmp	ip, r7
 8015378:	dd29      	ble.n	80153ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 801537a:	f81e 500c 	ldrb.w	r5, [lr, ip]
 801537e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8015382:	441d      	add	r5, r3
 8015384:	3701      	adds	r7, #1
 8015386:	d427      	bmi.n	80153d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8015388:	45bc      	cmp	ip, r7
 801538a:	dd25      	ble.n	80153d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 801538c:	b322      	cbz	r2, 80153d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 801538e:	44f4      	add	ip, lr
 8015390:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8015394:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8015398:	443b      	add	r3, r7
 801539a:	781f      	ldrb	r7, [r3, #0]
 801539c:	f896 a000 	ldrb.w	sl, [r6]
 80153a0:	f890 b000 	ldrb.w	fp, [r0]
 80153a4:	f895 9000 	ldrb.w	r9, [r5]
 80153a8:	9700      	str	r7, [sp, #0]
 80153aa:	2a0f      	cmp	r2, #15
 80153ac:	d801      	bhi.n	80153b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 80153ae:	2c0f      	cmp	r4, #15
 80153b0:	d914      	bls.n	80153dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 80153b2:	4b2c      	ldr	r3, [pc, #176]	; (8015464 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 80153b4:	4a2c      	ldr	r2, [pc, #176]	; (8015468 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 80153b6:	482d      	ldr	r0, [pc, #180]	; (801546c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 80153b8:	f240 3173 	movw	r1, #883	; 0x373
 80153bc:	f005 fef2 	bl	801b1a4 <__assert_func>
 80153c0:	ae03      	add	r6, sp, #12
 80153c2:	e7c7      	b.n	8015354 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 80153c4:	a803      	add	r0, sp, #12
 80153c6:	4606      	mov	r6, r0
 80153c8:	e7ce      	b.n	8015368 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 80153ca:	a803      	add	r0, sp, #12
 80153cc:	e7cc      	b.n	8015368 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 80153ce:	ad03      	add	r5, sp, #12
 80153d0:	e7d8      	b.n	8015384 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 80153d2:	ab03      	add	r3, sp, #12
 80153d4:	461d      	mov	r5, r3
 80153d6:	e7e0      	b.n	801539a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 80153d8:	ab03      	add	r3, sp, #12
 80153da:	e7de      	b.n	801539a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 80153dc:	b292      	uxth	r2, r2
 80153de:	b2a4      	uxth	r4, r4
 80153e0:	fb02 f804 	mul.w	r8, r2, r4
 80153e4:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 80153e8:	0112      	lsls	r2, r2, #4
 80153ea:	b2a4      	uxth	r4, r4
 80153ec:	f890 e002 	ldrb.w	lr, [r0, #2]
 80153f0:	78b7      	ldrb	r7, [r6, #2]
 80153f2:	7840      	ldrb	r0, [r0, #1]
 80153f4:	7876      	ldrb	r6, [r6, #1]
 80153f6:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 80153fa:	eba2 0208 	sub.w	r2, r2, r8
 80153fe:	b292      	uxth	r2, r2
 8015400:	ebac 0c04 	sub.w	ip, ip, r4
 8015404:	fa1f fc8c 	uxth.w	ip, ip
 8015408:	fb02 fe0e 	mul.w	lr, r2, lr
 801540c:	fb0c ee07 	mla	lr, ip, r7, lr
 8015410:	78af      	ldrb	r7, [r5, #2]
 8015412:	fb04 ee07 	mla	lr, r4, r7, lr
 8015416:	789f      	ldrb	r7, [r3, #2]
 8015418:	785b      	ldrb	r3, [r3, #1]
 801541a:	fb08 e707 	mla	r7, r8, r7, lr
 801541e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015422:	fb02 fe0b 	mul.w	lr, r2, fp
 8015426:	4342      	muls	r2, r0
 8015428:	7868      	ldrb	r0, [r5, #1]
 801542a:	9701      	str	r7, [sp, #4]
 801542c:	fb0c ee0a 	mla	lr, ip, sl, lr
 8015430:	9f00      	ldr	r7, [sp, #0]
 8015432:	fb0c 2206 	mla	r2, ip, r6, r2
 8015436:	fb04 ee09 	mla	lr, r4, r9, lr
 801543a:	fb04 2400 	mla	r4, r4, r0, r2
 801543e:	fb08 ee07 	mla	lr, r8, r7, lr
 8015442:	9f01      	ldr	r7, [sp, #4]
 8015444:	fb08 4803 	mla	r8, r8, r3, r4
 8015448:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801544c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015450:	ea47 070e 	orr.w	r7, r7, lr
 8015454:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015458:	ea47 0708 	orr.w	r7, r7, r8
 801545c:	800f      	strh	r7, [r1, #0]
 801545e:	b005      	add	sp, #20
 8015460:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015464:	0801f4bf 	.word	0x0801f4bf
 8015468:	0801fa1d 	.word	0x0801fa1d
 801546c:	0801f547 	.word	0x0801f547

08015470 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8015470:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015474:	ed2d 8b0a 	vpush	{d8-d12}
 8015478:	b091      	sub	sp, #68	; 0x44
 801547a:	eeb0 aa40 	vmov.f32	s20, s0
 801547e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8015480:	9307      	str	r3, [sp, #28]
 8015482:	f9bd 30b4 	ldrsh.w	r3, [sp, #180]	; 0xb4
 8015486:	910c      	str	r1, [sp, #48]	; 0x30
 8015488:	9309      	str	r3, [sp, #36]	; 0x24
 801548a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801548e:	900f      	str	r0, [sp, #60]	; 0x3c
 8015490:	6860      	ldr	r0, [r4, #4]
 8015492:	920e      	str	r2, [sp, #56]	; 0x38
 8015494:	fb00 1303 	mla	r3, r0, r3, r1
 8015498:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801549a:	6821      	ldr	r1, [r4, #0]
 801549c:	6854      	ldr	r4, [r2, #4]
 801549e:	f8dd b098 	ldr.w	fp, [sp, #152]	; 0x98
 80154a2:	f9bd 50b0 	ldrsh.w	r5, [sp, #176]	; 0xb0
 80154a6:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80154aa:	9308      	str	r3, [sp, #32]
 80154ac:	6813      	ldr	r3, [r2, #0]
 80154ae:	930a      	str	r3, [sp, #40]	; 0x28
 80154b0:	eef0 9a60 	vmov.f32	s19, s1
 80154b4:	eeb0 9a41 	vmov.f32	s18, s2
 80154b8:	eeb0 8a62 	vmov.f32	s16, s5
 80154bc:	eef0 8a43 	vmov.f32	s17, s6
 80154c0:	eeb0 ca44 	vmov.f32	s24, s8
 80154c4:	eef0 ba64 	vmov.f32	s23, s9
 80154c8:	eeb0 ba45 	vmov.f32	s22, s10
 80154cc:	3404      	adds	r4, #4
 80154ce:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 80154d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80154d4:	2b00      	cmp	r3, #0
 80154d6:	dc03      	bgt.n	80154e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 80154d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80154da:	2b00      	cmp	r3, #0
 80154dc:	f340 81cb 	ble.w	8015876 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 80154e0:	9b07      	ldr	r3, [sp, #28]
 80154e2:	2b00      	cmp	r3, #0
 80154e4:	f340 80dd 	ble.w	80156a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x232>
 80154e8:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80154ea:	1412      	asrs	r2, r2, #16
 80154ec:	ea4f 432b 	mov.w	r3, fp, asr #16
 80154f0:	d42c      	bmi.n	801554c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 80154f2:	1c51      	adds	r1, r2, #1
 80154f4:	428d      	cmp	r5, r1
 80154f6:	dd2c      	ble.n	8015552 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 80154f8:	2b00      	cmp	r3, #0
 80154fa:	db2a      	blt.n	8015552 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 80154fc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80154fe:	1c59      	adds	r1, r3, #1
 8015500:	4288      	cmp	r0, r1
 8015502:	dd26      	ble.n	8015552 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8015504:	9b07      	ldr	r3, [sp, #28]
 8015506:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8015508:	9925      	ldr	r1, [sp, #148]	; 0x94
 801550a:	3b01      	subs	r3, #1
 801550c:	fb02 1203 	mla	r2, r2, r3, r1
 8015510:	1412      	asrs	r2, r2, #16
 8015512:	d428      	bmi.n	8015566 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8015514:	3201      	adds	r2, #1
 8015516:	4295      	cmp	r5, r2
 8015518:	dd25      	ble.n	8015566 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 801551a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801551c:	fb02 b303 	mla	r3, r2, r3, fp
 8015520:	141b      	asrs	r3, r3, #16
 8015522:	d420      	bmi.n	8015566 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8015524:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015526:	3301      	adds	r3, #1
 8015528:	429a      	cmp	r2, r3
 801552a:	dd1c      	ble.n	8015566 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 801552c:	9b07      	ldr	r3, [sp, #28]
 801552e:	930b      	str	r3, [sp, #44]	; 0x2c
 8015530:	9b08      	ldr	r3, [sp, #32]
 8015532:	930d      	str	r3, [sp, #52]	; 0x34
 8015534:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015536:	2b00      	cmp	r3, #0
 8015538:	f300 8116 	bgt.w	8015768 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 801553c:	9b07      	ldr	r3, [sp, #28]
 801553e:	9a08      	ldr	r2, [sp, #32]
 8015540:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015544:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015548:	9308      	str	r3, [sp, #32]
 801554a:	e0ac      	b.n	80156a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x236>
 801554c:	1c51      	adds	r1, r2, #1
 801554e:	f040 809b 	bne.w	8015688 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8015552:	42aa      	cmp	r2, r5
 8015554:	f280 8098 	bge.w	8015688 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8015558:	1c5a      	adds	r2, r3, #1
 801555a:	f2c0 8095 	blt.w	8015688 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 801555e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015560:	4293      	cmp	r3, r2
 8015562:	f280 8091 	bge.w	8015688 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8015566:	9b07      	ldr	r3, [sp, #28]
 8015568:	930d      	str	r3, [sp, #52]	; 0x34
 801556a:	9b08      	ldr	r3, [sp, #32]
 801556c:	930b      	str	r3, [sp, #44]	; 0x2c
 801556e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015570:	2b00      	cmp	r3, #0
 8015572:	dde3      	ble.n	801553c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8015574:	9825      	ldr	r0, [sp, #148]	; 0x94
 8015576:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015578:	1400      	asrs	r0, r0, #16
 801557a:	ea4f 422b 	mov.w	r2, fp, asr #16
 801557e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015582:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8015586:	f100 80d9 	bmi.w	801573c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2cc>
 801558a:	1c46      	adds	r6, r0, #1
 801558c:	42b5      	cmp	r5, r6
 801558e:	f340 80d7 	ble.w	8015740 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8015592:	2a00      	cmp	r2, #0
 8015594:	f2c0 80d4 	blt.w	8015740 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8015598:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801559a:	1c56      	adds	r6, r2, #1
 801559c:	42b7      	cmp	r7, r6
 801559e:	f340 80cf 	ble.w	8015740 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 80155a2:	fb02 0005 	mla	r0, r2, r5, r0
 80155a6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80155a8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80155aa:	4402      	add	r2, r0
 80155ac:	5c30      	ldrb	r0, [r6, r0]
 80155ae:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 80155b2:	eb04 0c08 	add.w	ip, r4, r8
 80155b6:	2b00      	cmp	r3, #0
 80155b8:	f000 80b2 	beq.w	8015720 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80155bc:	7856      	ldrb	r6, [r2, #1]
 80155be:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80155c2:	4426      	add	r6, r4
 80155c4:	2900      	cmp	r1, #0
 80155c6:	f000 80b3 	beq.w	8015730 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 80155ca:	1950      	adds	r0, r2, r5
 80155cc:	5d52      	ldrb	r2, [r2, r5]
 80155ce:	7840      	ldrb	r0, [r0, #1]
 80155d0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80155d4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80155d8:	4422      	add	r2, r4
 80155da:	4420      	add	r0, r4
 80155dc:	b29b      	uxth	r3, r3
 80155de:	b289      	uxth	r1, r1
 80155e0:	fb03 f901 	mul.w	r9, r3, r1
 80155e4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80155e8:	011b      	lsls	r3, r3, #4
 80155ea:	b289      	uxth	r1, r1
 80155ec:	78b7      	ldrb	r7, [r6, #2]
 80155ee:	f89c a002 	ldrb.w	sl, [ip, #2]
 80155f2:	f89c c001 	ldrb.w	ip, [ip, #1]
 80155f6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80155fa:	eba3 0309 	sub.w	r3, r3, r9
 80155fe:	b29b      	uxth	r3, r3
 8015600:	ebae 0e01 	sub.w	lr, lr, r1
 8015604:	fa1f fe8e 	uxth.w	lr, lr
 8015608:	435f      	muls	r7, r3
 801560a:	fb0e 770a 	mla	r7, lr, sl, r7
 801560e:	f892 a002 	ldrb.w	sl, [r2, #2]
 8015612:	fb01 770a 	mla	r7, r1, sl, r7
 8015616:	f890 a002 	ldrb.w	sl, [r0, #2]
 801561a:	fb09 7a0a 	mla	sl, r9, sl, r7
 801561e:	f814 7008 	ldrb.w	r7, [r4, r8]
 8015622:	f896 8000 	ldrb.w	r8, [r6]
 8015626:	7876      	ldrb	r6, [r6, #1]
 8015628:	fb03 f808 	mul.w	r8, r3, r8
 801562c:	fb0e 8807 	mla	r8, lr, r7, r8
 8015630:	7817      	ldrb	r7, [r2, #0]
 8015632:	fb01 8807 	mla	r8, r1, r7, r8
 8015636:	7807      	ldrb	r7, [r0, #0]
 8015638:	fb09 8707 	mla	r7, r9, r7, r8
 801563c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8015640:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015644:	ea4a 0707 	orr.w	r7, sl, r7
 8015648:	4373      	muls	r3, r6
 801564a:	f892 a001 	ldrb.w	sl, [r2, #1]
 801564e:	fb0e 330c 	mla	r3, lr, ip, r3
 8015652:	fb01 310a 	mla	r1, r1, sl, r3
 8015656:	f890 a001 	ldrb.w	sl, [r0, #1]
 801565a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801565c:	fb09 1a0a 	mla	sl, r9, sl, r1
 8015660:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015664:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015668:	ea47 070a 	orr.w	r7, r7, sl
 801566c:	801f      	strh	r7, [r3, #0]
 801566e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015670:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8015672:	3302      	adds	r3, #2
 8015674:	930b      	str	r3, [sp, #44]	; 0x2c
 8015676:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015678:	4413      	add	r3, r2
 801567a:	9325      	str	r3, [sp, #148]	; 0x94
 801567c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801567e:	449b      	add	fp, r3
 8015680:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015682:	3b01      	subs	r3, #1
 8015684:	930d      	str	r3, [sp, #52]	; 0x34
 8015686:	e772      	b.n	801556e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015688:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801568a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801568c:	4413      	add	r3, r2
 801568e:	9325      	str	r3, [sp, #148]	; 0x94
 8015690:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015692:	449b      	add	fp, r3
 8015694:	9b07      	ldr	r3, [sp, #28]
 8015696:	3b01      	subs	r3, #1
 8015698:	9307      	str	r3, [sp, #28]
 801569a:	9b08      	ldr	r3, [sp, #32]
 801569c:	3302      	adds	r3, #2
 801569e:	9308      	str	r3, [sp, #32]
 80156a0:	e71e      	b.n	80154e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 80156a2:	f47f af2f 	bne.w	8015504 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 80156a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80156a8:	2b00      	cmp	r3, #0
 80156aa:	f340 80e4 	ble.w	8015876 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 80156ae:	ee3a aa0c 	vadd.f32	s20, s20, s24
 80156b2:	ee79 9aab 	vadd.f32	s19, s19, s23
 80156b6:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 80156ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80156bc:	ee39 9a0b 	vadd.f32	s18, s18, s22
 80156c0:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80156c4:	eef0 6a48 	vmov.f32	s13, s16
 80156c8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80156cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80156d0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80156d4:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80156d8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80156dc:	eef0 6a68 	vmov.f32	s13, s17
 80156e0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80156e4:	ee18 2a10 	vmov	r2, s16
 80156e8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80156ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80156f0:	ee18 2a90 	vmov	r2, s17
 80156f4:	9327      	str	r3, [sp, #156]	; 0x9c
 80156f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80156f8:	fb92 f3f3 	sdiv	r3, r2, r3
 80156fc:	9328      	str	r3, [sp, #160]	; 0xa0
 80156fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015700:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015702:	3b01      	subs	r3, #1
 8015704:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015708:	930c      	str	r3, [sp, #48]	; 0x30
 801570a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801570c:	bf08      	it	eq
 801570e:	4613      	moveq	r3, r2
 8015710:	ee16 ba90 	vmov	fp, s13
 8015714:	9307      	str	r3, [sp, #28]
 8015716:	eef0 8a67 	vmov.f32	s17, s15
 801571a:	eeb0 8a47 	vmov.f32	s16, s14
 801571e:	e6d8      	b.n	80154d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 8015720:	b149      	cbz	r1, 8015736 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c6>
 8015722:	5d52      	ldrb	r2, [r2, r5]
 8015724:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015728:	4422      	add	r2, r4
 801572a:	4660      	mov	r0, ip
 801572c:	4666      	mov	r6, ip
 801572e:	e755      	b.n	80155dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8015730:	4660      	mov	r0, ip
 8015732:	4662      	mov	r2, ip
 8015734:	e752      	b.n	80155dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8015736:	4660      	mov	r0, ip
 8015738:	4662      	mov	r2, ip
 801573a:	e7f7      	b.n	801572c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 801573c:	1c47      	adds	r7, r0, #1
 801573e:	d196      	bne.n	801566e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8015740:	4285      	cmp	r5, r0
 8015742:	dd94      	ble.n	801566e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8015744:	1c56      	adds	r6, r2, #1
 8015746:	db92      	blt.n	801566e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8015748:	9e09      	ldr	r6, [sp, #36]	; 0x24
 801574a:	4296      	cmp	r6, r2
 801574c:	dd8f      	ble.n	801566e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 801574e:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8015752:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8015756:	e9cd 5600 	strd	r5, r6, [sp]
 801575a:	4623      	mov	r3, r4
 801575c:	e9dd 210a 	ldrd	r2, r1, [sp, #40]	; 0x28
 8015760:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015762:	f7ff fdcb 	bl	80152fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8015766:	e782      	b.n	801566e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8015768:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801576a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 801576c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801576e:	1412      	asrs	r2, r2, #16
 8015770:	ea4f 402b 	mov.w	r0, fp, asr #16
 8015774:	fb05 2000 	mla	r0, r5, r0, r2
 8015778:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801577a:	f816 8000 	ldrb.w	r8, [r6, r0]
 801577e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015782:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015786:	f3cb 3103 	ubfx	r1, fp, #12, #4
 801578a:	4402      	add	r2, r0
 801578c:	eb04 0c08 	add.w	ip, r4, r8
 8015790:	2b00      	cmp	r3, #0
 8015792:	d062      	beq.n	801585a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ea>
 8015794:	7856      	ldrb	r6, [r2, #1]
 8015796:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801579a:	4426      	add	r6, r4
 801579c:	2900      	cmp	r1, #0
 801579e:	d064      	beq.n	801586a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3fa>
 80157a0:	1950      	adds	r0, r2, r5
 80157a2:	5d52      	ldrb	r2, [r2, r5]
 80157a4:	7840      	ldrb	r0, [r0, #1]
 80157a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80157aa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80157ae:	4422      	add	r2, r4
 80157b0:	4420      	add	r0, r4
 80157b2:	b29b      	uxth	r3, r3
 80157b4:	b289      	uxth	r1, r1
 80157b6:	fb03 f901 	mul.w	r9, r3, r1
 80157ba:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80157be:	011b      	lsls	r3, r3, #4
 80157c0:	b289      	uxth	r1, r1
 80157c2:	78b7      	ldrb	r7, [r6, #2]
 80157c4:	f89c a002 	ldrb.w	sl, [ip, #2]
 80157c8:	f89c c001 	ldrb.w	ip, [ip, #1]
 80157cc:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80157d0:	eba3 0309 	sub.w	r3, r3, r9
 80157d4:	b29b      	uxth	r3, r3
 80157d6:	ebae 0e01 	sub.w	lr, lr, r1
 80157da:	fa1f fe8e 	uxth.w	lr, lr
 80157de:	435f      	muls	r7, r3
 80157e0:	fb0e 770a 	mla	r7, lr, sl, r7
 80157e4:	f892 a002 	ldrb.w	sl, [r2, #2]
 80157e8:	fb01 770a 	mla	r7, r1, sl, r7
 80157ec:	f890 a002 	ldrb.w	sl, [r0, #2]
 80157f0:	fb09 7a0a 	mla	sl, r9, sl, r7
 80157f4:	f814 7008 	ldrb.w	r7, [r4, r8]
 80157f8:	f896 8000 	ldrb.w	r8, [r6]
 80157fc:	7876      	ldrb	r6, [r6, #1]
 80157fe:	fb03 f808 	mul.w	r8, r3, r8
 8015802:	fb0e 8807 	mla	r8, lr, r7, r8
 8015806:	7817      	ldrb	r7, [r2, #0]
 8015808:	fb01 8807 	mla	r8, r1, r7, r8
 801580c:	7807      	ldrb	r7, [r0, #0]
 801580e:	fb09 8707 	mla	r7, r9, r7, r8
 8015812:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8015816:	4373      	muls	r3, r6
 8015818:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801581c:	7856      	ldrb	r6, [r2, #1]
 801581e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8015820:	ea4a 0707 	orr.w	r7, sl, r7
 8015824:	fb0e 330c 	mla	r3, lr, ip, r3
 8015828:	f890 a001 	ldrb.w	sl, [r0, #1]
 801582c:	fb01 3306 	mla	r3, r1, r6, r3
 8015830:	fb09 3a0a 	mla	sl, r9, sl, r3
 8015834:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015838:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801583a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801583e:	ea47 070a 	orr.w	r7, r7, sl
 8015842:	f823 7b02 	strh.w	r7, [r3], #2
 8015846:	930d      	str	r3, [sp, #52]	; 0x34
 8015848:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801584a:	4413      	add	r3, r2
 801584c:	9325      	str	r3, [sp, #148]	; 0x94
 801584e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015850:	449b      	add	fp, r3
 8015852:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015854:	3b01      	subs	r3, #1
 8015856:	930b      	str	r3, [sp, #44]	; 0x2c
 8015858:	e66c      	b.n	8015534 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 801585a:	b149      	cbz	r1, 8015870 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x400>
 801585c:	5d52      	ldrb	r2, [r2, r5]
 801585e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015862:	4422      	add	r2, r4
 8015864:	4660      	mov	r0, ip
 8015866:	4666      	mov	r6, ip
 8015868:	e7a3      	b.n	80157b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 801586a:	4660      	mov	r0, ip
 801586c:	4662      	mov	r2, ip
 801586e:	e7a0      	b.n	80157b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 8015870:	4660      	mov	r0, ip
 8015872:	4662      	mov	r2, ip
 8015874:	e7f7      	b.n	8015866 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f6>
 8015876:	b011      	add	sp, #68	; 0x44
 8015878:	ecbd 8b0a 	vpop	{d8-d12}
 801587c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015880 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8015880:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015884:	8808      	ldrh	r0, [r1, #0]
 8015886:	b085      	sub	sp, #20
 8015888:	1206      	asrs	r6, r0, #8
 801588a:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 801588e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015892:	9600      	str	r6, [sp, #0]
 8015894:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015898:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 801589c:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 80158a0:	10c6      	asrs	r6, r0, #3
 80158a2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80158a6:	9601      	str	r6, [sp, #4]
 80158a8:	00c0      	lsls	r0, r0, #3
 80158aa:	fb04 560c 	mla	r6, r4, ip, r5
 80158ae:	b2c0      	uxtb	r0, r0
 80158b0:	4692      	mov	sl, r2
 80158b2:	eb02 0e06 	add.w	lr, r2, r6
 80158b6:	9a00      	ldr	r2, [sp, #0]
 80158b8:	9002      	str	r0, [sp, #8]
 80158ba:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 80158be:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80158c2:	9a01      	ldr	r2, [sp, #4]
 80158c4:	2c00      	cmp	r4, #0
 80158c6:	4698      	mov	r8, r3
 80158c8:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 80158cc:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80158d0:	db3e      	blt.n	8015950 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 80158d2:	45a1      	cmp	r9, r4
 80158d4:	dd3c      	ble.n	8015950 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 80158d6:	2d00      	cmp	r5, #0
 80158d8:	db38      	blt.n	801594c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 80158da:	45ac      	cmp	ip, r5
 80158dc:	dd36      	ble.n	801594c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 80158de:	f81a 2006 	ldrb.w	r2, [sl, r6]
 80158e2:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 80158e6:	1c6e      	adds	r6, r5, #1
 80158e8:	d435      	bmi.n	8015956 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 80158ea:	45b4      	cmp	ip, r6
 80158ec:	dd33      	ble.n	8015956 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 80158ee:	b393      	cbz	r3, 8015956 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 80158f0:	f89e 6001 	ldrb.w	r6, [lr, #1]
 80158f4:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 80158f8:	3401      	adds	r4, #1
 80158fa:	d430      	bmi.n	801595e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 80158fc:	45a1      	cmp	r9, r4
 80158fe:	dd2e      	ble.n	801595e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8015900:	b36f      	cbz	r7, 801595e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 8015902:	2d00      	cmp	r5, #0
 8015904:	db29      	blt.n	801595a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8015906:	45ac      	cmp	ip, r5
 8015908:	dd27      	ble.n	801595a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 801590a:	f81e 400c 	ldrb.w	r4, [lr, ip]
 801590e:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 8015912:	3501      	adds	r5, #1
 8015914:	d407      	bmi.n	8015926 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8015916:	45ac      	cmp	ip, r5
 8015918:	dd05      	ble.n	8015926 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801591a:	b123      	cbz	r3, 8015926 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 801591c:	44f4      	add	ip, lr
 801591e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8015922:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 8015926:	2b0f      	cmp	r3, #15
 8015928:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801592c:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8015930:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8015934:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8015938:	d801      	bhi.n	801593e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 801593a:	2f0f      	cmp	r7, #15
 801593c:	d911      	bls.n	8015962 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe2>
 801593e:	4b7f      	ldr	r3, [pc, #508]	; (8015b3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2bc>)
 8015940:	4a7f      	ldr	r2, [pc, #508]	; (8015b40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>)
 8015942:	4880      	ldr	r0, [pc, #512]	; (8015b44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8015944:	f240 3173 	movw	r1, #883	; 0x373
 8015948:	f005 fc2c 	bl	801b1a4 <__assert_func>
 801594c:	4602      	mov	r2, r0
 801594e:	e7ca      	b.n	80158e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 8015950:	4606      	mov	r6, r0
 8015952:	4602      	mov	r2, r0
 8015954:	e7d0      	b.n	80158f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 8015956:	4606      	mov	r6, r0
 8015958:	e7ce      	b.n	80158f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 801595a:	4604      	mov	r4, r0
 801595c:	e7d9      	b.n	8015912 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x92>
 801595e:	4604      	mov	r4, r0
 8015960:	e7e1      	b.n	8015926 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8015962:	b29b      	uxth	r3, r3
 8015964:	b2bf      	uxth	r7, r7
 8015966:	fb03 fe07 	mul.w	lr, r3, r7
 801596a:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801596e:	011b      	lsls	r3, r3, #4
 8015970:	eba3 0c0e 	sub.w	ip, r3, lr
 8015974:	b2bf      	uxth	r7, r7
 8015976:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 801597a:	fa1f fc8c 	uxth.w	ip, ip
 801597e:	1bed      	subs	r5, r5, r7
 8015980:	b2ad      	uxth	r5, r5
 8015982:	fb0c f30a 	mul.w	r3, ip, sl
 8015986:	fb05 330b 	mla	r3, r5, fp, r3
 801598a:	fb07 3309 	mla	r3, r7, r9, r3
 801598e:	fb0e 3308 	mla	r3, lr, r8, r3
 8015992:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015996:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801599a:	9303      	str	r3, [sp, #12]
 801599c:	d018      	beq.n	80159d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x150>
 801599e:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80159a2:	fb0b f303 	mul.w	r3, fp, r3
 80159a6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80159aa:	fb0b fb02 	mul.w	fp, fp, r2
 80159ae:	0a1a      	lsrs	r2, r3, #8
 80159b0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80159b4:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80159b8:	441a      	add	r2, r3
 80159ba:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 80159be:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 80159c2:	0a12      	lsrs	r2, r2, #8
 80159c4:	0a1b      	lsrs	r3, r3, #8
 80159c6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80159ca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80159ce:	431a      	orrs	r2, r3
 80159d0:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80159d4:	d019      	beq.n	8015a0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x18a>
 80159d6:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80159da:	fb0a fb0b 	mul.w	fp, sl, fp
 80159de:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80159e2:	fb0a fa06 	mul.w	sl, sl, r6
 80159e6:	ea4f 261b 	mov.w	r6, fp, lsr #8
 80159ea:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80159ee:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80159f2:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 80159f6:	445e      	add	r6, fp
 80159f8:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80159fc:	0a36      	lsrs	r6, r6, #8
 80159fe:	0a1b      	lsrs	r3, r3, #8
 8015a00:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015a04:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015a08:	431e      	orrs	r6, r3
 8015a0a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015a0e:	d019      	beq.n	8015a44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1c4>
 8015a10:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8015a14:	fb09 fa0a 	mul.w	sl, r9, sl
 8015a18:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8015a1c:	fb09 f904 	mul.w	r9, r9, r4
 8015a20:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8015a24:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015a28:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015a2c:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8015a30:	4454      	add	r4, sl
 8015a32:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8015a36:	0a24      	lsrs	r4, r4, #8
 8015a38:	0a1b      	lsrs	r3, r3, #8
 8015a3a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015a3e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015a42:	431c      	orrs	r4, r3
 8015a44:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015a48:	d019      	beq.n	8015a7e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1fe>
 8015a4a:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8015a4e:	fb08 f909 	mul.w	r9, r8, r9
 8015a52:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015a56:	fb08 f800 	mul.w	r8, r8, r0
 8015a5a:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8015a5e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8015a62:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8015a66:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8015a6a:	4448      	add	r0, r9
 8015a6c:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8015a70:	0a00      	lsrs	r0, r0, #8
 8015a72:	0a1b      	lsrs	r3, r3, #8
 8015a74:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8015a78:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015a7c:	4318      	orrs	r0, r3
 8015a7e:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8015a82:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8015a86:	fb0c f808 	mul.w	r8, ip, r8
 8015a8a:	fb05 8803 	mla	r8, r5, r3, r8
 8015a8e:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8015a92:	fb07 8803 	mla	r8, r7, r3, r8
 8015a96:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8015a9a:	fb0e 8303 	mla	r3, lr, r3, r8
 8015a9e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015aa2:	fb0c f606 	mul.w	r6, ip, r6
 8015aa6:	0a1b      	lsrs	r3, r3, #8
 8015aa8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015aac:	fb05 6202 	mla	r2, r5, r2, r6
 8015ab0:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8015ab4:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 8015ab8:	fb07 2703 	mla	r7, r7, r3, r2
 8015abc:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8015ac0:	b295      	uxth	r5, r2
 8015ac2:	9a03      	ldr	r2, [sp, #12]
 8015ac4:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8015ac8:	436a      	muls	r2, r5
 8015aca:	fb0e 7303 	mla	r3, lr, r3, r7
 8015ace:	1c50      	adds	r0, r2, #1
 8015ad0:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8015ad4:	0a1b      	lsrs	r3, r3, #8
 8015ad6:	9a00      	ldr	r2, [sp, #0]
 8015ad8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015adc:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8015ae0:	ea48 0303 	orr.w	r3, r8, r3
 8015ae4:	b2c0      	uxtb	r0, r0
 8015ae6:	fb12 f200 	smulbb	r2, r2, r0
 8015aea:	0c1e      	lsrs	r6, r3, #16
 8015aec:	fb06 2605 	mla	r6, r6, r5, r2
 8015af0:	9a01      	ldr	r2, [sp, #4]
 8015af2:	f3c3 2407 	ubfx	r4, r3, #8, #8
 8015af6:	fb12 f200 	smulbb	r2, r2, r0
 8015afa:	fb04 2205 	mla	r2, r4, r5, r2
 8015afe:	b294      	uxth	r4, r2
 8015b00:	9a02      	ldr	r2, [sp, #8]
 8015b02:	b2db      	uxtb	r3, r3
 8015b04:	fb12 f200 	smulbb	r2, r2, r0
 8015b08:	fb03 2205 	mla	r2, r3, r5, r2
 8015b0c:	b2b6      	uxth	r6, r6
 8015b0e:	b292      	uxth	r2, r2
 8015b10:	1c73      	adds	r3, r6, #1
 8015b12:	1c50      	adds	r0, r2, #1
 8015b14:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8015b18:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8015b1c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015b20:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8015b24:	4313      	orrs	r3, r2
 8015b26:	1c62      	adds	r2, r4, #1
 8015b28:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8015b2c:	0952      	lsrs	r2, r2, #5
 8015b2e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015b32:	4313      	orrs	r3, r2
 8015b34:	800b      	strh	r3, [r1, #0]
 8015b36:	b005      	add	sp, #20
 8015b38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b3c:	0801f4bf 	.word	0x0801f4bf
 8015b40:	0801fa1d 	.word	0x0801fa1d
 8015b44:	0801f547 	.word	0x0801f547

08015b48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8015b48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b4c:	ed2d 8b08 	vpush	{d8-d11}
 8015b50:	b09b      	sub	sp, #108	; 0x6c
 8015b52:	eeb0 aa40 	vmov.f32	s20, s0
 8015b56:	9309      	str	r3, [sp, #36]	; 0x24
 8015b58:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 8015b5c:	9d31      	ldr	r5, [sp, #196]	; 0xc4
 8015b5e:	9311      	str	r3, [sp, #68]	; 0x44
 8015b60:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8015b64:	9114      	str	r1, [sp, #80]	; 0x50
 8015b66:	9317      	str	r3, [sp, #92]	; 0x5c
 8015b68:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8015b6c:	9019      	str	r0, [sp, #100]	; 0x64
 8015b6e:	6868      	ldr	r0, [r5, #4]
 8015b70:	9218      	str	r2, [sp, #96]	; 0x60
 8015b72:	fb00 1303 	mla	r3, r0, r3, r1
 8015b76:	6829      	ldr	r1, [r5, #0]
 8015b78:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8015b7a:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 8015b7e:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8015b82:	930c      	str	r3, [sp, #48]	; 0x30
 8015b84:	6813      	ldr	r3, [r2, #0]
 8015b86:	9313      	str	r3, [sp, #76]	; 0x4c
 8015b88:	6853      	ldr	r3, [r2, #4]
 8015b8a:	3304      	adds	r3, #4
 8015b8c:	eef0 9a60 	vmov.f32	s19, s1
 8015b90:	eeb0 9a41 	vmov.f32	s18, s2
 8015b94:	eeb0 8a62 	vmov.f32	s16, s5
 8015b98:	eef0 8a43 	vmov.f32	s17, s6
 8015b9c:	eef0 ba44 	vmov.f32	s23, s8
 8015ba0:	eeb0 ba64 	vmov.f32	s22, s9
 8015ba4:	eef0 aa45 	vmov.f32	s21, s10
 8015ba8:	9308      	str	r3, [sp, #32]
 8015baa:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015bac:	2b00      	cmp	r3, #0
 8015bae:	dc03      	bgt.n	8015bb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8015bb0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8015bb2:	2b00      	cmp	r3, #0
 8015bb4:	f340 8363 	ble.w	801627e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 8015bb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015bba:	2b00      	cmp	r3, #0
 8015bbc:	f340 81ad 	ble.w	8015f1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d2>
 8015bc0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015bc2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015bc4:	1412      	asrs	r2, r2, #16
 8015bc6:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015bca:	d42f      	bmi.n	8015c2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8015bcc:	1c51      	adds	r1, r2, #1
 8015bce:	428c      	cmp	r4, r1
 8015bd0:	dd2f      	ble.n	8015c32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8015bd2:	2b00      	cmp	r3, #0
 8015bd4:	db2d      	blt.n	8015c32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8015bd6:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015bd8:	1c59      	adds	r1, r3, #1
 8015bda:	4288      	cmp	r0, r1
 8015bdc:	dd29      	ble.n	8015c32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8015bde:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015be0:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015be2:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8015be4:	3b01      	subs	r3, #1
 8015be6:	fb02 1203 	mla	r2, r2, r3, r1
 8015bea:	1412      	asrs	r2, r2, #16
 8015bec:	d42b      	bmi.n	8015c46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015bee:	3201      	adds	r2, #1
 8015bf0:	4294      	cmp	r4, r2
 8015bf2:	dd28      	ble.n	8015c46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015bf4:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8015bf6:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8015bf8:	fb02 1303 	mla	r3, r2, r3, r1
 8015bfc:	141b      	asrs	r3, r3, #16
 8015bfe:	d422      	bmi.n	8015c46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015c00:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015c02:	3301      	adds	r3, #1
 8015c04:	429a      	cmp	r2, r3
 8015c06:	dd1e      	ble.n	8015c46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015c08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015c0a:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8015c0e:	f8bd b05c 	ldrh.w	fp, [sp, #92]	; 0x5c
 8015c12:	9312      	str	r3, [sp, #72]	; 0x48
 8015c14:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015c16:	2b00      	cmp	r3, #0
 8015c18:	f300 81ea 	bgt.w	8015ff0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a8>
 8015c1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015c1e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8015c20:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015c24:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015c28:	930c      	str	r3, [sp, #48]	; 0x30
 8015c2a:	e178      	b.n	8015f1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d6>
 8015c2c:	1c51      	adds	r1, r2, #1
 8015c2e:	f040 8165 	bne.w	8015efc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8015c32:	42a2      	cmp	r2, r4
 8015c34:	f280 8162 	bge.w	8015efc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8015c38:	1c5f      	adds	r7, r3, #1
 8015c3a:	f2c0 815f 	blt.w	8015efc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8015c3e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015c40:	4293      	cmp	r3, r2
 8015c42:	f280 815b 	bge.w	8015efc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8015c46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015c48:	9316      	str	r3, [sp, #88]	; 0x58
 8015c4a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015c4c:	9312      	str	r3, [sp, #72]	; 0x48
 8015c4e:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8015c52:	9315      	str	r3, [sp, #84]	; 0x54
 8015c54:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8015c56:	2b00      	cmp	r3, #0
 8015c58:	dde0      	ble.n	8015c1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8015c5a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015c5c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015c5e:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8015c62:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8015c64:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015c68:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015c6a:	1412      	asrs	r2, r2, #16
 8015c6c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015c70:	f100 81a5 	bmi.w	8015fbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x476>
 8015c74:	1c55      	adds	r5, r2, #1
 8015c76:	42ac      	cmp	r4, r5
 8015c78:	f340 81a3 	ble.w	8015fc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8015c7c:	2b00      	cmp	r3, #0
 8015c7e:	f2c0 81a0 	blt.w	8015fc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8015c82:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8015c84:	1c5d      	adds	r5, r3, #1
 8015c86:	42af      	cmp	r7, r5
 8015c88:	f340 819b 	ble.w	8015fc2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8015c8c:	fb03 2304 	mla	r3, r3, r4, r2
 8015c90:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015c92:	18d5      	adds	r5, r2, r3
 8015c94:	5cd3      	ldrb	r3, [r2, r3]
 8015c96:	9a08      	ldr	r2, [sp, #32]
 8015c98:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8015c9c:	0e1f      	lsrs	r7, r3, #24
 8015c9e:	2800      	cmp	r0, #0
 8015ca0:	f000 817c 	beq.w	8015f9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x454>
 8015ca4:	786a      	ldrb	r2, [r5, #1]
 8015ca6:	9e08      	ldr	r6, [sp, #32]
 8015ca8:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8015cac:	920d      	str	r2, [sp, #52]	; 0x34
 8015cae:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8015cb2:	2900      	cmp	r1, #0
 8015cb4:	f000 817d 	beq.w	8015fb2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46a>
 8015cb8:	192a      	adds	r2, r5, r4
 8015cba:	5d2d      	ldrb	r5, [r5, r4]
 8015cbc:	7852      	ldrb	r2, [r2, #1]
 8015cbe:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 8015cc2:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8015cc6:	950a      	str	r5, [sp, #40]	; 0x28
 8015cc8:	ea4f 6915 	mov.w	r9, r5, lsr #24
 8015ccc:	920e      	str	r2, [sp, #56]	; 0x38
 8015cce:	0e15      	lsrs	r5, r2, #24
 8015cd0:	b280      	uxth	r0, r0
 8015cd2:	b289      	uxth	r1, r1
 8015cd4:	fb00 fa01 	mul.w	sl, r0, r1
 8015cd8:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 8015cdc:	0100      	lsls	r0, r0, #4
 8015cde:	eba0 080a 	sub.w	r8, r0, sl
 8015ce2:	b289      	uxth	r1, r1
 8015ce4:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8015ce8:	fa1f f888 	uxth.w	r8, r8
 8015cec:	1a52      	subs	r2, r2, r1
 8015cee:	b292      	uxth	r2, r2
 8015cf0:	fb08 f00e 	mul.w	r0, r8, lr
 8015cf4:	fb02 0007 	mla	r0, r2, r7, r0
 8015cf8:	fb01 0009 	mla	r0, r1, r9, r0
 8015cfc:	fb0a 0005 	mla	r0, sl, r5, r0
 8015d00:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8015d04:	2800      	cmp	r0, #0
 8015d06:	f000 80ea 	beq.w	8015ede <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015d0a:	2fff      	cmp	r7, #255	; 0xff
 8015d0c:	d01a      	beq.n	8015d44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fc>
 8015d0e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8015d12:	fb07 fc0c 	mul.w	ip, r7, ip
 8015d16:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015d1a:	435f      	muls	r7, r3
 8015d1c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8015d20:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015d24:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8015d28:	f507 7b80 	add.w	fp, r7, #256	; 0x100
 8015d2c:	4463      	add	r3, ip
 8015d2e:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 8015d32:	0a1b      	lsrs	r3, r3, #8
 8015d34:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8015d38:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015d3c:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8015d40:	ea43 030b 	orr.w	r3, r3, fp
 8015d44:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8015d48:	d01e      	beq.n	8015d88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x240>
 8015d4a:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8015d4c:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8015d50:	fb0e fb0b 	mul.w	fp, lr, fp
 8015d54:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8015d58:	fb0e fe07 	mul.w	lr, lr, r7
 8015d5c:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 8015d60:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015d64:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015d68:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8015d6c:	44dc      	add	ip, fp
 8015d6e:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8015d72:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015d76:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015d7a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015d7e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8015d82:	ea4c 060e 	orr.w	r6, ip, lr
 8015d86:	960d      	str	r6, [sp, #52]	; 0x34
 8015d88:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015d8c:	d01e      	beq.n	8015dcc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8015d8e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8015d90:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8015d94:	fb09 fe0e 	mul.w	lr, r9, lr
 8015d98:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8015d9c:	fb09 f907 	mul.w	r9, r9, r7
 8015da0:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8015da4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015da8:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8015dac:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8015db0:	44f4      	add	ip, lr
 8015db2:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8015db6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015dba:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8015dbe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015dc2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8015dc6:	ea4c 0609 	orr.w	r6, ip, r9
 8015dca:	960a      	str	r6, [sp, #40]	; 0x28
 8015dcc:	2dff      	cmp	r5, #255	; 0xff
 8015dce:	d01c      	beq.n	8015e0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c2>
 8015dd0:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015dd2:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8015dd6:	fb05 fe0e 	mul.w	lr, r5, lr
 8015dda:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8015dde:	437d      	muls	r5, r7
 8015de0:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8015de4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015de8:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8015dec:	f505 7780 	add.w	r7, r5, #256	; 0x100
 8015df0:	44f4      	add	ip, lr
 8015df2:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 8015df6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015dfa:	0a2d      	lsrs	r5, r5, #8
 8015dfc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015e00:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8015e04:	ea4c 0505 	orr.w	r5, ip, r5
 8015e08:	950e      	str	r5, [sp, #56]	; 0x38
 8015e0a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8015e0c:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8015e0e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8015e12:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8015e16:	fb08 f505 	mul.w	r5, r8, r5
 8015e1a:	fb02 5507 	mla	r5, r2, r7, r5
 8015e1e:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 8015e22:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015e24:	fb01 5507 	mla	r5, r1, r7, r5
 8015e28:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 8015e2c:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8015e2e:	fb0a 5507 	mla	r5, sl, r7, r5
 8015e32:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8015e36:	fb08 f807 	mul.w	r8, r8, r7
 8015e3a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015e3e:	fb02 8303 	mla	r3, r2, r3, r8
 8015e42:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015e44:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8015e46:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8015e4a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8015e4c:	fb01 330c 	mla	r3, r1, ip, r3
 8015e50:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8015e54:	fb0a 3a01 	mla	sl, sl, r1, r3
 8015e58:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015e5a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8015e5c:	881f      	ldrh	r7, [r3, #0]
 8015e5e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015e60:	0a2d      	lsrs	r5, r5, #8
 8015e62:	4343      	muls	r3, r0
 8015e64:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015e68:	1c58      	adds	r0, r3, #1
 8015e6a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8015e6e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015e72:	ea45 050a 	orr.w	r5, r5, sl
 8015e76:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8015e7a:	0c29      	lsrs	r1, r5, #16
 8015e7c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8015e80:	123b      	asrs	r3, r7, #8
 8015e82:	b2c0      	uxtb	r0, r0
 8015e84:	fb11 f102 	smulbb	r1, r1, r2
 8015e88:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8015e8c:	fb03 1300 	mla	r3, r3, r0, r1
 8015e90:	b299      	uxth	r1, r3
 8015e92:	10fa      	asrs	r2, r7, #3
 8015e94:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8015e98:	fb13 f306 	smulbb	r3, r3, r6
 8015e9c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015ea0:	fb02 3200 	mla	r2, r2, r0, r3
 8015ea4:	b2ed      	uxtb	r5, r5
 8015ea6:	00fb      	lsls	r3, r7, #3
 8015ea8:	b2db      	uxtb	r3, r3
 8015eaa:	fb15 f506 	smulbb	r5, r5, r6
 8015eae:	fb03 5500 	mla	r5, r3, r0, r5
 8015eb2:	b292      	uxth	r2, r2
 8015eb4:	b2ad      	uxth	r5, r5
 8015eb6:	1c4b      	adds	r3, r1, #1
 8015eb8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8015ebc:	1c68      	adds	r0, r5, #1
 8015ebe:	1c51      	adds	r1, r2, #1
 8015ec0:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8015ec4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015ec8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8015ecc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015ed0:	0952      	lsrs	r2, r2, #5
 8015ed2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015ed6:	432b      	orrs	r3, r5
 8015ed8:	4313      	orrs	r3, r2
 8015eda:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015edc:	8013      	strh	r3, [r2, #0]
 8015ede:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015ee0:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015ee2:	3302      	adds	r3, #2
 8015ee4:	9312      	str	r3, [sp, #72]	; 0x48
 8015ee6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015ee8:	4413      	add	r3, r2
 8015eea:	932d      	str	r3, [sp, #180]	; 0xb4
 8015eec:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8015eee:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015ef0:	4413      	add	r3, r2
 8015ef2:	932e      	str	r3, [sp, #184]	; 0xb8
 8015ef4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8015ef6:	3b01      	subs	r3, #1
 8015ef8:	9316      	str	r3, [sp, #88]	; 0x58
 8015efa:	e6ab      	b.n	8015c54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10c>
 8015efc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015efe:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015f00:	4413      	add	r3, r2
 8015f02:	932d      	str	r3, [sp, #180]	; 0xb4
 8015f04:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8015f06:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015f08:	4413      	add	r3, r2
 8015f0a:	932e      	str	r3, [sp, #184]	; 0xb8
 8015f0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f0e:	3b01      	subs	r3, #1
 8015f10:	9309      	str	r3, [sp, #36]	; 0x24
 8015f12:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015f14:	3302      	adds	r3, #2
 8015f16:	930c      	str	r3, [sp, #48]	; 0x30
 8015f18:	e64e      	b.n	8015bb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8015f1a:	f47f ae60 	bne.w	8015bde <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8015f1e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015f20:	2b00      	cmp	r3, #0
 8015f22:	f340 81ac 	ble.w	801627e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 8015f26:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8015f2a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015f2e:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015f32:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015f34:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015f38:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8015f3c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015f40:	eef0 6a48 	vmov.f32	s13, s16
 8015f44:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015f48:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015f4c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015f50:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8015f54:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015f58:	eef0 6a68 	vmov.f32	s13, s17
 8015f5c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015f60:	ee18 2a10 	vmov	r2, s16
 8015f64:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015f68:	fb92 f3f3 	sdiv	r3, r2, r3
 8015f6c:	ee18 2a90 	vmov	r2, s17
 8015f70:	932f      	str	r3, [sp, #188]	; 0xbc
 8015f72:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015f74:	fb92 f3f3 	sdiv	r3, r2, r3
 8015f78:	9330      	str	r3, [sp, #192]	; 0xc0
 8015f7a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015f7c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8015f7e:	3b01      	subs	r3, #1
 8015f80:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015f84:	9314      	str	r3, [sp, #80]	; 0x50
 8015f86:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015f88:	edcd 6a2e 	vstr	s13, [sp, #184]	; 0xb8
 8015f8c:	bf08      	it	eq
 8015f8e:	4613      	moveq	r3, r2
 8015f90:	9309      	str	r3, [sp, #36]	; 0x24
 8015f92:	eef0 8a67 	vmov.f32	s17, s15
 8015f96:	eeb0 8a47 	vmov.f32	s16, s14
 8015f9a:	e606      	b.n	8015baa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 8015f9c:	b161      	cbz	r1, 8015fb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8015f9e:	5d2a      	ldrb	r2, [r5, r4]
 8015fa0:	9d08      	ldr	r5, [sp, #32]
 8015fa2:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8015fa6:	920a      	str	r2, [sp, #40]	; 0x28
 8015fa8:	ea4f 6912 	mov.w	r9, r2, lsr #24
 8015fac:	25ff      	movs	r5, #255	; 0xff
 8015fae:	46ae      	mov	lr, r5
 8015fb0:	e68e      	b.n	8015cd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 8015fb2:	25ff      	movs	r5, #255	; 0xff
 8015fb4:	46a9      	mov	r9, r5
 8015fb6:	e68b      	b.n	8015cd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 8015fb8:	25ff      	movs	r5, #255	; 0xff
 8015fba:	46a9      	mov	r9, r5
 8015fbc:	e7f7      	b.n	8015fae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8015fbe:	1c56      	adds	r6, r2, #1
 8015fc0:	d18d      	bne.n	8015ede <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015fc2:	4294      	cmp	r4, r2
 8015fc4:	dd8b      	ble.n	8015ede <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015fc6:	1c5d      	adds	r5, r3, #1
 8015fc8:	db89      	blt.n	8015ede <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015fca:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015fcc:	429d      	cmp	r5, r3
 8015fce:	dd86      	ble.n	8015ede <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015fd0:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8015fd4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8015fd6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015fd8:	9202      	str	r2, [sp, #8]
 8015fda:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8015fde:	e9cd 4300 	strd	r4, r3, [sp]
 8015fe2:	e9dd 1212 	ldrd	r1, r2, [sp, #72]	; 0x48
 8015fe6:	9b08      	ldr	r3, [sp, #32]
 8015fe8:	9819      	ldr	r0, [sp, #100]	; 0x64
 8015fea:	f7ff fc49 	bl	8015880 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8015fee:	e776      	b.n	8015ede <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015ff0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015ff2:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015ff4:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8015ff8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015ffa:	1412      	asrs	r2, r2, #16
 8015ffc:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8016000:	141b      	asrs	r3, r3, #16
 8016002:	fb04 2303 	mla	r3, r4, r3, r2
 8016006:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016008:	18d5      	adds	r5, r2, r3
 801600a:	5cd3      	ldrb	r3, [r2, r3]
 801600c:	9a08      	ldr	r2, [sp, #32]
 801600e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8016012:	0e1e      	lsrs	r6, r3, #24
 8016014:	2900      	cmp	r1, #0
 8016016:	f000 8121 	beq.w	801625c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 801601a:	786a      	ldrb	r2, [r5, #1]
 801601c:	9f08      	ldr	r7, [sp, #32]
 801601e:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 8016022:	920f      	str	r2, [sp, #60]	; 0x3c
 8016024:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8016028:	2800      	cmp	r0, #0
 801602a:	f000 8122 	beq.w	8016272 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72a>
 801602e:	192a      	adds	r2, r5, r4
 8016030:	5d2d      	ldrb	r5, [r5, r4]
 8016032:	7852      	ldrb	r2, [r2, #1]
 8016034:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 8016038:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 801603c:	950b      	str	r5, [sp, #44]	; 0x2c
 801603e:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8016042:	9210      	str	r2, [sp, #64]	; 0x40
 8016044:	0e15      	lsrs	r5, r2, #24
 8016046:	b289      	uxth	r1, r1
 8016048:	b280      	uxth	r0, r0
 801604a:	fb01 f900 	mul.w	r9, r1, r0
 801604e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8016052:	0109      	lsls	r1, r1, #4
 8016054:	eba1 0e09 	sub.w	lr, r1, r9
 8016058:	b280      	uxth	r0, r0
 801605a:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 801605e:	fa1f fe8e 	uxth.w	lr, lr
 8016062:	1a12      	subs	r2, r2, r0
 8016064:	b292      	uxth	r2, r2
 8016066:	fb0e f10c 	mul.w	r1, lr, ip
 801606a:	fb02 1106 	mla	r1, r2, r6, r1
 801606e:	fb00 1108 	mla	r1, r0, r8, r1
 8016072:	fb09 1105 	mla	r1, r9, r5, r1
 8016076:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801607a:	2900      	cmp	r1, #0
 801607c:	f000 80e0 	beq.w	8016240 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f8>
 8016080:	2eff      	cmp	r6, #255	; 0xff
 8016082:	d016      	beq.n	80160b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56a>
 8016084:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8016088:	4377      	muls	r7, r6
 801608a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801608e:	435e      	muls	r6, r3
 8016090:	0a3b      	lsrs	r3, r7, #8
 8016092:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016096:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801609a:	443b      	add	r3, r7
 801609c:	f506 7780 	add.w	r7, r6, #256	; 0x100
 80160a0:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 80160a4:	0a1b      	lsrs	r3, r3, #8
 80160a6:	0a3f      	lsrs	r7, r7, #8
 80160a8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80160ac:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80160b0:	433b      	orrs	r3, r7
 80160b2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80160b6:	d01d      	beq.n	80160f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ac>
 80160b8:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80160ba:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80160bc:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80160c0:	fb0c f606 	mul.w	r6, ip, r6
 80160c4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80160c8:	fb0c fc07 	mul.w	ip, ip, r7
 80160cc:	0a37      	lsrs	r7, r6, #8
 80160ce:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80160d2:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 80160d6:	4437      	add	r7, r6
 80160d8:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 80160dc:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 80160e0:	0a3f      	lsrs	r7, r7, #8
 80160e2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80160e6:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80160ea:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80160ee:	ea47 060c 	orr.w	r6, r7, ip
 80160f2:	960f      	str	r6, [sp, #60]	; 0x3c
 80160f4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80160f8:	d01d      	beq.n	8016136 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ee>
 80160fa:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80160fc:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8016100:	fb08 fc0c 	mul.w	ip, r8, ip
 8016104:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016108:	fb08 f806 	mul.w	r8, r8, r6
 801610c:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8016110:	f508 7680 	add.w	r6, r8, #256	; 0x100
 8016114:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016118:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801611c:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 8016120:	4467      	add	r7, ip
 8016122:	0a3f      	lsrs	r7, r7, #8
 8016124:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8016128:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801612c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8016130:	ea47 0608 	orr.w	r6, r7, r8
 8016134:	960b      	str	r6, [sp, #44]	; 0x2c
 8016136:	2dff      	cmp	r5, #255	; 0xff
 8016138:	d01a      	beq.n	8016170 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x628>
 801613a:	9e10      	ldr	r6, [sp, #64]	; 0x40
 801613c:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8016140:	fb05 fc0c 	mul.w	ip, r5, ip
 8016144:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016148:	4375      	muls	r5, r6
 801614a:	ea4f 271c 	mov.w	r7, ip, lsr #8
 801614e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016152:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016156:	f505 7680 	add.w	r6, r5, #256	; 0x100
 801615a:	4467      	add	r7, ip
 801615c:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8016160:	0a3f      	lsrs	r7, r7, #8
 8016162:	0a2d      	lsrs	r5, r5, #8
 8016164:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016168:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801616c:	433d      	orrs	r5, r7
 801616e:	9510      	str	r5, [sp, #64]	; 0x40
 8016170:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8016172:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8016176:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 801617a:	fb0e f505 	mul.w	r5, lr, r5
 801617e:	fb02 5506 	mla	r5, r2, r6, r5
 8016182:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8016184:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016188:	fb00 5506 	mla	r5, r0, r6, r5
 801618c:	9e10      	ldr	r6, [sp, #64]	; 0x40
 801618e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016192:	fb09 5506 	mla	r5, r9, r6, r5
 8016196:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8016198:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801619c:	fb0e fe06 	mul.w	lr, lr, r6
 80161a0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80161a4:	fb02 e303 	mla	r3, r2, r3, lr
 80161a8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80161aa:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 80161ae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80161b0:	fb00 3307 	mla	r3, r0, r7, r3
 80161b4:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80161b8:	fb09 3c0c 	mla	ip, r9, ip, r3
 80161bc:	fb01 f10b 	mul.w	r1, r1, fp
 80161c0:	0a2d      	lsrs	r5, r5, #8
 80161c2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80161c6:	f8ba 0000 	ldrh.w	r0, [sl]
 80161ca:	1c4b      	adds	r3, r1, #1
 80161cc:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80161d0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80161d4:	ea45 050c 	orr.w	r5, r5, ip
 80161d8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80161dc:	1202      	asrs	r2, r0, #8
 80161de:	0c2b      	lsrs	r3, r5, #16
 80161e0:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80161e4:	b2c9      	uxtb	r1, r1
 80161e6:	fb13 f30b 	smulbb	r3, r3, fp
 80161ea:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80161ee:	fb02 3201 	mla	r2, r2, r1, r3
 80161f2:	f3c5 2607 	ubfx	r6, r5, #8, #8
 80161f6:	10c3      	asrs	r3, r0, #3
 80161f8:	b2ed      	uxtb	r5, r5
 80161fa:	00c0      	lsls	r0, r0, #3
 80161fc:	b2c0      	uxtb	r0, r0
 80161fe:	fb15 f50b 	smulbb	r5, r5, fp
 8016202:	fb00 5001 	mla	r0, r0, r1, r5
 8016206:	b292      	uxth	r2, r2
 8016208:	fb16 f60b 	smulbb	r6, r6, fp
 801620c:	b280      	uxth	r0, r0
 801620e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8016212:	fb03 6301 	mla	r3, r3, r1, r6
 8016216:	1c51      	adds	r1, r2, #1
 8016218:	1c46      	adds	r6, r0, #1
 801621a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801621e:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8016222:	b29b      	uxth	r3, r3
 8016224:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016228:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801622c:	4332      	orrs	r2, r6
 801622e:	1c5e      	adds	r6, r3, #1
 8016230:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8016234:	095b      	lsrs	r3, r3, #5
 8016236:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801623a:	431a      	orrs	r2, r3
 801623c:	f8aa 2000 	strh.w	r2, [sl]
 8016240:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8016242:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8016244:	4413      	add	r3, r2
 8016246:	932d      	str	r3, [sp, #180]	; 0xb4
 8016248:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 801624a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801624c:	4413      	add	r3, r2
 801624e:	932e      	str	r3, [sp, #184]	; 0xb8
 8016250:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016252:	3b01      	subs	r3, #1
 8016254:	f10a 0a02 	add.w	sl, sl, #2
 8016258:	9312      	str	r3, [sp, #72]	; 0x48
 801625a:	e4db      	b.n	8015c14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 801625c:	b160      	cbz	r0, 8016278 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 801625e:	5d2a      	ldrb	r2, [r5, r4]
 8016260:	9d08      	ldr	r5, [sp, #32]
 8016262:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8016266:	920b      	str	r2, [sp, #44]	; 0x2c
 8016268:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801626c:	25ff      	movs	r5, #255	; 0xff
 801626e:	46ac      	mov	ip, r5
 8016270:	e6e9      	b.n	8016046 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 8016272:	25ff      	movs	r5, #255	; 0xff
 8016274:	46a8      	mov	r8, r5
 8016276:	e6e6      	b.n	8016046 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 8016278:	25ff      	movs	r5, #255	; 0xff
 801627a:	46a8      	mov	r8, r5
 801627c:	e7f7      	b.n	801626e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x726>
 801627e:	b01b      	add	sp, #108	; 0x6c
 8016280:	ecbd 8b08 	vpop	{d8-d11}
 8016284:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016288 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8016288:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801628c:	8808      	ldrh	r0, [r1, #0]
 801628e:	b085      	sub	sp, #20
 8016290:	1206      	asrs	r6, r0, #8
 8016292:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8016296:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801629a:	9600      	str	r6, [sp, #0]
 801629c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80162a0:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 80162a4:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 80162a8:	10c6      	asrs	r6, r0, #3
 80162aa:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80162ae:	9601      	str	r6, [sp, #4]
 80162b0:	00c0      	lsls	r0, r0, #3
 80162b2:	fb04 560c 	mla	r6, r4, ip, r5
 80162b6:	b2c0      	uxtb	r0, r0
 80162b8:	4692      	mov	sl, r2
 80162ba:	eb02 0e06 	add.w	lr, r2, r6
 80162be:	9a00      	ldr	r2, [sp, #0]
 80162c0:	9002      	str	r0, [sp, #8]
 80162c2:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 80162c6:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80162ca:	9a01      	ldr	r2, [sp, #4]
 80162cc:	2c00      	cmp	r4, #0
 80162ce:	4698      	mov	r8, r3
 80162d0:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 80162d4:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80162d8:	db3e      	blt.n	8016358 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 80162da:	45a1      	cmp	r9, r4
 80162dc:	dd3c      	ble.n	8016358 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 80162de:	2d00      	cmp	r5, #0
 80162e0:	db38      	blt.n	8016354 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 80162e2:	45ac      	cmp	ip, r5
 80162e4:	dd36      	ble.n	8016354 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 80162e6:	f81a 2006 	ldrb.w	r2, [sl, r6]
 80162ea:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 80162ee:	1c6e      	adds	r6, r5, #1
 80162f0:	d435      	bmi.n	801635e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 80162f2:	45b4      	cmp	ip, r6
 80162f4:	dd33      	ble.n	801635e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 80162f6:	b393      	cbz	r3, 801635e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 80162f8:	f89e 6001 	ldrb.w	r6, [lr, #1]
 80162fc:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 8016300:	3401      	adds	r4, #1
 8016302:	d430      	bmi.n	8016366 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8016304:	45a1      	cmp	r9, r4
 8016306:	dd2e      	ble.n	8016366 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8016308:	b36f      	cbz	r7, 8016366 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 801630a:	2d00      	cmp	r5, #0
 801630c:	db29      	blt.n	8016362 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 801630e:	45ac      	cmp	ip, r5
 8016310:	dd27      	ble.n	8016362 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8016312:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8016316:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 801631a:	3501      	adds	r5, #1
 801631c:	d407      	bmi.n	801632e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 801631e:	45ac      	cmp	ip, r5
 8016320:	dd05      	ble.n	801632e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8016322:	b123      	cbz	r3, 801632e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8016324:	44f4      	add	ip, lr
 8016326:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801632a:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 801632e:	2b0f      	cmp	r3, #15
 8016330:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8016334:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8016338:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801633c:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8016340:	d801      	bhi.n	8016346 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 8016342:	2f0f      	cmp	r7, #15
 8016344:	d911      	bls.n	801636a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8016346:	4b79      	ldr	r3, [pc, #484]	; (801652c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>)
 8016348:	4a79      	ldr	r2, [pc, #484]	; (8016530 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 801634a:	487a      	ldr	r0, [pc, #488]	; (8016534 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 801634c:	f240 3173 	movw	r1, #883	; 0x373
 8016350:	f004 ff28 	bl	801b1a4 <__assert_func>
 8016354:	4602      	mov	r2, r0
 8016356:	e7ca      	b.n	80162ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 8016358:	4606      	mov	r6, r0
 801635a:	4602      	mov	r2, r0
 801635c:	e7d0      	b.n	8016300 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 801635e:	4606      	mov	r6, r0
 8016360:	e7ce      	b.n	8016300 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 8016362:	4604      	mov	r4, r0
 8016364:	e7d9      	b.n	801631a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x92>
 8016366:	4604      	mov	r4, r0
 8016368:	e7e1      	b.n	801632e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 801636a:	b29b      	uxth	r3, r3
 801636c:	b2bf      	uxth	r7, r7
 801636e:	fb03 fe07 	mul.w	lr, r3, r7
 8016372:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8016376:	011b      	lsls	r3, r3, #4
 8016378:	eba3 0c0e 	sub.w	ip, r3, lr
 801637c:	b2bf      	uxth	r7, r7
 801637e:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8016382:	fa1f fc8c 	uxth.w	ip, ip
 8016386:	1bed      	subs	r5, r5, r7
 8016388:	b2ad      	uxth	r5, r5
 801638a:	fb0c f30a 	mul.w	r3, ip, sl
 801638e:	fb05 330b 	mla	r3, r5, fp, r3
 8016392:	fb07 3309 	mla	r3, r7, r9, r3
 8016396:	fb0e 3308 	mla	r3, lr, r8, r3
 801639a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801639e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80163a2:	9303      	str	r3, [sp, #12]
 80163a4:	d018      	beq.n	80163d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 80163a6:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80163aa:	fb0b f303 	mul.w	r3, fp, r3
 80163ae:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80163b2:	fb0b fb02 	mul.w	fp, fp, r2
 80163b6:	0a1a      	lsrs	r2, r3, #8
 80163b8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80163bc:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80163c0:	441a      	add	r2, r3
 80163c2:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 80163c6:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 80163ca:	0a12      	lsrs	r2, r2, #8
 80163cc:	0a1b      	lsrs	r3, r3, #8
 80163ce:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80163d2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80163d6:	431a      	orrs	r2, r3
 80163d8:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80163dc:	d019      	beq.n	8016412 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x18a>
 80163de:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80163e2:	fb0a fb0b 	mul.w	fp, sl, fp
 80163e6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80163ea:	fb0a fa06 	mul.w	sl, sl, r6
 80163ee:	ea4f 261b 	mov.w	r6, fp, lsr #8
 80163f2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80163f6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80163fa:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 80163fe:	445e      	add	r6, fp
 8016400:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8016404:	0a36      	lsrs	r6, r6, #8
 8016406:	0a1b      	lsrs	r3, r3, #8
 8016408:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801640c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016410:	431e      	orrs	r6, r3
 8016412:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016416:	d019      	beq.n	801644c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1c4>
 8016418:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801641c:	fb09 fa0a 	mul.w	sl, r9, sl
 8016420:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8016424:	fb09 f904 	mul.w	r9, r9, r4
 8016428:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801642c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016430:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8016434:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8016438:	4454      	add	r4, sl
 801643a:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 801643e:	0a24      	lsrs	r4, r4, #8
 8016440:	0a1b      	lsrs	r3, r3, #8
 8016442:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8016446:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801644a:	431c      	orrs	r4, r3
 801644c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016450:	d019      	beq.n	8016486 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1fe>
 8016452:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8016456:	fb08 f909 	mul.w	r9, r8, r9
 801645a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801645e:	fb08 f800 	mul.w	r8, r8, r0
 8016462:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8016466:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801646a:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 801646e:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8016472:	4448      	add	r0, r9
 8016474:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8016478:	0a00      	lsrs	r0, r0, #8
 801647a:	0a1b      	lsrs	r3, r3, #8
 801647c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8016480:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016484:	4318      	orrs	r0, r3
 8016486:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801648a:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801648e:	fb0c f808 	mul.w	r8, ip, r8
 8016492:	fb05 8803 	mla	r8, r5, r3, r8
 8016496:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 801649a:	fb07 8803 	mla	r8, r7, r3, r8
 801649e:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 80164a2:	fb0e 8303 	mla	r3, lr, r3, r8
 80164a6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80164aa:	0a1b      	lsrs	r3, r3, #8
 80164ac:	fb0c f606 	mul.w	r6, ip, r6
 80164b0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80164b4:	fb05 6202 	mla	r2, r5, r2, r6
 80164b8:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 80164bc:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 80164c0:	fb07 2703 	mla	r7, r7, r3, r2
 80164c4:	9a03      	ldr	r2, [sp, #12]
 80164c6:	9c02      	ldr	r4, [sp, #8]
 80164c8:	9d01      	ldr	r5, [sp, #4]
 80164ca:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80164ce:	fb0e 7303 	mla	r3, lr, r3, r7
 80164d2:	43d0      	mvns	r0, r2
 80164d4:	9a00      	ldr	r2, [sp, #0]
 80164d6:	b2c0      	uxtb	r0, r0
 80164d8:	0a1b      	lsrs	r3, r3, #8
 80164da:	4342      	muls	r2, r0
 80164dc:	4344      	muls	r4, r0
 80164de:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80164e2:	ea48 0303 	orr.w	r3, r8, r3
 80164e6:	4345      	muls	r5, r0
 80164e8:	4620      	mov	r0, r4
 80164ea:	1c54      	adds	r4, r2, #1
 80164ec:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 80164f0:	0c1a      	lsrs	r2, r3, #16
 80164f2:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80164f6:	4a10      	ldr	r2, [pc, #64]	; (8016538 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 80164f8:	ea02 2204 	and.w	r2, r2, r4, lsl #8
 80164fc:	1c44      	adds	r4, r0, #1
 80164fe:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 8016502:	b2d8      	uxtb	r0, r3
 8016504:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8016508:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 801650c:	1c68      	adds	r0, r5, #1
 801650e:	eb00 2015 	add.w	r0, r0, r5, lsr #8
 8016512:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016516:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801651a:	00db      	lsls	r3, r3, #3
 801651c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016520:	4313      	orrs	r3, r2
 8016522:	800b      	strh	r3, [r1, #0]
 8016524:	b005      	add	sp, #20
 8016526:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801652a:	bf00      	nop
 801652c:	0801f4bf 	.word	0x0801f4bf
 8016530:	0801fa1d 	.word	0x0801fa1d
 8016534:	0801f547 	.word	0x0801f547
 8016538:	fffff800 	.word	0xfffff800

0801653c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801653c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016540:	ed2d 8b08 	vpush	{d8-d11}
 8016544:	b097      	sub	sp, #92	; 0x5c
 8016546:	eeb0 aa40 	vmov.f32	s20, s0
 801654a:	9d2d      	ldr	r5, [sp, #180]	; 0xb4
 801654c:	9307      	str	r3, [sp, #28]
 801654e:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8016552:	9112      	str	r1, [sp, #72]	; 0x48
 8016554:	930f      	str	r3, [sp, #60]	; 0x3c
 8016556:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801655a:	9015      	str	r0, [sp, #84]	; 0x54
 801655c:	6868      	ldr	r0, [r5, #4]
 801655e:	9214      	str	r2, [sp, #80]	; 0x50
 8016560:	fb00 1303 	mla	r3, r0, r3, r1
 8016564:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8016566:	6829      	ldr	r1, [r5, #0]
 8016568:	6855      	ldr	r5, [r2, #4]
 801656a:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 801656e:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8016572:	930a      	str	r3, [sp, #40]	; 0x28
 8016574:	6813      	ldr	r3, [r2, #0]
 8016576:	9311      	str	r3, [sp, #68]	; 0x44
 8016578:	eef0 9a60 	vmov.f32	s19, s1
 801657c:	eeb0 9a41 	vmov.f32	s18, s2
 8016580:	eeb0 8a62 	vmov.f32	s16, s5
 8016584:	eef0 8a43 	vmov.f32	s17, s6
 8016588:	eef0 ba44 	vmov.f32	s23, s8
 801658c:	eeb0 ba64 	vmov.f32	s22, s9
 8016590:	eef0 aa45 	vmov.f32	s21, s10
 8016594:	3504      	adds	r5, #4
 8016596:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016598:	2b00      	cmp	r3, #0
 801659a:	dc03      	bgt.n	80165a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 801659c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801659e:	2b00      	cmp	r3, #0
 80165a0:	f340 834d 	ble.w	8016c3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 80165a4:	9b07      	ldr	r3, [sp, #28]
 80165a6:	2b00      	cmp	r3, #0
 80165a8:	f340 819c 	ble.w	80168e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a8>
 80165ac:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80165ae:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80165b0:	1412      	asrs	r2, r2, #16
 80165b2:	ea4f 4323 	mov.w	r3, r3, asr #16
 80165b6:	d42d      	bmi.n	8016614 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 80165b8:	1c51      	adds	r1, r2, #1
 80165ba:	428c      	cmp	r4, r1
 80165bc:	dd2d      	ble.n	801661a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 80165be:	2b00      	cmp	r3, #0
 80165c0:	db2b      	blt.n	801661a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 80165c2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80165c4:	1c59      	adds	r1, r3, #1
 80165c6:	4288      	cmp	r0, r1
 80165c8:	dd27      	ble.n	801661a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 80165ca:	9b07      	ldr	r3, [sp, #28]
 80165cc:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80165ce:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80165d0:	3b01      	subs	r3, #1
 80165d2:	fb02 1203 	mla	r2, r2, r3, r1
 80165d6:	1412      	asrs	r2, r2, #16
 80165d8:	d429      	bmi.n	801662e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80165da:	3201      	adds	r2, #1
 80165dc:	4294      	cmp	r4, r2
 80165de:	dd26      	ble.n	801662e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80165e0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80165e2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80165e4:	fb02 1303 	mla	r3, r2, r3, r1
 80165e8:	141b      	asrs	r3, r3, #16
 80165ea:	d420      	bmi.n	801662e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80165ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80165ee:	3301      	adds	r3, #1
 80165f0:	429a      	cmp	r2, r3
 80165f2:	dd1c      	ble.n	801662e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80165f4:	9b07      	ldr	r3, [sp, #28]
 80165f6:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 80165fa:	9310      	str	r3, [sp, #64]	; 0x40
 80165fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80165fe:	2b00      	cmp	r3, #0
 8016600:	f300 81da 	bgt.w	80169b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8016604:	9b07      	ldr	r3, [sp, #28]
 8016606:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016608:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801660c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016610:	930a      	str	r3, [sp, #40]	; 0x28
 8016612:	e169      	b.n	80168e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 8016614:	1c51      	adds	r1, r2, #1
 8016616:	f040 8156 	bne.w	80168c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 801661a:	42a2      	cmp	r2, r4
 801661c:	f280 8153 	bge.w	80168c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8016620:	1c5a      	adds	r2, r3, #1
 8016622:	f2c0 8150 	blt.w	80168c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8016626:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016628:	4293      	cmp	r3, r2
 801662a:	f280 814c 	bge.w	80168c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 801662e:	9b07      	ldr	r3, [sp, #28]
 8016630:	9313      	str	r3, [sp, #76]	; 0x4c
 8016632:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016634:	9310      	str	r3, [sp, #64]	; 0x40
 8016636:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016638:	2b00      	cmp	r3, #0
 801663a:	dde3      	ble.n	8016604 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 801663c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801663e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016640:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8016644:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8016646:	f3c2 3003 	ubfx	r0, r2, #12, #4
 801664a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801664c:	1412      	asrs	r2, r2, #16
 801664e:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016652:	f100 8198 	bmi.w	8016986 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44a>
 8016656:	1c56      	adds	r6, r2, #1
 8016658:	42b4      	cmp	r4, r6
 801665a:	f340 8196 	ble.w	801698a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 801665e:	2b00      	cmp	r3, #0
 8016660:	f2c0 8193 	blt.w	801698a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8016664:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016666:	1c5e      	adds	r6, r3, #1
 8016668:	42b7      	cmp	r7, r6
 801666a:	f340 818e 	ble.w	801698a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 801666e:	fb03 2304 	mla	r3, r3, r4, r2
 8016672:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016674:	18d6      	adds	r6, r2, r3
 8016676:	5cd3      	ldrb	r3, [r2, r3]
 8016678:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801667c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8016680:	2900      	cmp	r1, #0
 8016682:	f000 8170 	beq.w	8016966 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42a>
 8016686:	7872      	ldrb	r2, [r6, #1]
 8016688:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801668c:	920b      	str	r2, [sp, #44]	; 0x2c
 801668e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8016692:	2800      	cmp	r0, #0
 8016694:	f000 8171 	beq.w	801697a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43e>
 8016698:	1932      	adds	r2, r6, r4
 801669a:	5d36      	ldrb	r6, [r6, r4]
 801669c:	7852      	ldrb	r2, [r2, #1]
 801669e:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 80166a2:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80166a6:	9608      	str	r6, [sp, #32]
 80166a8:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80166ac:	920c      	str	r2, [sp, #48]	; 0x30
 80166ae:	0e16      	lsrs	r6, r2, #24
 80166b0:	b289      	uxth	r1, r1
 80166b2:	b280      	uxth	r0, r0
 80166b4:	fb01 fb00 	mul.w	fp, r1, r0
 80166b8:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 80166bc:	0109      	lsls	r1, r1, #4
 80166be:	eba1 090b 	sub.w	r9, r1, fp
 80166c2:	b280      	uxth	r0, r0
 80166c4:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 80166c8:	fa1f f989 	uxth.w	r9, r9
 80166cc:	1a12      	subs	r2, r2, r0
 80166ce:	b292      	uxth	r2, r2
 80166d0:	fb09 f108 	mul.w	r1, r9, r8
 80166d4:	fb02 110c 	mla	r1, r2, ip, r1
 80166d8:	fb00 110a 	mla	r1, r0, sl, r1
 80166dc:	fb0b 1106 	mla	r1, fp, r6, r1
 80166e0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80166e4:	2900      	cmp	r1, #0
 80166e6:	f000 80df 	beq.w	80168a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 80166ea:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80166ee:	d01b      	beq.n	8016728 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ec>
 80166f0:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80166f4:	fb0c fe0e 	mul.w	lr, ip, lr
 80166f8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80166fc:	fb0c fc03 	mul.w	ip, ip, r3
 8016700:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8016704:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016708:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801670c:	4473      	add	r3, lr
 801670e:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8016712:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8016716:	0a1b      	lsrs	r3, r3, #8
 8016718:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801671c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016720:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8016724:	ea43 030e 	orr.w	r3, r3, lr
 8016728:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801672c:	d01e      	beq.n	801676c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 801672e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8016730:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8016734:	fb08 fc0c 	mul.w	ip, r8, ip
 8016738:	f407 4e7f 	and.w	lr, r7, #65280	; 0xff00
 801673c:	fb08 f80e 	mul.w	r8, r8, lr
 8016740:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8016744:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016748:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801674c:	44e6      	add	lr, ip
 801674e:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8016752:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8016756:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801675a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801675e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016762:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8016766:	ea4e 0708 	orr.w	r7, lr, r8
 801676a:	970b      	str	r7, [sp, #44]	; 0x2c
 801676c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016770:	d01e      	beq.n	80167b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8016772:	9f08      	ldr	r7, [sp, #32]
 8016774:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 8016778:	fb0a f808 	mul.w	r8, sl, r8
 801677c:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8016780:	fb0a fa0c 	mul.w	sl, sl, ip
 8016784:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8016788:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801678c:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8016790:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016794:	44c6      	add	lr, r8
 8016796:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801679a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801679e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80167a2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80167a6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80167aa:	ea4e 070a 	orr.w	r7, lr, sl
 80167ae:	9708      	str	r7, [sp, #32]
 80167b0:	2eff      	cmp	r6, #255	; 0xff
 80167b2:	d01d      	beq.n	80167f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 80167b4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80167b6:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 80167ba:	fb06 f808 	mul.w	r8, r6, r8
 80167be:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 80167c2:	fb06 f60c 	mul.w	r6, r6, ip
 80167c6:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 80167ca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80167ce:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 80167d2:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 80167d6:	44c6      	add	lr, r8
 80167d8:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 80167dc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80167e0:	0a36      	lsrs	r6, r6, #8
 80167e2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80167e6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80167ea:	ea4e 0606 	orr.w	r6, lr, r6
 80167ee:	960c      	str	r6, [sp, #48]	; 0x30
 80167f0:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80167f2:	9f08      	ldr	r7, [sp, #32]
 80167f4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80167f8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80167fc:	fb09 f606 	mul.w	r6, r9, r6
 8016800:	fb02 660c 	mla	r6, r2, ip, r6
 8016804:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8016808:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801680a:	fb00 660c 	mla	r6, r0, ip, r6
 801680e:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8016812:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8016814:	fb0b 660c 	mla	r6, fp, ip, r6
 8016818:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 801681c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016820:	fb09 f90c 	mul.w	r9, r9, ip
 8016824:	fb02 9303 	mla	r3, r2, r3, r9
 8016828:	9a08      	ldr	r2, [sp, #32]
 801682a:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 801682e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016830:	fb00 330e 	mla	r3, r0, lr, r3
 8016834:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8016838:	fb0b 3b00 	mla	fp, fp, r0, r3
 801683c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801683e:	881b      	ldrh	r3, [r3, #0]
 8016840:	43c9      	mvns	r1, r1
 8016842:	1218      	asrs	r0, r3, #8
 8016844:	b2c9      	uxtb	r1, r1
 8016846:	10da      	asrs	r2, r3, #3
 8016848:	0a36      	lsrs	r6, r6, #8
 801684a:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801684e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016852:	00db      	lsls	r3, r3, #3
 8016854:	4348      	muls	r0, r1
 8016856:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801685a:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 801685e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016862:	b2db      	uxtb	r3, r3
 8016864:	434b      	muls	r3, r1
 8016866:	ea46 060b 	orr.w	r6, r6, fp
 801686a:	434a      	muls	r2, r1
 801686c:	1c41      	adds	r1, r0, #1
 801686e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8016872:	0c30      	lsrs	r0, r6, #16
 8016874:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8016878:	494e      	ldr	r1, [pc, #312]	; (80169b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>)
 801687a:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 801687e:	1c59      	adds	r1, r3, #1
 8016880:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8016884:	b2f3      	uxtb	r3, r6
 8016886:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801688a:	1c51      	adds	r1, r2, #1
 801688c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016890:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8016894:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8016898:	00f6      	lsls	r6, r6, #3
 801689a:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 801689e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80168a2:	431e      	orrs	r6, r3
 80168a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80168a6:	801e      	strh	r6, [r3, #0]
 80168a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80168aa:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80168ac:	3302      	adds	r3, #2
 80168ae:	9310      	str	r3, [sp, #64]	; 0x40
 80168b0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80168b2:	4413      	add	r3, r2
 80168b4:	9329      	str	r3, [sp, #164]	; 0xa4
 80168b6:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80168b8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80168ba:	4413      	add	r3, r2
 80168bc:	932a      	str	r3, [sp, #168]	; 0xa8
 80168be:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80168c0:	3b01      	subs	r3, #1
 80168c2:	9313      	str	r3, [sp, #76]	; 0x4c
 80168c4:	e6b7      	b.n	8016636 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 80168c6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80168c8:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80168ca:	4413      	add	r3, r2
 80168cc:	9329      	str	r3, [sp, #164]	; 0xa4
 80168ce:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80168d0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80168d2:	4413      	add	r3, r2
 80168d4:	932a      	str	r3, [sp, #168]	; 0xa8
 80168d6:	9b07      	ldr	r3, [sp, #28]
 80168d8:	3b01      	subs	r3, #1
 80168da:	9307      	str	r3, [sp, #28]
 80168dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80168de:	3302      	adds	r3, #2
 80168e0:	930a      	str	r3, [sp, #40]	; 0x28
 80168e2:	e65f      	b.n	80165a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 80168e4:	f47f ae71 	bne.w	80165ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 80168e8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80168ea:	2b00      	cmp	r3, #0
 80168ec:	f340 81a7 	ble.w	8016c3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 80168f0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80168f4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80168f8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80168fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80168fe:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016902:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016906:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801690a:	eef0 6a48 	vmov.f32	s13, s16
 801690e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016912:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016916:	ee37 8a48 	vsub.f32	s16, s14, s16
 801691a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801691e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016922:	eef0 6a68 	vmov.f32	s13, s17
 8016926:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801692a:	ee18 2a10 	vmov	r2, s16
 801692e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016932:	fb92 f3f3 	sdiv	r3, r2, r3
 8016936:	ee18 2a90 	vmov	r2, s17
 801693a:	932b      	str	r3, [sp, #172]	; 0xac
 801693c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801693e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016942:	932c      	str	r3, [sp, #176]	; 0xb0
 8016944:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016946:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016948:	3b01      	subs	r3, #1
 801694a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801694e:	9312      	str	r3, [sp, #72]	; 0x48
 8016950:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016952:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8016956:	bf08      	it	eq
 8016958:	4613      	moveq	r3, r2
 801695a:	9307      	str	r3, [sp, #28]
 801695c:	eef0 8a67 	vmov.f32	s17, s15
 8016960:	eeb0 8a47 	vmov.f32	s16, s14
 8016964:	e617      	b.n	8016596 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5a>
 8016966:	b158      	cbz	r0, 8016980 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x444>
 8016968:	5d32      	ldrb	r2, [r6, r4]
 801696a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801696e:	9208      	str	r2, [sp, #32]
 8016970:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 8016974:	26ff      	movs	r6, #255	; 0xff
 8016976:	46b0      	mov	r8, r6
 8016978:	e69a      	b.n	80166b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 801697a:	26ff      	movs	r6, #255	; 0xff
 801697c:	46b2      	mov	sl, r6
 801697e:	e697      	b.n	80166b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 8016980:	26ff      	movs	r6, #255	; 0xff
 8016982:	46b2      	mov	sl, r6
 8016984:	e7f7      	b.n	8016976 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43a>
 8016986:	1c57      	adds	r7, r2, #1
 8016988:	d18e      	bne.n	80168a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801698a:	4294      	cmp	r4, r2
 801698c:	dd8c      	ble.n	80168a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801698e:	1c5e      	adds	r6, r3, #1
 8016990:	db8a      	blt.n	80168a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8016992:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8016994:	429e      	cmp	r6, r3
 8016996:	dd87      	ble.n	80168a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8016998:	e9cd 1004 	strd	r1, r0, [sp, #16]
 801699c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80169a0:	e9cd 4600 	strd	r4, r6, [sp]
 80169a4:	462b      	mov	r3, r5
 80169a6:	e9dd 1210 	ldrd	r1, r2, [sp, #64]	; 0x40
 80169aa:	9815      	ldr	r0, [sp, #84]	; 0x54
 80169ac:	f7ff fc6c 	bl	8016288 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80169b0:	e77a      	b.n	80168a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 80169b2:	bf00      	nop
 80169b4:	fffff800 	.word	0xfffff800
 80169b8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80169ba:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80169bc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80169c0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80169c2:	1409      	asrs	r1, r1, #16
 80169c4:	f3c3 3003 	ubfx	r0, r3, #12, #4
 80169c8:	141b      	asrs	r3, r3, #16
 80169ca:	fb04 1303 	mla	r3, r4, r3, r1
 80169ce:	9911      	ldr	r1, [sp, #68]	; 0x44
 80169d0:	18ce      	adds	r6, r1, r3
 80169d2:	5ccb      	ldrb	r3, [r1, r3]
 80169d4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80169d8:	0e1f      	lsrs	r7, r3, #24
 80169da:	2a00      	cmp	r2, #0
 80169dc:	f000 811f 	beq.w	8016c1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 80169e0:	7871      	ldrb	r1, [r6, #1]
 80169e2:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 80169e6:	910d      	str	r1, [sp, #52]	; 0x34
 80169e8:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 80169ec:	2800      	cmp	r0, #0
 80169ee:	f000 8120 	beq.w	8016c32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 80169f2:	1931      	adds	r1, r6, r4
 80169f4:	5d36      	ldrb	r6, [r6, r4]
 80169f6:	7849      	ldrb	r1, [r1, #1]
 80169f8:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 80169fc:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8016a00:	9609      	str	r6, [sp, #36]	; 0x24
 8016a02:	ea4f 6916 	mov.w	r9, r6, lsr #24
 8016a06:	910e      	str	r1, [sp, #56]	; 0x38
 8016a08:	0e0e      	lsrs	r6, r1, #24
 8016a0a:	b292      	uxth	r2, r2
 8016a0c:	b280      	uxth	r0, r0
 8016a0e:	fb02 fa00 	mul.w	sl, r2, r0
 8016a12:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8016a16:	0112      	lsls	r2, r2, #4
 8016a18:	eba2 080a 	sub.w	r8, r2, sl
 8016a1c:	b280      	uxth	r0, r0
 8016a1e:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8016a22:	fa1f f888 	uxth.w	r8, r8
 8016a26:	1a09      	subs	r1, r1, r0
 8016a28:	b289      	uxth	r1, r1
 8016a2a:	fb08 f20e 	mul.w	r2, r8, lr
 8016a2e:	fb01 2207 	mla	r2, r1, r7, r2
 8016a32:	fb00 2209 	mla	r2, r0, r9, r2
 8016a36:	fb0a 2206 	mla	r2, sl, r6, r2
 8016a3a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8016a3e:	9213      	str	r2, [sp, #76]	; 0x4c
 8016a40:	2a00      	cmp	r2, #0
 8016a42:	f000 80de 	beq.w	8016c02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c6>
 8016a46:	2fff      	cmp	r7, #255	; 0xff
 8016a48:	d01a      	beq.n	8016a80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 8016a4a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8016a4e:	fb07 fc0c 	mul.w	ip, r7, ip
 8016a52:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016a56:	435f      	muls	r7, r3
 8016a58:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8016a5c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016a60:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016a64:	4463      	add	r3, ip
 8016a66:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 8016a6a:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 8016a6e:	0a1b      	lsrs	r3, r3, #8
 8016a70:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016a74:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016a78:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8016a7c:	ea43 030c 	orr.w	r3, r3, ip
 8016a80:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8016a84:	d01f      	beq.n	8016ac6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58a>
 8016a86:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8016a88:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016a8a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8016a8e:	fb0e f707 	mul.w	r7, lr, r7
 8016a92:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8016a96:	fb0e fe0c 	mul.w	lr, lr, ip
 8016a9a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8016a9e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016aa2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016aa6:	44bc      	add	ip, r7
 8016aa8:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8016aac:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8016ab0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016ab4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016ab8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016abc:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8016ac0:	ea4c 020e 	orr.w	r2, ip, lr
 8016ac4:	920d      	str	r2, [sp, #52]	; 0x34
 8016ac6:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016aca:	d01e      	beq.n	8016b0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ce>
 8016acc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016ace:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8016ad2:	fb09 fe0e 	mul.w	lr, r9, lr
 8016ad6:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8016ada:	fb09 f907 	mul.w	r9, r9, r7
 8016ade:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8016ae2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016ae6:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8016aea:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8016aee:	44f4      	add	ip, lr
 8016af0:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8016af4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016af8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016afc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016b00:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8016b04:	ea4c 0209 	orr.w	r2, ip, r9
 8016b08:	9209      	str	r2, [sp, #36]	; 0x24
 8016b0a:	2eff      	cmp	r6, #255	; 0xff
 8016b0c:	d01c      	beq.n	8016b48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60c>
 8016b0e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016b10:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8016b14:	fb06 fe0e 	mul.w	lr, r6, lr
 8016b18:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8016b1c:	437e      	muls	r6, r7
 8016b1e:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8016b22:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016b26:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8016b2a:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8016b2e:	44f4      	add	ip, lr
 8016b30:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8016b34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016b38:	0a36      	lsrs	r6, r6, #8
 8016b3a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016b3e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8016b42:	ea4c 0206 	orr.w	r2, ip, r6
 8016b46:	920e      	str	r2, [sp, #56]	; 0x38
 8016b48:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016b4a:	f002 16ff 	and.w	r6, r2, #16711935	; 0xff00ff
 8016b4e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016b50:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8016b54:	fb08 f606 	mul.w	r6, r8, r6
 8016b58:	fb01 6607 	mla	r6, r1, r7, r6
 8016b5c:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 8016b60:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016b62:	fb00 6607 	mla	r6, r0, r7, r6
 8016b66:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 8016b6a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8016b6c:	fb0a 6607 	mla	r6, sl, r7, r6
 8016b70:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8016b74:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016b76:	fb08 f807 	mul.w	r8, r8, r7
 8016b7a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8016b7e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016b82:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016b84:	fb01 8303 	mla	r3, r1, r3, r8
 8016b88:	fb00 330c 	mla	r3, r0, ip, r3
 8016b8c:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8016b90:	fb0a 3e0e 	mla	lr, sl, lr, r3
 8016b94:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016b96:	f8bb 3000 	ldrh.w	r3, [fp]
 8016b9a:	43d2      	mvns	r2, r2
 8016b9c:	1218      	asrs	r0, r3, #8
 8016b9e:	b2d2      	uxtb	r2, r2
 8016ba0:	0a36      	lsrs	r6, r6, #8
 8016ba2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016ba6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016baa:	4350      	muls	r0, r2
 8016bac:	10d9      	asrs	r1, r3, #3
 8016bae:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016bb2:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8016bb6:	00db      	lsls	r3, r3, #3
 8016bb8:	ea46 060e 	orr.w	r6, r6, lr
 8016bbc:	1c47      	adds	r7, r0, #1
 8016bbe:	b2db      	uxtb	r3, r3
 8016bc0:	4353      	muls	r3, r2
 8016bc2:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8016bc6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016bca:	0c37      	lsrs	r7, r6, #16
 8016bcc:	4351      	muls	r1, r2
 8016bce:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8016bd2:	4a1d      	ldr	r2, [pc, #116]	; (8016c48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>)
 8016bd4:	1c5f      	adds	r7, r3, #1
 8016bd6:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 8016bda:	b2f7      	uxtb	r7, r6
 8016bdc:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 8016be0:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8016be4:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8016be8:	1c4b      	adds	r3, r1, #1
 8016bea:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8016bee:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8016bf2:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 8016bf6:	00f6      	lsls	r6, r6, #3
 8016bf8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016bfc:	4330      	orrs	r0, r6
 8016bfe:	f8ab 0000 	strh.w	r0, [fp]
 8016c02:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016c04:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8016c06:	4413      	add	r3, r2
 8016c08:	9329      	str	r3, [sp, #164]	; 0xa4
 8016c0a:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016c0c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016c0e:	4413      	add	r3, r2
 8016c10:	932a      	str	r3, [sp, #168]	; 0xa8
 8016c12:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016c14:	3b01      	subs	r3, #1
 8016c16:	f10b 0b02 	add.w	fp, fp, #2
 8016c1a:	9310      	str	r3, [sp, #64]	; 0x40
 8016c1c:	e4ee      	b.n	80165fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 8016c1e:	b158      	cbz	r0, 8016c38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fc>
 8016c20:	5d31      	ldrb	r1, [r6, r4]
 8016c22:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8016c26:	9109      	str	r1, [sp, #36]	; 0x24
 8016c28:	ea4f 6911 	mov.w	r9, r1, lsr #24
 8016c2c:	26ff      	movs	r6, #255	; 0xff
 8016c2e:	46b6      	mov	lr, r6
 8016c30:	e6eb      	b.n	8016a0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 8016c32:	26ff      	movs	r6, #255	; 0xff
 8016c34:	46b1      	mov	r9, r6
 8016c36:	e6e8      	b.n	8016a0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 8016c38:	26ff      	movs	r6, #255	; 0xff
 8016c3a:	46b1      	mov	r9, r6
 8016c3c:	e7f7      	b.n	8016c2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f2>
 8016c3e:	b017      	add	sp, #92	; 0x5c
 8016c40:	ecbd 8b08 	vpop	{d8-d11}
 8016c44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c48:	fffff800 	.word	0xfffff800

08016c4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8016c4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c50:	b087      	sub	sp, #28
 8016c52:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8016c56:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 8016c5a:	9105      	str	r1, [sp, #20]
 8016c5c:	fb00 e604 	mla	r6, r0, r4, lr
 8016c60:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8016c64:	9102      	str	r1, [sp, #8]
 8016c66:	eb02 0146 	add.w	r1, r2, r6, lsl #1
 8016c6a:	9103      	str	r1, [sp, #12]
 8016c6c:	9905      	ldr	r1, [sp, #20]
 8016c6e:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 8016c72:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8016c76:	8809      	ldrh	r1, [r1, #0]
 8016c78:	2800      	cmp	r0, #0
 8016c7a:	eb03 0a06 	add.w	sl, r3, r6
 8016c7e:	f2c0 80ca 	blt.w	8016e16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8016c82:	4287      	cmp	r7, r0
 8016c84:	f340 80c7 	ble.w	8016e16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8016c88:	f1be 0f00 	cmp.w	lr, #0
 8016c8c:	f2c0 80bf 	blt.w	8016e0e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8016c90:	4574      	cmp	r4, lr
 8016c92:	f340 80bc 	ble.w	8016e0e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8016c96:	f813 c006 	ldrb.w	ip, [r3, r6]
 8016c9a:	f832 9016 	ldrh.w	r9, [r2, r6, lsl #1]
 8016c9e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016ca2:	d01c      	beq.n	8016cde <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x92>
 8016ca4:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8016ca8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8016cac:	4372      	muls	r2, r6
 8016cae:	f64f 081f 	movw	r8, #63519	; 0xf81f
 8016cb2:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8016cb6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016cba:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8016cbe:	fb0c f609 	mul.w	r6, ip, r9
 8016cc2:	eb03 0902 	add.w	r9, r3, r2
 8016cc6:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 8016cca:	f106 0820 	add.w	r8, r6, #32
 8016cce:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 8016cd2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8016cd6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016cda:	ea49 0908 	orr.w	r9, r9, r8
 8016cde:	fa1f f989 	uxth.w	r9, r9
 8016ce2:	f11e 0301 	adds.w	r3, lr, #1
 8016ce6:	f100 809b 	bmi.w	8016e20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8016cea:	429c      	cmp	r4, r3
 8016cec:	f340 8098 	ble.w	8016e20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8016cf0:	2d00      	cmp	r5, #0
 8016cf2:	f000 8095 	beq.w	8016e20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 8016cf6:	f89a 6001 	ldrb.w	r6, [sl, #1]
 8016cfa:	9b03      	ldr	r3, [sp, #12]
 8016cfc:	2eff      	cmp	r6, #255	; 0xff
 8016cfe:	885b      	ldrh	r3, [r3, #2]
 8016d00:	d01b      	beq.n	8016d3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xee>
 8016d02:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8016d06:	ea4f 08e6 	mov.w	r8, r6, asr #3
 8016d0a:	fb08 f202 	mul.w	r2, r8, r2
 8016d0e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016d12:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8016d16:	fb06 f803 	mul.w	r8, r6, r3
 8016d1a:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8016d1e:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8016d22:	441a      	add	r2, r3
 8016d24:	f108 0320 	add.w	r3, r8, #32
 8016d28:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8016d2c:	0a1b      	lsrs	r3, r3, #8
 8016d2e:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8016d32:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016d36:	ea4b 0303 	orr.w	r3, fp, r3
 8016d3a:	b29b      	uxth	r3, r3
 8016d3c:	9301      	str	r3, [sp, #4]
 8016d3e:	3001      	adds	r0, #1
 8016d40:	d474      	bmi.n	8016e2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8016d42:	4287      	cmp	r7, r0
 8016d44:	dd72      	ble.n	8016e2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8016d46:	9a02      	ldr	r2, [sp, #8]
 8016d48:	2a00      	cmp	r2, #0
 8016d4a:	f000 8121 	beq.w	8016f90 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>
 8016d4e:	f1be 0f00 	cmp.w	lr, #0
 8016d52:	db68      	blt.n	8016e26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8016d54:	4574      	cmp	r4, lr
 8016d56:	dd66      	ble.n	8016e26 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8016d58:	f81a 7004 	ldrb.w	r7, [sl, r4]
 8016d5c:	9a03      	ldr	r2, [sp, #12]
 8016d5e:	2fff      	cmp	r7, #255	; 0xff
 8016d60:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8016d64:	d01c      	beq.n	8016da0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x154>
 8016d66:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 8016d6a:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8016d6e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016d72:	fb07 fb00 	mul.w	fp, r7, r0
 8016d76:	fb08 f802 	mul.w	r8, r8, r2
 8016d7a:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8016d7e:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 8016d82:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016d86:	4490      	add	r8, r2
 8016d88:	f10b 0220 	add.w	r2, fp, #32
 8016d8c:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8016d90:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8016d94:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8016d98:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8016d9c:	ea40 000b 	orr.w	r0, r0, fp
 8016da0:	b280      	uxth	r0, r0
 8016da2:	f11e 0e01 	adds.w	lr, lr, #1
 8016da6:	d446      	bmi.n	8016e36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8016da8:	4574      	cmp	r4, lr
 8016daa:	dd44      	ble.n	8016e36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8016dac:	2d00      	cmp	r5, #0
 8016dae:	d045      	beq.n	8016e3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f0>
 8016db0:	1c62      	adds	r2, r4, #1
 8016db2:	9b03      	ldr	r3, [sp, #12]
 8016db4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8016db8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8016dbc:	2cff      	cmp	r4, #255	; 0xff
 8016dbe:	d01c      	beq.n	8016dfa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ae>
 8016dc0:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 8016dc4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016dc8:	fb08 fe0e 	mul.w	lr, r8, lr
 8016dcc:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 8016dd0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016dd4:	fb04 f802 	mul.w	r8, r4, r2
 8016dd8:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 8016ddc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8016de0:	4472      	add	r2, lr
 8016de2:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 8016de6:	f108 0a20 	add.w	sl, r8, #32
 8016dea:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 8016dee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016df2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016df6:	ea42 020a 	orr.w	r2, r2, sl
 8016dfa:	b292      	uxth	r2, r2
 8016dfc:	2d0f      	cmp	r5, #15
 8016dfe:	d91f      	bls.n	8016e40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f4>
 8016e00:	4b67      	ldr	r3, [pc, #412]	; (8016fa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x354>)
 8016e02:	4a68      	ldr	r2, [pc, #416]	; (8016fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x358>)
 8016e04:	4868      	ldr	r0, [pc, #416]	; (8016fa8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x35c>)
 8016e06:	f240 3173 	movw	r1, #883	; 0x373
 8016e0a:	f004 f9cb 	bl	801b1a4 <__assert_func>
 8016e0e:	4689      	mov	r9, r1
 8016e10:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8016e14:	e765      	b.n	8016ce2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x96>
 8016e16:	26ff      	movs	r6, #255	; 0xff
 8016e18:	9101      	str	r1, [sp, #4]
 8016e1a:	4689      	mov	r9, r1
 8016e1c:	46b4      	mov	ip, r6
 8016e1e:	e78e      	b.n	8016d3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 8016e20:	9101      	str	r1, [sp, #4]
 8016e22:	26ff      	movs	r6, #255	; 0xff
 8016e24:	e78b      	b.n	8016d3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 8016e26:	4608      	mov	r0, r1
 8016e28:	27ff      	movs	r7, #255	; 0xff
 8016e2a:	e7ba      	b.n	8016da2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x156>
 8016e2c:	24ff      	movs	r4, #255	; 0xff
 8016e2e:	460a      	mov	r2, r1
 8016e30:	4608      	mov	r0, r1
 8016e32:	4627      	mov	r7, r4
 8016e34:	e7e2      	b.n	8016dfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8016e36:	460a      	mov	r2, r1
 8016e38:	24ff      	movs	r4, #255	; 0xff
 8016e3a:	e7df      	b.n	8016dfc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8016e3c:	460a      	mov	r2, r1
 8016e3e:	24ff      	movs	r4, #255	; 0xff
 8016e40:	9b02      	ldr	r3, [sp, #8]
 8016e42:	2b0f      	cmp	r3, #15
 8016e44:	d8dc      	bhi.n	8016e00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 8016e46:	f8bd e008 	ldrh.w	lr, [sp, #8]
 8016e4a:	fa1f f885 	uxth.w	r8, r5
 8016e4e:	fb08 fa0e 	mul.w	sl, r8, lr
 8016e52:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8016e56:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 8016e5a:	9303      	str	r3, [sp, #12]
 8016e5c:	fa1f f38e 	uxth.w	r3, lr
 8016e60:	9304      	str	r3, [sp, #16]
 8016e62:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8016e66:	9b02      	ldr	r3, [sp, #8]
 8016e68:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016e6c:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8016e70:	fb15 fe03 	smulbb	lr, r5, r3
 8016e74:	ea48 0809 	orr.w	r8, r8, r9
 8016e78:	f1c3 0910 	rsb	r9, r3, #16
 8016e7c:	9b01      	ldr	r3, [sp, #4]
 8016e7e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8016e82:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8016e86:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016e8a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016e8e:	eba9 0905 	sub.w	r9, r9, r5
 8016e92:	ea4b 0303 	orr.w	r3, fp, r3
 8016e96:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 8016e9a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8016e9e:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 8016ea2:	436b      	muls	r3, r5
 8016ea4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016ea8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016eac:	ea4b 0202 	orr.w	r2, fp, r2
 8016eb0:	fb09 3308 	mla	r3, r9, r8, r3
 8016eb4:	fb0e 3302 	mla	r3, lr, r2, r3
 8016eb8:	0402      	lsls	r2, r0, #16
 8016eba:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016ebe:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016ec2:	4310      	orrs	r0, r2
 8016ec4:	9a02      	ldr	r2, [sp, #8]
 8016ec6:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 8016eca:	fb0e 3e00 	mla	lr, lr, r0, r3
 8016ece:	9803      	ldr	r0, [sp, #12]
 8016ed0:	f89d 2058 	ldrb.w	r2, [sp, #88]	; 0x58
 8016ed4:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8016ed8:	9804      	ldr	r0, [sp, #16]
 8016eda:	1a2d      	subs	r5, r5, r0
 8016edc:	9803      	ldr	r0, [sp, #12]
 8016ede:	eba0 000a 	sub.w	r0, r0, sl
 8016ee2:	b280      	uxth	r0, r0
 8016ee4:	b2ad      	uxth	r5, r5
 8016ee6:	4346      	muls	r6, r0
 8016ee8:	9804      	ldr	r0, [sp, #16]
 8016eea:	fb0c 6605 	mla	r6, ip, r5, r6
 8016eee:	fb00 6707 	mla	r7, r0, r7, r6
 8016ef2:	fb0a 7404 	mla	r4, sl, r4, r7
 8016ef6:	b292      	uxth	r2, r2
 8016ef8:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8016efc:	4354      	muls	r4, r2
 8016efe:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8016f02:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8016f06:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016f0a:	f104 0a01 	add.w	sl, r4, #1
 8016f0e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8016f12:	ea43 0e0e 	orr.w	lr, r3, lr
 8016f16:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8016f1a:	fa1f f38e 	uxth.w	r3, lr
 8016f1e:	1208      	asrs	r0, r1, #8
 8016f20:	ea6f 2414 	mvn.w	r4, r4, lsr #8
 8016f24:	b2e4      	uxtb	r4, r4
 8016f26:	121d      	asrs	r5, r3, #8
 8016f28:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016f2c:	fb10 f004 	smulbb	r0, r0, r4
 8016f30:	10ce      	asrs	r6, r1, #3
 8016f32:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8016f36:	00c9      	lsls	r1, r1, #3
 8016f38:	fb05 0502 	mla	r5, r5, r2, r0
 8016f3c:	b2c9      	uxtb	r1, r1
 8016f3e:	10d8      	asrs	r0, r3, #3
 8016f40:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016f44:	00db      	lsls	r3, r3, #3
 8016f46:	fb16 f604 	smulbb	r6, r6, r4
 8016f4a:	b2db      	uxtb	r3, r3
 8016f4c:	fb11 f404 	smulbb	r4, r1, r4
 8016f50:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8016f54:	fb00 6002 	mla	r0, r0, r2, r6
 8016f58:	fb03 4202 	mla	r2, r3, r2, r4
 8016f5c:	b2ad      	uxth	r5, r5
 8016f5e:	b292      	uxth	r2, r2
 8016f60:	1c6b      	adds	r3, r5, #1
 8016f62:	1c51      	adds	r1, r2, #1
 8016f64:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8016f68:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016f6c:	b280      	uxth	r0, r0
 8016f6e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016f72:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8016f76:	4313      	orrs	r3, r2
 8016f78:	1c42      	adds	r2, r0, #1
 8016f7a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016f7e:	0940      	lsrs	r0, r0, #5
 8016f80:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016f84:	9a05      	ldr	r2, [sp, #20]
 8016f86:	4303      	orrs	r3, r0
 8016f88:	8013      	strh	r3, [r2, #0]
 8016f8a:	b007      	add	sp, #28
 8016f8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f90:	2d0f      	cmp	r5, #15
 8016f92:	f63f af35 	bhi.w	8016e00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 8016f96:	24ff      	movs	r4, #255	; 0xff
 8016f98:	460a      	mov	r2, r1
 8016f9a:	4608      	mov	r0, r1
 8016f9c:	4627      	mov	r7, r4
 8016f9e:	e752      	b.n	8016e46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1fa>
 8016fa0:	0801f4bf 	.word	0x0801f4bf
 8016fa4:	0801fa1d 	.word	0x0801fa1d
 8016fa8:	0801f547 	.word	0x0801f547

08016fac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8016fac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016fb0:	ed2d 8b08 	vpush	{d8-d11}
 8016fb4:	b099      	sub	sp, #100	; 0x64
 8016fb6:	eeb0 aa40 	vmov.f32	s20, s0
 8016fba:	9308      	str	r3, [sp, #32]
 8016fbc:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 8016fc0:	9e2f      	ldr	r6, [sp, #188]	; 0xbc
 8016fc2:	930b      	str	r3, [sp, #44]	; 0x2c
 8016fc4:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8016fc8:	9314      	str	r3, [sp, #80]	; 0x50
 8016fca:	9113      	str	r1, [sp, #76]	; 0x4c
 8016fcc:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8016fd0:	9017      	str	r0, [sp, #92]	; 0x5c
 8016fd2:	6870      	ldr	r0, [r6, #4]
 8016fd4:	9216      	str	r2, [sp, #88]	; 0x58
 8016fd6:	fb00 1303 	mla	r3, r0, r3, r1
 8016fda:	6831      	ldr	r1, [r6, #0]
 8016fdc:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 8016fde:	f9bd 50c8 	ldrsh.w	r5, [sp, #200]	; 0xc8
 8016fe2:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8016fe6:	9309      	str	r3, [sp, #36]	; 0x24
 8016fe8:	6813      	ldr	r3, [r2, #0]
 8016fea:	930c      	str	r3, [sp, #48]	; 0x30
 8016fec:	6853      	ldr	r3, [r2, #4]
 8016fee:	930d      	str	r3, [sp, #52]	; 0x34
 8016ff0:	006b      	lsls	r3, r5, #1
 8016ff2:	9312      	str	r3, [sp, #72]	; 0x48
 8016ff4:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8016ff8:	930a      	str	r3, [sp, #40]	; 0x28
 8016ffa:	eef0 9a60 	vmov.f32	s19, s1
 8016ffe:	eeb0 9a41 	vmov.f32	s18, s2
 8017002:	eeb0 8a62 	vmov.f32	s16, s5
 8017006:	eef0 8a43 	vmov.f32	s17, s6
 801700a:	eef0 ba44 	vmov.f32	s23, s8
 801700e:	eeb0 ba64 	vmov.f32	s22, s9
 8017012:	eef0 aa45 	vmov.f32	s21, s10
 8017016:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017018:	2b00      	cmp	r3, #0
 801701a:	dc03      	bgt.n	8017024 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 801701c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801701e:	2b00      	cmp	r3, #0
 8017020:	f340 83bf 	ble.w	80177a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 8017024:	9b08      	ldr	r3, [sp, #32]
 8017026:	2b00      	cmp	r3, #0
 8017028:	f340 81cb 	ble.w	80173c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x416>
 801702c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801702e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017030:	1412      	asrs	r2, r2, #16
 8017032:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017036:	d42f      	bmi.n	8017098 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8017038:	1c51      	adds	r1, r2, #1
 801703a:	428d      	cmp	r5, r1
 801703c:	dd2f      	ble.n	801709e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 801703e:	2b00      	cmp	r3, #0
 8017040:	db2d      	blt.n	801709e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8017042:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017044:	1c59      	adds	r1, r3, #1
 8017046:	4288      	cmp	r0, r1
 8017048:	dd29      	ble.n	801709e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 801704a:	9b08      	ldr	r3, [sp, #32]
 801704c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801704e:	992b      	ldr	r1, [sp, #172]	; 0xac
 8017050:	3b01      	subs	r3, #1
 8017052:	fb02 1203 	mla	r2, r2, r3, r1
 8017056:	1412      	asrs	r2, r2, #16
 8017058:	d42b      	bmi.n	80170b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 801705a:	3201      	adds	r2, #1
 801705c:	4295      	cmp	r5, r2
 801705e:	dd28      	ble.n	80170b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8017060:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8017062:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8017064:	fb02 1303 	mla	r3, r2, r3, r1
 8017068:	141b      	asrs	r3, r3, #16
 801706a:	d422      	bmi.n	80170b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 801706c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801706e:	3301      	adds	r3, #1
 8017070:	429a      	cmp	r2, r3
 8017072:	dd1e      	ble.n	80170b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8017074:	9b08      	ldr	r3, [sp, #32]
 8017076:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801707a:	9315      	str	r3, [sp, #84]	; 0x54
 801707c:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017080:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8017082:	2b00      	cmp	r3, #0
 8017084:	f300 8217 	bgt.w	80174b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50a>
 8017088:	9b08      	ldr	r3, [sp, #32]
 801708a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801708e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017090:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017094:	9309      	str	r3, [sp, #36]	; 0x24
 8017096:	e196      	b.n	80173c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 8017098:	1c57      	adds	r7, r2, #1
 801709a:	f040 8183 	bne.w	80173a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 801709e:	42aa      	cmp	r2, r5
 80170a0:	f280 8180 	bge.w	80173a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 80170a4:	1c5e      	adds	r6, r3, #1
 80170a6:	f2c0 817d 	blt.w	80173a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 80170aa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80170ac:	4293      	cmp	r3, r2
 80170ae:	f280 8179 	bge.w	80173a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 80170b2:	9b08      	ldr	r3, [sp, #32]
 80170b4:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80170b6:	9315      	str	r3, [sp, #84]	; 0x54
 80170b8:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80170bc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80170be:	2b00      	cmp	r3, #0
 80170c0:	dde2      	ble.n	8017088 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 80170c2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80170c4:	1419      	asrs	r1, r3, #16
 80170c6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80170c8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80170cc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80170ce:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80170d2:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80170d4:	141b      	asrs	r3, r3, #16
 80170d6:	f100 81d3 	bmi.w	8017480 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d4>
 80170da:	1c58      	adds	r0, r3, #1
 80170dc:	4285      	cmp	r5, r0
 80170de:	f340 81d1 	ble.w	8017484 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 80170e2:	2900      	cmp	r1, #0
 80170e4:	f2c0 81ce 	blt.w	8017484 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 80170e8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80170ea:	1c48      	adds	r0, r1, #1
 80170ec:	4284      	cmp	r4, r0
 80170ee:	f340 81c9 	ble.w	8017484 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 80170f2:	fb01 3105 	mla	r1, r1, r5, r3
 80170f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80170f8:	fa1f fe82 	uxth.w	lr, r2
 80170fc:	eb03 0a01 	add.w	sl, r3, r1
 8017100:	ea4f 100e 	mov.w	r0, lr, lsl #4
 8017104:	f813 9001 	ldrb.w	r9, [r3, r1]
 8017108:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801710c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8017110:	b29b      	uxth	r3, r3
 8017112:	f1bc 0f00 	cmp.w	ip, #0
 8017116:	f000 8195 	beq.w	8017444 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x498>
 801711a:	f81a 4005 	ldrb.w	r4, [sl, r5]
 801711e:	940e      	str	r4, [sp, #56]	; 0x38
 8017120:	eb0a 0b05 	add.w	fp, sl, r5
 8017124:	fa1f fa8c 	uxth.w	sl, ip
 8017128:	fb0a fe0e 	mul.w	lr, sl, lr
 801712c:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8017130:	fa1f fa8a 	uxth.w	sl, sl
 8017134:	eba0 000e 	sub.w	r0, r0, lr
 8017138:	eba3 030a 	sub.w	r3, r3, sl
 801713c:	b280      	uxth	r0, r0
 801713e:	fb08 f000 	mul.w	r0, r8, r0
 8017142:	b29b      	uxth	r3, r3
 8017144:	fb09 0303 	mla	r3, r9, r3, r0
 8017148:	980e      	ldr	r0, [sp, #56]	; 0x38
 801714a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801714e:	940f      	str	r4, [sp, #60]	; 0x3c
 8017150:	fb0a 3300 	mla	r3, sl, r0, r3
 8017154:	fb0e 3304 	mla	r3, lr, r4, r3
 8017158:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801715c:	2b00      	cmp	r3, #0
 801715e:	f000 8114 	beq.w	801738a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017162:	980c      	ldr	r0, [sp, #48]	; 0x30
 8017164:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017166:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801716a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801716e:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 8017172:	f000 816c 	beq.w	801744e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8017176:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801717a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801717e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017182:	fb09 f101 	mul.w	r1, r9, r1
 8017186:	fb0a fe0e 	mul.w	lr, sl, lr
 801718a:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801718e:	f101 0b20 	add.w	fp, r1, #32
 8017192:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017196:	44ce      	add	lr, r9
 8017198:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 801719c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80171a0:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80171a4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80171a8:	ea4e 0909 	orr.w	r9, lr, r9
 80171ac:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80171b0:	8841      	ldrh	r1, [r0, #2]
 80171b2:	d019      	beq.n	80171e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 80171b4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80171b8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80171bc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80171c0:	fb0a fe0e 	mul.w	lr, sl, lr
 80171c4:	fb08 f801 	mul.w	r8, r8, r1
 80171c8:	f108 0b20 	add.w	fp, r8, #32
 80171cc:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 80171d0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80171d4:	448e      	add	lr, r1
 80171d6:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 80171da:	0a09      	lsrs	r1, r1, #8
 80171dc:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 80171e0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80171e4:	ea4a 0101 	orr.w	r1, sl, r1
 80171e8:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80171ec:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80171f0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80171f4:	ea4e 0909 	orr.w	r9, lr, r9
 80171f8:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 80171fc:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017200:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017204:	ea4e 0e01 	orr.w	lr, lr, r1
 8017208:	f1bc 0f00 	cmp.w	ip, #0
 801720c:	f000 8121 	beq.w	8017452 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 8017210:	9912      	ldr	r1, [sp, #72]	; 0x48
 8017212:	eb00 0801 	add.w	r8, r0, r1
 8017216:	5a41      	ldrh	r1, [r0, r1]
 8017218:	980e      	ldr	r0, [sp, #56]	; 0x38
 801721a:	28ff      	cmp	r0, #255	; 0xff
 801721c:	d019      	beq.n	8017252 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 801721e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017220:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8017224:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017228:	fb04 fb01 	mul.w	fp, r4, r1
 801722c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017230:	fb0a fa00 	mul.w	sl, sl, r0
 8017234:	f10b 0020 	add.w	r0, fp, #32
 8017238:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 801723c:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8017240:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017244:	4451      	add	r1, sl
 8017246:	0a00      	lsrs	r0, r0, #8
 8017248:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801724c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017250:	4301      	orrs	r1, r0
 8017252:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017254:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8017258:	2cff      	cmp	r4, #255	; 0xff
 801725a:	d01a      	beq.n	8017292 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e6>
 801725c:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8017260:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017264:	fb04 fb00 	mul.w	fp, r4, r0
 8017268:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801726c:	fb0a fa08 	mul.w	sl, sl, r8
 8017270:	f10b 0820 	add.w	r8, fp, #32
 8017274:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8017278:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 801727c:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017280:	4450      	add	r0, sl
 8017282:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017286:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801728a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801728e:	ea40 0008 	orr.w	r0, r0, r8
 8017292:	fb1c f802 	smulbb	r8, ip, r2
 8017296:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801729a:	f1cc 0a10 	rsb	sl, ip, #16
 801729e:	ebaa 0a02 	sub.w	sl, sl, r2
 80172a2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80172a6:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 80172aa:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 80172ae:	fb0e f202 	mul.w	r2, lr, r2
 80172b2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80172b6:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 80172ba:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80172be:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 80172c2:	fb09 220a 	mla	r2, r9, sl, r2
 80172c6:	ea4b 0101 	orr.w	r1, fp, r1
 80172ca:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80172ce:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80172d2:	fb0c 2201 	mla	r2, ip, r1, r2
 80172d6:	ea4e 0000 	orr.w	r0, lr, r0
 80172da:	fb08 2800 	mla	r8, r8, r0, r2
 80172de:	ea4f 5258 	mov.w	r2, r8, lsr #21
 80172e2:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80172e6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80172ea:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80172ee:	ea42 0808 	orr.w	r8, r2, r8
 80172f2:	fa1f f288 	uxth.w	r2, r8
 80172f6:	2bff      	cmp	r3, #255	; 0xff
 80172f8:	d103      	bne.n	8017302 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x356>
 80172fa:	9914      	ldr	r1, [sp, #80]	; 0x50
 80172fc:	29ff      	cmp	r1, #255	; 0xff
 80172fe:	f000 80bd 	beq.w	801747c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d0>
 8017302:	990a      	ldr	r1, [sp, #40]	; 0x28
 8017304:	f8b7 c000 	ldrh.w	ip, [r7]
 8017308:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801730a:	434b      	muls	r3, r1
 801730c:	f103 0e01 	add.w	lr, r3, #1
 8017310:	eb0e 2323 	add.w	r3, lr, r3, asr #8
 8017314:	ea6f 2e23 	mvn.w	lr, r3, asr #8
 8017318:	ea4f 202c 	mov.w	r0, ip, asr #8
 801731c:	fa5f fe8e 	uxtb.w	lr, lr
 8017320:	1213      	asrs	r3, r2, #8
 8017322:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017326:	fb10 f00e 	smulbb	r0, r0, lr
 801732a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801732e:	fb03 0301 	mla	r3, r3, r1, r0
 8017332:	b298      	uxth	r0, r3
 8017334:	ea4f 03ec 	mov.w	r3, ip, asr #3
 8017338:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801733c:	10d1      	asrs	r1, r2, #3
 801733e:	fa5f fc8c 	uxtb.w	ip, ip
 8017342:	00d2      	lsls	r2, r2, #3
 8017344:	fb1c fc0e 	smulbb	ip, ip, lr
 8017348:	b2d2      	uxtb	r2, r2
 801734a:	fb02 c204 	mla	r2, r2, r4, ip
 801734e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017352:	fb13 f30e 	smulbb	r3, r3, lr
 8017356:	b292      	uxth	r2, r2
 8017358:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801735c:	fb01 3104 	mla	r1, r1, r4, r3
 8017360:	f102 0c01 	add.w	ip, r2, #1
 8017364:	1c43      	adds	r3, r0, #1
 8017366:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801736a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801736e:	b289      	uxth	r1, r1
 8017370:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017374:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017378:	4313      	orrs	r3, r2
 801737a:	1c4a      	adds	r2, r1, #1
 801737c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8017380:	0949      	lsrs	r1, r1, #5
 8017382:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017386:	430b      	orrs	r3, r1
 8017388:	803b      	strh	r3, [r7, #0]
 801738a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801738c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801738e:	4413      	add	r3, r2
 8017390:	932b      	str	r3, [sp, #172]	; 0xac
 8017392:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8017394:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017396:	441a      	add	r2, r3
 8017398:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801739a:	922c      	str	r2, [sp, #176]	; 0xb0
 801739c:	3b01      	subs	r3, #1
 801739e:	3702      	adds	r7, #2
 80173a0:	9315      	str	r3, [sp, #84]	; 0x54
 80173a2:	e68b      	b.n	80170bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 80173a4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80173a6:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80173a8:	4413      	add	r3, r2
 80173aa:	932b      	str	r3, [sp, #172]	; 0xac
 80173ac:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80173ae:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80173b0:	441a      	add	r2, r3
 80173b2:	9b08      	ldr	r3, [sp, #32]
 80173b4:	922c      	str	r2, [sp, #176]	; 0xb0
 80173b6:	3b01      	subs	r3, #1
 80173b8:	9308      	str	r3, [sp, #32]
 80173ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80173bc:	3302      	adds	r3, #2
 80173be:	9309      	str	r3, [sp, #36]	; 0x24
 80173c0:	e630      	b.n	8017024 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80173c2:	f47f ae42 	bne.w	801704a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 80173c6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80173c8:	2b00      	cmp	r3, #0
 80173ca:	f340 81ea 	ble.w	80177a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 80173ce:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80173d2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80173d6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80173da:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80173dc:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80173e0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80173e4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80173e8:	eef0 6a48 	vmov.f32	s13, s16
 80173ec:	ee69 7a27 	vmul.f32	s15, s18, s15
 80173f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80173f4:	ee37 8a48 	vsub.f32	s16, s14, s16
 80173f8:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 80173fc:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017400:	eef0 6a68 	vmov.f32	s13, s17
 8017404:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017408:	ee18 2a10 	vmov	r2, s16
 801740c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017410:	fb92 f3f3 	sdiv	r3, r2, r3
 8017414:	ee18 2a90 	vmov	r2, s17
 8017418:	932d      	str	r3, [sp, #180]	; 0xb4
 801741a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801741c:	fb92 f3f3 	sdiv	r3, r2, r3
 8017420:	932e      	str	r3, [sp, #184]	; 0xb8
 8017422:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8017424:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8017426:	3b01      	subs	r3, #1
 8017428:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801742c:	9313      	str	r3, [sp, #76]	; 0x4c
 801742e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017430:	edcd 6a2c 	vstr	s13, [sp, #176]	; 0xb0
 8017434:	bf08      	it	eq
 8017436:	4613      	moveq	r3, r2
 8017438:	9308      	str	r3, [sp, #32]
 801743a:	eef0 8a67 	vmov.f32	s17, s15
 801743e:	eeb0 8a47 	vmov.f32	s16, s14
 8017442:	e5e8      	b.n	8017016 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8017444:	fb08 f000 	mul.w	r0, r8, r0
 8017448:	fb09 0303 	mla	r3, r9, r3, r0
 801744c:	e684      	b.n	8017158 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ac>
 801744e:	4689      	mov	r9, r1
 8017450:	e6ac      	b.n	80171ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x200>
 8017452:	f1c2 0010 	rsb	r0, r2, #16
 8017456:	fb0e f202 	mul.w	r2, lr, r2
 801745a:	fb09 2900 	mla	r9, r9, r0, r2
 801745e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017462:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8017466:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801746a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801746e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017472:	ea42 0909 	orr.w	r9, r2, r9
 8017476:	fa1f f289 	uxth.w	r2, r9
 801747a:	e73c      	b.n	80172f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 801747c:	803a      	strh	r2, [r7, #0]
 801747e:	e784      	b.n	801738a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017480:	1c5c      	adds	r4, r3, #1
 8017482:	d182      	bne.n	801738a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017484:	429d      	cmp	r5, r3
 8017486:	dd80      	ble.n	801738a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017488:	1c48      	adds	r0, r1, #1
 801748a:	f6ff af7e 	blt.w	801738a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 801748e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017490:	4288      	cmp	r0, r1
 8017492:	f77f af7a 	ble.w	801738a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8017496:	9814      	ldr	r0, [sp, #80]	; 0x50
 8017498:	9302      	str	r3, [sp, #8]
 801749a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801749c:	e9cd 1203 	strd	r1, r2, [sp, #12]
 80174a0:	e9cd c005 	strd	ip, r0, [sp, #20]
 80174a4:	e9cd 5300 	strd	r5, r3, [sp]
 80174a8:	4639      	mov	r1, r7
 80174aa:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 80174ae:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80174b0:	f7ff fbcc 	bl	8016c4c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80174b4:	e769      	b.n	801738a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 80174b6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80174b8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80174bc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80174be:	141f      	asrs	r7, r3, #16
 80174c0:	f3c3 3003 	ubfx	r0, r3, #12, #4
 80174c4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80174c6:	141b      	asrs	r3, r3, #16
 80174c8:	fb05 3707 	mla	r7, r5, r7, r3
 80174cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80174ce:	fa1f fc82 	uxth.w	ip, r2
 80174d2:	eb03 0a07 	add.w	sl, r3, r7
 80174d6:	ea4f 110c 	mov.w	r1, ip, lsl #4
 80174da:	f813 9007 	ldrb.w	r9, [r3, r7]
 80174de:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80174e2:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 80174e6:	b29b      	uxth	r3, r3
 80174e8:	2800      	cmp	r0, #0
 80174ea:	f000 813f 	beq.w	801776c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c0>
 80174ee:	f81a 4005 	ldrb.w	r4, [sl, r5]
 80174f2:	9410      	str	r4, [sp, #64]	; 0x40
 80174f4:	eb0a 0b05 	add.w	fp, sl, r5
 80174f8:	fa1f fa80 	uxth.w	sl, r0
 80174fc:	fb0a fc0c 	mul.w	ip, sl, ip
 8017500:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8017504:	fa1f fa8a 	uxth.w	sl, sl
 8017508:	eba1 010c 	sub.w	r1, r1, ip
 801750c:	eba3 030a 	sub.w	r3, r3, sl
 8017510:	b289      	uxth	r1, r1
 8017512:	fb08 f101 	mul.w	r1, r8, r1
 8017516:	b29b      	uxth	r3, r3
 8017518:	fb09 1303 	mla	r3, r9, r3, r1
 801751c:	9910      	ldr	r1, [sp, #64]	; 0x40
 801751e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017522:	9411      	str	r4, [sp, #68]	; 0x44
 8017524:	fb0a 3301 	mla	r3, sl, r1, r3
 8017528:	fb0c 3304 	mla	r3, ip, r4, r3
 801752c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017530:	2b00      	cmp	r3, #0
 8017532:	f000 810d 	beq.w	8017750 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 8017536:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017538:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801753a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801753e:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 8017542:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8017546:	f000 8116 	beq.w	8017776 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ca>
 801754a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801754e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017552:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017556:	fb09 f707 	mul.w	r7, r9, r7
 801755a:	fb0a fc0c 	mul.w	ip, sl, ip
 801755e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8017562:	f107 0b20 	add.w	fp, r7, #32
 8017566:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801756a:	44cc      	add	ip, r9
 801756c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8017570:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017574:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017578:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801757c:	ea4c 0909 	orr.w	r9, ip, r9
 8017580:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017584:	884f      	ldrh	r7, [r1, #2]
 8017586:	d019      	beq.n	80175bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x610>
 8017588:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801758c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017590:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017594:	fb08 f807 	mul.w	r8, r8, r7
 8017598:	fb0a fc0c 	mul.w	ip, sl, ip
 801759c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80175a0:	f108 0b20 	add.w	fp, r8, #32
 80175a4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80175a8:	44bc      	add	ip, r7
 80175aa:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80175ae:	0a3f      	lsrs	r7, r7, #8
 80175b0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80175b4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80175b8:	ea4c 0707 	orr.w	r7, ip, r7
 80175bc:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80175c0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80175c4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80175c8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80175cc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80175d0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80175d4:	ea4c 0909 	orr.w	r9, ip, r9
 80175d8:	ea4a 0707 	orr.w	r7, sl, r7
 80175dc:	2800      	cmp	r0, #0
 80175de:	f000 80cc 	beq.w	801777a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ce>
 80175e2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80175e4:	eb01 0c04 	add.w	ip, r1, r4
 80175e8:	f831 8004 	ldrh.w	r8, [r1, r4]
 80175ec:	9910      	ldr	r1, [sp, #64]	; 0x40
 80175ee:	29ff      	cmp	r1, #255	; 0xff
 80175f0:	d01a      	beq.n	8017628 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x67c>
 80175f2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80175f4:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 80175f8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80175fc:	fb04 fb08 	mul.w	fp, r4, r8
 8017600:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017604:	fb0a fa01 	mul.w	sl, sl, r1
 8017608:	f10b 0120 	add.w	r1, fp, #32
 801760c:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 8017610:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 8017614:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017618:	44d0      	add	r8, sl
 801761a:	0a09      	lsrs	r1, r1, #8
 801761c:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 8017620:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017624:	ea48 0801 	orr.w	r8, r8, r1
 8017628:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801762a:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 801762e:	2cff      	cmp	r4, #255	; 0xff
 8017630:	d01a      	beq.n	8017668 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6bc>
 8017632:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 8017636:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801763a:	fb04 fb01 	mul.w	fp, r4, r1
 801763e:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017642:	fb0a fa0c 	mul.w	sl, sl, ip
 8017646:	f10b 0c20 	add.w	ip, fp, #32
 801764a:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 801764e:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 8017652:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017656:	4451      	add	r1, sl
 8017658:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801765c:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8017660:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8017664:	ea41 010c 	orr.w	r1, r1, ip
 8017668:	fb10 fc02 	smulbb	ip, r0, r2
 801766c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8017670:	f1c0 0a10 	rsb	sl, r0, #16
 8017674:	ebaa 0a02 	sub.w	sl, sl, r2
 8017678:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 801767c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8017680:	437a      	muls	r2, r7
 8017682:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 8017686:	040f      	lsls	r7, r1, #16
 8017688:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801768c:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8017690:	fb09 220a 	mla	r2, r9, sl, r2
 8017694:	ea4b 0808 	orr.w	r8, fp, r8
 8017698:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 801769c:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80176a0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80176a4:	fb00 2208 	mla	r2, r0, r8, r2
 80176a8:	4339      	orrs	r1, r7
 80176aa:	fb0c 2201 	mla	r2, ip, r1, r2
 80176ae:	ea4f 5952 	mov.w	r9, r2, lsr #21
 80176b2:	0952      	lsrs	r2, r2, #5
 80176b4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80176b8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80176bc:	ea49 0202 	orr.w	r2, r9, r2
 80176c0:	2bff      	cmp	r3, #255	; 0xff
 80176c2:	b292      	uxth	r2, r2
 80176c4:	d102      	bne.n	80176cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x720>
 80176c6:	9914      	ldr	r1, [sp, #80]	; 0x50
 80176c8:	29ff      	cmp	r1, #255	; 0xff
 80176ca:	d067      	beq.n	801779c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f0>
 80176cc:	990a      	ldr	r1, [sp, #40]	; 0x28
 80176ce:	f8be 0000 	ldrh.w	r0, [lr]
 80176d2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80176d4:	434b      	muls	r3, r1
 80176d6:	1c59      	adds	r1, r3, #1
 80176d8:	eb01 2323 	add.w	r3, r1, r3, asr #8
 80176dc:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80176e0:	1201      	asrs	r1, r0, #8
 80176e2:	b2db      	uxtb	r3, r3
 80176e4:	1217      	asrs	r7, r2, #8
 80176e6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80176ea:	fb11 f103 	smulbb	r1, r1, r3
 80176ee:	ea4f 0ce0 	mov.w	ip, r0, asr #3
 80176f2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80176f6:	00c0      	lsls	r0, r0, #3
 80176f8:	fb07 1704 	mla	r7, r7, r4, r1
 80176fc:	b2c0      	uxtb	r0, r0
 80176fe:	10d1      	asrs	r1, r2, #3
 8017700:	00d2      	lsls	r2, r2, #3
 8017702:	fb10 f003 	smulbb	r0, r0, r3
 8017706:	b2d2      	uxtb	r2, r2
 8017708:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801770c:	fb02 0204 	mla	r2, r2, r4, r0
 8017710:	fb1c fc03 	smulbb	ip, ip, r3
 8017714:	b2bf      	uxth	r7, r7
 8017716:	b292      	uxth	r2, r2
 8017718:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801771c:	fb01 c104 	mla	r1, r1, r4, ip
 8017720:	1c7b      	adds	r3, r7, #1
 8017722:	f102 0c01 	add.w	ip, r2, #1
 8017726:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801772a:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 801772e:	b289      	uxth	r1, r1
 8017730:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017734:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017738:	ea47 070c 	orr.w	r7, r7, ip
 801773c:	f101 0c01 	add.w	ip, r1, #1
 8017740:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 8017744:	0949      	lsrs	r1, r1, #5
 8017746:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801774a:	430f      	orrs	r7, r1
 801774c:	f8ae 7000 	strh.w	r7, [lr]
 8017750:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017752:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017754:	4413      	add	r3, r2
 8017756:	932b      	str	r3, [sp, #172]	; 0xac
 8017758:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801775a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801775c:	441a      	add	r2, r3
 801775e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8017760:	922c      	str	r2, [sp, #176]	; 0xb0
 8017762:	3b01      	subs	r3, #1
 8017764:	f10e 0e02 	add.w	lr, lr, #2
 8017768:	9315      	str	r3, [sp, #84]	; 0x54
 801776a:	e489      	b.n	8017080 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 801776c:	fb08 f101 	mul.w	r1, r8, r1
 8017770:	fb09 1303 	mla	r3, r9, r3, r1
 8017774:	e6da      	b.n	801752c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x580>
 8017776:	46b9      	mov	r9, r7
 8017778:	e702      	b.n	8017580 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d4>
 801777a:	f1c2 0110 	rsb	r1, r2, #16
 801777e:	437a      	muls	r2, r7
 8017780:	fb09 2901 	mla	r9, r9, r1, r2
 8017784:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017788:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801778c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8017790:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017794:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017798:	4302      	orrs	r2, r0
 801779a:	e791      	b.n	80176c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 801779c:	f8ae 2000 	strh.w	r2, [lr]
 80177a0:	e7d6      	b.n	8017750 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 80177a2:	b019      	add	sp, #100	; 0x64
 80177a4:	ecbd 8b08 	vpop	{d8-d11}
 80177a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080177ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80177ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80177b0:	b087      	sub	sp, #28
 80177b2:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 80177b6:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 80177ba:	9105      	str	r1, [sp, #20]
 80177bc:	fb00 e604 	mla	r6, r0, r4, lr
 80177c0:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 80177c4:	9102      	str	r1, [sp, #8]
 80177c6:	eb03 0146 	add.w	r1, r3, r6, lsl #1
 80177ca:	9103      	str	r1, [sp, #12]
 80177cc:	9905      	ldr	r1, [sp, #20]
 80177ce:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 80177d2:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80177d6:	8809      	ldrh	r1, [r1, #0]
 80177d8:	2800      	cmp	r0, #0
 80177da:	eb02 0a06 	add.w	sl, r2, r6
 80177de:	f2c0 80ca 	blt.w	8017976 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 80177e2:	4287      	cmp	r7, r0
 80177e4:	f340 80c7 	ble.w	8017976 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 80177e8:	f1be 0f00 	cmp.w	lr, #0
 80177ec:	f2c0 80bf 	blt.w	801796e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 80177f0:	4574      	cmp	r4, lr
 80177f2:	f340 80bc 	ble.w	801796e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 80177f6:	f812 c006 	ldrb.w	ip, [r2, r6]
 80177fa:	f833 9016 	ldrh.w	r9, [r3, r6, lsl #1]
 80177fe:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017802:	d01c      	beq.n	801783e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x92>
 8017804:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8017808:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801780c:	4372      	muls	r2, r6
 801780e:	f64f 081f 	movw	r8, #63519	; 0xf81f
 8017812:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8017816:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801781a:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801781e:	fb0c f609 	mul.w	r6, ip, r9
 8017822:	eb03 0902 	add.w	r9, r3, r2
 8017826:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 801782a:	f106 0820 	add.w	r8, r6, #32
 801782e:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 8017832:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017836:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801783a:	ea49 0908 	orr.w	r9, r9, r8
 801783e:	fa1f f989 	uxth.w	r9, r9
 8017842:	f11e 0301 	adds.w	r3, lr, #1
 8017846:	f100 809b 	bmi.w	8017980 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 801784a:	429c      	cmp	r4, r3
 801784c:	f340 8098 	ble.w	8017980 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8017850:	2d00      	cmp	r5, #0
 8017852:	f000 8095 	beq.w	8017980 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8017856:	f89a 6001 	ldrb.w	r6, [sl, #1]
 801785a:	9b03      	ldr	r3, [sp, #12]
 801785c:	2eff      	cmp	r6, #255	; 0xff
 801785e:	885b      	ldrh	r3, [r3, #2]
 8017860:	d01b      	beq.n	801789a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xee>
 8017862:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8017866:	ea4f 08e6 	mov.w	r8, r6, asr #3
 801786a:	fb08 f202 	mul.w	r2, r8, r2
 801786e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017872:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8017876:	fb06 f803 	mul.w	r8, r6, r3
 801787a:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801787e:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8017882:	441a      	add	r2, r3
 8017884:	f108 0320 	add.w	r3, r8, #32
 8017888:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 801788c:	0a1b      	lsrs	r3, r3, #8
 801788e:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8017892:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017896:	ea4b 0303 	orr.w	r3, fp, r3
 801789a:	b29b      	uxth	r3, r3
 801789c:	9301      	str	r3, [sp, #4]
 801789e:	3001      	adds	r0, #1
 80178a0:	d474      	bmi.n	801798c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 80178a2:	4287      	cmp	r7, r0
 80178a4:	dd72      	ble.n	801798c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 80178a6:	9a02      	ldr	r2, [sp, #8]
 80178a8:	2a00      	cmp	r2, #0
 80178aa:	f000 8111 	beq.w	8017ad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>
 80178ae:	f1be 0f00 	cmp.w	lr, #0
 80178b2:	db68      	blt.n	8017986 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 80178b4:	4574      	cmp	r4, lr
 80178b6:	dd66      	ble.n	8017986 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 80178b8:	f81a 7004 	ldrb.w	r7, [sl, r4]
 80178bc:	9a03      	ldr	r2, [sp, #12]
 80178be:	2fff      	cmp	r7, #255	; 0xff
 80178c0:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 80178c4:	d01c      	beq.n	8017900 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x154>
 80178c6:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 80178ca:	ea4f 08e7 	mov.w	r8, r7, asr #3
 80178ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80178d2:	fb07 fb00 	mul.w	fp, r7, r0
 80178d6:	fb08 f802 	mul.w	r8, r8, r2
 80178da:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80178de:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 80178e2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80178e6:	4490      	add	r8, r2
 80178e8:	f10b 0220 	add.w	r2, fp, #32
 80178ec:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 80178f0:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80178f4:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 80178f8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80178fc:	ea40 000b 	orr.w	r0, r0, fp
 8017900:	b280      	uxth	r0, r0
 8017902:	f11e 0e01 	adds.w	lr, lr, #1
 8017906:	d446      	bmi.n	8017996 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 8017908:	4574      	cmp	r4, lr
 801790a:	dd44      	ble.n	8017996 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 801790c:	2d00      	cmp	r5, #0
 801790e:	d045      	beq.n	801799c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f0>
 8017910:	1c62      	adds	r2, r4, #1
 8017912:	9b03      	ldr	r3, [sp, #12]
 8017914:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8017918:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801791c:	2cff      	cmp	r4, #255	; 0xff
 801791e:	d01c      	beq.n	801795a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ae>
 8017920:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 8017924:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8017928:	fb08 fe0e 	mul.w	lr, r8, lr
 801792c:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 8017930:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017934:	fb04 f802 	mul.w	r8, r4, r2
 8017938:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 801793c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017940:	4472      	add	r2, lr
 8017942:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 8017946:	f108 0a20 	add.w	sl, r8, #32
 801794a:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 801794e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017952:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017956:	ea42 020a 	orr.w	r2, r2, sl
 801795a:	b292      	uxth	r2, r2
 801795c:	2d0f      	cmp	r5, #15
 801795e:	d91f      	bls.n	80179a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f4>
 8017960:	4b5f      	ldr	r3, [pc, #380]	; (8017ae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x334>)
 8017962:	4a60      	ldr	r2, [pc, #384]	; (8017ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x338>)
 8017964:	4860      	ldr	r0, [pc, #384]	; (8017ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x33c>)
 8017966:	f240 3173 	movw	r1, #883	; 0x373
 801796a:	f003 fc1b 	bl	801b1a4 <__assert_func>
 801796e:	4689      	mov	r9, r1
 8017970:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8017974:	e765      	b.n	8017842 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x96>
 8017976:	26ff      	movs	r6, #255	; 0xff
 8017978:	9101      	str	r1, [sp, #4]
 801797a:	4689      	mov	r9, r1
 801797c:	46b4      	mov	ip, r6
 801797e:	e78e      	b.n	801789e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8017980:	9101      	str	r1, [sp, #4]
 8017982:	26ff      	movs	r6, #255	; 0xff
 8017984:	e78b      	b.n	801789e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8017986:	4608      	mov	r0, r1
 8017988:	27ff      	movs	r7, #255	; 0xff
 801798a:	e7ba      	b.n	8017902 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x156>
 801798c:	24ff      	movs	r4, #255	; 0xff
 801798e:	460a      	mov	r2, r1
 8017990:	4608      	mov	r0, r1
 8017992:	4627      	mov	r7, r4
 8017994:	e7e2      	b.n	801795c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8017996:	460a      	mov	r2, r1
 8017998:	24ff      	movs	r4, #255	; 0xff
 801799a:	e7df      	b.n	801795c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801799c:	460a      	mov	r2, r1
 801799e:	24ff      	movs	r4, #255	; 0xff
 80179a0:	9b02      	ldr	r3, [sp, #8]
 80179a2:	2b0f      	cmp	r3, #15
 80179a4:	d8dc      	bhi.n	8017960 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 80179a6:	f8bd e008 	ldrh.w	lr, [sp, #8]
 80179aa:	fa1f f885 	uxth.w	r8, r5
 80179ae:	fb08 fa0e 	mul.w	sl, r8, lr
 80179b2:	ea4f 1308 	mov.w	r3, r8, lsl #4
 80179b6:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 80179ba:	9303      	str	r3, [sp, #12]
 80179bc:	fa1f f38e 	uxth.w	r3, lr
 80179c0:	9304      	str	r3, [sp, #16]
 80179c2:	ea4f 4809 	mov.w	r8, r9, lsl #16
 80179c6:	9b02      	ldr	r3, [sp, #8]
 80179c8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80179cc:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 80179d0:	fb15 fe03 	smulbb	lr, r5, r3
 80179d4:	ea48 0809 	orr.w	r8, r8, r9
 80179d8:	f1c3 0910 	rsb	r9, r3, #16
 80179dc:	9b01      	ldr	r3, [sp, #4]
 80179de:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80179e2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80179e6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80179ea:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80179ee:	eba9 0905 	sub.w	r9, r9, r5
 80179f2:	ea4b 0303 	orr.w	r3, fp, r3
 80179f6:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 80179fa:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80179fe:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 8017a02:	436b      	muls	r3, r5
 8017a04:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017a08:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017a0c:	ea4b 0202 	orr.w	r2, fp, r2
 8017a10:	fb09 3308 	mla	r3, r9, r8, r3
 8017a14:	fb0e 3302 	mla	r3, lr, r2, r3
 8017a18:	0402      	lsls	r2, r0, #16
 8017a1a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017a1e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017a22:	4310      	orrs	r0, r2
 8017a24:	9a02      	ldr	r2, [sp, #8]
 8017a26:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 8017a2a:	9a03      	ldr	r2, [sp, #12]
 8017a2c:	fb0e 3e00 	mla	lr, lr, r0, r3
 8017a30:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8017a34:	9a04      	ldr	r2, [sp, #16]
 8017a36:	1a80      	subs	r0, r0, r2
 8017a38:	9a03      	ldr	r2, [sp, #12]
 8017a3a:	eba2 020a 	sub.w	r2, r2, sl
 8017a3e:	b292      	uxth	r2, r2
 8017a40:	b280      	uxth	r0, r0
 8017a42:	4356      	muls	r6, r2
 8017a44:	9a04      	ldr	r2, [sp, #16]
 8017a46:	fb0c 6600 	mla	r6, ip, r0, r6
 8017a4a:	fb02 6707 	mla	r7, r2, r7, r6
 8017a4e:	fb0a 7404 	mla	r4, sl, r4, r7
 8017a52:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8017a56:	1208      	asrs	r0, r1, #8
 8017a58:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8017a5c:	ea6f 2424 	mvn.w	r4, r4, asr #8
 8017a60:	b2e4      	uxtb	r4, r4
 8017a62:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017a66:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017a6a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017a6e:	4360      	muls	r0, r4
 8017a70:	ea43 0e0e 	orr.w	lr, r3, lr
 8017a74:	fa1f f38e 	uxth.w	r3, lr
 8017a78:	1c42      	adds	r2, r0, #1
 8017a7a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8017a7e:	1218      	asrs	r0, r3, #8
 8017a80:	10cd      	asrs	r5, r1, #3
 8017a82:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017a86:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8017a8a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017a8e:	4a17      	ldr	r2, [pc, #92]	; (8017aec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x340>)
 8017a90:	4365      	muls	r5, r4
 8017a92:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8017a96:	1c6a      	adds	r2, r5, #1
 8017a98:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8017a9c:	00c9      	lsls	r1, r1, #3
 8017a9e:	10da      	asrs	r2, r3, #3
 8017aa0:	b2c9      	uxtb	r1, r1
 8017aa2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017aa6:	434c      	muls	r4, r1
 8017aa8:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8017aac:	1c61      	adds	r1, r4, #1
 8017aae:	00d2      	lsls	r2, r2, #3
 8017ab0:	00db      	lsls	r3, r3, #3
 8017ab2:	eb01 2414 	add.w	r4, r1, r4, lsr #8
 8017ab6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017aba:	b2db      	uxtb	r3, r3
 8017abc:	4302      	orrs	r2, r0
 8017abe:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8017ac2:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 8017ac6:	9a05      	ldr	r2, [sp, #20]
 8017ac8:	8013      	strh	r3, [r2, #0]
 8017aca:	b007      	add	sp, #28
 8017acc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ad0:	2d0f      	cmp	r5, #15
 8017ad2:	f63f af45 	bhi.w	8017960 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8017ad6:	24ff      	movs	r4, #255	; 0xff
 8017ad8:	460a      	mov	r2, r1
 8017ada:	4608      	mov	r0, r1
 8017adc:	4627      	mov	r7, r4
 8017ade:	e762      	b.n	80179a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1fa>
 8017ae0:	0801f4bf 	.word	0x0801f4bf
 8017ae4:	0801fa1d 	.word	0x0801fa1d
 8017ae8:	0801f547 	.word	0x0801f547
 8017aec:	fffff800 	.word	0xfffff800

08017af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8017af0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017af4:	ed2d 8b08 	vpush	{d8-d11}
 8017af8:	b095      	sub	sp, #84	; 0x54
 8017afa:	eeb0 aa40 	vmov.f32	s20, s0
 8017afe:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 8017b00:	9306      	str	r3, [sp, #24]
 8017b02:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8017b06:	9110      	str	r1, [sp, #64]	; 0x40
 8017b08:	9308      	str	r3, [sp, #32]
 8017b0a:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8017b0e:	9013      	str	r0, [sp, #76]	; 0x4c
 8017b10:	6870      	ldr	r0, [r6, #4]
 8017b12:	9212      	str	r2, [sp, #72]	; 0x48
 8017b14:	fb00 1303 	mla	r3, r0, r3, r1
 8017b18:	6831      	ldr	r1, [r6, #0]
 8017b1a:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8017b1c:	f9bd 50b8 	ldrsh.w	r5, [sp, #184]	; 0xb8
 8017b20:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8017b24:	9307      	str	r3, [sp, #28]
 8017b26:	6813      	ldr	r3, [r2, #0]
 8017b28:	9309      	str	r3, [sp, #36]	; 0x24
 8017b2a:	6853      	ldr	r3, [r2, #4]
 8017b2c:	930a      	str	r3, [sp, #40]	; 0x28
 8017b2e:	006b      	lsls	r3, r5, #1
 8017b30:	eef0 9a60 	vmov.f32	s19, s1
 8017b34:	eeb0 9a41 	vmov.f32	s18, s2
 8017b38:	eeb0 8a62 	vmov.f32	s16, s5
 8017b3c:	eef0 8a43 	vmov.f32	s17, s6
 8017b40:	eef0 ba44 	vmov.f32	s23, s8
 8017b44:	eeb0 ba64 	vmov.f32	s22, s9
 8017b48:	eef0 aa45 	vmov.f32	s21, s10
 8017b4c:	930f      	str	r3, [sp, #60]	; 0x3c
 8017b4e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017b50:	2b00      	cmp	r3, #0
 8017b52:	dc03      	bgt.n	8017b5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8017b54:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017b56:	2b00      	cmp	r3, #0
 8017b58:	f340 83a3 	ble.w	80182a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 8017b5c:	9b06      	ldr	r3, [sp, #24]
 8017b5e:	2b00      	cmp	r3, #0
 8017b60:	f340 81bc 	ble.w	8017edc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ec>
 8017b64:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8017b66:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017b68:	1412      	asrs	r2, r2, #16
 8017b6a:	ea4f 4323 	mov.w	r3, r3, asr #16
 8017b6e:	d42f      	bmi.n	8017bd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 8017b70:	1c51      	adds	r1, r2, #1
 8017b72:	428d      	cmp	r5, r1
 8017b74:	dd2f      	ble.n	8017bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017b76:	2b00      	cmp	r3, #0
 8017b78:	db2d      	blt.n	8017bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017b7a:	9808      	ldr	r0, [sp, #32]
 8017b7c:	1c59      	adds	r1, r3, #1
 8017b7e:	4288      	cmp	r0, r1
 8017b80:	dd29      	ble.n	8017bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017b82:	9b06      	ldr	r3, [sp, #24]
 8017b84:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017b86:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8017b88:	3b01      	subs	r3, #1
 8017b8a:	fb02 1203 	mla	r2, r2, r3, r1
 8017b8e:	1412      	asrs	r2, r2, #16
 8017b90:	d42b      	bmi.n	8017bea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017b92:	3201      	adds	r2, #1
 8017b94:	4295      	cmp	r5, r2
 8017b96:	dd28      	ble.n	8017bea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017b98:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017b9a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8017b9c:	fb02 1303 	mla	r3, r2, r3, r1
 8017ba0:	141b      	asrs	r3, r3, #16
 8017ba2:	d422      	bmi.n	8017bea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017ba4:	9a08      	ldr	r2, [sp, #32]
 8017ba6:	3301      	adds	r3, #1
 8017ba8:	429a      	cmp	r2, r3
 8017baa:	dd1e      	ble.n	8017bea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017bac:	9b06      	ldr	r3, [sp, #24]
 8017bae:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8017bb2:	9311      	str	r3, [sp, #68]	; 0x44
 8017bb4:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017bb8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017bba:	2b00      	cmp	r3, #0
 8017bbc:	f300 8208 	bgt.w	8017fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e0>
 8017bc0:	9b06      	ldr	r3, [sp, #24]
 8017bc2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017bc6:	9b07      	ldr	r3, [sp, #28]
 8017bc8:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017bcc:	9307      	str	r3, [sp, #28]
 8017bce:	e187      	b.n	8017ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f0>
 8017bd0:	1c57      	adds	r7, r2, #1
 8017bd2:	f040 8174 	bne.w	8017ebe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8017bd6:	42aa      	cmp	r2, r5
 8017bd8:	f280 8171 	bge.w	8017ebe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8017bdc:	1c5e      	adds	r6, r3, #1
 8017bde:	f2c0 816e 	blt.w	8017ebe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8017be2:	9a08      	ldr	r2, [sp, #32]
 8017be4:	4293      	cmp	r3, r2
 8017be6:	f280 816a 	bge.w	8017ebe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8017bea:	9b06      	ldr	r3, [sp, #24]
 8017bec:	9f07      	ldr	r7, [sp, #28]
 8017bee:	9311      	str	r3, [sp, #68]	; 0x44
 8017bf0:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017bf4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017bf6:	2b00      	cmp	r3, #0
 8017bf8:	dde2      	ble.n	8017bc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 8017bfa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017bfc:	1419      	asrs	r1, r3, #16
 8017bfe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017c00:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017c04:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017c06:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8017c0a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017c0c:	141b      	asrs	r3, r3, #16
 8017c0e:	f100 81c4 	bmi.w	8017f9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4aa>
 8017c12:	1c58      	adds	r0, r3, #1
 8017c14:	4285      	cmp	r5, r0
 8017c16:	f340 81c2 	ble.w	8017f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8017c1a:	2900      	cmp	r1, #0
 8017c1c:	f2c0 81bf 	blt.w	8017f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8017c20:	9c08      	ldr	r4, [sp, #32]
 8017c22:	1c48      	adds	r0, r1, #1
 8017c24:	4284      	cmp	r4, r0
 8017c26:	f340 81ba 	ble.w	8017f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 8017c2a:	fb01 3105 	mla	r1, r1, r5, r3
 8017c2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017c30:	fa1f fe82 	uxth.w	lr, r2
 8017c34:	eb03 0a01 	add.w	sl, r3, r1
 8017c38:	ea4f 100e 	mov.w	r0, lr, lsl #4
 8017c3c:	f813 9001 	ldrb.w	r9, [r3, r1]
 8017c40:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017c44:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8017c48:	b29b      	uxth	r3, r3
 8017c4a:	f1bc 0f00 	cmp.w	ip, #0
 8017c4e:	f000 8186 	beq.w	8017f5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46e>
 8017c52:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8017c56:	940b      	str	r4, [sp, #44]	; 0x2c
 8017c58:	eb0a 0b05 	add.w	fp, sl, r5
 8017c5c:	fa1f fa8c 	uxth.w	sl, ip
 8017c60:	fb0a fe0e 	mul.w	lr, sl, lr
 8017c64:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8017c68:	fa1f fa8a 	uxth.w	sl, sl
 8017c6c:	eba0 000e 	sub.w	r0, r0, lr
 8017c70:	eba3 030a 	sub.w	r3, r3, sl
 8017c74:	b280      	uxth	r0, r0
 8017c76:	fb08 f000 	mul.w	r0, r8, r0
 8017c7a:	b29b      	uxth	r3, r3
 8017c7c:	fb09 0303 	mla	r3, r9, r3, r0
 8017c80:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017c82:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017c86:	940c      	str	r4, [sp, #48]	; 0x30
 8017c88:	fb0a 3300 	mla	r3, sl, r0, r3
 8017c8c:	fb0e 3304 	mla	r3, lr, r4, r3
 8017c90:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017c94:	2b00      	cmp	r3, #0
 8017c96:	f000 8105 	beq.w	8017ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8017c9a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8017c9c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8017c9e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017ca2:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017ca6:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 8017caa:	f000 815d 	beq.w	8017f68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>
 8017cae:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8017cb2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017cb6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017cba:	fb09 f101 	mul.w	r1, r9, r1
 8017cbe:	fb0a fe0e 	mul.w	lr, sl, lr
 8017cc2:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8017cc6:	f101 0b20 	add.w	fp, r1, #32
 8017cca:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017cce:	44ce      	add	lr, r9
 8017cd0:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8017cd4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017cd8:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8017cdc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017ce0:	ea4e 0909 	orr.w	r9, lr, r9
 8017ce4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017ce8:	8841      	ldrh	r1, [r0, #2]
 8017cea:	d019      	beq.n	8017d20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 8017cec:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017cf0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8017cf4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017cf8:	fb0a fe0e 	mul.w	lr, sl, lr
 8017cfc:	fb08 f801 	mul.w	r8, r8, r1
 8017d00:	f108 0b20 	add.w	fp, r8, #32
 8017d04:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 8017d08:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8017d0c:	448e      	add	lr, r1
 8017d0e:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 8017d12:	0a09      	lsrs	r1, r1, #8
 8017d14:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 8017d18:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017d1c:	ea4a 0101 	orr.w	r1, sl, r1
 8017d20:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8017d24:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017d28:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017d2c:	ea4e 0909 	orr.w	r9, lr, r9
 8017d30:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 8017d34:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017d38:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017d3c:	ea4e 0e01 	orr.w	lr, lr, r1
 8017d40:	f1bc 0f00 	cmp.w	ip, #0
 8017d44:	f000 8112 	beq.w	8017f6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8017d48:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8017d4a:	eb00 0801 	add.w	r8, r0, r1
 8017d4e:	5a41      	ldrh	r1, [r0, r1]
 8017d50:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017d52:	28ff      	cmp	r0, #255	; 0xff
 8017d54:	d019      	beq.n	8017d8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29a>
 8017d56:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017d58:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8017d5c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017d60:	fb04 fb01 	mul.w	fp, r4, r1
 8017d64:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017d68:	fb0a fa00 	mul.w	sl, sl, r0
 8017d6c:	f10b 0020 	add.w	r0, fp, #32
 8017d70:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8017d74:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8017d78:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017d7c:	4451      	add	r1, sl
 8017d7e:	0a00      	lsrs	r0, r0, #8
 8017d80:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8017d84:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017d88:	4301      	orrs	r1, r0
 8017d8a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8017d8c:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8017d90:	2cff      	cmp	r4, #255	; 0xff
 8017d92:	d01a      	beq.n	8017dca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2da>
 8017d94:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8017d98:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017d9c:	fb04 fb00 	mul.w	fp, r4, r0
 8017da0:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017da4:	fb0a fa08 	mul.w	sl, sl, r8
 8017da8:	f10b 0820 	add.w	r8, fp, #32
 8017dac:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8017db0:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8017db4:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017db8:	4450      	add	r0, sl
 8017dba:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017dbe:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8017dc2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017dc6:	ea40 0008 	orr.w	r0, r0, r8
 8017dca:	fb1c f802 	smulbb	r8, ip, r2
 8017dce:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8017dd2:	f1cc 0a10 	rsb	sl, ip, #16
 8017dd6:	ebaa 0a02 	sub.w	sl, sl, r2
 8017dda:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8017dde:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 8017de2:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 8017de6:	fb0e f202 	mul.w	r2, lr, r2
 8017dea:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017dee:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 8017df2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017df6:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8017dfa:	fb09 220a 	mla	r2, r9, sl, r2
 8017dfe:	ea4b 0101 	orr.w	r1, fp, r1
 8017e02:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017e06:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8017e0a:	fb0c 2201 	mla	r2, ip, r1, r2
 8017e0e:	ea4e 0000 	orr.w	r0, lr, r0
 8017e12:	fb08 2800 	mla	r8, r8, r0, r2
 8017e16:	ea4f 5258 	mov.w	r2, r8, lsr #21
 8017e1a:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017e1e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017e22:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8017e26:	ea42 0808 	orr.w	r8, r2, r8
 8017e2a:	fa1f f288 	uxth.w	r2, r8
 8017e2e:	2bff      	cmp	r3, #255	; 0xff
 8017e30:	f000 80b1 	beq.w	8017f96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 8017e34:	f8b7 8000 	ldrh.w	r8, [r7]
 8017e38:	43db      	mvns	r3, r3
 8017e3a:	ea4f 2028 	mov.w	r0, r8, asr #8
 8017e3e:	fa5f fe83 	uxtb.w	lr, r3
 8017e42:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017e46:	fb00 f00e 	mul.w	r0, r0, lr
 8017e4a:	1c41      	adds	r1, r0, #1
 8017e4c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8017e50:	1210      	asrs	r0, r2, #8
 8017e52:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8017e56:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017e5a:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8017e5e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8017e62:	495a      	ldr	r1, [pc, #360]	; (8017fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4dc>)
 8017e64:	fb0c fc0e 	mul.w	ip, ip, lr
 8017e68:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8017e6c:	f10c 0101 	add.w	r1, ip, #1
 8017e70:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8017e74:	10d1      	asrs	r1, r2, #3
 8017e76:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017e7a:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8017e7e:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 8017e82:	b2db      	uxtb	r3, r3
 8017e84:	00c9      	lsls	r1, r1, #3
 8017e86:	fb03 f30e 	mul.w	r3, r3, lr
 8017e8a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017e8e:	4301      	orrs	r1, r0
 8017e90:	1c58      	adds	r0, r3, #1
 8017e92:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8017e96:	00d3      	lsls	r3, r2, #3
 8017e98:	b2db      	uxtb	r3, r3
 8017e9a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017e9e:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8017ea2:	803b      	strh	r3, [r7, #0]
 8017ea4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017ea6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017ea8:	4413      	add	r3, r2
 8017eaa:	9327      	str	r3, [sp, #156]	; 0x9c
 8017eac:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8017eae:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017eb0:	441a      	add	r2, r3
 8017eb2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017eb4:	9228      	str	r2, [sp, #160]	; 0xa0
 8017eb6:	3b01      	subs	r3, #1
 8017eb8:	3702      	adds	r7, #2
 8017eba:	9311      	str	r3, [sp, #68]	; 0x44
 8017ebc:	e69a      	b.n	8017bf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8017ebe:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017ec0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017ec2:	4413      	add	r3, r2
 8017ec4:	9327      	str	r3, [sp, #156]	; 0x9c
 8017ec6:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8017ec8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017eca:	441a      	add	r2, r3
 8017ecc:	9b06      	ldr	r3, [sp, #24]
 8017ece:	9228      	str	r2, [sp, #160]	; 0xa0
 8017ed0:	3b01      	subs	r3, #1
 8017ed2:	9306      	str	r3, [sp, #24]
 8017ed4:	9b07      	ldr	r3, [sp, #28]
 8017ed6:	3302      	adds	r3, #2
 8017ed8:	9307      	str	r3, [sp, #28]
 8017eda:	e63f      	b.n	8017b5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8017edc:	f47f ae51 	bne.w	8017b82 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8017ee0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017ee2:	2b00      	cmp	r3, #0
 8017ee4:	f340 81dd 	ble.w	80182a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 8017ee8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017eec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017ef0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8017ef4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017ef6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017efa:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017efe:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8017f02:	eef0 6a48 	vmov.f32	s13, s16
 8017f06:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017f0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017f0e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8017f12:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 8017f16:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017f1a:	eef0 6a68 	vmov.f32	s13, s17
 8017f1e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8017f22:	ee18 2a10 	vmov	r2, s16
 8017f26:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017f2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8017f2e:	ee18 2a90 	vmov	r2, s17
 8017f32:	9329      	str	r3, [sp, #164]	; 0xa4
 8017f34:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017f36:	fb92 f3f3 	sdiv	r3, r2, r3
 8017f3a:	932a      	str	r3, [sp, #168]	; 0xa8
 8017f3c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017f3e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017f40:	3b01      	subs	r3, #1
 8017f42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017f46:	9310      	str	r3, [sp, #64]	; 0x40
 8017f48:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8017f4a:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 8017f4e:	bf08      	it	eq
 8017f50:	4613      	moveq	r3, r2
 8017f52:	9306      	str	r3, [sp, #24]
 8017f54:	eef0 8a67 	vmov.f32	s17, s15
 8017f58:	eeb0 8a47 	vmov.f32	s16, s14
 8017f5c:	e5f7      	b.n	8017b4e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8017f5e:	fb08 f000 	mul.w	r0, r8, r0
 8017f62:	fb09 0303 	mla	r3, r9, r3, r0
 8017f66:	e693      	b.n	8017c90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1a0>
 8017f68:	4689      	mov	r9, r1
 8017f6a:	e6bb      	b.n	8017ce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 8017f6c:	f1c2 0010 	rsb	r0, r2, #16
 8017f70:	fb0e f202 	mul.w	r2, lr, r2
 8017f74:	fb09 2900 	mla	r9, r9, r0, r2
 8017f78:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017f7c:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8017f80:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017f84:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017f88:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017f8c:	ea42 0909 	orr.w	r9, r2, r9
 8017f90:	fa1f f289 	uxth.w	r2, r9
 8017f94:	e74b      	b.n	8017e2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 8017f96:	803a      	strh	r2, [r7, #0]
 8017f98:	e784      	b.n	8017ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8017f9a:	1c5c      	adds	r4, r3, #1
 8017f9c:	d182      	bne.n	8017ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8017f9e:	429d      	cmp	r5, r3
 8017fa0:	dd80      	ble.n	8017ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8017fa2:	1c48      	adds	r0, r1, #1
 8017fa4:	f6ff af7e 	blt.w	8017ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8017fa8:	9808      	ldr	r0, [sp, #32]
 8017faa:	4288      	cmp	r0, r1
 8017fac:	f77f af7a 	ble.w	8017ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8017fb0:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8017fb4:	e9cd 2c04 	strd	r2, ip, [sp, #16]
 8017fb8:	e9cd 5000 	strd	r5, r0, [sp]
 8017fbc:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8017fc0:	4639      	mov	r1, r7
 8017fc2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017fc4:	f7ff fbf2 	bl	80177ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8017fc8:	e76c      	b.n	8017ea4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8017fca:	bf00      	nop
 8017fcc:	fffff800 	.word	0xfffff800
 8017fd0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017fd2:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017fd6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017fd8:	141f      	asrs	r7, r3, #16
 8017fda:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8017fde:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017fe0:	141b      	asrs	r3, r3, #16
 8017fe2:	fb05 3707 	mla	r7, r5, r7, r3
 8017fe6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017fe8:	fa1f fc82 	uxth.w	ip, r2
 8017fec:	eb03 0a07 	add.w	sl, r3, r7
 8017ff0:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8017ff4:	f813 9007 	ldrb.w	r9, [r3, r7]
 8017ff8:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8017ffc:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 8018000:	b29b      	uxth	r3, r3
 8018002:	2800      	cmp	r0, #0
 8018004:	f000 8132 	beq.w	801826c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x77c>
 8018008:	f81a 4005 	ldrb.w	r4, [sl, r5]
 801800c:	940d      	str	r4, [sp, #52]	; 0x34
 801800e:	eb0a 0b05 	add.w	fp, sl, r5
 8018012:	fa1f fa80 	uxth.w	sl, r0
 8018016:	fb0a fc0c 	mul.w	ip, sl, ip
 801801a:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801801e:	fa1f fa8a 	uxth.w	sl, sl
 8018022:	eba1 010c 	sub.w	r1, r1, ip
 8018026:	eba3 030a 	sub.w	r3, r3, sl
 801802a:	b289      	uxth	r1, r1
 801802c:	fb08 f101 	mul.w	r1, r8, r1
 8018030:	b29b      	uxth	r3, r3
 8018032:	fb09 1303 	mla	r3, r9, r3, r1
 8018036:	990d      	ldr	r1, [sp, #52]	; 0x34
 8018038:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801803c:	940e      	str	r4, [sp, #56]	; 0x38
 801803e:	fb0a 3301 	mla	r3, sl, r1, r3
 8018042:	fb0c 3304 	mla	r3, ip, r4, r3
 8018046:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801804a:	2b00      	cmp	r3, #0
 801804c:	f000 8100 	beq.w	8018250 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 8018050:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018052:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018054:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018058:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 801805c:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8018060:	f000 8109 	beq.w	8018276 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x786>
 8018064:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8018068:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801806c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8018070:	fb09 f707 	mul.w	r7, r9, r7
 8018074:	fb0a fc0c 	mul.w	ip, sl, ip
 8018078:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801807c:	f107 0b20 	add.w	fp, r7, #32
 8018080:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8018084:	44cc      	add	ip, r9
 8018086:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801808a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801808e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8018092:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018096:	ea4c 0909 	orr.w	r9, ip, r9
 801809a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801809e:	884f      	ldrh	r7, [r1, #2]
 80180a0:	d019      	beq.n	80180d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e6>
 80180a2:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80180a6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80180aa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80180ae:	fb08 f807 	mul.w	r8, r8, r7
 80180b2:	fb0a fc0c 	mul.w	ip, sl, ip
 80180b6:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80180ba:	f108 0b20 	add.w	fp, r8, #32
 80180be:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80180c2:	44bc      	add	ip, r7
 80180c4:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80180c8:	0a3f      	lsrs	r7, r7, #8
 80180ca:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80180ce:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80180d2:	ea4c 0707 	orr.w	r7, ip, r7
 80180d6:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80180da:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80180de:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80180e2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80180e6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80180ea:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80180ee:	ea4c 0909 	orr.w	r9, ip, r9
 80180f2:	ea4a 0707 	orr.w	r7, sl, r7
 80180f6:	2800      	cmp	r0, #0
 80180f8:	f000 80bf 	beq.w	801827a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78a>
 80180fc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80180fe:	eb01 0c04 	add.w	ip, r1, r4
 8018102:	f831 8004 	ldrh.w	r8, [r1, r4]
 8018106:	990d      	ldr	r1, [sp, #52]	; 0x34
 8018108:	29ff      	cmp	r1, #255	; 0xff
 801810a:	d01a      	beq.n	8018142 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x652>
 801810c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801810e:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 8018112:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018116:	fb04 fb08 	mul.w	fp, r4, r8
 801811a:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801811e:	fb0a fa01 	mul.w	sl, sl, r1
 8018122:	f10b 0120 	add.w	r1, fp, #32
 8018126:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 801812a:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 801812e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8018132:	44d0      	add	r8, sl
 8018134:	0a09      	lsrs	r1, r1, #8
 8018136:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 801813a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801813e:	ea48 0801 	orr.w	r8, r8, r1
 8018142:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018144:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 8018148:	2cff      	cmp	r4, #255	; 0xff
 801814a:	d01a      	beq.n	8018182 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x692>
 801814c:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 8018150:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018154:	fb04 fb01 	mul.w	fp, r4, r1
 8018158:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 801815c:	fb0a fa0c 	mul.w	sl, sl, ip
 8018160:	f10b 0c20 	add.w	ip, fp, #32
 8018164:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8018168:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 801816c:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8018170:	4451      	add	r1, sl
 8018172:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018176:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801817a:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801817e:	ea41 010c 	orr.w	r1, r1, ip
 8018182:	fb10 fc02 	smulbb	ip, r0, r2
 8018186:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801818a:	f1c0 0a10 	rsb	sl, r0, #16
 801818e:	ebaa 0a02 	sub.w	sl, sl, r2
 8018192:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 8018196:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801819a:	437a      	muls	r2, r7
 801819c:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 80181a0:	040f      	lsls	r7, r1, #16
 80181a2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80181a6:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80181aa:	fb09 220a 	mla	r2, r9, sl, r2
 80181ae:	ea4b 0808 	orr.w	r8, fp, r8
 80181b2:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 80181b6:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80181ba:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80181be:	fb00 2208 	mla	r2, r0, r8, r2
 80181c2:	4339      	orrs	r1, r7
 80181c4:	fb0c 2201 	mla	r2, ip, r1, r2
 80181c8:	ea4f 5952 	mov.w	r9, r2, lsr #21
 80181cc:	0952      	lsrs	r2, r2, #5
 80181ce:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80181d2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80181d6:	ea49 0202 	orr.w	r2, r9, r2
 80181da:	2bff      	cmp	r3, #255	; 0xff
 80181dc:	b292      	uxth	r2, r2
 80181de:	d05d      	beq.n	801829c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ac>
 80181e0:	f8be 8000 	ldrh.w	r8, [lr]
 80181e4:	4c31      	ldr	r4, [pc, #196]	; (80182ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7bc>)
 80181e6:	43db      	mvns	r3, r3
 80181e8:	ea4f 2028 	mov.w	r0, r8, asr #8
 80181ec:	fa5f fc83 	uxtb.w	ip, r3
 80181f0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80181f4:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80181f8:	fb00 f00c 	mul.w	r0, r0, ip
 80181fc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018200:	fb07 f10c 	mul.w	r1, r7, ip
 8018204:	1c47      	adds	r7, r0, #1
 8018206:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 801820a:	1217      	asrs	r7, r2, #8
 801820c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018210:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8018214:	1c4f      	adds	r7, r1, #1
 8018216:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 801821a:	10d1      	asrs	r1, r2, #3
 801821c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018220:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8018224:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 8018228:	b2db      	uxtb	r3, r3
 801822a:	00c9      	lsls	r1, r1, #3
 801822c:	fb03 f30c 	mul.w	r3, r3, ip
 8018230:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018234:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8018238:	4308      	orrs	r0, r1
 801823a:	00d2      	lsls	r2, r2, #3
 801823c:	1c59      	adds	r1, r3, #1
 801823e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018242:	b2d2      	uxtb	r2, r2
 8018244:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8018248:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 801824c:	f8ae 0000 	strh.w	r0, [lr]
 8018250:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018252:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018254:	4413      	add	r3, r2
 8018256:	9327      	str	r3, [sp, #156]	; 0x9c
 8018258:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801825a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801825c:	441a      	add	r2, r3
 801825e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018260:	9228      	str	r2, [sp, #160]	; 0xa0
 8018262:	3b01      	subs	r3, #1
 8018264:	f10e 0e02 	add.w	lr, lr, #2
 8018268:	9311      	str	r3, [sp, #68]	; 0x44
 801826a:	e4a5      	b.n	8017bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 801826c:	fb08 f101 	mul.w	r1, r8, r1
 8018270:	fb09 1303 	mla	r3, r9, r3, r1
 8018274:	e6e7      	b.n	8018046 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x556>
 8018276:	46b9      	mov	r9, r7
 8018278:	e70f      	b.n	801809a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5aa>
 801827a:	f1c2 0110 	rsb	r1, r2, #16
 801827e:	437a      	muls	r2, r7
 8018280:	fb09 2901 	mla	r9, r9, r1, r2
 8018284:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018288:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801828c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8018290:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018294:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018298:	4302      	orrs	r2, r0
 801829a:	e79e      	b.n	80181da <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6ea>
 801829c:	f8ae 2000 	strh.w	r2, [lr]
 80182a0:	e7d6      	b.n	8018250 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 80182a2:	b015      	add	sp, #84	; 0x54
 80182a4:	ecbd 8b08 	vpop	{d8-d11}
 80182a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80182ac:	fffff800 	.word	0xfffff800

080182b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80182b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80182b4:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 80182b8:	fb0c 4e03 	mla	lr, ip, r3, r4
 80182bc:	f1bc 0f00 	cmp.w	ip, #0
 80182c0:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80182c4:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 80182c8:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 80182cc:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80182d0:	8808      	ldrh	r0, [r1, #0]
 80182d2:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 80182d6:	db2f      	blt.n	8018338 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 80182d8:	45e2      	cmp	sl, ip
 80182da:	dd2d      	ble.n	8018338 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 80182dc:	2c00      	cmp	r4, #0
 80182de:	db29      	blt.n	8018334 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 80182e0:	42a3      	cmp	r3, r4
 80182e2:	dd27      	ble.n	8018334 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 80182e4:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 80182e8:	1c62      	adds	r2, r4, #1
 80182ea:	d428      	bmi.n	801833e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80182ec:	4293      	cmp	r3, r2
 80182ee:	dd26      	ble.n	801833e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80182f0:	b32f      	cbz	r7, 801833e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 80182f2:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 80182f6:	f11c 0c01 	adds.w	ip, ip, #1
 80182fa:	d424      	bmi.n	8018346 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 80182fc:	45e2      	cmp	sl, ip
 80182fe:	dd22      	ble.n	8018346 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8018300:	2e00      	cmp	r6, #0
 8018302:	f000 809c 	beq.w	801843e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 8018306:	2c00      	cmp	r4, #0
 8018308:	db1b      	blt.n	8018342 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801830a:	42a3      	cmp	r3, r4
 801830c:	dd19      	ble.n	8018342 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801830e:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8018312:	3401      	adds	r4, #1
 8018314:	d41a      	bmi.n	801834c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8018316:	42a3      	cmp	r3, r4
 8018318:	dd18      	ble.n	801834c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 801831a:	b1cf      	cbz	r7, 8018350 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 801831c:	3301      	adds	r3, #1
 801831e:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8018322:	2f0f      	cmp	r7, #15
 8018324:	d915      	bls.n	8018352 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8018326:	4b49      	ldr	r3, [pc, #292]	; (801844c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8018328:	4a49      	ldr	r2, [pc, #292]	; (8018450 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 801832a:	484a      	ldr	r0, [pc, #296]	; (8018454 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 801832c:	f240 3155 	movw	r1, #853	; 0x355
 8018330:	f002 ff38 	bl	801b1a4 <__assert_func>
 8018334:	4681      	mov	r9, r0
 8018336:	e7d7      	b.n	80182e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8018338:	4686      	mov	lr, r0
 801833a:	4681      	mov	r9, r0
 801833c:	e7db      	b.n	80182f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 801833e:	4686      	mov	lr, r0
 8018340:	e7d9      	b.n	80182f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8018342:	4684      	mov	ip, r0
 8018344:	e7e5      	b.n	8018312 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8018346:	4603      	mov	r3, r0
 8018348:	4684      	mov	ip, r0
 801834a:	e7ea      	b.n	8018322 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 801834c:	4603      	mov	r3, r0
 801834e:	e7e8      	b.n	8018322 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8018350:	4603      	mov	r3, r0
 8018352:	2e0f      	cmp	r6, #15
 8018354:	d8e7      	bhi.n	8018326 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8018356:	ea4f 4409 	mov.w	r4, r9, lsl #16
 801835a:	fb17 f806 	smulbb	r8, r7, r6
 801835e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018362:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8018366:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801836a:	ea4f 08e8 	mov.w	r8, r8, asr #3
 801836e:	ea44 0909 	orr.w	r9, r4, r9
 8018372:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018376:	f1c6 0410 	rsb	r4, r6, #16
 801837a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801837e:	1be4      	subs	r4, r4, r7
 8018380:	041a      	lsls	r2, r3, #16
 8018382:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8018386:	ea4a 0e0e 	orr.w	lr, sl, lr
 801838a:	fb07 fe0e 	mul.w	lr, r7, lr
 801838e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8018392:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8018396:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801839a:	fb04 e409 	mla	r4, r4, r9, lr
 801839e:	4313      	orrs	r3, r2
 80183a0:	ea4f 420c 	mov.w	r2, ip, lsl #16
 80183a4:	fb08 4303 	mla	r3, r8, r3, r4
 80183a8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80183ac:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 80183b0:	4322      	orrs	r2, r4
 80183b2:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 80183b6:	fb06 3202 	mla	r2, r6, r2, r3
 80183ba:	0d53      	lsrs	r3, r2, #21
 80183bc:	0952      	lsrs	r2, r2, #5
 80183be:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80183c2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80183c6:	431a      	orrs	r2, r3
 80183c8:	b293      	uxth	r3, r2
 80183ca:	b2af      	uxth	r7, r5
 80183cc:	1202      	asrs	r2, r0, #8
 80183ce:	43ed      	mvns	r5, r5
 80183d0:	b2ed      	uxtb	r5, r5
 80183d2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80183d6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80183da:	fb12 f205 	smulbb	r2, r2, r5
 80183de:	10c6      	asrs	r6, r0, #3
 80183e0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80183e4:	fb0c 2c07 	mla	ip, ip, r7, r2
 80183e8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80183ec:	10da      	asrs	r2, r3, #3
 80183ee:	fb16 f605 	smulbb	r6, r6, r5
 80183f2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80183f6:	fb02 6207 	mla	r2, r2, r7, r6
 80183fa:	b296      	uxth	r6, r2
 80183fc:	00c2      	lsls	r2, r0, #3
 80183fe:	00dc      	lsls	r4, r3, #3
 8018400:	b2d2      	uxtb	r2, r2
 8018402:	b2e4      	uxtb	r4, r4
 8018404:	fb12 f205 	smulbb	r2, r2, r5
 8018408:	fb04 2207 	mla	r2, r4, r7, r2
 801840c:	fa1f fc8c 	uxth.w	ip, ip
 8018410:	b292      	uxth	r2, r2
 8018412:	f10c 0301 	add.w	r3, ip, #1
 8018416:	1c50      	adds	r0, r2, #1
 8018418:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801841c:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8018420:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018424:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8018428:	4313      	orrs	r3, r2
 801842a:	1c72      	adds	r2, r6, #1
 801842c:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8018430:	0952      	lsrs	r2, r2, #5
 8018432:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018436:	4313      	orrs	r3, r2
 8018438:	800b      	strh	r3, [r1, #0]
 801843a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801843e:	2f0f      	cmp	r7, #15
 8018440:	f63f af71 	bhi.w	8018326 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8018444:	4603      	mov	r3, r0
 8018446:	4684      	mov	ip, r0
 8018448:	e785      	b.n	8018356 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 801844a:	bf00      	nop
 801844c:	0801f4bf 	.word	0x0801f4bf
 8018450:	0801fac6 	.word	0x0801fac6
 8018454:	0801f547 	.word	0x0801f547

08018458 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801845c:	ed2d 8b08 	vpush	{d8-d11}
 8018460:	b095      	sub	sp, #84	; 0x54
 8018462:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8018466:	9306      	str	r3, [sp, #24]
 8018468:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 801846c:	9212      	str	r2, [sp, #72]	; 0x48
 801846e:	9307      	str	r3, [sp, #28]
 8018470:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018472:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8018476:	930c      	str	r3, [sp, #48]	; 0x30
 8018478:	910b      	str	r1, [sp, #44]	; 0x2c
 801847a:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801847e:	9013      	str	r0, [sp, #76]	; 0x4c
 8018480:	6850      	ldr	r0, [r2, #4]
 8018482:	6812      	ldr	r2, [r2, #0]
 8018484:	f9bd 70b8 	ldrsh.w	r7, [sp, #184]	; 0xb8
 8018488:	fb00 1303 	mla	r3, r0, r3, r1
 801848c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8018490:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018492:	681b      	ldr	r3, [r3, #0]
 8018494:	9309      	str	r3, [sp, #36]	; 0x24
 8018496:	007b      	lsls	r3, r7, #1
 8018498:	930a      	str	r3, [sp, #40]	; 0x28
 801849a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801849c:	43db      	mvns	r3, r3
 801849e:	b2db      	uxtb	r3, r3
 80184a0:	eeb0 aa40 	vmov.f32	s20, s0
 80184a4:	eef0 9a60 	vmov.f32	s19, s1
 80184a8:	eeb0 9a41 	vmov.f32	s18, s2
 80184ac:	eeb0 8a62 	vmov.f32	s16, s5
 80184b0:	eef0 8a43 	vmov.f32	s17, s6
 80184b4:	eef0 ba44 	vmov.f32	s23, s8
 80184b8:	eeb0 ba64 	vmov.f32	s22, s9
 80184bc:	eef0 aa45 	vmov.f32	s21, s10
 80184c0:	9308      	str	r3, [sp, #32]
 80184c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80184c4:	2b00      	cmp	r3, #0
 80184c6:	dc03      	bgt.n	80184d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80184c8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80184ca:	2b00      	cmp	r3, #0
 80184cc:	f340 81f3 	ble.w	80188b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 80184d0:	9b06      	ldr	r3, [sp, #24]
 80184d2:	2b00      	cmp	r3, #0
 80184d4:	f340 80fa 	ble.w	80186cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 80184d8:	1422      	asrs	r2, r4, #16
 80184da:	ea4f 4326 	mov.w	r3, r6, asr #16
 80184de:	d42b      	bmi.n	8018538 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 80184e0:	1c51      	adds	r1, r2, #1
 80184e2:	428f      	cmp	r7, r1
 80184e4:	dd2b      	ble.n	801853e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 80184e6:	2b00      	cmp	r3, #0
 80184e8:	db29      	blt.n	801853e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 80184ea:	9807      	ldr	r0, [sp, #28]
 80184ec:	1c59      	adds	r1, r3, #1
 80184ee:	4288      	cmp	r0, r1
 80184f0:	dd25      	ble.n	801853e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 80184f2:	9b06      	ldr	r3, [sp, #24]
 80184f4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80184f6:	3b01      	subs	r3, #1
 80184f8:	fb02 4203 	mla	r2, r2, r3, r4
 80184fc:	1412      	asrs	r2, r2, #16
 80184fe:	d428      	bmi.n	8018552 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018500:	3201      	adds	r2, #1
 8018502:	4297      	cmp	r7, r2
 8018504:	dd25      	ble.n	8018552 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018506:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018508:	fb02 6303 	mla	r3, r2, r3, r6
 801850c:	141b      	asrs	r3, r3, #16
 801850e:	d420      	bmi.n	8018552 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018510:	9a07      	ldr	r2, [sp, #28]
 8018512:	3301      	adds	r3, #1
 8018514:	429a      	cmp	r2, r3
 8018516:	dd1c      	ble.n	8018552 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8018518:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801851c:	f8bd a030 	ldrh.w	sl, [sp, #48]	; 0x30
 8018520:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8018524:	f1b8 0f00 	cmp.w	r8, #0
 8018528:	f300 8129 	bgt.w	801877e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x326>
 801852c:	9b06      	ldr	r3, [sp, #24]
 801852e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8018532:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8018536:	e0cb      	b.n	80186d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x278>
 8018538:	1c51      	adds	r1, r2, #1
 801853a:	f040 80bd 	bne.w	80186b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 801853e:	42ba      	cmp	r2, r7
 8018540:	f280 80ba 	bge.w	80186b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8018544:	1c5a      	adds	r2, r3, #1
 8018546:	f2c0 80b7 	blt.w	80186b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 801854a:	9a07      	ldr	r2, [sp, #28]
 801854c:	4293      	cmp	r3, r2
 801854e:	f280 80b3 	bge.w	80186b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8018552:	f8dd b018 	ldr.w	fp, [sp, #24]
 8018556:	46c8      	mov	r8, r9
 8018558:	f1bb 0f00 	cmp.w	fp, #0
 801855c:	dde6      	ble.n	801852c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 801855e:	1421      	asrs	r1, r4, #16
 8018560:	ea4f 4226 	mov.w	r2, r6, asr #16
 8018564:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8018568:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801856c:	f100 80ef 	bmi.w	801874e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8018570:	f101 0c01 	add.w	ip, r1, #1
 8018574:	4567      	cmp	r7, ip
 8018576:	f340 80ec 	ble.w	8018752 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 801857a:	2a00      	cmp	r2, #0
 801857c:	f2c0 80e9 	blt.w	8018752 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8018580:	9d07      	ldr	r5, [sp, #28]
 8018582:	f102 0c01 	add.w	ip, r2, #1
 8018586:	4565      	cmp	r5, ip
 8018588:	f340 80e3 	ble.w	8018752 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 801858c:	fb02 1207 	mla	r2, r2, r7, r1
 8018590:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018592:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8018596:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 801859a:	f8be 1002 	ldrh.w	r1, [lr, #2]
 801859e:	b138      	cbz	r0, 80185b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x158>
 80185a0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80185a2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80185a4:	4472      	add	r2, lr
 80185a6:	f83e 5005 	ldrh.w	r5, [lr, r5]
 80185aa:	8852      	ldrh	r2, [r2, #2]
 80185ac:	950e      	str	r5, [sp, #56]	; 0x38
 80185ae:	920f      	str	r2, [sp, #60]	; 0x3c
 80185b0:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 80185b4:	fb13 f200 	smulbb	r2, r3, r0
 80185b8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80185bc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80185c0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80185c4:	10d2      	asrs	r2, r2, #3
 80185c6:	ea4e 0c0c 	orr.w	ip, lr, ip
 80185ca:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80185ce:	f1c0 0e10 	rsb	lr, r0, #16
 80185d2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80185d6:	ebae 0e03 	sub.w	lr, lr, r3
 80185da:	ea4a 0101 	orr.w	r1, sl, r1
 80185de:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 80185e2:	4359      	muls	r1, r3
 80185e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80185e6:	9d08      	ldr	r5, [sp, #32]
 80185e8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80185ec:	fb0e 1e0c 	mla	lr, lr, ip, r1
 80185f0:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80185f4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80185f8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80185fc:	ea4c 0c03 	orr.w	ip, ip, r3
 8018600:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018602:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018604:	041b      	lsls	r3, r3, #16
 8018606:	fb02 ec0c 	mla	ip, r2, ip, lr
 801860a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801860e:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018612:	ea43 030e 	orr.w	r3, r3, lr
 8018616:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801861a:	fb02 c203 	mla	r2, r2, r3, ip
 801861e:	0d53      	lsrs	r3, r2, #21
 8018620:	0952      	lsrs	r2, r2, #5
 8018622:	f8b8 c000 	ldrh.w	ip, [r8]
 8018626:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801862a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801862e:	431a      	orrs	r2, r3
 8018630:	b292      	uxth	r2, r2
 8018632:	ea4f 212c 	mov.w	r1, ip, asr #8
 8018636:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 801863a:	1210      	asrs	r0, r2, #8
 801863c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018640:	fb11 f105 	smulbb	r1, r1, r5
 8018644:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8018648:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801864c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018650:	fb00 1003 	mla	r0, r0, r3, r1
 8018654:	fa5f fc8c 	uxtb.w	ip, ip
 8018658:	10d1      	asrs	r1, r2, #3
 801865a:	00d2      	lsls	r2, r2, #3
 801865c:	fb1c fc05 	smulbb	ip, ip, r5
 8018660:	b2d2      	uxtb	r2, r2
 8018662:	fb02 c203 	mla	r2, r2, r3, ip
 8018666:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801866a:	b280      	uxth	r0, r0
 801866c:	b292      	uxth	r2, r2
 801866e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018672:	fb1e fe05 	smulbb	lr, lr, r5
 8018676:	fb01 e103 	mla	r1, r1, r3, lr
 801867a:	f102 0c01 	add.w	ip, r2, #1
 801867e:	1c43      	adds	r3, r0, #1
 8018680:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018684:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8018688:	b289      	uxth	r1, r1
 801868a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801868e:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8018692:	4313      	orrs	r3, r2
 8018694:	1c4a      	adds	r2, r1, #1
 8018696:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801869a:	0949      	lsrs	r1, r1, #5
 801869c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80186a0:	430b      	orrs	r3, r1
 80186a2:	f8a8 3000 	strh.w	r3, [r8]
 80186a6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80186a8:	441c      	add	r4, r3
 80186aa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80186ac:	f108 0802 	add.w	r8, r8, #2
 80186b0:	441e      	add	r6, r3
 80186b2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80186b6:	e74f      	b.n	8018558 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 80186b8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80186ba:	441c      	add	r4, r3
 80186bc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80186be:	441e      	add	r6, r3
 80186c0:	9b06      	ldr	r3, [sp, #24]
 80186c2:	3b01      	subs	r3, #1
 80186c4:	9306      	str	r3, [sp, #24]
 80186c6:	f109 0902 	add.w	r9, r9, #2
 80186ca:	e701      	b.n	80184d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80186cc:	f47f af11 	bne.w	80184f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 80186d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80186d2:	2b00      	cmp	r3, #0
 80186d4:	f340 80ef 	ble.w	80188b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 80186d8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80186dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80186e0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80186e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80186e6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80186ea:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80186ee:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80186f2:	eef0 6a48 	vmov.f32	s13, s16
 80186f6:	ee69 7a27 	vmul.f32	s15, s18, s15
 80186fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80186fe:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018702:	ee16 4a90 	vmov	r4, s13
 8018706:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801870a:	eef0 6a68 	vmov.f32	s13, s17
 801870e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018712:	ee18 2a10 	vmov	r2, s16
 8018716:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801871a:	fb92 f3f3 	sdiv	r3, r2, r3
 801871e:	ee18 2a90 	vmov	r2, s17
 8018722:	9329      	str	r3, [sp, #164]	; 0xa4
 8018724:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018726:	fb92 f3f3 	sdiv	r3, r2, r3
 801872a:	932a      	str	r3, [sp, #168]	; 0xa8
 801872c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801872e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018730:	3b01      	subs	r3, #1
 8018732:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018736:	930b      	str	r3, [sp, #44]	; 0x2c
 8018738:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801873a:	bf08      	it	eq
 801873c:	4613      	moveq	r3, r2
 801873e:	ee16 6a90 	vmov	r6, s13
 8018742:	9306      	str	r3, [sp, #24]
 8018744:	eef0 8a67 	vmov.f32	s17, s15
 8018748:	eeb0 8a47 	vmov.f32	s16, s14
 801874c:	e6b9      	b.n	80184c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801874e:	1c4d      	adds	r5, r1, #1
 8018750:	d1a9      	bne.n	80186a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8018752:	428f      	cmp	r7, r1
 8018754:	dda7      	ble.n	80186a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8018756:	1c55      	adds	r5, r2, #1
 8018758:	dba5      	blt.n	80186a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 801875a:	9d07      	ldr	r5, [sp, #28]
 801875c:	4295      	cmp	r5, r2
 801875e:	dda2      	ble.n	80186a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8018760:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018762:	9101      	str	r1, [sp, #4]
 8018764:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8018768:	9b07      	ldr	r3, [sp, #28]
 801876a:	9300      	str	r3, [sp, #0]
 801876c:	e9cd 0504 	strd	r0, r5, [sp, #16]
 8018770:	463b      	mov	r3, r7
 8018772:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018774:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018776:	4641      	mov	r1, r8
 8018778:	f7ff fd9a 	bl	80182b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801877c:	e793      	b.n	80186a6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 801877e:	1422      	asrs	r2, r4, #16
 8018780:	1431      	asrs	r1, r6, #16
 8018782:	fb07 2101 	mla	r1, r7, r1, r2
 8018786:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018788:	9809      	ldr	r0, [sp, #36]	; 0x24
 801878a:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 801878e:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8018792:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8018796:	8851      	ldrh	r1, [r2, #2]
 8018798:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801879c:	f1be 0f00 	cmp.w	lr, #0
 80187a0:	d006      	beq.n	80187b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 80187a2:	980a      	ldr	r0, [sp, #40]	; 0x28
 80187a4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80187a6:	1810      	adds	r0, r2, r0
 80187a8:	5b52      	ldrh	r2, [r2, r5]
 80187aa:	9210      	str	r2, [sp, #64]	; 0x40
 80187ac:	8842      	ldrh	r2, [r0, #2]
 80187ae:	9211      	str	r2, [sp, #68]	; 0x44
 80187b0:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80187b4:	fb13 f20e 	smulbb	r2, r3, lr
 80187b8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80187bc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80187c0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80187c4:	10d2      	asrs	r2, r2, #3
 80187c6:	ea40 000c 	orr.w	r0, r0, ip
 80187ca:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80187ce:	f1ce 0c10 	rsb	ip, lr, #16
 80187d2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80187d6:	ebac 0c03 	sub.w	ip, ip, r3
 80187da:	ea4b 0101 	orr.w	r1, fp, r1
 80187de:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 80187e2:	4359      	muls	r1, r3
 80187e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80187e6:	9d08      	ldr	r5, [sp, #32]
 80187e8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80187ec:	fb0c 1c00 	mla	ip, ip, r0, r1
 80187f0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80187f4:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 80187f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80187fa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80187fe:	ea4b 0000 	orr.w	r0, fp, r0
 8018802:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8018806:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801880a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801880e:	fb02 c000 	mla	r0, r2, r0, ip
 8018812:	ea4b 0b03 	orr.w	fp, fp, r3
 8018816:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 801881a:	fb02 0b0b 	mla	fp, r2, fp, r0
 801881e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018820:	ea4f 515b 	mov.w	r1, fp, lsr #21
 8018824:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018828:	8812      	ldrh	r2, [r2, #0]
 801882a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801882e:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8018832:	ea41 0b0b 	orr.w	fp, r1, fp
 8018836:	fa1f f38b 	uxth.w	r3, fp
 801883a:	1211      	asrs	r1, r2, #8
 801883c:	1218      	asrs	r0, r3, #8
 801883e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018842:	fb11 f105 	smulbb	r1, r1, r5
 8018846:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801884a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801884e:	00d2      	lsls	r2, r2, #3
 8018850:	fb00 100a 	mla	r0, r0, sl, r1
 8018854:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8018858:	10d9      	asrs	r1, r3, #3
 801885a:	b2d2      	uxtb	r2, r2
 801885c:	00db      	lsls	r3, r3, #3
 801885e:	fb1c fc05 	smulbb	ip, ip, r5
 8018862:	fb12 f205 	smulbb	r2, r2, r5
 8018866:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801886a:	b2db      	uxtb	r3, r3
 801886c:	b280      	uxth	r0, r0
 801886e:	fb01 c10a 	mla	r1, r1, sl, ip
 8018872:	fb03 230a 	mla	r3, r3, sl, r2
 8018876:	b29b      	uxth	r3, r3
 8018878:	b289      	uxth	r1, r1
 801887a:	1c42      	adds	r2, r0, #1
 801887c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018880:	f101 0c01 	add.w	ip, r1, #1
 8018884:	1c5a      	adds	r2, r3, #1
 8018886:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801888a:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 801888e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018892:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018896:	0949      	lsrs	r1, r1, #5
 8018898:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801889a:	4310      	orrs	r0, r2
 801889c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80188a0:	4308      	orrs	r0, r1
 80188a2:	f823 0b02 	strh.w	r0, [r3], #2
 80188a6:	930d      	str	r3, [sp, #52]	; 0x34
 80188a8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80188aa:	441c      	add	r4, r3
 80188ac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80188ae:	f108 38ff 	add.w	r8, r8, #4294967295
 80188b2:	441e      	add	r6, r3
 80188b4:	e636      	b.n	8018524 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 80188b6:	b015      	add	sp, #84	; 0x54
 80188b8:	ecbd 8b08 	vpop	{d8-d11}
 80188bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080188c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80188c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80188c4:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 80188c8:	fb06 5c03 	mla	ip, r6, r3, r5
 80188cc:	2e00      	cmp	r6, #0
 80188ce:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 80188d2:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 80188d6:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 80188da:	8808      	ldrh	r0, [r1, #0]
 80188dc:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80188e0:	db2e      	blt.n	8018940 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 80188e2:	45b0      	cmp	r8, r6
 80188e4:	dd2c      	ble.n	8018940 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 80188e6:	2d00      	cmp	r5, #0
 80188e8:	db28      	blt.n	801893c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 80188ea:	42ab      	cmp	r3, r5
 80188ec:	dd26      	ble.n	801893c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 80188ee:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 80188f2:	1c6a      	adds	r2, r5, #1
 80188f4:	d427      	bmi.n	8018946 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80188f6:	4293      	cmp	r3, r2
 80188f8:	dd25      	ble.n	8018946 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80188fa:	b324      	cbz	r4, 8018946 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80188fc:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8018900:	3601      	adds	r6, #1
 8018902:	d424      	bmi.n	801894e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8018904:	45b0      	cmp	r8, r6
 8018906:	dd22      	ble.n	801894e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8018908:	b31f      	cbz	r7, 8018952 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 801890a:	2d00      	cmp	r5, #0
 801890c:	db1d      	blt.n	801894a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 801890e:	42ab      	cmp	r3, r5
 8018910:	dd1b      	ble.n	801894a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8018912:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8018916:	3501      	adds	r5, #1
 8018918:	d405      	bmi.n	8018926 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801891a:	42ab      	cmp	r3, r5
 801891c:	dd03      	ble.n	8018926 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 801891e:	b124      	cbz	r4, 801892a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8018920:	3301      	adds	r3, #1
 8018922:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8018926:	2c0f      	cmp	r4, #15
 8018928:	d801      	bhi.n	801892e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801892a:	2f0f      	cmp	r7, #15
 801892c:	d914      	bls.n	8018958 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 801892e:	4b27      	ldr	r3, [pc, #156]	; (80189cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8018930:	4a27      	ldr	r2, [pc, #156]	; (80189d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8018932:	4828      	ldr	r0, [pc, #160]	; (80189d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8018934:	f240 3155 	movw	r1, #853	; 0x355
 8018938:	f002 fc34 	bl	801b1a4 <__assert_func>
 801893c:	4684      	mov	ip, r0
 801893e:	e7d8      	b.n	80188f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8018940:	4602      	mov	r2, r0
 8018942:	4684      	mov	ip, r0
 8018944:	e7dc      	b.n	8018900 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8018946:	4602      	mov	r2, r0
 8018948:	e7da      	b.n	8018900 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 801894a:	4606      	mov	r6, r0
 801894c:	e7e3      	b.n	8018916 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 801894e:	4606      	mov	r6, r0
 8018950:	e7e9      	b.n	8018926 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8018952:	2c0f      	cmp	r4, #15
 8018954:	d8eb      	bhi.n	801892e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8018956:	4606      	mov	r6, r0
 8018958:	ea4f 450c 	mov.w	r5, ip, lsl #16
 801895c:	fb14 f307 	smulbb	r3, r4, r7
 8018960:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8018964:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8018968:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801896c:	10db      	asrs	r3, r3, #3
 801896e:	ea45 0c0c 	orr.w	ip, r5, ip
 8018972:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018976:	f1c7 0510 	rsb	r5, r7, #16
 801897a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801897e:	1b2d      	subs	r5, r5, r4
 8018980:	ea4e 0202 	orr.w	r2, lr, r2
 8018984:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8018988:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801898c:	4354      	muls	r4, r2
 801898e:	fb05 450c 	mla	r5, r5, ip, r4
 8018992:	0404      	lsls	r4, r0, #16
 8018994:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018998:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801899c:	4320      	orrs	r0, r4
 801899e:	fb03 5400 	mla	r4, r3, r0, r5
 80189a2:	0430      	lsls	r0, r6, #16
 80189a4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80189a8:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 80189ac:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 80189b0:	4330      	orrs	r0, r6
 80189b2:	fb07 4000 	mla	r0, r7, r0, r4
 80189b6:	0d43      	lsrs	r3, r0, #21
 80189b8:	0940      	lsrs	r0, r0, #5
 80189ba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80189be:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80189c2:	4318      	orrs	r0, r3
 80189c4:	8008      	strh	r0, [r1, #0]
 80189c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80189ca:	bf00      	nop
 80189cc:	0801f4bf 	.word	0x0801f4bf
 80189d0:	0801fac6 	.word	0x0801fac6
 80189d4:	0801f547 	.word	0x0801f547

080189d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80189d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80189dc:	ed2d 8b0a 	vpush	{d8-d12}
 80189e0:	b093      	sub	sp, #76	; 0x4c
 80189e2:	461d      	mov	r5, r3
 80189e4:	9210      	str	r2, [sp, #64]	; 0x40
 80189e6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80189e8:	f9bd 20bc 	ldrsh.w	r2, [sp, #188]	; 0xbc
 80189ec:	9208      	str	r2, [sp, #32]
 80189ee:	e9dd 272c 	ldrd	r2, r7, [sp, #176]	; 0xb0
 80189f2:	910b      	str	r1, [sp, #44]	; 0x2c
 80189f4:	6859      	ldr	r1, [r3, #4]
 80189f6:	681b      	ldr	r3, [r3, #0]
 80189f8:	f9bd 80b8 	ldrsh.w	r8, [sp, #184]	; 0xb8
 80189fc:	9011      	str	r0, [sp, #68]	; 0x44
 80189fe:	fb01 2707 	mla	r7, r1, r7, r2
 8018a02:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8018a06:	9307      	str	r3, [sp, #28]
 8018a08:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018a0a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8018a0e:	681b      	ldr	r3, [r3, #0]
 8018a10:	9309      	str	r3, [sp, #36]	; 0x24
 8018a12:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8018a16:	eeb0 aa40 	vmov.f32	s20, s0
 8018a1a:	eef0 9a60 	vmov.f32	s19, s1
 8018a1e:	eeb0 9a41 	vmov.f32	s18, s2
 8018a22:	eeb0 8a62 	vmov.f32	s16, s5
 8018a26:	eef0 8a43 	vmov.f32	s17, s6
 8018a2a:	eeb0 ca44 	vmov.f32	s24, s8
 8018a2e:	eef0 ba64 	vmov.f32	s23, s9
 8018a32:	eeb0 ba45 	vmov.f32	s22, s10
 8018a36:	930a      	str	r3, [sp, #40]	; 0x28
 8018a38:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8018a3c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018a3e:	2b00      	cmp	r3, #0
 8018a40:	dc03      	bgt.n	8018a4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8018a42:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018a44:	2b00      	cmp	r3, #0
 8018a46:	f340 816c 	ble.w	8018d22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8018a4a:	2d00      	cmp	r5, #0
 8018a4c:	f340 80b6 	ble.w	8018bbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 8018a50:	1422      	asrs	r2, r4, #16
 8018a52:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018a56:	d428      	bmi.n	8018aaa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd2>
 8018a58:	1c51      	adds	r1, r2, #1
 8018a5a:	4588      	cmp	r8, r1
 8018a5c:	dd27      	ble.n	8018aae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8018a5e:	2b00      	cmp	r3, #0
 8018a60:	db25      	blt.n	8018aae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8018a62:	9808      	ldr	r0, [sp, #32]
 8018a64:	1c59      	adds	r1, r3, #1
 8018a66:	4288      	cmp	r0, r1
 8018a68:	dd21      	ble.n	8018aae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8018a6a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018a6c:	1e6b      	subs	r3, r5, #1
 8018a6e:	fb02 4203 	mla	r2, r2, r3, r4
 8018a72:	1412      	asrs	r2, r2, #16
 8018a74:	d422      	bmi.n	8018abc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8018a76:	3201      	adds	r2, #1
 8018a78:	4590      	cmp	r8, r2
 8018a7a:	dd1f      	ble.n	8018abc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8018a7c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018a7e:	fb02 6303 	mla	r3, r2, r3, r6
 8018a82:	141b      	asrs	r3, r3, #16
 8018a84:	d41a      	bmi.n	8018abc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8018a86:	9a08      	ldr	r2, [sp, #32]
 8018a88:	3301      	adds	r3, #1
 8018a8a:	429a      	cmp	r2, r3
 8018a8c:	dd16      	ble.n	8018abc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8018a8e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8018a92:	46a9      	mov	r9, r5
 8018a94:	f1b9 0f00 	cmp.w	r9, #0
 8018a98:	f300 80e4 	bgt.w	8018c64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 8018a9c:	9b07      	ldr	r3, [sp, #28]
 8018a9e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8018aa2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8018aa6:	9307      	str	r3, [sp, #28]
 8018aa8:	e08a      	b.n	8018bc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 8018aaa:	1c51      	adds	r1, r2, #1
 8018aac:	d17d      	bne.n	8018baa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8018aae:	4542      	cmp	r2, r8
 8018ab0:	da7b      	bge.n	8018baa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8018ab2:	1c5a      	adds	r2, r3, #1
 8018ab4:	db79      	blt.n	8018baa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8018ab6:	9a08      	ldr	r2, [sp, #32]
 8018ab8:	4293      	cmp	r3, r2
 8018aba:	da76      	bge.n	8018baa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8018abc:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8018ac0:	46aa      	mov	sl, r5
 8018ac2:	f1ba 0f00 	cmp.w	sl, #0
 8018ac6:	dde9      	ble.n	8018a9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 8018ac8:	1421      	asrs	r1, r4, #16
 8018aca:	ea4f 4226 	mov.w	r2, r6, asr #16
 8018ace:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8018ad2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018ad6:	f100 80b0 	bmi.w	8018c3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x262>
 8018ada:	f101 0c01 	add.w	ip, r1, #1
 8018ade:	45e0      	cmp	r8, ip
 8018ae0:	f340 80ad 	ble.w	8018c3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8018ae4:	2a00      	cmp	r2, #0
 8018ae6:	f2c0 80aa 	blt.w	8018c3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8018aea:	9f08      	ldr	r7, [sp, #32]
 8018aec:	f102 0c01 	add.w	ip, r2, #1
 8018af0:	4567      	cmp	r7, ip
 8018af2:	f340 80a4 	ble.w	8018c3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8018af6:	fb02 1208 	mla	r2, r2, r8, r1
 8018afa:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018afc:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8018b00:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8018b04:	f8be 1002 	ldrh.w	r1, [lr, #2]
 8018b08:	b138      	cbz	r0, 8018b1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x142>
 8018b0a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018b0c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8018b0e:	4472      	add	r2, lr
 8018b10:	f83e 7007 	ldrh.w	r7, [lr, r7]
 8018b14:	8852      	ldrh	r2, [r2, #2]
 8018b16:	970c      	str	r7, [sp, #48]	; 0x30
 8018b18:	920d      	str	r2, [sp, #52]	; 0x34
 8018b1a:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8018b1e:	fb13 f200 	smulbb	r2, r3, r0
 8018b22:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018b26:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018b2a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018b2e:	10d2      	asrs	r2, r2, #3
 8018b30:	ea4e 0c0c 	orr.w	ip, lr, ip
 8018b34:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018b38:	f1c0 0e10 	rsb	lr, r0, #16
 8018b3c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018b40:	ebae 0e03 	sub.w	lr, lr, r3
 8018b44:	ea4b 0101 	orr.w	r1, fp, r1
 8018b48:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8018b4c:	4359      	muls	r1, r3
 8018b4e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018b50:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8018b54:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8018b58:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8018b5c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018b60:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018b64:	ea4c 0c03 	orr.w	ip, ip, r3
 8018b68:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018b6a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018b6c:	041b      	lsls	r3, r3, #16
 8018b6e:	fb02 ec0c 	mla	ip, r2, ip, lr
 8018b72:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018b76:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8018b7a:	ea43 030e 	orr.w	r3, r3, lr
 8018b7e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8018b82:	fb02 c203 	mla	r2, r2, r3, ip
 8018b86:	0d53      	lsrs	r3, r2, #21
 8018b88:	0952      	lsrs	r2, r2, #5
 8018b8a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018b8e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018b92:	431a      	orrs	r2, r3
 8018b94:	f8a9 2000 	strh.w	r2, [r9]
 8018b98:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018b9a:	441c      	add	r4, r3
 8018b9c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018b9e:	f109 0902 	add.w	r9, r9, #2
 8018ba2:	441e      	add	r6, r3
 8018ba4:	f10a 3aff 	add.w	sl, sl, #4294967295
 8018ba8:	e78b      	b.n	8018ac2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8018baa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018bac:	441c      	add	r4, r3
 8018bae:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018bb0:	441e      	add	r6, r3
 8018bb2:	9b07      	ldr	r3, [sp, #28]
 8018bb4:	3302      	adds	r3, #2
 8018bb6:	3d01      	subs	r5, #1
 8018bb8:	9307      	str	r3, [sp, #28]
 8018bba:	e746      	b.n	8018a4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 8018bbc:	f47f af55 	bne.w	8018a6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8018bc0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018bc2:	2b00      	cmp	r3, #0
 8018bc4:	f340 80ad 	ble.w	8018d22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8018bc8:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8018bcc:	ee79 9aab 	vadd.f32	s19, s19, s23
 8018bd0:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8018bd4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018bd6:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8018bda:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018bde:	eef0 6a48 	vmov.f32	s13, s16
 8018be2:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018be6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018bea:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018bee:	ee16 4a90 	vmov	r4, s13
 8018bf2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018bf6:	eef0 6a68 	vmov.f32	s13, s17
 8018bfa:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018bfe:	ee18 2a10 	vmov	r2, s16
 8018c02:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018c06:	fb92 f3f3 	sdiv	r3, r2, r3
 8018c0a:	ee18 2a90 	vmov	r2, s17
 8018c0e:	9329      	str	r3, [sp, #164]	; 0xa4
 8018c10:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018c12:	fb92 f3f3 	sdiv	r3, r2, r3
 8018c16:	932a      	str	r3, [sp, #168]	; 0xa8
 8018c18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018c1a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018c1c:	3b01      	subs	r3, #1
 8018c1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018c22:	930b      	str	r3, [sp, #44]	; 0x2c
 8018c24:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018c26:	ee16 6a90 	vmov	r6, s13
 8018c2a:	bf14      	ite	ne
 8018c2c:	461d      	movne	r5, r3
 8018c2e:	4615      	moveq	r5, r2
 8018c30:	eef0 8a67 	vmov.f32	s17, s15
 8018c34:	eeb0 8a47 	vmov.f32	s16, s14
 8018c38:	e700      	b.n	8018a3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8018c3a:	1c4f      	adds	r7, r1, #1
 8018c3c:	d1ac      	bne.n	8018b98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018c3e:	4588      	cmp	r8, r1
 8018c40:	ddaa      	ble.n	8018b98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018c42:	1c57      	adds	r7, r2, #1
 8018c44:	dba8      	blt.n	8018b98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018c46:	9f08      	ldr	r7, [sp, #32]
 8018c48:	4297      	cmp	r7, r2
 8018c4a:	dda5      	ble.n	8018b98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018c4c:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8018c50:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8018c54:	9700      	str	r7, [sp, #0]
 8018c56:	4643      	mov	r3, r8
 8018c58:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018c5a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8018c5c:	4649      	mov	r1, r9
 8018c5e:	f7ff fe2f 	bl	80188c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8018c62:	e799      	b.n	8018b98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018c64:	1422      	asrs	r2, r4, #16
 8018c66:	1431      	asrs	r1, r6, #16
 8018c68:	fb08 2101 	mla	r1, r8, r1, r2
 8018c6c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018c6e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8018c70:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8018c74:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8018c78:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8018c7c:	8851      	ldrh	r1, [r2, #2]
 8018c7e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8018c82:	f1be 0f00 	cmp.w	lr, #0
 8018c86:	d006      	beq.n	8018c96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8018c88:	980a      	ldr	r0, [sp, #40]	; 0x28
 8018c8a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8018c8c:	1810      	adds	r0, r2, r0
 8018c8e:	5bd2      	ldrh	r2, [r2, r7]
 8018c90:	920e      	str	r2, [sp, #56]	; 0x38
 8018c92:	8842      	ldrh	r2, [r0, #2]
 8018c94:	920f      	str	r2, [sp, #60]	; 0x3c
 8018c96:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8018c9a:	fb13 f20e 	smulbb	r2, r3, lr
 8018c9e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018ca2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018ca6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018caa:	10d2      	asrs	r2, r2, #3
 8018cac:	ea40 000c 	orr.w	r0, r0, ip
 8018cb0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018cb4:	f1ce 0c10 	rsb	ip, lr, #16
 8018cb8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018cbc:	ebac 0c03 	sub.w	ip, ip, r3
 8018cc0:	ea4a 0101 	orr.w	r1, sl, r1
 8018cc4:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8018cc8:	4359      	muls	r1, r3
 8018cca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018ccc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018cd0:	fb0c 1c00 	mla	ip, ip, r0, r1
 8018cd4:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8018cd8:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 8018cdc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018cde:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018ce0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018ce4:	041b      	lsls	r3, r3, #16
 8018ce6:	ea4a 0000 	orr.w	r0, sl, r0
 8018cea:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018cee:	f421 6afc 	bic.w	sl, r1, #2016	; 0x7e0
 8018cf2:	fb02 c000 	mla	r0, r2, r0, ip
 8018cf6:	ea43 0a0a 	orr.w	sl, r3, sl
 8018cfa:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 8018cfe:	fb02 000a 	mla	r0, r2, sl, r0
 8018d02:	0d43      	lsrs	r3, r0, #21
 8018d04:	0940      	lsrs	r0, r0, #5
 8018d06:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018d0a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018d0e:	4318      	orrs	r0, r3
 8018d10:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018d12:	f82b 0b02 	strh.w	r0, [fp], #2
 8018d16:	441c      	add	r4, r3
 8018d18:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018d1a:	f109 39ff 	add.w	r9, r9, #4294967295
 8018d1e:	441e      	add	r6, r3
 8018d20:	e6b8      	b.n	8018a94 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xbc>
 8018d22:	b013      	add	sp, #76	; 0x4c
 8018d24:	ecbd 8b0a 	vpop	{d8-d12}
 8018d28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8018d2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d30:	8808      	ldrh	r0, [r1, #0]
 8018d32:	b085      	sub	sp, #20
 8018d34:	1206      	asrs	r6, r0, #8
 8018d36:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 8018d3a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018d3e:	9600      	str	r6, [sp, #0]
 8018d40:	10c6      	asrs	r6, r0, #3
 8018d42:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018d46:	9601      	str	r6, [sp, #4]
 8018d48:	00c0      	lsls	r0, r0, #3
 8018d4a:	fb04 c603 	mla	r6, r4, r3, ip
 8018d4e:	b2c0      	uxtb	r0, r0
 8018d50:	4691      	mov	r9, r2
 8018d52:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 8018d56:	9a00      	ldr	r2, [sp, #0]
 8018d58:	9002      	str	r0, [sp, #8]
 8018d5a:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8018d5e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8018d62:	9a01      	ldr	r2, [sp, #4]
 8018d64:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8018d68:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8018d6c:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8018d70:	2c00      	cmp	r4, #0
 8018d72:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8018d76:	db3a      	blt.n	8018dee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8018d78:	45a0      	cmp	r8, r4
 8018d7a:	dd38      	ble.n	8018dee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8018d7c:	f1bc 0f00 	cmp.w	ip, #0
 8018d80:	db33      	blt.n	8018dea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 8018d82:	4563      	cmp	r3, ip
 8018d84:	dd31      	ble.n	8018dea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 8018d86:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8018d8a:	f11c 0601 	adds.w	r6, ip, #1
 8018d8e:	d431      	bmi.n	8018df4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8018d90:	42b3      	cmp	r3, r6
 8018d92:	dd2f      	ble.n	8018df4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8018d94:	b375      	cbz	r5, 8018df4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8018d96:	f8de 6004 	ldr.w	r6, [lr, #4]
 8018d9a:	3401      	adds	r4, #1
 8018d9c:	d42e      	bmi.n	8018dfc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8018d9e:	45a0      	cmp	r8, r4
 8018da0:	dd2c      	ble.n	8018dfc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8018da2:	b35f      	cbz	r7, 8018dfc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8018da4:	f1bc 0f00 	cmp.w	ip, #0
 8018da8:	db26      	blt.n	8018df8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8018daa:	4563      	cmp	r3, ip
 8018dac:	dd24      	ble.n	8018df8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8018dae:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 8018db2:	f11c 0c01 	adds.w	ip, ip, #1
 8018db6:	d405      	bmi.n	8018dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8018db8:	4563      	cmp	r3, ip
 8018dba:	dd03      	ble.n	8018dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8018dbc:	b115      	cbz	r5, 8018dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8018dbe:	3301      	adds	r3, #1
 8018dc0:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 8018dc4:	2d0f      	cmp	r5, #15
 8018dc6:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8018dca:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8018dce:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8018dd2:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8018dd6:	d801      	bhi.n	8018ddc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 8018dd8:	2f0f      	cmp	r7, #15
 8018dda:	d911      	bls.n	8018e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 8018ddc:	4b82      	ldr	r3, [pc, #520]	; (8018fe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 8018dde:	4a83      	ldr	r2, [pc, #524]	; (8018fec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c0>)
 8018de0:	4883      	ldr	r0, [pc, #524]	; (8018ff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c4>)
 8018de2:	f240 3173 	movw	r1, #883	; 0x373
 8018de6:	f002 f9dd 	bl	801b1a4 <__assert_func>
 8018dea:	4602      	mov	r2, r0
 8018dec:	e7cd      	b.n	8018d8a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8018dee:	4606      	mov	r6, r0
 8018df0:	4602      	mov	r2, r0
 8018df2:	e7d2      	b.n	8018d9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8018df4:	4606      	mov	r6, r0
 8018df6:	e7d0      	b.n	8018d9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 8018df8:	4604      	mov	r4, r0
 8018dfa:	e7da      	b.n	8018db2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x86>
 8018dfc:	4604      	mov	r4, r0
 8018dfe:	e7e1      	b.n	8018dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8018e00:	b2ab      	uxth	r3, r5
 8018e02:	b2bf      	uxth	r7, r7
 8018e04:	fb03 fe07 	mul.w	lr, r3, r7
 8018e08:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8018e0c:	011b      	lsls	r3, r3, #4
 8018e0e:	eba3 0c0e 	sub.w	ip, r3, lr
 8018e12:	b2bf      	uxth	r7, r7
 8018e14:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8018e18:	fa1f fc8c 	uxth.w	ip, ip
 8018e1c:	1bed      	subs	r5, r5, r7
 8018e1e:	b2ad      	uxth	r5, r5
 8018e20:	fb0c f30a 	mul.w	r3, ip, sl
 8018e24:	fb05 330b 	mla	r3, r5, fp, r3
 8018e28:	fb07 3309 	mla	r3, r7, r9, r3
 8018e2c:	fb0e 3308 	mla	r3, lr, r8, r3
 8018e30:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018e34:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8018e38:	9303      	str	r3, [sp, #12]
 8018e3a:	d018      	beq.n	8018e6e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 8018e3c:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8018e40:	fb0b f303 	mul.w	r3, fp, r3
 8018e44:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018e48:	fb0b fb02 	mul.w	fp, fp, r2
 8018e4c:	0a1a      	lsrs	r2, r3, #8
 8018e4e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018e52:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8018e56:	441a      	add	r2, r3
 8018e58:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8018e5c:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8018e60:	0a12      	lsrs	r2, r2, #8
 8018e62:	0a1b      	lsrs	r3, r3, #8
 8018e64:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018e68:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018e6c:	431a      	orrs	r2, r3
 8018e6e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018e72:	d019      	beq.n	8018ea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 8018e74:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8018e78:	fb0a fb0b 	mul.w	fp, sl, fp
 8018e7c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018e80:	fb0a fa06 	mul.w	sl, sl, r6
 8018e84:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8018e88:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018e8c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018e90:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8018e94:	445e      	add	r6, fp
 8018e96:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8018e9a:	0a36      	lsrs	r6, r6, #8
 8018e9c:	0a1b      	lsrs	r3, r3, #8
 8018e9e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018ea2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018ea6:	431e      	orrs	r6, r3
 8018ea8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018eac:	d019      	beq.n	8018ee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 8018eae:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8018eb2:	fb09 fa0a 	mul.w	sl, r9, sl
 8018eb6:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8018eba:	fb09 f904 	mul.w	r9, r9, r4
 8018ebe:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8018ec2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018ec6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018eca:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8018ece:	4454      	add	r4, sl
 8018ed0:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8018ed4:	0a24      	lsrs	r4, r4, #8
 8018ed6:	0a1b      	lsrs	r3, r3, #8
 8018ed8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018edc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018ee0:	431c      	orrs	r4, r3
 8018ee2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018ee6:	d019      	beq.n	8018f1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 8018ee8:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8018eec:	fb08 f909 	mul.w	r9, r8, r9
 8018ef0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018ef4:	fb08 f800 	mul.w	r8, r8, r0
 8018ef8:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8018efc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8018f00:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8018f04:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8018f08:	4448      	add	r0, r9
 8018f0a:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8018f0e:	0a00      	lsrs	r0, r0, #8
 8018f10:	0a1b      	lsrs	r3, r3, #8
 8018f12:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8018f16:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018f1a:	4318      	orrs	r0, r3
 8018f1c:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018f20:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018f24:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8018f28:	fb0c f808 	mul.w	r8, ip, r8
 8018f2c:	fb0c f606 	mul.w	r6, ip, r6
 8018f30:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8018f34:	fb05 6202 	mla	r2, r5, r2, r6
 8018f38:	fb05 8803 	mla	r8, r5, r3, r8
 8018f3c:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8018f40:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8018f44:	fb07 8803 	mla	r8, r7, r3, r8
 8018f48:	fb07 2704 	mla	r7, r7, r4, r2
 8018f4c:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8018f50:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018f54:	fb0e 8303 	mla	r3, lr, r3, r8
 8018f58:	fb0e 7e00 	mla	lr, lr, r0, r7
 8018f5c:	0a1b      	lsrs	r3, r3, #8
 8018f5e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018f62:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018f66:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8018f6a:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8018f6e:	ea43 0e0e 	orr.w	lr, r3, lr
 8018f72:	9b03      	ldr	r3, [sp, #12]
 8018f74:	b2a4      	uxth	r4, r4
 8018f76:	4363      	muls	r3, r4
 8018f78:	1c5a      	adds	r2, r3, #1
 8018f7a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018f7e:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8018f82:	9b00      	ldr	r3, [sp, #0]
 8018f84:	b2d2      	uxtb	r2, r2
 8018f86:	ea4f 451e 	mov.w	r5, lr, lsr #16
 8018f8a:	fb13 f302 	smulbb	r3, r3, r2
 8018f8e:	fb05 3304 	mla	r3, r5, r4, r3
 8018f92:	b29d      	uxth	r5, r3
 8018f94:	9b01      	ldr	r3, [sp, #4]
 8018f96:	f3ce 2007 	ubfx	r0, lr, #8, #8
 8018f9a:	fb13 f302 	smulbb	r3, r3, r2
 8018f9e:	fb00 3004 	mla	r0, r0, r4, r3
 8018fa2:	9b02      	ldr	r3, [sp, #8]
 8018fa4:	fa5f fe8e 	uxtb.w	lr, lr
 8018fa8:	fb13 f202 	smulbb	r2, r3, r2
 8018fac:	fb0e 2e04 	mla	lr, lr, r4, r2
 8018fb0:	fa1f fe8e 	uxth.w	lr, lr
 8018fb4:	b280      	uxth	r0, r0
 8018fb6:	f10e 0201 	add.w	r2, lr, #1
 8018fba:	1c6b      	adds	r3, r5, #1
 8018fbc:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8018fc0:	1c42      	adds	r2, r0, #1
 8018fc2:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8018fc6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8018fca:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8018fce:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8018fd2:	0952      	lsrs	r2, r2, #5
 8018fd4:	ea43 030e 	orr.w	r3, r3, lr
 8018fd8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018fdc:	4313      	orrs	r3, r2
 8018fde:	800b      	strh	r3, [r1, #0]
 8018fe0:	b005      	add	sp, #20
 8018fe2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018fe6:	bf00      	nop
 8018fe8:	0801f4bf 	.word	0x0801f4bf
 8018fec:	0801fa1d 	.word	0x0801fa1d
 8018ff0:	0801f547 	.word	0x0801f547

08018ff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018ff4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ff8:	ed2d 8b08 	vpush	{d8-d11}
 8018ffc:	b099      	sub	sp, #100	; 0x64
 8018ffe:	eeb0 aa40 	vmov.f32	s20, s0
 8019002:	9306      	str	r3, [sp, #24]
 8019004:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 8019008:	9307      	str	r3, [sp, #28]
 801900a:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 801900e:	9216      	str	r2, [sp, #88]	; 0x58
 8019010:	9310      	str	r3, [sp, #64]	; 0x40
 8019012:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8019014:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8019018:	9113      	str	r1, [sp, #76]	; 0x4c
 801901a:	9315      	str	r3, [sp, #84]	; 0x54
 801901c:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8019020:	9017      	str	r0, [sp, #92]	; 0x5c
 8019022:	6850      	ldr	r0, [r2, #4]
 8019024:	6812      	ldr	r2, [r2, #0]
 8019026:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8019028:	fb00 1303 	mla	r3, r0, r3, r1
 801902c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019030:	930a      	str	r3, [sp, #40]	; 0x28
 8019032:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019034:	681b      	ldr	r3, [r3, #0]
 8019036:	9312      	str	r3, [sp, #72]	; 0x48
 8019038:	9b07      	ldr	r3, [sp, #28]
 801903a:	009b      	lsls	r3, r3, #2
 801903c:	eef0 9a60 	vmov.f32	s19, s1
 8019040:	eeb0 9a41 	vmov.f32	s18, s2
 8019044:	eeb0 8a62 	vmov.f32	s16, s5
 8019048:	eef0 8a43 	vmov.f32	s17, s6
 801904c:	eef0 ba44 	vmov.f32	s23, s8
 8019050:	eeb0 ba64 	vmov.f32	s22, s9
 8019054:	eef0 aa45 	vmov.f32	s21, s10
 8019058:	930e      	str	r3, [sp, #56]	; 0x38
 801905a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801905c:	2b00      	cmp	r3, #0
 801905e:	dc03      	bgt.n	8019068 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8019060:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8019062:	2b00      	cmp	r3, #0
 8019064:	f340 8352 	ble.w	801970c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8019068:	9b06      	ldr	r3, [sp, #24]
 801906a:	2b00      	cmp	r3, #0
 801906c:	f340 81a8 	ble.w	80193c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3cc>
 8019070:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8019072:	1412      	asrs	r2, r2, #16
 8019074:	ea4f 4324 	mov.w	r3, r4, asr #16
 8019078:	d430      	bmi.n	80190dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801907a:	9807      	ldr	r0, [sp, #28]
 801907c:	1c51      	adds	r1, r2, #1
 801907e:	4288      	cmp	r0, r1
 8019080:	dd2f      	ble.n	80190e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8019082:	2b00      	cmp	r3, #0
 8019084:	db2d      	blt.n	80190e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8019086:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019088:	1c59      	adds	r1, r3, #1
 801908a:	4288      	cmp	r0, r1
 801908c:	dd29      	ble.n	80190e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 801908e:	9b06      	ldr	r3, [sp, #24]
 8019090:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019092:	992b      	ldr	r1, [sp, #172]	; 0xac
 8019094:	3b01      	subs	r3, #1
 8019096:	fb02 1203 	mla	r2, r2, r3, r1
 801909a:	1412      	asrs	r2, r2, #16
 801909c:	d42c      	bmi.n	80190f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801909e:	9907      	ldr	r1, [sp, #28]
 80190a0:	3201      	adds	r2, #1
 80190a2:	4291      	cmp	r1, r2
 80190a4:	dd28      	ble.n	80190f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80190a6:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80190a8:	fb02 4303 	mla	r3, r2, r3, r4
 80190ac:	141b      	asrs	r3, r3, #16
 80190ae:	d423      	bmi.n	80190f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80190b0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80190b2:	3301      	adds	r3, #1
 80190b4:	429a      	cmp	r2, r3
 80190b6:	dd1f      	ble.n	80190f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 80190b8:	9b06      	ldr	r3, [sp, #24]
 80190ba:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 80190be:	f8bd b054 	ldrh.w	fp, [sp, #84]	; 0x54
 80190c2:	9311      	str	r3, [sp, #68]	; 0x44
 80190c4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80190c6:	2b00      	cmp	r3, #0
 80190c8:	f300 81e3 	bgt.w	8019492 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x49e>
 80190cc:	9b06      	ldr	r3, [sp, #24]
 80190ce:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80190d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80190d4:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80190d8:	930a      	str	r3, [sp, #40]	; 0x28
 80190da:	e173      	b.n	80193c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d0>
 80190dc:	1c51      	adds	r1, r2, #1
 80190de:	f040 8162 	bne.w	80193a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 80190e2:	9907      	ldr	r1, [sp, #28]
 80190e4:	428a      	cmp	r2, r1
 80190e6:	f280 815e 	bge.w	80193a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 80190ea:	1c5f      	adds	r7, r3, #1
 80190ec:	f2c0 815b 	blt.w	80193a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 80190f0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80190f2:	4293      	cmp	r3, r2
 80190f4:	f280 8157 	bge.w	80193a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 80190f8:	9b06      	ldr	r3, [sp, #24]
 80190fa:	9314      	str	r3, [sp, #80]	; 0x50
 80190fc:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8019100:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019102:	9311      	str	r3, [sp, #68]	; 0x44
 8019104:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8019106:	2b00      	cmp	r3, #0
 8019108:	dde0      	ble.n	80190cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 801910a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801910c:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8019110:	1412      	asrs	r2, r2, #16
 8019112:	ea4f 4324 	mov.w	r3, r4, asr #16
 8019116:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801911a:	f100 81a1 	bmi.w	8019460 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46c>
 801911e:	9e07      	ldr	r6, [sp, #28]
 8019120:	1c55      	adds	r5, r2, #1
 8019122:	42ae      	cmp	r6, r5
 8019124:	f340 819e 	ble.w	8019464 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8019128:	2b00      	cmp	r3, #0
 801912a:	f2c0 819b 	blt.w	8019464 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 801912e:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8019130:	1c5d      	adds	r5, r3, #1
 8019132:	42ae      	cmp	r6, r5
 8019134:	f340 8196 	ble.w	8019464 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8019138:	9d07      	ldr	r5, [sp, #28]
 801913a:	fb03 2305 	mla	r3, r3, r5, r2
 801913e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019140:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8019144:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8019148:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801914c:	2800      	cmp	r0, #0
 801914e:	f000 8178 	beq.w	8019442 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8019152:	686a      	ldr	r2, [r5, #4]
 8019154:	920b      	str	r2, [sp, #44]	; 0x2c
 8019156:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801915a:	2900      	cmp	r1, #0
 801915c:	f000 817a 	beq.w	8019454 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x460>
 8019160:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019162:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8019164:	18aa      	adds	r2, r5, r2
 8019166:	59ad      	ldr	r5, [r5, r6]
 8019168:	6852      	ldr	r2, [r2, #4]
 801916a:	9508      	str	r5, [sp, #32]
 801916c:	ea4f 6a15 	mov.w	sl, r5, lsr #24
 8019170:	920c      	str	r2, [sp, #48]	; 0x30
 8019172:	0e15      	lsrs	r5, r2, #24
 8019174:	b280      	uxth	r0, r0
 8019176:	b289      	uxth	r1, r1
 8019178:	fb00 fb01 	mul.w	fp, r0, r1
 801917c:	ebcb 1101 	rsb	r1, fp, r1, lsl #4
 8019180:	0100      	lsls	r0, r0, #4
 8019182:	eba0 090b 	sub.w	r9, r0, fp
 8019186:	b289      	uxth	r1, r1
 8019188:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 801918c:	fa1f f989 	uxth.w	r9, r9
 8019190:	1a52      	subs	r2, r2, r1
 8019192:	b292      	uxth	r2, r2
 8019194:	fb09 f008 	mul.w	r0, r9, r8
 8019198:	fb02 000c 	mla	r0, r2, ip, r0
 801919c:	fb01 000a 	mla	r0, r1, sl, r0
 80191a0:	fb0b 0005 	mla	r0, fp, r5, r0
 80191a4:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80191a8:	2800      	cmp	r0, #0
 80191aa:	f000 80ef 	beq.w	801938c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 80191ae:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80191b2:	d01b      	beq.n	80191ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f8>
 80191b4:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80191b8:	fb0c fe0e 	mul.w	lr, ip, lr
 80191bc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80191c0:	fb0c fc03 	mul.w	ip, ip, r3
 80191c4:	ea4f 231e 	mov.w	r3, lr, lsr #8
 80191c8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80191cc:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80191d0:	4473      	add	r3, lr
 80191d2:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 80191d6:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 80191da:	0a1b      	lsrs	r3, r3, #8
 80191dc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80191e0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80191e4:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80191e8:	ea43 030e 	orr.w	r3, r3, lr
 80191ec:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80191f0:	d01e      	beq.n	8019230 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 80191f2:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80191f4:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80191f8:	fb08 fc0c 	mul.w	ip, r8, ip
 80191fc:	f406 4e7f 	and.w	lr, r6, #65280	; 0xff00
 8019200:	fb08 f80e 	mul.w	r8, r8, lr
 8019204:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8019208:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801920c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019210:	44e6      	add	lr, ip
 8019212:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8019216:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801921a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801921e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8019222:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019226:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801922a:	ea4e 0608 	orr.w	r6, lr, r8
 801922e:	960b      	str	r6, [sp, #44]	; 0x2c
 8019230:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019234:	d01e      	beq.n	8019274 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x280>
 8019236:	9e08      	ldr	r6, [sp, #32]
 8019238:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801923c:	fb0a f808 	mul.w	r8, sl, r8
 8019240:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8019244:	fb0a fa0c 	mul.w	sl, sl, ip
 8019248:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801924c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019250:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8019254:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019258:	44c6      	add	lr, r8
 801925a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801925e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019262:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019266:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801926a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801926e:	ea4e 060a 	orr.w	r6, lr, sl
 8019272:	9608      	str	r6, [sp, #32]
 8019274:	2dff      	cmp	r5, #255	; 0xff
 8019276:	d01d      	beq.n	80192b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8019278:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801927a:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801927e:	fb05 f808 	mul.w	r8, r5, r8
 8019282:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8019286:	fb05 f50c 	mul.w	r5, r5, ip
 801928a:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801928e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019292:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8019296:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801929a:	44c6      	add	lr, r8
 801929c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80192a0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80192a4:	0a2d      	lsrs	r5, r5, #8
 80192a6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80192aa:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80192ae:	ea4e 0505 	orr.w	r5, lr, r5
 80192b2:	950c      	str	r5, [sp, #48]	; 0x30
 80192b4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80192b6:	9e08      	ldr	r6, [sp, #32]
 80192b8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80192bc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80192c0:	fb09 f505 	mul.w	r5, r9, r5
 80192c4:	fb02 550c 	mla	r5, r2, ip, r5
 80192c8:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80192cc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80192ce:	fb01 550c 	mla	r5, r1, ip, r5
 80192d2:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80192d6:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80192d8:	fb0b 550c 	mla	r5, fp, ip, r5
 80192dc:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 80192e0:	fb09 f90c 	mul.w	r9, r9, ip
 80192e4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80192e8:	fb02 9303 	mla	r3, r2, r3, r9
 80192ec:	9a08      	ldr	r2, [sp, #32]
 80192ee:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 80192f2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80192f4:	fb01 330e 	mla	r3, r1, lr, r3
 80192f8:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80192fc:	fb0b 3b01 	mla	fp, fp, r1, r3
 8019300:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019302:	0a2d      	lsrs	r5, r5, #8
 8019304:	f8b3 c000 	ldrh.w	ip, [r3]
 8019308:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801930c:	fb00 f307 	mul.w	r3, r0, r7
 8019310:	1c58      	adds	r0, r3, #1
 8019312:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8019316:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 801931a:	ea45 050b 	orr.w	r5, r5, fp
 801931e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8019322:	0c29      	lsrs	r1, r5, #16
 8019324:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8019328:	ea4f 232c 	mov.w	r3, ip, asr #8
 801932c:	b2c0      	uxtb	r0, r0
 801932e:	fb11 f107 	smulbb	r1, r1, r7
 8019332:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8019336:	fb03 1300 	mla	r3, r3, r0, r1
 801933a:	b299      	uxth	r1, r3
 801933c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8019340:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8019344:	fb13 f307 	smulbb	r3, r3, r7
 8019348:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801934c:	fb02 3200 	mla	r2, r2, r0, r3
 8019350:	b2ed      	uxtb	r5, r5
 8019352:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8019356:	b2db      	uxtb	r3, r3
 8019358:	fb15 f507 	smulbb	r5, r5, r7
 801935c:	fb03 5500 	mla	r5, r3, r0, r5
 8019360:	b292      	uxth	r2, r2
 8019362:	b2ad      	uxth	r5, r5
 8019364:	1c4b      	adds	r3, r1, #1
 8019366:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801936a:	1c68      	adds	r0, r5, #1
 801936c:	1c51      	adds	r1, r2, #1
 801936e:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8019372:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019376:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801937a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801937e:	0952      	lsrs	r2, r2, #5
 8019380:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019384:	432b      	orrs	r3, r5
 8019386:	4313      	orrs	r3, r2
 8019388:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801938a:	8013      	strh	r3, [r2, #0]
 801938c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801938e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019390:	3302      	adds	r3, #2
 8019392:	9311      	str	r3, [sp, #68]	; 0x44
 8019394:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019396:	4413      	add	r3, r2
 8019398:	932b      	str	r3, [sp, #172]	; 0xac
 801939a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801939c:	441c      	add	r4, r3
 801939e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80193a0:	3b01      	subs	r3, #1
 80193a2:	9314      	str	r3, [sp, #80]	; 0x50
 80193a4:	e6ae      	b.n	8019104 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 80193a6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80193a8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80193aa:	4413      	add	r3, r2
 80193ac:	932b      	str	r3, [sp, #172]	; 0xac
 80193ae:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80193b0:	441c      	add	r4, r3
 80193b2:	9b06      	ldr	r3, [sp, #24]
 80193b4:	3b01      	subs	r3, #1
 80193b6:	9306      	str	r3, [sp, #24]
 80193b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80193ba:	3302      	adds	r3, #2
 80193bc:	930a      	str	r3, [sp, #40]	; 0x28
 80193be:	e653      	b.n	8019068 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 80193c0:	f47f ae65 	bne.w	801908e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 80193c4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80193c6:	2b00      	cmp	r3, #0
 80193c8:	f340 81a0 	ble.w	801970c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 80193cc:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80193d0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80193d4:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80193d8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80193da:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80193de:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80193e2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80193e6:	eef0 6a48 	vmov.f32	s13, s16
 80193ea:	ee69 7a27 	vmul.f32	s15, s18, s15
 80193ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80193f2:	ee37 8a48 	vsub.f32	s16, s14, s16
 80193f6:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 80193fa:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80193fe:	eef0 6a68 	vmov.f32	s13, s17
 8019402:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019406:	ee18 2a10 	vmov	r2, s16
 801940a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801940e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019412:	ee18 2a90 	vmov	r2, s17
 8019416:	932d      	str	r3, [sp, #180]	; 0xb4
 8019418:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801941a:	fb92 f3f3 	sdiv	r3, r2, r3
 801941e:	932e      	str	r3, [sp, #184]	; 0xb8
 8019420:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019422:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8019424:	3b01      	subs	r3, #1
 8019426:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801942a:	9313      	str	r3, [sp, #76]	; 0x4c
 801942c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801942e:	bf08      	it	eq
 8019430:	4613      	moveq	r3, r2
 8019432:	ee16 4a90 	vmov	r4, s13
 8019436:	9306      	str	r3, [sp, #24]
 8019438:	eef0 8a67 	vmov.f32	s17, s15
 801943c:	eeb0 8a47 	vmov.f32	s16, s14
 8019440:	e60b      	b.n	801905a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8019442:	b151      	cbz	r1, 801945a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8019444:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019446:	58aa      	ldr	r2, [r5, r2]
 8019448:	9208      	str	r2, [sp, #32]
 801944a:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 801944e:	25ff      	movs	r5, #255	; 0xff
 8019450:	46a8      	mov	r8, r5
 8019452:	e68f      	b.n	8019174 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8019454:	25ff      	movs	r5, #255	; 0xff
 8019456:	46aa      	mov	sl, r5
 8019458:	e68c      	b.n	8019174 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 801945a:	25ff      	movs	r5, #255	; 0xff
 801945c:	46aa      	mov	sl, r5
 801945e:	e7f7      	b.n	8019450 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45c>
 8019460:	1c56      	adds	r6, r2, #1
 8019462:	d193      	bne.n	801938c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8019464:	9d07      	ldr	r5, [sp, #28]
 8019466:	4295      	cmp	r5, r2
 8019468:	dd90      	ble.n	801938c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801946a:	1c5d      	adds	r5, r3, #1
 801946c:	db8e      	blt.n	801938c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801946e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8019470:	429d      	cmp	r5, r3
 8019472:	dd8b      	ble.n	801938c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8019474:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8019476:	9201      	str	r2, [sp, #4]
 8019478:	e9cd 3002 	strd	r3, r0, [sp, #8]
 801947c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801947e:	9300      	str	r3, [sp, #0]
 8019480:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8019484:	9b07      	ldr	r3, [sp, #28]
 8019486:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8019488:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
 801948c:	f7ff fc4e 	bl	8018d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8019490:	e77c      	b.n	801938c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8019492:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019494:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8019496:	9d07      	ldr	r5, [sp, #28]
 8019498:	1412      	asrs	r2, r2, #16
 801949a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801949e:	1423      	asrs	r3, r4, #16
 80194a0:	fb05 2303 	mla	r3, r5, r3, r2
 80194a4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80194a6:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 80194aa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80194ae:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80194b2:	0e1e      	lsrs	r6, r3, #24
 80194b4:	2900      	cmp	r1, #0
 80194b6:	f000 811a 	beq.w	80196ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fa>
 80194ba:	686a      	ldr	r2, [r5, #4]
 80194bc:	920d      	str	r2, [sp, #52]	; 0x34
 80194be:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 80194c2:	2800      	cmp	r0, #0
 80194c4:	f000 811c 	beq.w	8019700 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>
 80194c8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80194ca:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 80194cc:	18aa      	adds	r2, r5, r2
 80194ce:	59ed      	ldr	r5, [r5, r7]
 80194d0:	6852      	ldr	r2, [r2, #4]
 80194d2:	9509      	str	r5, [sp, #36]	; 0x24
 80194d4:	ea4f 6815 	mov.w	r8, r5, lsr #24
 80194d8:	920f      	str	r2, [sp, #60]	; 0x3c
 80194da:	0e15      	lsrs	r5, r2, #24
 80194dc:	b289      	uxth	r1, r1
 80194de:	b280      	uxth	r0, r0
 80194e0:	fb01 f900 	mul.w	r9, r1, r0
 80194e4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80194e8:	0109      	lsls	r1, r1, #4
 80194ea:	eba1 0e09 	sub.w	lr, r1, r9
 80194ee:	b280      	uxth	r0, r0
 80194f0:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 80194f4:	fa1f fe8e 	uxth.w	lr, lr
 80194f8:	1a12      	subs	r2, r2, r0
 80194fa:	b292      	uxth	r2, r2
 80194fc:	fb0e f10c 	mul.w	r1, lr, ip
 8019500:	fb02 1106 	mla	r1, r2, r6, r1
 8019504:	fb00 1108 	mla	r1, r0, r8, r1
 8019508:	fb09 1105 	mla	r1, r9, r5, r1
 801950c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8019510:	2900      	cmp	r1, #0
 8019512:	f000 80e0 	beq.w	80196d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8019516:	2eff      	cmp	r6, #255	; 0xff
 8019518:	d016      	beq.n	8019548 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x554>
 801951a:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 801951e:	4377      	muls	r7, r6
 8019520:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019524:	435e      	muls	r6, r3
 8019526:	0a3b      	lsrs	r3, r7, #8
 8019528:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801952c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019530:	443b      	add	r3, r7
 8019532:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8019536:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801953a:	0a1b      	lsrs	r3, r3, #8
 801953c:	0a3f      	lsrs	r7, r7, #8
 801953e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019542:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8019546:	433b      	orrs	r3, r7
 8019548:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801954c:	d01d      	beq.n	801958a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 801954e:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8019550:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8019552:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019556:	fb0c f606 	mul.w	r6, ip, r6
 801955a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801955e:	fb0c fc07 	mul.w	ip, ip, r7
 8019562:	0a37      	lsrs	r7, r6, #8
 8019564:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019568:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 801956c:	4437      	add	r7, r6
 801956e:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 8019572:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8019576:	0a3f      	lsrs	r7, r7, #8
 8019578:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801957c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8019580:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019584:	ea47 060c 	orr.w	r6, r7, ip
 8019588:	960d      	str	r6, [sp, #52]	; 0x34
 801958a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801958e:	d01d      	beq.n	80195cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d8>
 8019590:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8019592:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8019596:	fb08 fc0c 	mul.w	ip, r8, ip
 801959a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801959e:	fb08 f806 	mul.w	r8, r8, r6
 80195a2:	ea4f 271c 	mov.w	r7, ip, lsr #8
 80195a6:	f508 7680 	add.w	r6, r8, #256	; 0x100
 80195aa:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80195ae:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80195b2:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 80195b6:	4467      	add	r7, ip
 80195b8:	0a3f      	lsrs	r7, r7, #8
 80195ba:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80195be:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80195c2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80195c6:	ea47 0608 	orr.w	r6, r7, r8
 80195ca:	9609      	str	r6, [sp, #36]	; 0x24
 80195cc:	2dff      	cmp	r5, #255	; 0xff
 80195ce:	d01a      	beq.n	8019606 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x612>
 80195d0:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 80195d2:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 80195d6:	fb05 fc0c 	mul.w	ip, r5, ip
 80195da:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80195de:	4375      	muls	r5, r6
 80195e0:	ea4f 271c 	mov.w	r7, ip, lsr #8
 80195e4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80195e8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80195ec:	f505 7680 	add.w	r6, r5, #256	; 0x100
 80195f0:	4467      	add	r7, ip
 80195f2:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 80195f6:	0a3f      	lsrs	r7, r7, #8
 80195f8:	0a2d      	lsrs	r5, r5, #8
 80195fa:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80195fe:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8019602:	433d      	orrs	r5, r7
 8019604:	950f      	str	r5, [sp, #60]	; 0x3c
 8019606:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8019608:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801960c:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 8019610:	fb0e f505 	mul.w	r5, lr, r5
 8019614:	fb02 5506 	mla	r5, r2, r6, r5
 8019618:	9e09      	ldr	r6, [sp, #36]	; 0x24
 801961a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801961e:	fb00 5506 	mla	r5, r0, r6, r5
 8019622:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8019624:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019628:	fb09 5506 	mla	r5, r9, r6, r5
 801962c:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 801962e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019632:	fb0e fe06 	mul.w	lr, lr, r6
 8019636:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801963a:	fb02 e303 	mla	r3, r2, r3, lr
 801963e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019640:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8019644:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019646:	fb00 3307 	mla	r3, r0, r7, r3
 801964a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801964e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8019652:	fb01 f10b 	mul.w	r1, r1, fp
 8019656:	0a2d      	lsrs	r5, r5, #8
 8019658:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801965c:	f8ba 0000 	ldrh.w	r0, [sl]
 8019660:	1c4b      	adds	r3, r1, #1
 8019662:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8019666:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801966a:	ea45 050c 	orr.w	r5, r5, ip
 801966e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019672:	1202      	asrs	r2, r0, #8
 8019674:	0c2b      	lsrs	r3, r5, #16
 8019676:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801967a:	b2c9      	uxtb	r1, r1
 801967c:	fb13 f30b 	smulbb	r3, r3, fp
 8019680:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019684:	fb02 3201 	mla	r2, r2, r1, r3
 8019688:	f3c5 2607 	ubfx	r6, r5, #8, #8
 801968c:	10c3      	asrs	r3, r0, #3
 801968e:	b2ed      	uxtb	r5, r5
 8019690:	00c0      	lsls	r0, r0, #3
 8019692:	b2c0      	uxtb	r0, r0
 8019694:	fb15 f50b 	smulbb	r5, r5, fp
 8019698:	fb00 5001 	mla	r0, r0, r1, r5
 801969c:	b292      	uxth	r2, r2
 801969e:	fb16 f60b 	smulbb	r6, r6, fp
 80196a2:	b280      	uxth	r0, r0
 80196a4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80196a8:	fb03 6301 	mla	r3, r3, r1, r6
 80196ac:	1c51      	adds	r1, r2, #1
 80196ae:	1c46      	adds	r6, r0, #1
 80196b0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80196b4:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 80196b8:	b29b      	uxth	r3, r3
 80196ba:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80196be:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80196c2:	4332      	orrs	r2, r6
 80196c4:	1c5e      	adds	r6, r3, #1
 80196c6:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 80196ca:	095b      	lsrs	r3, r3, #5
 80196cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80196d0:	431a      	orrs	r2, r3
 80196d2:	f8aa 2000 	strh.w	r2, [sl]
 80196d6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80196d8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80196da:	4413      	add	r3, r2
 80196dc:	932b      	str	r3, [sp, #172]	; 0xac
 80196de:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80196e0:	441c      	add	r4, r3
 80196e2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80196e4:	3b01      	subs	r3, #1
 80196e6:	f10a 0a02 	add.w	sl, sl, #2
 80196ea:	9311      	str	r3, [sp, #68]	; 0x44
 80196ec:	e4ea      	b.n	80190c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 80196ee:	b150      	cbz	r0, 8019706 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x712>
 80196f0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80196f2:	58aa      	ldr	r2, [r5, r2]
 80196f4:	9209      	str	r2, [sp, #36]	; 0x24
 80196f6:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80196fa:	25ff      	movs	r5, #255	; 0xff
 80196fc:	46ac      	mov	ip, r5
 80196fe:	e6ed      	b.n	80194dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 8019700:	25ff      	movs	r5, #255	; 0xff
 8019702:	46a8      	mov	r8, r5
 8019704:	e6ea      	b.n	80194dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 8019706:	25ff      	movs	r5, #255	; 0xff
 8019708:	46a8      	mov	r8, r5
 801970a:	e7f7      	b.n	80196fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 801970c:	b019      	add	sp, #100	; 0x64
 801970e:	ecbd 8b08 	vpop	{d8-d11}
 8019712:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019718 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8019718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801971c:	8808      	ldrh	r0, [r1, #0]
 801971e:	b085      	sub	sp, #20
 8019720:	1206      	asrs	r6, r0, #8
 8019722:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 8019726:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801972a:	9600      	str	r6, [sp, #0]
 801972c:	10c6      	asrs	r6, r0, #3
 801972e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019732:	9601      	str	r6, [sp, #4]
 8019734:	00c0      	lsls	r0, r0, #3
 8019736:	fb04 c603 	mla	r6, r4, r3, ip
 801973a:	b2c0      	uxtb	r0, r0
 801973c:	4691      	mov	r9, r2
 801973e:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 8019742:	9a00      	ldr	r2, [sp, #0]
 8019744:	9002      	str	r0, [sp, #8]
 8019746:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 801974a:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 801974e:	9a01      	ldr	r2, [sp, #4]
 8019750:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8019754:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8019758:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 801975c:	2c00      	cmp	r4, #0
 801975e:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8019762:	db3a      	blt.n	80197da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8019764:	45a0      	cmp	r8, r4
 8019766:	dd38      	ble.n	80197da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8019768:	f1bc 0f00 	cmp.w	ip, #0
 801976c:	db33      	blt.n	80197d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 801976e:	4563      	cmp	r3, ip
 8019770:	dd31      	ble.n	80197d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8019772:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8019776:	f11c 0601 	adds.w	r6, ip, #1
 801977a:	d431      	bmi.n	80197e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 801977c:	42b3      	cmp	r3, r6
 801977e:	dd2f      	ble.n	80197e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8019780:	b375      	cbz	r5, 80197e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8019782:	f8de 6004 	ldr.w	r6, [lr, #4]
 8019786:	3401      	adds	r4, #1
 8019788:	d42e      	bmi.n	80197e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801978a:	45a0      	cmp	r8, r4
 801978c:	dd2c      	ble.n	80197e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801978e:	b35f      	cbz	r7, 80197e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8019790:	f1bc 0f00 	cmp.w	ip, #0
 8019794:	db26      	blt.n	80197e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8019796:	4563      	cmp	r3, ip
 8019798:	dd24      	ble.n	80197e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 801979a:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 801979e:	f11c 0c01 	adds.w	ip, ip, #1
 80197a2:	d405      	bmi.n	80197b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 80197a4:	4563      	cmp	r3, ip
 80197a6:	dd03      	ble.n	80197b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 80197a8:	b115      	cbz	r5, 80197b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 80197aa:	3301      	adds	r3, #1
 80197ac:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 80197b0:	2d0f      	cmp	r5, #15
 80197b2:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80197b6:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80197ba:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80197be:	ea4f 6810 	mov.w	r8, r0, lsr #24
 80197c2:	d801      	bhi.n	80197c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 80197c4:	2f0f      	cmp	r7, #15
 80197c6:	d911      	bls.n	80197ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 80197c8:	4b7b      	ldr	r3, [pc, #492]	; (80199b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 80197ca:	4a7c      	ldr	r2, [pc, #496]	; (80199bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 80197cc:	487c      	ldr	r0, [pc, #496]	; (80199c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a8>)
 80197ce:	f240 3173 	movw	r1, #883	; 0x373
 80197d2:	f001 fce7 	bl	801b1a4 <__assert_func>
 80197d6:	4602      	mov	r2, r0
 80197d8:	e7cd      	b.n	8019776 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 80197da:	4606      	mov	r6, r0
 80197dc:	4602      	mov	r2, r0
 80197de:	e7d2      	b.n	8019786 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 80197e0:	4606      	mov	r6, r0
 80197e2:	e7d0      	b.n	8019786 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 80197e4:	4604      	mov	r4, r0
 80197e6:	e7da      	b.n	801979e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 80197e8:	4604      	mov	r4, r0
 80197ea:	e7e1      	b.n	80197b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 80197ec:	b2ab      	uxth	r3, r5
 80197ee:	b2bf      	uxth	r7, r7
 80197f0:	fb03 fe07 	mul.w	lr, r3, r7
 80197f4:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80197f8:	011b      	lsls	r3, r3, #4
 80197fa:	eba3 0c0e 	sub.w	ip, r3, lr
 80197fe:	b2bf      	uxth	r7, r7
 8019800:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8019804:	fa1f fc8c 	uxth.w	ip, ip
 8019808:	1bed      	subs	r5, r5, r7
 801980a:	b2ad      	uxth	r5, r5
 801980c:	fb0c f30a 	mul.w	r3, ip, sl
 8019810:	fb05 330b 	mla	r3, r5, fp, r3
 8019814:	fb07 3309 	mla	r3, r7, r9, r3
 8019818:	fb0e 3308 	mla	r3, lr, r8, r3
 801981c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019820:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8019824:	9303      	str	r3, [sp, #12]
 8019826:	d018      	beq.n	801985a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 8019828:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 801982c:	fb0b f303 	mul.w	r3, fp, r3
 8019830:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019834:	fb0b fb02 	mul.w	fp, fp, r2
 8019838:	0a1a      	lsrs	r2, r3, #8
 801983a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801983e:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8019842:	441a      	add	r2, r3
 8019844:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8019848:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 801984c:	0a12      	lsrs	r2, r2, #8
 801984e:	0a1b      	lsrs	r3, r3, #8
 8019850:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019854:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019858:	431a      	orrs	r2, r3
 801985a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801985e:	d019      	beq.n	8019894 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 8019860:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8019864:	fb0a fb0b 	mul.w	fp, sl, fp
 8019868:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801986c:	fb0a fa06 	mul.w	sl, sl, r6
 8019870:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8019874:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019878:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801987c:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8019880:	445e      	add	r6, fp
 8019882:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8019886:	0a36      	lsrs	r6, r6, #8
 8019888:	0a1b      	lsrs	r3, r3, #8
 801988a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801988e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019892:	431e      	orrs	r6, r3
 8019894:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019898:	d019      	beq.n	80198ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 801989a:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801989e:	fb09 fa0a 	mul.w	sl, r9, sl
 80198a2:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80198a6:	fb09 f904 	mul.w	r9, r9, r4
 80198aa:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80198ae:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80198b2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80198b6:	f509 7380 	add.w	r3, r9, #256	; 0x100
 80198ba:	4454      	add	r4, sl
 80198bc:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 80198c0:	0a24      	lsrs	r4, r4, #8
 80198c2:	0a1b      	lsrs	r3, r3, #8
 80198c4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80198c8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80198cc:	431c      	orrs	r4, r3
 80198ce:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80198d2:	d019      	beq.n	8019908 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 80198d4:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 80198d8:	fb08 f909 	mul.w	r9, r8, r9
 80198dc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80198e0:	fb08 f800 	mul.w	r8, r8, r0
 80198e4:	ea4f 2019 	mov.w	r0, r9, lsr #8
 80198e8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80198ec:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80198f0:	f508 7380 	add.w	r3, r8, #256	; 0x100
 80198f4:	4448      	add	r0, r9
 80198f6:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80198fa:	0a00      	lsrs	r0, r0, #8
 80198fc:	0a1b      	lsrs	r3, r3, #8
 80198fe:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8019902:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019906:	4318      	orrs	r0, r3
 8019908:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801990c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019910:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8019914:	fb0c f808 	mul.w	r8, ip, r8
 8019918:	fb0c f606 	mul.w	r6, ip, r6
 801991c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8019920:	fb05 8803 	mla	r8, r5, r3, r8
 8019924:	fb05 6202 	mla	r2, r5, r2, r6
 8019928:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 801992c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019930:	fb07 8803 	mla	r8, r7, r3, r8
 8019934:	fb07 2704 	mla	r7, r7, r4, r2
 8019938:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 801993c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019940:	fb0e 8303 	mla	r3, lr, r3, r8
 8019944:	fb0e 7e00 	mla	lr, lr, r0, r7
 8019948:	0a1b      	lsrs	r3, r3, #8
 801994a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801994e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019952:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8019956:	ea43 0e0e 	orr.w	lr, r3, lr
 801995a:	9b03      	ldr	r3, [sp, #12]
 801995c:	9800      	ldr	r0, [sp, #0]
 801995e:	9c01      	ldr	r4, [sp, #4]
 8019960:	9a02      	ldr	r2, [sp, #8]
 8019962:	43db      	mvns	r3, r3
 8019964:	b2db      	uxtb	r3, r3
 8019966:	4358      	muls	r0, r3
 8019968:	435c      	muls	r4, r3
 801996a:	435a      	muls	r2, r3
 801996c:	1c43      	adds	r3, r0, #1
 801996e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8019972:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8019976:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801997a:	4b12      	ldr	r3, [pc, #72]	; (80199c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2ac>)
 801997c:	ea03 2300 	and.w	r3, r3, r0, lsl #8
 8019980:	1c50      	adds	r0, r2, #1
 8019982:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019986:	fa5f f28e 	uxtb.w	r2, lr
 801998a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801998e:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8019992:	1c62      	adds	r2, r4, #1
 8019994:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8019998:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 801999c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 80199a0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80199a4:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80199a8:	ea43 0e0e 	orr.w	lr, r3, lr
 80199ac:	f8a1 e000 	strh.w	lr, [r1]
 80199b0:	b005      	add	sp, #20
 80199b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80199b6:	bf00      	nop
 80199b8:	0801f4bf 	.word	0x0801f4bf
 80199bc:	0801fa1d 	.word	0x0801fa1d
 80199c0:	0801f547 	.word	0x0801f547
 80199c4:	fffff800 	.word	0xfffff800

080199c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80199c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199cc:	ed2d 8b08 	vpush	{d8-d11}
 80199d0:	b097      	sub	sp, #92	; 0x5c
 80199d2:	eeb0 aa40 	vmov.f32	s20, s0
 80199d6:	9306      	str	r3, [sp, #24]
 80199d8:	f9bd 30c0 	ldrsh.w	r3, [sp, #192]	; 0xc0
 80199dc:	9307      	str	r3, [sp, #28]
 80199de:	9214      	str	r2, [sp, #80]	; 0x50
 80199e0:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 80199e4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80199e6:	9112      	str	r1, [sp, #72]	; 0x48
 80199e8:	9310      	str	r3, [sp, #64]	; 0x40
 80199ea:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80199ee:	9015      	str	r0, [sp, #84]	; 0x54
 80199f0:	6850      	ldr	r0, [r2, #4]
 80199f2:	6812      	ldr	r2, [r2, #0]
 80199f4:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80199f6:	fb00 1303 	mla	r3, r0, r3, r1
 80199fa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80199fe:	930a      	str	r3, [sp, #40]	; 0x28
 8019a00:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8019a02:	681b      	ldr	r3, [r3, #0]
 8019a04:	9311      	str	r3, [sp, #68]	; 0x44
 8019a06:	9b07      	ldr	r3, [sp, #28]
 8019a08:	009b      	lsls	r3, r3, #2
 8019a0a:	eef0 9a60 	vmov.f32	s19, s1
 8019a0e:	eeb0 9a41 	vmov.f32	s18, s2
 8019a12:	eeb0 8a62 	vmov.f32	s16, s5
 8019a16:	eef0 8a43 	vmov.f32	s17, s6
 8019a1a:	eef0 ba44 	vmov.f32	s23, s8
 8019a1e:	eeb0 ba64 	vmov.f32	s22, s9
 8019a22:	eef0 aa45 	vmov.f32	s21, s10
 8019a26:	930e      	str	r3, [sp, #56]	; 0x38
 8019a28:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019a2a:	2b00      	cmp	r3, #0
 8019a2c:	dc03      	bgt.n	8019a36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8019a2e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8019a30:	2b00      	cmp	r3, #0
 8019a32:	f340 8361 	ble.w	801a0f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8019a36:	9b06      	ldr	r3, [sp, #24]
 8019a38:	2b00      	cmp	r3, #0
 8019a3a:	f340 819b 	ble.w	8019d74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 8019a3e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019a40:	1412      	asrs	r2, r2, #16
 8019a42:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019a46:	d42e      	bmi.n	8019aa6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8019a48:	9807      	ldr	r0, [sp, #28]
 8019a4a:	1c51      	adds	r1, r2, #1
 8019a4c:	4288      	cmp	r0, r1
 8019a4e:	dd2d      	ble.n	8019aac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8019a50:	2b00      	cmp	r3, #0
 8019a52:	db2b      	blt.n	8019aac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8019a54:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019a56:	1c59      	adds	r1, r3, #1
 8019a58:	4288      	cmp	r0, r1
 8019a5a:	dd27      	ble.n	8019aac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8019a5c:	9b06      	ldr	r3, [sp, #24]
 8019a5e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8019a60:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8019a62:	3b01      	subs	r3, #1
 8019a64:	fb02 1203 	mla	r2, r2, r3, r1
 8019a68:	1412      	asrs	r2, r2, #16
 8019a6a:	d42a      	bmi.n	8019ac2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8019a6c:	9907      	ldr	r1, [sp, #28]
 8019a6e:	3201      	adds	r2, #1
 8019a70:	4291      	cmp	r1, r2
 8019a72:	dd26      	ble.n	8019ac2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8019a74:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8019a76:	fb02 5303 	mla	r3, r2, r3, r5
 8019a7a:	141b      	asrs	r3, r3, #16
 8019a7c:	d421      	bmi.n	8019ac2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8019a7e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019a80:	3301      	adds	r3, #1
 8019a82:	429a      	cmp	r2, r3
 8019a84:	dd1d      	ble.n	8019ac2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8019a86:	9b06      	ldr	r3, [sp, #24]
 8019a88:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8019a8c:	9313      	str	r3, [sp, #76]	; 0x4c
 8019a8e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019a90:	2b00      	cmp	r3, #0
 8019a92:	f300 81e3 	bgt.w	8019e5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x494>
 8019a96:	9b06      	ldr	r3, [sp, #24]
 8019a98:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019a9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019a9e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8019aa2:	930a      	str	r3, [sp, #40]	; 0x28
 8019aa4:	e168      	b.n	8019d78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b0>
 8019aa6:	1c51      	adds	r1, r2, #1
 8019aa8:	f040 8157 	bne.w	8019d5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8019aac:	9907      	ldr	r1, [sp, #28]
 8019aae:	428a      	cmp	r2, r1
 8019ab0:	f280 8153 	bge.w	8019d5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8019ab4:	1c5f      	adds	r7, r3, #1
 8019ab6:	f2c0 8150 	blt.w	8019d5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8019aba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019abc:	4293      	cmp	r3, r2
 8019abe:	f280 814c 	bge.w	8019d5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8019ac2:	9b06      	ldr	r3, [sp, #24]
 8019ac4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8019ac6:	9313      	str	r3, [sp, #76]	; 0x4c
 8019ac8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019aca:	2b00      	cmp	r3, #0
 8019acc:	dde3      	ble.n	8019a96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 8019ace:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8019ad0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019ad2:	1409      	asrs	r1, r1, #16
 8019ad4:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019ad8:	f3c2 3203 	ubfx	r2, r2, #12, #4
 8019adc:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019ae0:	f100 81a3 	bmi.w	8019e2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x462>
 8019ae4:	9c07      	ldr	r4, [sp, #28]
 8019ae6:	1c4e      	adds	r6, r1, #1
 8019ae8:	42b4      	cmp	r4, r6
 8019aea:	f340 81a0 	ble.w	8019e2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8019aee:	2b00      	cmp	r3, #0
 8019af0:	f2c0 819d 	blt.w	8019e2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8019af4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019af6:	1c5e      	adds	r6, r3, #1
 8019af8:	42b4      	cmp	r4, r6
 8019afa:	f340 8198 	ble.w	8019e2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8019afe:	9c07      	ldr	r4, [sp, #28]
 8019b00:	fb03 1304 	mla	r3, r3, r4, r1
 8019b04:	9911      	ldr	r1, [sp, #68]	; 0x44
 8019b06:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 8019b0a:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8019b0e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8019b12:	2a00      	cmp	r2, #0
 8019b14:	f000 816f 	beq.w	8019df6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 8019b18:	6871      	ldr	r1, [r6, #4]
 8019b1a:	910b      	str	r1, [sp, #44]	; 0x2c
 8019b1c:	ea4f 6811 	mov.w	r8, r1, lsr #24
 8019b20:	2800      	cmp	r0, #0
 8019b22:	f000 8171 	beq.w	8019e08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x440>
 8019b26:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019b28:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019b2a:	1871      	adds	r1, r6, r1
 8019b2c:	5934      	ldr	r4, [r6, r4]
 8019b2e:	6849      	ldr	r1, [r1, #4]
 8019b30:	9408      	str	r4, [sp, #32]
 8019b32:	ea4f 6a14 	mov.w	sl, r4, lsr #24
 8019b36:	910c      	str	r1, [sp, #48]	; 0x30
 8019b38:	0e0e      	lsrs	r6, r1, #24
 8019b3a:	b292      	uxth	r2, r2
 8019b3c:	b280      	uxth	r0, r0
 8019b3e:	fb02 fb00 	mul.w	fp, r2, r0
 8019b42:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8019b46:	0112      	lsls	r2, r2, #4
 8019b48:	eba2 090b 	sub.w	r9, r2, fp
 8019b4c:	b280      	uxth	r0, r0
 8019b4e:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8019b52:	fa1f f989 	uxth.w	r9, r9
 8019b56:	1a09      	subs	r1, r1, r0
 8019b58:	b289      	uxth	r1, r1
 8019b5a:	fb09 f208 	mul.w	r2, r9, r8
 8019b5e:	fb01 220c 	mla	r2, r1, ip, r2
 8019b62:	fb00 220a 	mla	r2, r0, sl, r2
 8019b66:	fb0b 2206 	mla	r2, fp, r6, r2
 8019b6a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8019b6e:	2a00      	cmp	r2, #0
 8019b70:	f000 80e8 	beq.w	8019d44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8019b74:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019b78:	d01b      	beq.n	8019bb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 8019b7a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8019b7e:	fb0c fe0e 	mul.w	lr, ip, lr
 8019b82:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019b86:	fb0c fc03 	mul.w	ip, ip, r3
 8019b8a:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8019b8e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019b92:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8019b96:	4473      	add	r3, lr
 8019b98:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8019b9c:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8019ba0:	0a1b      	lsrs	r3, r3, #8
 8019ba2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019ba6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019baa:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8019bae:	ea43 030e 	orr.w	r3, r3, lr
 8019bb2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019bb6:	d01e      	beq.n	8019bf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x22e>
 8019bb8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019bba:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019bbe:	fb08 fc0c 	mul.w	ip, r8, ip
 8019bc2:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8019bc6:	fb08 f80e 	mul.w	r8, r8, lr
 8019bca:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8019bce:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019bd2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019bd6:	44e6      	add	lr, ip
 8019bd8:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8019bdc:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8019be0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019be4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8019be8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019bec:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8019bf0:	ea4e 0408 	orr.w	r4, lr, r8
 8019bf4:	940b      	str	r4, [sp, #44]	; 0x2c
 8019bf6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8019bfa:	d01e      	beq.n	8019c3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x272>
 8019bfc:	9c08      	ldr	r4, [sp, #32]
 8019bfe:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8019c02:	fb0a f808 	mul.w	r8, sl, r8
 8019c06:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8019c0a:	fb0a fa0c 	mul.w	sl, sl, ip
 8019c0e:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8019c12:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c16:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8019c1a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8019c1e:	44c6      	add	lr, r8
 8019c20:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8019c24:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019c28:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8019c2c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c30:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8019c34:	ea4e 040a 	orr.w	r4, lr, sl
 8019c38:	9408      	str	r4, [sp, #32]
 8019c3a:	2eff      	cmp	r6, #255	; 0xff
 8019c3c:	d01d      	beq.n	8019c7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b2>
 8019c3e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8019c40:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 8019c44:	fb06 f808 	mul.w	r8, r6, r8
 8019c48:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8019c4c:	fb06 f60c 	mul.w	r6, r6, ip
 8019c50:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8019c54:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c58:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8019c5c:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8019c60:	44c6      	add	lr, r8
 8019c62:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8019c66:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019c6a:	0a36      	lsrs	r6, r6, #8
 8019c6c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019c70:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019c74:	ea4e 0406 	orr.w	r4, lr, r6
 8019c78:	940c      	str	r4, [sp, #48]	; 0x30
 8019c7a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019c7c:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 8019c80:	9c08      	ldr	r4, [sp, #32]
 8019c82:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019c86:	fb09 f606 	mul.w	r6, r9, r6
 8019c8a:	fb01 660c 	mla	r6, r1, ip, r6
 8019c8e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019c92:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8019c94:	fb00 660c 	mla	r6, r0, ip, r6
 8019c98:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019c9c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019c9e:	fb0b 660c 	mla	r6, fp, ip, r6
 8019ca2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8019ca6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019caa:	fb09 f90c 	mul.w	r9, r9, ip
 8019cae:	fb01 9303 	mla	r3, r1, r3, r9
 8019cb2:	9908      	ldr	r1, [sp, #32]
 8019cb4:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 8019cb8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019cba:	fb00 330e 	mla	r3, r0, lr, r3
 8019cbe:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8019cc2:	fb0b 3b00 	mla	fp, fp, r0, r3
 8019cc6:	0a36      	lsrs	r6, r6, #8
 8019cc8:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8019ccc:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019cd0:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8019cd4:	ea46 060b 	orr.w	r6, r6, fp
 8019cd8:	2aff      	cmp	r2, #255	; 0xff
 8019cda:	ea4f 2316 	mov.w	r3, r6, lsr #8
 8019cde:	f000 8099 	beq.w	8019e14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44c>
 8019ce2:	8839      	ldrh	r1, [r7, #0]
 8019ce4:	43d2      	mvns	r2, r2
 8019ce6:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8019cea:	fa5f fe82 	uxtb.w	lr, r2
 8019cee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019cf2:	fb0c fc0e 	mul.w	ip, ip, lr
 8019cf6:	10c8      	asrs	r0, r1, #3
 8019cf8:	00ca      	lsls	r2, r1, #3
 8019cfa:	f10c 0101 	add.w	r1, ip, #1
 8019cfe:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 8019d02:	ea4f 4c16 	mov.w	ip, r6, lsr #16
 8019d06:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8019d0a:	b2d2      	uxtb	r2, r2
 8019d0c:	4952      	ldr	r1, [pc, #328]	; (8019e58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x490>)
 8019d0e:	fb02 f20e 	mul.w	r2, r2, lr
 8019d12:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8019d16:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019d1a:	1c51      	adds	r1, r2, #1
 8019d1c:	fb00 f00e 	mul.w	r0, r0, lr
 8019d20:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019d24:	b2f6      	uxtb	r6, r6
 8019d26:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8019d2a:	1c42      	adds	r2, r0, #1
 8019d2c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019d30:	b2db      	uxtb	r3, r3
 8019d32:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019d36:	00db      	lsls	r3, r3, #3
 8019d38:	ea4c 06d6 	orr.w	r6, ip, r6, lsr #3
 8019d3c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019d40:	431e      	orrs	r6, r3
 8019d42:	803e      	strh	r6, [r7, #0]
 8019d44:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019d46:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019d48:	441a      	add	r2, r3
 8019d4a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019d4c:	9229      	str	r2, [sp, #164]	; 0xa4
 8019d4e:	441d      	add	r5, r3
 8019d50:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019d52:	3b01      	subs	r3, #1
 8019d54:	3702      	adds	r7, #2
 8019d56:	9313      	str	r3, [sp, #76]	; 0x4c
 8019d58:	e6b6      	b.n	8019ac8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 8019d5a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019d5c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019d5e:	441a      	add	r2, r3
 8019d60:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019d62:	9229      	str	r2, [sp, #164]	; 0xa4
 8019d64:	441d      	add	r5, r3
 8019d66:	9b06      	ldr	r3, [sp, #24]
 8019d68:	3b01      	subs	r3, #1
 8019d6a:	9306      	str	r3, [sp, #24]
 8019d6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019d6e:	3302      	adds	r3, #2
 8019d70:	930a      	str	r3, [sp, #40]	; 0x28
 8019d72:	e660      	b.n	8019a36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8019d74:	f47f ae72 	bne.w	8019a5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8019d78:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019d7a:	2b00      	cmp	r3, #0
 8019d7c:	f340 81bc 	ble.w	801a0f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8019d80:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019d84:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019d88:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019d8c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019d8e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019d92:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019d96:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019d9a:	eef0 6a48 	vmov.f32	s13, s16
 8019d9e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019da2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019da6:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019daa:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8019dae:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019db2:	eef0 6a68 	vmov.f32	s13, s17
 8019db6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019dba:	ee18 2a10 	vmov	r2, s16
 8019dbe:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019dc2:	fb92 f3f3 	sdiv	r3, r2, r3
 8019dc6:	ee18 2a90 	vmov	r2, s17
 8019dca:	932b      	str	r3, [sp, #172]	; 0xac
 8019dcc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019dce:	fb92 f3f3 	sdiv	r3, r2, r3
 8019dd2:	932c      	str	r3, [sp, #176]	; 0xb0
 8019dd4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019dd6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019dd8:	3b01      	subs	r3, #1
 8019dda:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019dde:	9312      	str	r3, [sp, #72]	; 0x48
 8019de0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019de2:	bf08      	it	eq
 8019de4:	4613      	moveq	r3, r2
 8019de6:	ee16 5a90 	vmov	r5, s13
 8019dea:	9306      	str	r3, [sp, #24]
 8019dec:	eef0 8a67 	vmov.f32	s17, s15
 8019df0:	eeb0 8a47 	vmov.f32	s16, s14
 8019df4:	e618      	b.n	8019a28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8019df6:	b150      	cbz	r0, 8019e0e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x446>
 8019df8:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019dfa:	5871      	ldr	r1, [r6, r1]
 8019dfc:	9108      	str	r1, [sp, #32]
 8019dfe:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8019e02:	26ff      	movs	r6, #255	; 0xff
 8019e04:	46b0      	mov	r8, r6
 8019e06:	e698      	b.n	8019b3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 8019e08:	26ff      	movs	r6, #255	; 0xff
 8019e0a:	46b2      	mov	sl, r6
 8019e0c:	e695      	b.n	8019b3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 8019e0e:	26ff      	movs	r6, #255	; 0xff
 8019e10:	46b2      	mov	sl, r6
 8019e12:	e7f7      	b.n	8019e04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43c>
 8019e14:	0972      	lsrs	r2, r6, #5
 8019e16:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8019e1a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019e1e:	f023 0307 	bic.w	r3, r3, #7
 8019e22:	4313      	orrs	r3, r2
 8019e24:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8019e28:	e78a      	b.n	8019d40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x378>
 8019e2a:	1c4e      	adds	r6, r1, #1
 8019e2c:	d18a      	bne.n	8019d44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8019e2e:	9c07      	ldr	r4, [sp, #28]
 8019e30:	428c      	cmp	r4, r1
 8019e32:	dd87      	ble.n	8019d44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8019e34:	1c5c      	adds	r4, r3, #1
 8019e36:	db85      	blt.n	8019d44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8019e38:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8019e3a:	429c      	cmp	r4, r3
 8019e3c:	dd82      	ble.n	8019d44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8019e3e:	e9cd 2003 	strd	r2, r0, [sp, #12]
 8019e42:	e9cd 1301 	strd	r1, r3, [sp, #4]
 8019e46:	9400      	str	r4, [sp, #0]
 8019e48:	9b07      	ldr	r3, [sp, #28]
 8019e4a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019e4c:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019e4e:	4639      	mov	r1, r7
 8019e50:	f7ff fc62 	bl	8019718 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8019e54:	e776      	b.n	8019d44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8019e56:	bf00      	nop
 8019e58:	fffff800 	.word	0xfffff800
 8019e5c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8019e5e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8019e60:	9c07      	ldr	r4, [sp, #28]
 8019e62:	1409      	asrs	r1, r1, #16
 8019e64:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019e68:	142b      	asrs	r3, r5, #16
 8019e6a:	fb04 1303 	mla	r3, r4, r3, r1
 8019e6e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8019e70:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 8019e74:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8019e78:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019e7c:	0e1f      	lsrs	r7, r3, #24
 8019e7e:	2a00      	cmp	r2, #0
 8019e80:	f000 811d 	beq.w	801a0be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 8019e84:	6871      	ldr	r1, [r6, #4]
 8019e86:	910d      	str	r1, [sp, #52]	; 0x34
 8019e88:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 8019e8c:	2800      	cmp	r0, #0
 8019e8e:	f000 811f 	beq.w	801a0d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 8019e92:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019e94:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019e96:	1871      	adds	r1, r6, r1
 8019e98:	5934      	ldr	r4, [r6, r4]
 8019e9a:	6849      	ldr	r1, [r1, #4]
 8019e9c:	9409      	str	r4, [sp, #36]	; 0x24
 8019e9e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019ea2:	910f      	str	r1, [sp, #60]	; 0x3c
 8019ea4:	0e0e      	lsrs	r6, r1, #24
 8019ea6:	b292      	uxth	r2, r2
 8019ea8:	b280      	uxth	r0, r0
 8019eaa:	fb02 fb00 	mul.w	fp, r2, r0
 8019eae:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8019eb2:	0112      	lsls	r2, r2, #4
 8019eb4:	eba2 080b 	sub.w	r8, r2, fp
 8019eb8:	b280      	uxth	r0, r0
 8019eba:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8019ebe:	fa1f f888 	uxth.w	r8, r8
 8019ec2:	1a09      	subs	r1, r1, r0
 8019ec4:	b289      	uxth	r1, r1
 8019ec6:	fb08 f20e 	mul.w	r2, r8, lr
 8019eca:	fb01 2207 	mla	r2, r1, r7, r2
 8019ece:	fb00 2209 	mla	r2, r0, r9, r2
 8019ed2:	fb0b 2206 	mla	r2, fp, r6, r2
 8019ed6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8019eda:	2a00      	cmp	r2, #0
 8019edc:	f000 80e3 	beq.w	801a0a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 8019ee0:	2fff      	cmp	r7, #255	; 0xff
 8019ee2:	d01a      	beq.n	8019f1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x552>
 8019ee4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019ee8:	fb07 fc0c 	mul.w	ip, r7, ip
 8019eec:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019ef0:	435f      	muls	r7, r3
 8019ef2:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8019ef6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019efa:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019efe:	4463      	add	r3, ip
 8019f00:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 8019f04:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 8019f08:	0a1b      	lsrs	r3, r3, #8
 8019f0a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019f0e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019f12:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8019f16:	ea43 030c 	orr.w	r3, r3, ip
 8019f1a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8019f1e:	d01e      	beq.n	8019f5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 8019f20:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019f22:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019f26:	fb0e f707 	mul.w	r7, lr, r7
 8019f2a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8019f2e:	fb0e fe0c 	mul.w	lr, lr, ip
 8019f32:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8019f36:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019f3a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8019f3e:	44bc      	add	ip, r7
 8019f40:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 8019f44:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8019f48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019f4c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019f50:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019f54:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8019f58:	ea4c 040e 	orr.w	r4, ip, lr
 8019f5c:	940d      	str	r4, [sp, #52]	; 0x34
 8019f5e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019f62:	d01e      	beq.n	8019fa2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5da>
 8019f64:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8019f66:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8019f6a:	fb09 fe0e 	mul.w	lr, r9, lr
 8019f6e:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 8019f72:	fb09 f907 	mul.w	r9, r9, r7
 8019f76:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8019f7a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019f7e:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8019f82:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8019f86:	44f4      	add	ip, lr
 8019f88:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8019f8c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019f90:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019f94:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019f98:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8019f9c:	ea4c 0409 	orr.w	r4, ip, r9
 8019fa0:	9409      	str	r4, [sp, #36]	; 0x24
 8019fa2:	2eff      	cmp	r6, #255	; 0xff
 8019fa4:	d01c      	beq.n	8019fe0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x618>
 8019fa6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019fa8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8019fac:	fb06 fe0e 	mul.w	lr, r6, lr
 8019fb0:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 8019fb4:	437e      	muls	r6, r7
 8019fb6:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8019fba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019fbe:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8019fc2:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8019fc6:	44f4      	add	ip, lr
 8019fc8:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8019fcc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019fd0:	0a36      	lsrs	r6, r6, #8
 8019fd2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019fd6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019fda:	ea4c 0406 	orr.w	r4, ip, r6
 8019fde:	940f      	str	r4, [sp, #60]	; 0x3c
 8019fe0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019fe2:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 8019fe6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8019fe8:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8019fec:	fb08 f606 	mul.w	r6, r8, r6
 8019ff0:	fb01 6607 	mla	r6, r1, r7, r6
 8019ff4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8019ff8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019ffa:	fb00 6607 	mla	r6, r0, r7, r6
 8019ffe:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801a002:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a004:	fb0b 6607 	mla	r6, fp, r7, r6
 801a008:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 801a00c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801a010:	fb08 f807 	mul.w	r8, r8, r7
 801a014:	fb01 8303 	mla	r3, r1, r3, r8
 801a018:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a01a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801a01e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801a020:	fb00 330c 	mla	r3, r0, ip, r3
 801a024:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 801a028:	fb0b 3e0e 	mla	lr, fp, lr, r3
 801a02c:	0a36      	lsrs	r6, r6, #8
 801a02e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801a032:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801a036:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801a03a:	ea46 060e 	orr.w	r6, r6, lr
 801a03e:	2aff      	cmp	r2, #255	; 0xff
 801a040:	ea4f 2316 	mov.w	r3, r6, lsr #8
 801a044:	d04a      	beq.n	801a0dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 801a046:	f8ba 1000 	ldrh.w	r1, [sl]
 801a04a:	43d2      	mvns	r2, r2
 801a04c:	120f      	asrs	r7, r1, #8
 801a04e:	fa5f fc82 	uxtb.w	ip, r2
 801a052:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a056:	fb07 f70c 	mul.w	r7, r7, ip
 801a05a:	10c8      	asrs	r0, r1, #3
 801a05c:	00ca      	lsls	r2, r1, #3
 801a05e:	1c79      	adds	r1, r7, #1
 801a060:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 801a064:	0c37      	lsrs	r7, r6, #16
 801a066:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 801a06a:	b2d2      	uxtb	r2, r2
 801a06c:	4925      	ldr	r1, [pc, #148]	; (801a104 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x73c>)
 801a06e:	fb02 f20c 	mul.w	r2, r2, ip
 801a072:	ea01 2707 	and.w	r7, r1, r7, lsl #8
 801a076:	1c51      	adds	r1, r2, #1
 801a078:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801a07c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a080:	b2f6      	uxtb	r6, r6
 801a082:	fb00 f00c 	mul.w	r0, r0, ip
 801a086:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 801a08a:	ea47 07d6 	orr.w	r7, r7, r6, lsr #3
 801a08e:	1c46      	adds	r6, r0, #1
 801a090:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 801a094:	b2de      	uxtb	r6, r3
 801a096:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 801a09a:	00f6      	lsls	r6, r6, #3
 801a09c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a0a0:	4337      	orrs	r7, r6
 801a0a2:	f8aa 7000 	strh.w	r7, [sl]
 801a0a6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801a0a8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a0aa:	441a      	add	r2, r3
 801a0ac:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801a0ae:	9229      	str	r2, [sp, #164]	; 0xa4
 801a0b0:	441d      	add	r5, r3
 801a0b2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a0b4:	3b01      	subs	r3, #1
 801a0b6:	f10a 0a02 	add.w	sl, sl, #2
 801a0ba:	9313      	str	r3, [sp, #76]	; 0x4c
 801a0bc:	e4e7      	b.n	8019a8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc6>
 801a0be:	b150      	cbz	r0, 801a0d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70e>
 801a0c0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a0c2:	5871      	ldr	r1, [r6, r1]
 801a0c4:	9109      	str	r1, [sp, #36]	; 0x24
 801a0c6:	ea4f 6911 	mov.w	r9, r1, lsr #24
 801a0ca:	26ff      	movs	r6, #255	; 0xff
 801a0cc:	46b6      	mov	lr, r6
 801a0ce:	e6ea      	b.n	8019ea6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 801a0d0:	26ff      	movs	r6, #255	; 0xff
 801a0d2:	46b1      	mov	r9, r6
 801a0d4:	e6e7      	b.n	8019ea6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 801a0d6:	26ff      	movs	r6, #255	; 0xff
 801a0d8:	46b1      	mov	r9, r6
 801a0da:	e7f7      	b.n	801a0cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x704>
 801a0dc:	0972      	lsrs	r2, r6, #5
 801a0de:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801a0e2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a0e6:	f023 0307 	bic.w	r3, r3, #7
 801a0ea:	4313      	orrs	r3, r2
 801a0ec:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a0f0:	431e      	orrs	r6, r3
 801a0f2:	f8aa 6000 	strh.w	r6, [sl]
 801a0f6:	e7d6      	b.n	801a0a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 801a0f8:	b017      	add	sp, #92	; 0x5c
 801a0fa:	ecbd 8b08 	vpop	{d8-d11}
 801a0fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a102:	bf00      	nop
 801a104:	fffff800 	.word	0xfffff800

0801a108 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801a108:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a10c:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801a110:	2c00      	cmp	r4, #0
 801a112:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801a116:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801a11a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801a11e:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801a122:	fb04 ce03 	mla	lr, r4, r3, ip
 801a126:	db60      	blt.n	801a1ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801a128:	45a1      	cmp	r9, r4
 801a12a:	dd5e      	ble.n	801a1ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 801a12c:	f1bc 0f00 	cmp.w	ip, #0
 801a130:	db59      	blt.n	801a1e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801a132:	45e0      	cmp	r8, ip
 801a134:	dd57      	ble.n	801a1e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 801a136:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801a13a:	f01e 0f01 	tst.w	lr, #1
 801a13e:	5c16      	ldrb	r6, [r2, r0]
 801a140:	bf0c      	ite	eq
 801a142:	f006 060f 	andeq.w	r6, r6, #15
 801a146:	1136      	asrne	r6, r6, #4
 801a148:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801a14c:	b2f6      	uxtb	r6, r6
 801a14e:	f11c 0001 	adds.w	r0, ip, #1
 801a152:	d44d      	bmi.n	801a1f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801a154:	4580      	cmp	r8, r0
 801a156:	dd4b      	ble.n	801a1f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 801a158:	2d00      	cmp	r5, #0
 801a15a:	d04b      	beq.n	801a1f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 801a15c:	f10e 0a01 	add.w	sl, lr, #1
 801a160:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801a164:	f01a 0f01 	tst.w	sl, #1
 801a168:	5c10      	ldrb	r0, [r2, r0]
 801a16a:	bf0c      	ite	eq
 801a16c:	f000 000f 	andeq.w	r0, r0, #15
 801a170:	1100      	asrne	r0, r0, #4
 801a172:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a176:	b2c0      	uxtb	r0, r0
 801a178:	3401      	adds	r4, #1
 801a17a:	d43f      	bmi.n	801a1fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801a17c:	45a1      	cmp	r9, r4
 801a17e:	dd3d      	ble.n	801a1fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801a180:	2f00      	cmp	r7, #0
 801a182:	f000 80a0 	beq.w	801a2c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1be>
 801a186:	f1bc 0f00 	cmp.w	ip, #0
 801a18a:	db35      	blt.n	801a1f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801a18c:	45e0      	cmp	r8, ip
 801a18e:	dd33      	ble.n	801a1f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801a190:	eb03 090e 	add.w	r9, r3, lr
 801a194:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801a198:	f019 0f01 	tst.w	r9, #1
 801a19c:	5d14      	ldrb	r4, [r2, r4]
 801a19e:	bf0c      	ite	eq
 801a1a0:	f004 040f 	andeq.w	r4, r4, #15
 801a1a4:	1124      	asrne	r4, r4, #4
 801a1a6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801a1aa:	b2e4      	uxtb	r4, r4
 801a1ac:	f11c 0c01 	adds.w	ip, ip, #1
 801a1b0:	d427      	bmi.n	801a202 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801a1b2:	45e0      	cmp	r8, ip
 801a1b4:	dd25      	ble.n	801a202 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801a1b6:	b335      	cbz	r5, 801a206 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 801a1b8:	3301      	adds	r3, #1
 801a1ba:	449e      	add	lr, r3
 801a1bc:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801a1c0:	f01e 0f01 	tst.w	lr, #1
 801a1c4:	5cd2      	ldrb	r2, [r2, r3]
 801a1c6:	bf0c      	ite	eq
 801a1c8:	f002 020f 	andeq.w	r2, r2, #15
 801a1cc:	1112      	asrne	r2, r2, #4
 801a1ce:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a1d2:	b2d3      	uxtb	r3, r2
 801a1d4:	2d0f      	cmp	r5, #15
 801a1d6:	d917      	bls.n	801a208 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 801a1d8:	4b3d      	ldr	r3, [pc, #244]	; (801a2d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801a1da:	4a3e      	ldr	r2, [pc, #248]	; (801a2d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801a1dc:	483e      	ldr	r0, [pc, #248]	; (801a2d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 801a1de:	f240 3173 	movw	r1, #883	; 0x373
 801a1e2:	f000 ffdf 	bl	801b1a4 <__assert_func>
 801a1e6:	2600      	movs	r6, #0
 801a1e8:	e7b1      	b.n	801a14e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 801a1ea:	2000      	movs	r0, #0
 801a1ec:	4606      	mov	r6, r0
 801a1ee:	e7c3      	b.n	801a178 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a1f0:	2000      	movs	r0, #0
 801a1f2:	e7c1      	b.n	801a178 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a1f4:	4628      	mov	r0, r5
 801a1f6:	e7bf      	b.n	801a178 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 801a1f8:	2400      	movs	r4, #0
 801a1fa:	e7d7      	b.n	801a1ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 801a1fc:	2300      	movs	r3, #0
 801a1fe:	461c      	mov	r4, r3
 801a200:	e7e8      	b.n	801a1d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801a202:	2300      	movs	r3, #0
 801a204:	e7e6      	b.n	801a1d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 801a206:	462b      	mov	r3, r5
 801a208:	2f0f      	cmp	r7, #15
 801a20a:	d8e5      	bhi.n	801a1d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801a20c:	b2ad      	uxth	r5, r5
 801a20e:	b2bf      	uxth	r7, r7
 801a210:	fb05 fc07 	mul.w	ip, r5, r7
 801a214:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801a218:	012d      	lsls	r5, r5, #4
 801a21a:	b2bf      	uxth	r7, r7
 801a21c:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801a220:	eba5 050c 	sub.w	r5, r5, ip
 801a224:	1bd2      	subs	r2, r2, r7
 801a226:	b2ad      	uxth	r5, r5
 801a228:	b292      	uxth	r2, r2
 801a22a:	4368      	muls	r0, r5
 801a22c:	fb06 0002 	mla	r0, r6, r2, r0
 801a230:	fb07 0404 	mla	r4, r7, r4, r0
 801a234:	fb0c 4303 	mla	r3, ip, r3, r4
 801a238:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a23c:	2b00      	cmp	r3, #0
 801a23e:	d040      	beq.n	801a2c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 801a240:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 801a244:	4a25      	ldr	r2, [pc, #148]	; (801a2dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d4>)
 801a246:	4343      	muls	r3, r0
 801a248:	1c58      	adds	r0, r3, #1
 801a24a:	6816      	ldr	r6, [r2, #0]
 801a24c:	880a      	ldrh	r2, [r1, #0]
 801a24e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801a252:	1200      	asrs	r0, r0, #8
 801a254:	b284      	uxth	r4, r0
 801a256:	1215      	asrs	r5, r2, #8
 801a258:	43c0      	mvns	r0, r0
 801a25a:	b2c3      	uxtb	r3, r0
 801a25c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a260:	1230      	asrs	r0, r6, #8
 801a262:	fb15 f503 	smulbb	r5, r5, r3
 801a266:	10d7      	asrs	r7, r2, #3
 801a268:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a26c:	fb00 5004 	mla	r0, r0, r4, r5
 801a270:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a274:	f3c6 05cc 	ubfx	r5, r6, #3, #13
 801a278:	00d2      	lsls	r2, r2, #3
 801a27a:	fb17 f703 	smulbb	r7, r7, r3
 801a27e:	b2d2      	uxtb	r2, r2
 801a280:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a284:	00f6      	lsls	r6, r6, #3
 801a286:	fb05 7504 	mla	r5, r5, r4, r7
 801a28a:	fb12 f303 	smulbb	r3, r2, r3
 801a28e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a292:	fb06 3304 	mla	r3, r6, r4, r3
 801a296:	b2ad      	uxth	r5, r5
 801a298:	b29a      	uxth	r2, r3
 801a29a:	b280      	uxth	r0, r0
 801a29c:	1c6b      	adds	r3, r5, #1
 801a29e:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801a2a2:	1c44      	adds	r4, r0, #1
 801a2a4:	095b      	lsrs	r3, r3, #5
 801a2a6:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 801a2aa:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a2ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a2b2:	4303      	orrs	r3, r0
 801a2b4:	1c50      	adds	r0, r2, #1
 801a2b6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801a2ba:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a2be:	4313      	orrs	r3, r2
 801a2c0:	800b      	strh	r3, [r1, #0]
 801a2c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a2c6:	2d0f      	cmp	r5, #15
 801a2c8:	d886      	bhi.n	801a1d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801a2ca:	463b      	mov	r3, r7
 801a2cc:	463c      	mov	r4, r7
 801a2ce:	e79d      	b.n	801a20c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 801a2d0:	0801f4bf 	.word	0x0801f4bf
 801a2d4:	0801fa1d 	.word	0x0801fa1d
 801a2d8:	0801f547 	.word	0x0801f547
 801a2dc:	20026eb8 	.word	0x20026eb8

0801a2e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801a2e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a2e4:	ed2d 8b08 	vpush	{d8-d11}
 801a2e8:	b099      	sub	sp, #100	; 0x64
 801a2ea:	e9dd 462b 	ldrd	r4, r6, [sp, #172]	; 0xac
 801a2ee:	9309      	str	r3, [sp, #36]	; 0x24
 801a2f0:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 801a2f4:	930a      	str	r3, [sp, #40]	; 0x28
 801a2f6:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 801a2fa:	9216      	str	r2, [sp, #88]	; 0x58
 801a2fc:	930b      	str	r3, [sp, #44]	; 0x2c
 801a2fe:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801a300:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 801a304:	910f      	str	r1, [sp, #60]	; 0x3c
 801a306:	9310      	str	r3, [sp, #64]	; 0x40
 801a308:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 801a30c:	9017      	str	r0, [sp, #92]	; 0x5c
 801a30e:	6850      	ldr	r0, [r2, #4]
 801a310:	6812      	ldr	r2, [r2, #0]
 801a312:	fb00 1303 	mla	r3, r0, r3, r1
 801a316:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 801a31a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a31c:	3301      	adds	r3, #1
 801a31e:	f023 0301 	bic.w	r3, r3, #1
 801a322:	930c      	str	r3, [sp, #48]	; 0x30
 801a324:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801a326:	681f      	ldr	r7, [r3, #0]
 801a328:	eeb0 aa40 	vmov.f32	s20, s0
 801a32c:	eef0 9a60 	vmov.f32	s19, s1
 801a330:	eeb0 9a41 	vmov.f32	s18, s2
 801a334:	eeb0 8a62 	vmov.f32	s16, s5
 801a338:	eef0 8a43 	vmov.f32	s17, s6
 801a33c:	eef0 ba44 	vmov.f32	s23, s8
 801a340:	eeb0 ba64 	vmov.f32	s22, s9
 801a344:	eef0 aa45 	vmov.f32	s21, s10
 801a348:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a34a:	2b00      	cmp	r3, #0
 801a34c:	dc03      	bgt.n	801a356 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 801a34e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801a350:	2b00      	cmp	r3, #0
 801a352:	f340 826b 	ble.w	801a82c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54c>
 801a356:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a358:	2b00      	cmp	r3, #0
 801a35a:	f340 811f 	ble.w	801a59c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 801a35e:	1422      	asrs	r2, r4, #16
 801a360:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a364:	d42d      	bmi.n	801a3c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801a366:	980a      	ldr	r0, [sp, #40]	; 0x28
 801a368:	1c51      	adds	r1, r2, #1
 801a36a:	4288      	cmp	r0, r1
 801a36c:	dd2c      	ble.n	801a3c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801a36e:	2b00      	cmp	r3, #0
 801a370:	db2a      	blt.n	801a3c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801a372:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801a374:	1c59      	adds	r1, r3, #1
 801a376:	4288      	cmp	r0, r1
 801a378:	dd26      	ble.n	801a3c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 801a37a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a37c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801a37e:	3b01      	subs	r3, #1
 801a380:	fb02 4203 	mla	r2, r2, r3, r4
 801a384:	1412      	asrs	r2, r2, #16
 801a386:	d42a      	bmi.n	801a3de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801a388:	990a      	ldr	r1, [sp, #40]	; 0x28
 801a38a:	3201      	adds	r2, #1
 801a38c:	4291      	cmp	r1, r2
 801a38e:	dd26      	ble.n	801a3de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801a390:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801a392:	fb02 6303 	mla	r3, r2, r3, r6
 801a396:	141b      	asrs	r3, r3, #16
 801a398:	d421      	bmi.n	801a3de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801a39a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a39c:	3301      	adds	r3, #1
 801a39e:	429a      	cmp	r2, r3
 801a3a0:	dd1d      	ble.n	801a3de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801a3a2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801a3a6:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801a3aa:	9311      	str	r3, [sp, #68]	; 0x44
 801a3ac:	46d1      	mov	r9, sl
 801a3ae:	f1bb 0f00 	cmp.w	fp, #0
 801a3b2:	f300 8163 	bgt.w	801a67c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x39c>
 801a3b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a3b8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a3bc:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801a3c0:	e0ee      	b.n	801a5a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 801a3c2:	1c51      	adds	r1, r2, #1
 801a3c4:	f040 80e0 	bne.w	801a588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 801a3c8:	990a      	ldr	r1, [sp, #40]	; 0x28
 801a3ca:	4291      	cmp	r1, r2
 801a3cc:	f340 80dc 	ble.w	801a588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 801a3d0:	1c5a      	adds	r2, r3, #1
 801a3d2:	f2c0 80d9 	blt.w	801a588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 801a3d6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a3d8:	4293      	cmp	r3, r2
 801a3da:	f280 80d5 	bge.w	801a588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 801a3de:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801a3e2:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 801a3e6:	9311      	str	r3, [sp, #68]	; 0x44
 801a3e8:	46d0      	mov	r8, sl
 801a3ea:	f1b9 0f00 	cmp.w	r9, #0
 801a3ee:	dde2      	ble.n	801a3b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 801a3f0:	1420      	asrs	r0, r4, #16
 801a3f2:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a3f6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a3fa:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a3fe:	f100 8122 	bmi.w	801a646 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 801a402:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801a404:	f100 0c01 	add.w	ip, r0, #1
 801a408:	4565      	cmp	r5, ip
 801a40a:	f340 811e 	ble.w	801a64a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 801a40e:	2b00      	cmp	r3, #0
 801a410:	f2c0 811b 	blt.w	801a64a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 801a414:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a416:	f103 0c01 	add.w	ip, r3, #1
 801a41a:	4565      	cmp	r5, ip
 801a41c:	f340 8115 	ble.w	801a64a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 801a420:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a422:	fb03 0305 	mla	r3, r3, r5, r0
 801a426:	0858      	lsrs	r0, r3, #1
 801a428:	07dd      	lsls	r5, r3, #31
 801a42a:	5c38      	ldrb	r0, [r7, r0]
 801a42c:	bf54      	ite	pl
 801a42e:	f000 000f 	andpl.w	r0, r0, #15
 801a432:	1100      	asrmi	r0, r0, #4
 801a434:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a438:	b2c0      	uxtb	r0, r0
 801a43a:	2a00      	cmp	r2, #0
 801a43c:	f000 80ef 	beq.w	801a61e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 801a440:	f103 0e01 	add.w	lr, r3, #1
 801a444:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801a448:	f01e 0f01 	tst.w	lr, #1
 801a44c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a450:	bf0c      	ite	eq
 801a452:	f00c 0c0f 	andeq.w	ip, ip, #15
 801a456:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801a45a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a45e:	fa5f f58c 	uxtb.w	r5, ip
 801a462:	9512      	str	r5, [sp, #72]	; 0x48
 801a464:	b1f9      	cbz	r1, 801a4a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801a466:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a468:	442b      	add	r3, r5
 801a46a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a46e:	07dd      	lsls	r5, r3, #31
 801a470:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a474:	bf54      	ite	pl
 801a476:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a47a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a47e:	3301      	adds	r3, #1
 801a480:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a484:	fa5f f58c 	uxtb.w	r5, ip
 801a488:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a48c:	950d      	str	r5, [sp, #52]	; 0x34
 801a48e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a492:	07dd      	lsls	r5, r3, #31
 801a494:	bf54      	ite	pl
 801a496:	f00c 030f 	andpl.w	r3, ip, #15
 801a49a:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801a49e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a4a2:	b2db      	uxtb	r3, r3
 801a4a4:	9313      	str	r3, [sp, #76]	; 0x4c
 801a4a6:	b292      	uxth	r2, r2
 801a4a8:	b289      	uxth	r1, r1
 801a4aa:	fb02 f301 	mul.w	r3, r2, r1
 801a4ae:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801a4b2:	0112      	lsls	r2, r2, #4
 801a4b4:	b289      	uxth	r1, r1
 801a4b6:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 801a4ba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a4bc:	1ad2      	subs	r2, r2, r3
 801a4be:	ebac 0c01 	sub.w	ip, ip, r1
 801a4c2:	b292      	uxth	r2, r2
 801a4c4:	436a      	muls	r2, r5
 801a4c6:	fa1f fc8c 	uxth.w	ip, ip
 801a4ca:	fb00 200c 	mla	r0, r0, ip, r2
 801a4ce:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a4d0:	fb01 0102 	mla	r1, r1, r2, r0
 801a4d4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a4d6:	fb03 1302 	mla	r3, r3, r2, r1
 801a4da:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a4de:	2b00      	cmp	r3, #0
 801a4e0:	d049      	beq.n	801a576 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801a4e2:	9910      	ldr	r1, [sp, #64]	; 0x40
 801a4e4:	4ac5      	ldr	r2, [pc, #788]	; (801a7fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801a4e6:	4dc6      	ldr	r5, [pc, #792]	; (801a800 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801a4e8:	f8d2 e000 	ldr.w	lr, [r2]
 801a4ec:	f8b8 2000 	ldrh.w	r2, [r8]
 801a4f0:	434b      	muls	r3, r1
 801a4f2:	1c59      	adds	r1, r3, #1
 801a4f4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a4f8:	121b      	asrs	r3, r3, #8
 801a4fa:	b299      	uxth	r1, r3
 801a4fc:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801a500:	43db      	mvns	r3, r3
 801a502:	b2db      	uxtb	r3, r3
 801a504:	ea4f 202e 	mov.w	r0, lr, asr #8
 801a508:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a50c:	fb1c fc03 	smulbb	ip, ip, r3
 801a510:	ea4f 0be2 	mov.w	fp, r2, asr #3
 801a514:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a518:	fb00 c001 	mla	r0, r0, r1, ip
 801a51c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a520:	f3ce 0ccc 	ubfx	ip, lr, #3, #13
 801a524:	fb1b fb03 	smulbb	fp, fp, r3
 801a528:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a52c:	00d2      	lsls	r2, r2, #3
 801a52e:	fb0c bc01 	mla	ip, ip, r1, fp
 801a532:	b2d2      	uxtb	r2, r2
 801a534:	ea05 0ece 	and.w	lr, r5, lr, lsl #3
 801a538:	fb12 f303 	smulbb	r3, r2, r3
 801a53c:	fa1f fc8c 	uxth.w	ip, ip
 801a540:	fa5f fe8e 	uxtb.w	lr, lr
 801a544:	b280      	uxth	r0, r0
 801a546:	fb0e 3101 	mla	r1, lr, r1, r3
 801a54a:	f10c 0201 	add.w	r2, ip, #1
 801a54e:	b289      	uxth	r1, r1
 801a550:	1c43      	adds	r3, r0, #1
 801a552:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 801a556:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a55a:	0952      	lsrs	r2, r2, #5
 801a55c:	1c4b      	adds	r3, r1, #1
 801a55e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a562:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a566:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801a56a:	4310      	orrs	r0, r2
 801a56c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801a570:	4308      	orrs	r0, r1
 801a572:	f8a8 0000 	strh.w	r0, [r8]
 801a576:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801a578:	441c      	add	r4, r3
 801a57a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801a57c:	f108 0802 	add.w	r8, r8, #2
 801a580:	441e      	add	r6, r3
 801a582:	f109 39ff 	add.w	r9, r9, #4294967295
 801a586:	e730      	b.n	801a3ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 801a588:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801a58a:	441c      	add	r4, r3
 801a58c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801a58e:	441e      	add	r6, r3
 801a590:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a592:	3b01      	subs	r3, #1
 801a594:	9309      	str	r3, [sp, #36]	; 0x24
 801a596:	f10a 0a02 	add.w	sl, sl, #2
 801a59a:	e6dc      	b.n	801a356 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 801a59c:	f47f aeed 	bne.w	801a37a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 801a5a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a5a2:	2b00      	cmp	r3, #0
 801a5a4:	f340 8142 	ble.w	801a82c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54c>
 801a5a8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a5ac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a5b0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a5b4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a5b6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a5ba:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a5be:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a5c2:	eef0 6a48 	vmov.f32	s13, s16
 801a5c6:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a5ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a5ce:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a5d2:	ee16 4a90 	vmov	r4, s13
 801a5d6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a5da:	eef0 6a68 	vmov.f32	s13, s17
 801a5de:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a5e2:	ee18 2a10 	vmov	r2, s16
 801a5e6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a5ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801a5ee:	ee18 2a90 	vmov	r2, s17
 801a5f2:	932d      	str	r3, [sp, #180]	; 0xb4
 801a5f4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a5f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a5fa:	932e      	str	r3, [sp, #184]	; 0xb8
 801a5fc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a5fe:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801a600:	3b01      	subs	r3, #1
 801a602:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a606:	930f      	str	r3, [sp, #60]	; 0x3c
 801a608:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a60a:	bf08      	it	eq
 801a60c:	4613      	moveq	r3, r2
 801a60e:	ee16 6a90 	vmov	r6, s13
 801a612:	9309      	str	r3, [sp, #36]	; 0x24
 801a614:	eef0 8a67 	vmov.f32	s17, s15
 801a618:	eeb0 8a47 	vmov.f32	s16, s14
 801a61c:	e694      	b.n	801a348 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 801a61e:	2900      	cmp	r1, #0
 801a620:	f43f af41 	beq.w	801a4a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801a624:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a626:	442b      	add	r3, r5
 801a628:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a62c:	07db      	lsls	r3, r3, #31
 801a62e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a632:	bf54      	ite	pl
 801a634:	f00c 030f 	andpl.w	r3, ip, #15
 801a638:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801a63c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a640:	b2db      	uxtb	r3, r3
 801a642:	930d      	str	r3, [sp, #52]	; 0x34
 801a644:	e72f      	b.n	801a4a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 801a646:	1c45      	adds	r5, r0, #1
 801a648:	d195      	bne.n	801a576 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801a64a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801a64c:	4285      	cmp	r5, r0
 801a64e:	dd92      	ble.n	801a576 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801a650:	1c5d      	adds	r5, r3, #1
 801a652:	db90      	blt.n	801a576 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801a654:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a656:	429d      	cmp	r5, r3
 801a658:	dd8d      	ble.n	801a576 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801a65a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 801a65e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a660:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a662:	9301      	str	r3, [sp, #4]
 801a664:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a666:	9002      	str	r0, [sp, #8]
 801a668:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801a66c:	9300      	str	r3, [sp, #0]
 801a66e:	463a      	mov	r2, r7
 801a670:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a672:	9817      	ldr	r0, [sp, #92]	; 0x5c
 801a674:	4641      	mov	r1, r8
 801a676:	f7ff fd47 	bl	801a108 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801a67a:	e77c      	b.n	801a576 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801a67c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a67e:	1422      	asrs	r2, r4, #16
 801a680:	1433      	asrs	r3, r6, #16
 801a682:	fb05 2303 	mla	r3, r5, r3, r2
 801a686:	085a      	lsrs	r2, r3, #1
 801a688:	07dd      	lsls	r5, r3, #31
 801a68a:	5cba      	ldrb	r2, [r7, r2]
 801a68c:	bf54      	ite	pl
 801a68e:	f002 020f 	andpl.w	r2, r2, #15
 801a692:	1112      	asrmi	r2, r2, #4
 801a694:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a698:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801a69c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a6a0:	b2d2      	uxtb	r2, r2
 801a6a2:	2900      	cmp	r1, #0
 801a6a4:	f000 80ae 	beq.w	801a804 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 801a6a8:	f103 0e01 	add.w	lr, r3, #1
 801a6ac:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801a6b0:	f01e 0f01 	tst.w	lr, #1
 801a6b4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a6b8:	bf0c      	ite	eq
 801a6ba:	f00c 0c0f 	andeq.w	ip, ip, #15
 801a6be:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801a6c2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a6c6:	fa5f f58c 	uxtb.w	r5, ip
 801a6ca:	9514      	str	r5, [sp, #80]	; 0x50
 801a6cc:	b300      	cbz	r0, 801a710 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 801a6ce:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a6d0:	442b      	add	r3, r5
 801a6d2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a6d6:	07dd      	lsls	r5, r3, #31
 801a6d8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a6dc:	bf54      	ite	pl
 801a6de:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a6e2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a6e6:	3301      	adds	r3, #1
 801a6e8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a6ec:	fa5f f58c 	uxtb.w	r5, ip
 801a6f0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a6f4:	950e      	str	r5, [sp, #56]	; 0x38
 801a6f6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a6fa:	07dd      	lsls	r5, r3, #31
 801a6fc:	bf54      	ite	pl
 801a6fe:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a702:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a706:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a70a:	fa5f f38c 	uxtb.w	r3, ip
 801a70e:	9315      	str	r3, [sp, #84]	; 0x54
 801a710:	b289      	uxth	r1, r1
 801a712:	b280      	uxth	r0, r0
 801a714:	fb01 f300 	mul.w	r3, r1, r0
 801a718:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801a71c:	0109      	lsls	r1, r1, #4
 801a71e:	b280      	uxth	r0, r0
 801a720:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801a724:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a726:	1ac9      	subs	r1, r1, r3
 801a728:	ebac 0c00 	sub.w	ip, ip, r0
 801a72c:	b289      	uxth	r1, r1
 801a72e:	4369      	muls	r1, r5
 801a730:	fa1f fc8c 	uxth.w	ip, ip
 801a734:	fb02 120c 	mla	r2, r2, ip, r1
 801a738:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a73a:	fb00 2001 	mla	r0, r0, r1, r2
 801a73e:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801a740:	fb03 0302 	mla	r3, r3, r2, r0
 801a744:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a748:	2b00      	cmp	r3, #0
 801a74a:	d04d      	beq.n	801a7e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x508>
 801a74c:	9910      	ldr	r1, [sp, #64]	; 0x40
 801a74e:	4a2b      	ldr	r2, [pc, #172]	; (801a7fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801a750:	4d2b      	ldr	r5, [pc, #172]	; (801a800 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801a752:	f8d2 e000 	ldr.w	lr, [r2]
 801a756:	f8b9 2000 	ldrh.w	r2, [r9]
 801a75a:	434b      	muls	r3, r1
 801a75c:	1c59      	adds	r1, r3, #1
 801a75e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a762:	121b      	asrs	r3, r3, #8
 801a764:	b299      	uxth	r1, r3
 801a766:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801a76a:	43db      	mvns	r3, r3
 801a76c:	b2db      	uxtb	r3, r3
 801a76e:	ea4f 202e 	mov.w	r0, lr, asr #8
 801a772:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a776:	fb1c fc03 	smulbb	ip, ip, r3
 801a77a:	ea4f 08e2 	mov.w	r8, r2, asr #3
 801a77e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a782:	fb00 c001 	mla	r0, r0, r1, ip
 801a786:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801a78a:	f3ce 0ccc 	ubfx	ip, lr, #3, #13
 801a78e:	fb18 f803 	smulbb	r8, r8, r3
 801a792:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a796:	00d2      	lsls	r2, r2, #3
 801a798:	fb0c 8c01 	mla	ip, ip, r1, r8
 801a79c:	ea05 0ece 	and.w	lr, r5, lr, lsl #3
 801a7a0:	b2d2      	uxtb	r2, r2
 801a7a2:	fa1f fc8c 	uxth.w	ip, ip
 801a7a6:	fa5f fe8e 	uxtb.w	lr, lr
 801a7aa:	fb12 f203 	smulbb	r2, r2, r3
 801a7ae:	b280      	uxth	r0, r0
 801a7b0:	fb0e 2201 	mla	r2, lr, r1, r2
 801a7b4:	f10c 0801 	add.w	r8, ip, #1
 801a7b8:	b292      	uxth	r2, r2
 801a7ba:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 801a7be:	f100 0801 	add.w	r8, r0, #1
 801a7c2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a7c6:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 801a7ca:	1c51      	adds	r1, r2, #1
 801a7cc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a7d0:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a7d4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a7d8:	ea4c 0c00 	orr.w	ip, ip, r0
 801a7dc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a7e0:	ea4c 0c02 	orr.w	ip, ip, r2
 801a7e4:	f8a9 c000 	strh.w	ip, [r9]
 801a7e8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801a7ea:	441c      	add	r4, r3
 801a7ec:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801a7ee:	f109 0902 	add.w	r9, r9, #2
 801a7f2:	441e      	add	r6, r3
 801a7f4:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a7f8:	e5d9      	b.n	801a3ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 801a7fa:	bf00      	nop
 801a7fc:	20026eb8 	.word	0x20026eb8
 801a800:	0007fff8 	.word	0x0007fff8
 801a804:	2800      	cmp	r0, #0
 801a806:	d083      	beq.n	801a710 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 801a808:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a80a:	442b      	add	r3, r5
 801a80c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a810:	07db      	lsls	r3, r3, #31
 801a812:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a816:	bf54      	ite	pl
 801a818:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a81c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a820:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a824:	fa5f f38c 	uxtb.w	r3, ip
 801a828:	930e      	str	r3, [sp, #56]	; 0x38
 801a82a:	e771      	b.n	801a710 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 801a82c:	b019      	add	sp, #100	; 0x64
 801a82e:	ecbd 8b08 	vpop	{d8-d11}
 801a832:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a836:	bf00      	nop

0801a838 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801a838:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a83c:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801a840:	2c00      	cmp	r4, #0
 801a842:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801a846:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801a84a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801a84e:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801a852:	fb04 ce03 	mla	lr, r4, r3, ip
 801a856:	db60      	blt.n	801a91a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801a858:	45a1      	cmp	r9, r4
 801a85a:	dd5e      	ble.n	801a91a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801a85c:	f1bc 0f00 	cmp.w	ip, #0
 801a860:	db59      	blt.n	801a916 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801a862:	45e0      	cmp	r8, ip
 801a864:	dd57      	ble.n	801a916 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801a866:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801a86a:	f01e 0f01 	tst.w	lr, #1
 801a86e:	5c16      	ldrb	r6, [r2, r0]
 801a870:	bf0c      	ite	eq
 801a872:	f006 060f 	andeq.w	r6, r6, #15
 801a876:	1136      	asrne	r6, r6, #4
 801a878:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801a87c:	b2f6      	uxtb	r6, r6
 801a87e:	f11c 0001 	adds.w	r0, ip, #1
 801a882:	d44d      	bmi.n	801a920 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801a884:	4580      	cmp	r8, r0
 801a886:	dd4b      	ble.n	801a920 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801a888:	2d00      	cmp	r5, #0
 801a88a:	d04b      	beq.n	801a924 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801a88c:	f10e 0a01 	add.w	sl, lr, #1
 801a890:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801a894:	f01a 0f01 	tst.w	sl, #1
 801a898:	5c10      	ldrb	r0, [r2, r0]
 801a89a:	bf0c      	ite	eq
 801a89c:	f000 000f 	andeq.w	r0, r0, #15
 801a8a0:	1100      	asrne	r0, r0, #4
 801a8a2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a8a6:	b2c0      	uxtb	r0, r0
 801a8a8:	3401      	adds	r4, #1
 801a8aa:	d43f      	bmi.n	801a92c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801a8ac:	45a1      	cmp	r9, r4
 801a8ae:	dd3d      	ble.n	801a92c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801a8b0:	2f00      	cmp	r7, #0
 801a8b2:	f000 8099 	beq.w	801a9e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>
 801a8b6:	f1bc 0f00 	cmp.w	ip, #0
 801a8ba:	db35      	blt.n	801a928 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801a8bc:	45e0      	cmp	r8, ip
 801a8be:	dd33      	ble.n	801a928 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801a8c0:	eb03 090e 	add.w	r9, r3, lr
 801a8c4:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801a8c8:	f019 0f01 	tst.w	r9, #1
 801a8cc:	5d14      	ldrb	r4, [r2, r4]
 801a8ce:	bf0c      	ite	eq
 801a8d0:	f004 040f 	andeq.w	r4, r4, #15
 801a8d4:	1124      	asrne	r4, r4, #4
 801a8d6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801a8da:	b2e4      	uxtb	r4, r4
 801a8dc:	f11c 0c01 	adds.w	ip, ip, #1
 801a8e0:	d427      	bmi.n	801a932 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801a8e2:	45e0      	cmp	r8, ip
 801a8e4:	dd25      	ble.n	801a932 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801a8e6:	b335      	cbz	r5, 801a936 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801a8e8:	3301      	adds	r3, #1
 801a8ea:	449e      	add	lr, r3
 801a8ec:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801a8f0:	f01e 0f01 	tst.w	lr, #1
 801a8f4:	5cd2      	ldrb	r2, [r2, r3]
 801a8f6:	bf0c      	ite	eq
 801a8f8:	f002 020f 	andeq.w	r2, r2, #15
 801a8fc:	1112      	asrne	r2, r2, #4
 801a8fe:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a902:	b2d3      	uxtb	r3, r2
 801a904:	2d0f      	cmp	r5, #15
 801a906:	d917      	bls.n	801a938 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801a908:	4b3a      	ldr	r3, [pc, #232]	; (801a9f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801a90a:	4a3b      	ldr	r2, [pc, #236]	; (801a9f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 801a90c:	483b      	ldr	r0, [pc, #236]	; (801a9fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 801a90e:	f240 3173 	movw	r1, #883	; 0x373
 801a912:	f000 fc47 	bl	801b1a4 <__assert_func>
 801a916:	2600      	movs	r6, #0
 801a918:	e7b1      	b.n	801a87e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801a91a:	2000      	movs	r0, #0
 801a91c:	4606      	mov	r6, r0
 801a91e:	e7c3      	b.n	801a8a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801a920:	2000      	movs	r0, #0
 801a922:	e7c1      	b.n	801a8a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801a924:	4628      	mov	r0, r5
 801a926:	e7bf      	b.n	801a8a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801a928:	2400      	movs	r4, #0
 801a92a:	e7d7      	b.n	801a8dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801a92c:	2300      	movs	r3, #0
 801a92e:	461c      	mov	r4, r3
 801a930:	e7e8      	b.n	801a904 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801a932:	2300      	movs	r3, #0
 801a934:	e7e6      	b.n	801a904 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801a936:	462b      	mov	r3, r5
 801a938:	2f0f      	cmp	r7, #15
 801a93a:	d8e5      	bhi.n	801a908 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801a93c:	b2ad      	uxth	r5, r5
 801a93e:	b2bf      	uxth	r7, r7
 801a940:	fb05 fc07 	mul.w	ip, r5, r7
 801a944:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801a948:	012d      	lsls	r5, r5, #4
 801a94a:	b2bf      	uxth	r7, r7
 801a94c:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801a950:	eba5 050c 	sub.w	r5, r5, ip
 801a954:	1bd2      	subs	r2, r2, r7
 801a956:	b2ad      	uxth	r5, r5
 801a958:	b292      	uxth	r2, r2
 801a95a:	4368      	muls	r0, r5
 801a95c:	fb06 0002 	mla	r0, r6, r2, r0
 801a960:	fb07 0404 	mla	r4, r7, r4, r0
 801a964:	fb0c 4303 	mla	r3, ip, r3, r4
 801a968:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a96c:	2b00      	cmp	r3, #0
 801a96e:	d039      	beq.n	801a9e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 801a970:	4a23      	ldr	r2, [pc, #140]	; (801aa00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c8>)
 801a972:	6816      	ldr	r6, [r2, #0]
 801a974:	880a      	ldrh	r2, [r1, #0]
 801a976:	b298      	uxth	r0, r3
 801a978:	1215      	asrs	r5, r2, #8
 801a97a:	43db      	mvns	r3, r3
 801a97c:	b2db      	uxtb	r3, r3
 801a97e:	1234      	asrs	r4, r6, #8
 801a980:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a984:	fb15 f503 	smulbb	r5, r5, r3
 801a988:	10d7      	asrs	r7, r2, #3
 801a98a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801a98e:	fb04 5400 	mla	r4, r4, r0, r5
 801a992:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a996:	f3c6 05cc 	ubfx	r5, r6, #3, #13
 801a99a:	fb17 f703 	smulbb	r7, r7, r3
 801a99e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a9a2:	00d2      	lsls	r2, r2, #3
 801a9a4:	fb05 7500 	mla	r5, r5, r0, r7
 801a9a8:	b2d2      	uxtb	r2, r2
 801a9aa:	00f6      	lsls	r6, r6, #3
 801a9ac:	fb12 f303 	smulbb	r3, r2, r3
 801a9b0:	b2ad      	uxth	r5, r5
 801a9b2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a9b6:	b2a4      	uxth	r4, r4
 801a9b8:	fb06 3000 	mla	r0, r6, r0, r3
 801a9bc:	1c6b      	adds	r3, r5, #1
 801a9be:	b280      	uxth	r0, r0
 801a9c0:	1c62      	adds	r2, r4, #1
 801a9c2:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801a9c6:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801a9ca:	095b      	lsrs	r3, r3, #5
 801a9cc:	1c42      	adds	r2, r0, #1
 801a9ce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a9d2:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801a9d6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a9da:	4323      	orrs	r3, r4
 801a9dc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801a9e0:	4303      	orrs	r3, r0
 801a9e2:	800b      	strh	r3, [r1, #0]
 801a9e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a9e8:	2d0f      	cmp	r5, #15
 801a9ea:	d88d      	bhi.n	801a908 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801a9ec:	463b      	mov	r3, r7
 801a9ee:	463c      	mov	r4, r7
 801a9f0:	e7a4      	b.n	801a93c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801a9f2:	bf00      	nop
 801a9f4:	0801f4bf 	.word	0x0801f4bf
 801a9f8:	0801fa1d 	.word	0x0801fa1d
 801a9fc:	0801f547 	.word	0x0801f547
 801aa00:	20026eb8 	.word	0x20026eb8

0801aa04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801aa04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa08:	ed2d 8b08 	vpush	{d8-d11}
 801aa0c:	b095      	sub	sp, #84	; 0x54
 801aa0e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801aa12:	9306      	str	r3, [sp, #24]
 801aa14:	f9bd 30b8 	ldrsh.w	r3, [sp, #184]	; 0xb8
 801aa18:	9307      	str	r3, [sp, #28]
 801aa1a:	920d      	str	r2, [sp, #52]	; 0x34
 801aa1c:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 801aa20:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801aa22:	910a      	str	r1, [sp, #40]	; 0x28
 801aa24:	9308      	str	r3, [sp, #32]
 801aa26:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801aa2a:	9013      	str	r0, [sp, #76]	; 0x4c
 801aa2c:	6850      	ldr	r0, [r2, #4]
 801aa2e:	6812      	ldr	r2, [r2, #0]
 801aa30:	fb00 1303 	mla	r3, r0, r3, r1
 801aa34:	eb02 0b43 	add.w	fp, r2, r3, lsl #1
 801aa38:	9b07      	ldr	r3, [sp, #28]
 801aa3a:	3301      	adds	r3, #1
 801aa3c:	f023 0301 	bic.w	r3, r3, #1
 801aa40:	9309      	str	r3, [sp, #36]	; 0x24
 801aa42:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801aa44:	681f      	ldr	r7, [r3, #0]
 801aa46:	eeb0 aa40 	vmov.f32	s20, s0
 801aa4a:	eef0 9a60 	vmov.f32	s19, s1
 801aa4e:	eeb0 9a41 	vmov.f32	s18, s2
 801aa52:	eeb0 8a62 	vmov.f32	s16, s5
 801aa56:	eef0 8a43 	vmov.f32	s17, s6
 801aa5a:	eef0 ba44 	vmov.f32	s23, s8
 801aa5e:	eeb0 ba64 	vmov.f32	s22, s9
 801aa62:	eef0 aa45 	vmov.f32	s21, s10
 801aa66:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801aa68:	2b00      	cmp	r3, #0
 801aa6a:	dc03      	bgt.n	801aa74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801aa6c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801aa6e:	2b00      	cmp	r3, #0
 801aa70:	f340 8260 	ble.w	801af34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 801aa74:	9b06      	ldr	r3, [sp, #24]
 801aa76:	2b00      	cmp	r3, #0
 801aa78:	f340 811c 	ble.w	801acb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801aa7c:	1422      	asrs	r2, r4, #16
 801aa7e:	ea4f 4326 	mov.w	r3, r6, asr #16
 801aa82:	d42d      	bmi.n	801aae0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 801aa84:	9807      	ldr	r0, [sp, #28]
 801aa86:	1c51      	adds	r1, r2, #1
 801aa88:	4288      	cmp	r0, r1
 801aa8a:	dd2c      	ble.n	801aae6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801aa8c:	2b00      	cmp	r3, #0
 801aa8e:	db2a      	blt.n	801aae6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801aa90:	9808      	ldr	r0, [sp, #32]
 801aa92:	1c59      	adds	r1, r3, #1
 801aa94:	4288      	cmp	r0, r1
 801aa96:	dd26      	ble.n	801aae6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801aa98:	9b06      	ldr	r3, [sp, #24]
 801aa9a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801aa9c:	3b01      	subs	r3, #1
 801aa9e:	fb02 4203 	mla	r2, r2, r3, r4
 801aaa2:	1412      	asrs	r2, r2, #16
 801aaa4:	d42a      	bmi.n	801aafc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801aaa6:	9907      	ldr	r1, [sp, #28]
 801aaa8:	3201      	adds	r2, #1
 801aaaa:	4291      	cmp	r1, r2
 801aaac:	dd26      	ble.n	801aafc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801aaae:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801aab0:	fb02 6303 	mla	r3, r2, r3, r6
 801aab4:	141b      	asrs	r3, r3, #16
 801aab6:	d421      	bmi.n	801aafc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801aab8:	9a08      	ldr	r2, [sp, #32]
 801aaba:	3301      	adds	r3, #1
 801aabc:	429a      	cmp	r2, r3
 801aabe:	dd1d      	ble.n	801aafc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801aac0:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801aac4:	f8dd a018 	ldr.w	sl, [sp, #24]
 801aac8:	930e      	str	r3, [sp, #56]	; 0x38
 801aaca:	46d8      	mov	r8, fp
 801aacc:	f1ba 0f00 	cmp.w	sl, #0
 801aad0:	f300 8164 	bgt.w	801ad9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801aad4:	9b06      	ldr	r3, [sp, #24]
 801aad6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801aada:	eb0b 0b45 	add.w	fp, fp, r5, lsl #1
 801aade:	e0eb      	b.n	801acb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 801aae0:	1c51      	adds	r1, r2, #1
 801aae2:	f040 80dd 	bne.w	801aca0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801aae6:	9907      	ldr	r1, [sp, #28]
 801aae8:	4291      	cmp	r1, r2
 801aaea:	f340 80d9 	ble.w	801aca0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801aaee:	1c5a      	adds	r2, r3, #1
 801aaf0:	f2c0 80d6 	blt.w	801aca0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801aaf4:	9a08      	ldr	r2, [sp, #32]
 801aaf6:	4293      	cmp	r3, r2
 801aaf8:	f280 80d2 	bge.w	801aca0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801aafc:	f8dd 9018 	ldr.w	r9, [sp, #24]
 801ab00:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801ab04:	46d8      	mov	r8, fp
 801ab06:	f1b9 0f00 	cmp.w	r9, #0
 801ab0a:	dde3      	ble.n	801aad4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 801ab0c:	1420      	asrs	r0, r4, #16
 801ab0e:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ab12:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ab16:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ab1a:	f100 8127 	bmi.w	801ad6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 801ab1e:	9d07      	ldr	r5, [sp, #28]
 801ab20:	f100 0c01 	add.w	ip, r0, #1
 801ab24:	4565      	cmp	r5, ip
 801ab26:	f340 8123 	ble.w	801ad70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801ab2a:	2b00      	cmp	r3, #0
 801ab2c:	f2c0 8120 	blt.w	801ad70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801ab30:	9d08      	ldr	r5, [sp, #32]
 801ab32:	f103 0c01 	add.w	ip, r3, #1
 801ab36:	4565      	cmp	r5, ip
 801ab38:	f340 811a 	ble.w	801ad70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801ab3c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ab3e:	fb03 0305 	mla	r3, r3, r5, r0
 801ab42:	0858      	lsrs	r0, r3, #1
 801ab44:	07dd      	lsls	r5, r3, #31
 801ab46:	5c38      	ldrb	r0, [r7, r0]
 801ab48:	bf54      	ite	pl
 801ab4a:	f000 000f 	andpl.w	r0, r0, #15
 801ab4e:	1100      	asrmi	r0, r0, #4
 801ab50:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801ab54:	b2c0      	uxtb	r0, r0
 801ab56:	2a00      	cmp	r2, #0
 801ab58:	f000 80ed 	beq.w	801ad36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x332>
 801ab5c:	f103 0e01 	add.w	lr, r3, #1
 801ab60:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801ab64:	f01e 0f01 	tst.w	lr, #1
 801ab68:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ab6c:	bf0c      	ite	eq
 801ab6e:	f00c 0c0f 	andeq.w	ip, ip, #15
 801ab72:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801ab76:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ab7a:	fa5f fc8c 	uxtb.w	ip, ip
 801ab7e:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
 801ab82:	b1f9      	cbz	r1, 801abc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801ab84:	4453      	add	r3, sl
 801ab86:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ab8a:	07dd      	lsls	r5, r3, #31
 801ab8c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ab90:	bf54      	ite	pl
 801ab92:	f00c 0c0f 	andpl.w	ip, ip, #15
 801ab96:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801ab9a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801ab9e:	3301      	adds	r3, #1
 801aba0:	fa5f fc8c 	uxtb.w	ip, ip
 801aba4:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 801aba8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801abac:	07dd      	lsls	r5, r3, #31
 801abae:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801abb2:	bf54      	ite	pl
 801abb4:	f00c 030f 	andpl.w	r3, ip, #15
 801abb8:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801abbc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801abc0:	b2db      	uxtb	r3, r3
 801abc2:	9310      	str	r3, [sp, #64]	; 0x40
 801abc4:	b292      	uxth	r2, r2
 801abc6:	b289      	uxth	r1, r1
 801abc8:	fb02 f301 	mul.w	r3, r2, r1
 801abcc:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801abd0:	0112      	lsls	r2, r2, #4
 801abd2:	b289      	uxth	r1, r1
 801abd4:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 801abd8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801abda:	1ad2      	subs	r2, r2, r3
 801abdc:	ebac 0c01 	sub.w	ip, ip, r1
 801abe0:	b292      	uxth	r2, r2
 801abe2:	436a      	muls	r2, r5
 801abe4:	fa1f fc8c 	uxth.w	ip, ip
 801abe8:	fb00 200c 	mla	r0, r0, ip, r2
 801abec:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801abee:	fb01 0102 	mla	r1, r1, r2, r0
 801abf2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801abf4:	fb03 1302 	mla	r3, r3, r2, r1
 801abf8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801abfc:	2b00      	cmp	r3, #0
 801abfe:	d046      	beq.n	801ac8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801ac00:	4ac7      	ldr	r2, [pc, #796]	; (801af20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801ac02:	49c8      	ldr	r1, [pc, #800]	; (801af24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801ac04:	6812      	ldr	r2, [r2, #0]
 801ac06:	ea4f 2e22 	mov.w	lr, r2, asr #8
 801ac0a:	f3c2 0ccc 	ubfx	ip, r2, #3, #13
 801ac0e:	ea01 02c2 	and.w	r2, r1, r2, lsl #3
 801ac12:	b2d2      	uxtb	r2, r2
 801ac14:	2bff      	cmp	r3, #255	; 0xff
 801ac16:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ac1a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801ac1e:	4615      	mov	r5, r2
 801ac20:	f000 809c 	beq.w	801ad5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 801ac24:	f8b8 0000 	ldrh.w	r0, [r8]
 801ac28:	b29a      	uxth	r2, r3
 801ac2a:	1201      	asrs	r1, r0, #8
 801ac2c:	43db      	mvns	r3, r3
 801ac2e:	b2db      	uxtb	r3, r3
 801ac30:	fb1e fe02 	smulbb	lr, lr, r2
 801ac34:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ac38:	fb01 e103 	mla	r1, r1, r3, lr
 801ac3c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801ac40:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ac44:	fb1c fc02 	smulbb	ip, ip, r2
 801ac48:	fb0e cc03 	mla	ip, lr, r3, ip
 801ac4c:	00c0      	lsls	r0, r0, #3
 801ac4e:	fa1f fc8c 	uxth.w	ip, ip
 801ac52:	fb15 f202 	smulbb	r2, r5, r2
 801ac56:	b2c0      	uxtb	r0, r0
 801ac58:	b289      	uxth	r1, r1
 801ac5a:	fb00 2303 	mla	r3, r0, r3, r2
 801ac5e:	f10c 0e01 	add.w	lr, ip, #1
 801ac62:	b29b      	uxth	r3, r3
 801ac64:	1c4a      	adds	r2, r1, #1
 801ac66:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 801ac6a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ac6e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ac72:	1c5a      	adds	r2, r3, #1
 801ac74:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801ac78:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ac7c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801ac80:	ea4c 0101 	orr.w	r1, ip, r1
 801ac84:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ac88:	4319      	orrs	r1, r3
 801ac8a:	f8a8 1000 	strh.w	r1, [r8]
 801ac8e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ac90:	441c      	add	r4, r3
 801ac92:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ac94:	f108 0802 	add.w	r8, r8, #2
 801ac98:	441e      	add	r6, r3
 801ac9a:	f109 39ff 	add.w	r9, r9, #4294967295
 801ac9e:	e732      	b.n	801ab06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x102>
 801aca0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801aca2:	441c      	add	r4, r3
 801aca4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801aca6:	441e      	add	r6, r3
 801aca8:	9b06      	ldr	r3, [sp, #24]
 801acaa:	3b01      	subs	r3, #1
 801acac:	9306      	str	r3, [sp, #24]
 801acae:	f10b 0b02 	add.w	fp, fp, #2
 801acb2:	e6df      	b.n	801aa74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801acb4:	f47f aef0 	bne.w	801aa98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 801acb8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801acba:	2b00      	cmp	r3, #0
 801acbc:	f340 813a 	ble.w	801af34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 801acc0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801acc4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801acc8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801accc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801acce:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801acd2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801acd6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801acda:	eef0 6a48 	vmov.f32	s13, s16
 801acde:	ee69 7a27 	vmul.f32	s15, s18, s15
 801ace2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ace6:	ee37 8a48 	vsub.f32	s16, s14, s16
 801acea:	ee16 4a90 	vmov	r4, s13
 801acee:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801acf2:	eef0 6a68 	vmov.f32	s13, s17
 801acf6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801acfa:	ee18 2a10 	vmov	r2, s16
 801acfe:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801ad02:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad06:	ee18 2a90 	vmov	r2, s17
 801ad0a:	9329      	str	r3, [sp, #164]	; 0xa4
 801ad0c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ad0e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad12:	932a      	str	r3, [sp, #168]	; 0xa8
 801ad14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ad16:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801ad18:	3b01      	subs	r3, #1
 801ad1a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ad1e:	930a      	str	r3, [sp, #40]	; 0x28
 801ad20:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ad22:	bf08      	it	eq
 801ad24:	4613      	moveq	r3, r2
 801ad26:	ee16 6a90 	vmov	r6, s13
 801ad2a:	9306      	str	r3, [sp, #24]
 801ad2c:	eef0 8a67 	vmov.f32	s17, s15
 801ad30:	eeb0 8a47 	vmov.f32	s16, s14
 801ad34:	e697      	b.n	801aa66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 801ad36:	2900      	cmp	r1, #0
 801ad38:	f43f af44 	beq.w	801abc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801ad3c:	4453      	add	r3, sl
 801ad3e:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801ad42:	07db      	lsls	r3, r3, #31
 801ad44:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801ad48:	bf54      	ite	pl
 801ad4a:	f00c 030f 	andpl.w	r3, ip, #15
 801ad4e:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801ad52:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ad56:	b2db      	uxtb	r3, r3
 801ad58:	930b      	str	r3, [sp, #44]	; 0x2c
 801ad5a:	e733      	b.n	801abc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801ad5c:	08d2      	lsrs	r2, r2, #3
 801ad5e:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801ad62:	ea4e 0ccc 	orr.w	ip, lr, ip, lsl #3
 801ad66:	f8a8 c000 	strh.w	ip, [r8]
 801ad6a:	e790      	b.n	801ac8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801ad6c:	1c45      	adds	r5, r0, #1
 801ad6e:	d18e      	bne.n	801ac8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801ad70:	9d07      	ldr	r5, [sp, #28]
 801ad72:	4285      	cmp	r5, r0
 801ad74:	dd8b      	ble.n	801ac8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801ad76:	1c5d      	adds	r5, r3, #1
 801ad78:	db89      	blt.n	801ac8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801ad7a:	9d08      	ldr	r5, [sp, #32]
 801ad7c:	429d      	cmp	r5, r3
 801ad7e:	dd86      	ble.n	801ac8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801ad80:	e9cd 0302 	strd	r0, r3, [sp, #8]
 801ad84:	9b07      	ldr	r3, [sp, #28]
 801ad86:	9300      	str	r3, [sp, #0]
 801ad88:	e9cd 2104 	strd	r2, r1, [sp, #16]
 801ad8c:	9501      	str	r5, [sp, #4]
 801ad8e:	4653      	mov	r3, sl
 801ad90:	463a      	mov	r2, r7
 801ad92:	4641      	mov	r1, r8
 801ad94:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ad96:	f7ff fd4f 	bl	801a838 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801ad9a:	e778      	b.n	801ac8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801ad9c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ad9e:	1422      	asrs	r2, r4, #16
 801ada0:	1433      	asrs	r3, r6, #16
 801ada2:	fb01 2303 	mla	r3, r1, r3, r2
 801ada6:	085a      	lsrs	r2, r3, #1
 801ada8:	07d9      	lsls	r1, r3, #31
 801adaa:	5cba      	ldrb	r2, [r7, r2]
 801adac:	bf54      	ite	pl
 801adae:	f002 020f 	andpl.w	r2, r2, #15
 801adb2:	1112      	asrmi	r2, r2, #4
 801adb4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801adb8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801adbc:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801adc0:	b2d2      	uxtb	r2, r2
 801adc2:	2800      	cmp	r0, #0
 801adc4:	f000 809b 	beq.w	801aefe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fa>
 801adc8:	f103 0e01 	add.w	lr, r3, #1
 801adcc:	ea4f 015e 	mov.w	r1, lr, lsr #1
 801add0:	f01e 0f01 	tst.w	lr, #1
 801add4:	5c79      	ldrb	r1, [r7, r1]
 801add6:	bf0c      	ite	eq
 801add8:	f001 010f 	andeq.w	r1, r1, #15
 801addc:	1109      	asrne	r1, r1, #4
 801adde:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801ade2:	b2c9      	uxtb	r1, r1
 801ade4:	9111      	str	r1, [sp, #68]	; 0x44
 801ade6:	f1bc 0f00 	cmp.w	ip, #0
 801adea:	d018      	beq.n	801ae1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801adec:	990e      	ldr	r1, [sp, #56]	; 0x38
 801adee:	440b      	add	r3, r1
 801adf0:	0859      	lsrs	r1, r3, #1
 801adf2:	07dd      	lsls	r5, r3, #31
 801adf4:	5c79      	ldrb	r1, [r7, r1]
 801adf6:	bf54      	ite	pl
 801adf8:	f001 010f 	andpl.w	r1, r1, #15
 801adfc:	1109      	asrmi	r1, r1, #4
 801adfe:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801ae02:	b2c9      	uxtb	r1, r1
 801ae04:	3301      	adds	r3, #1
 801ae06:	910c      	str	r1, [sp, #48]	; 0x30
 801ae08:	0859      	lsrs	r1, r3, #1
 801ae0a:	07dd      	lsls	r5, r3, #31
 801ae0c:	5c79      	ldrb	r1, [r7, r1]
 801ae0e:	bf54      	ite	pl
 801ae10:	f001 010f 	andpl.w	r1, r1, #15
 801ae14:	1109      	asrmi	r1, r1, #4
 801ae16:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801ae1a:	b2c9      	uxtb	r1, r1
 801ae1c:	9112      	str	r1, [sp, #72]	; 0x48
 801ae1e:	b280      	uxth	r0, r0
 801ae20:	fa1f fc8c 	uxth.w	ip, ip
 801ae24:	fb00 f30c 	mul.w	r3, r0, ip
 801ae28:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801ae2c:	0100      	lsls	r0, r0, #4
 801ae2e:	fa1f fc8c 	uxth.w	ip, ip
 801ae32:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801ae36:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ae38:	1ac0      	subs	r0, r0, r3
 801ae3a:	eba1 010c 	sub.w	r1, r1, ip
 801ae3e:	b280      	uxth	r0, r0
 801ae40:	b289      	uxth	r1, r1
 801ae42:	4368      	muls	r0, r5
 801ae44:	fb02 0201 	mla	r2, r2, r1, r0
 801ae48:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ae4a:	fb0c 2c01 	mla	ip, ip, r1, r2
 801ae4e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ae50:	fb03 c302 	mla	r3, r3, r2, ip
 801ae54:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ae58:	2b00      	cmp	r3, #0
 801ae5a:	d047      	beq.n	801aeec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 801ae5c:	4a30      	ldr	r2, [pc, #192]	; (801af20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801ae5e:	4931      	ldr	r1, [pc, #196]	; (801af24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801ae60:	6812      	ldr	r2, [r2, #0]
 801ae62:	2bff      	cmp	r3, #255	; 0xff
 801ae64:	ea4f 2e22 	mov.w	lr, r2, asr #8
 801ae68:	f3c2 0ccc 	ubfx	ip, r2, #3, #13
 801ae6c:	ea01 02c2 	and.w	r2, r1, r2, lsl #3
 801ae70:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ae74:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801ae78:	b2d2      	uxtb	r2, r2
 801ae7a:	d055      	beq.n	801af28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 801ae7c:	f8b8 0000 	ldrh.w	r0, [r8]
 801ae80:	fa1f f983 	uxth.w	r9, r3
 801ae84:	1201      	asrs	r1, r0, #8
 801ae86:	43db      	mvns	r3, r3
 801ae88:	b2db      	uxtb	r3, r3
 801ae8a:	fb1e fe09 	smulbb	lr, lr, r9
 801ae8e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ae92:	fb01 e103 	mla	r1, r1, r3, lr
 801ae96:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801ae9a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ae9e:	fb1c fc09 	smulbb	ip, ip, r9
 801aea2:	fb0e cc03 	mla	ip, lr, r3, ip
 801aea6:	00c0      	lsls	r0, r0, #3
 801aea8:	fa1f fc8c 	uxth.w	ip, ip
 801aeac:	b2c0      	uxtb	r0, r0
 801aeae:	fb12 f209 	smulbb	r2, r2, r9
 801aeb2:	b289      	uxth	r1, r1
 801aeb4:	fb00 2203 	mla	r2, r0, r3, r2
 801aeb8:	f10c 0e01 	add.w	lr, ip, #1
 801aebc:	b292      	uxth	r2, r2
 801aebe:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 801aec2:	f101 0e01 	add.w	lr, r1, #1
 801aec6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801aeca:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 801aece:	1c53      	adds	r3, r2, #1
 801aed0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801aed4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801aed8:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801aedc:	ea4c 0c01 	orr.w	ip, ip, r1
 801aee0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801aee4:	ea4c 0c02 	orr.w	ip, ip, r2
 801aee8:	f8a8 c000 	strh.w	ip, [r8]
 801aeec:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801aeee:	441c      	add	r4, r3
 801aef0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801aef2:	f108 0802 	add.w	r8, r8, #2
 801aef6:	441e      	add	r6, r3
 801aef8:	f10a 3aff 	add.w	sl, sl, #4294967295
 801aefc:	e5e6      	b.n	801aacc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 801aefe:	f1bc 0f00 	cmp.w	ip, #0
 801af02:	d08c      	beq.n	801ae1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801af04:	990e      	ldr	r1, [sp, #56]	; 0x38
 801af06:	440b      	add	r3, r1
 801af08:	0859      	lsrs	r1, r3, #1
 801af0a:	07db      	lsls	r3, r3, #31
 801af0c:	5c79      	ldrb	r1, [r7, r1]
 801af0e:	bf54      	ite	pl
 801af10:	f001 010f 	andpl.w	r1, r1, #15
 801af14:	1109      	asrmi	r1, r1, #4
 801af16:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801af1a:	b2c9      	uxtb	r1, r1
 801af1c:	910c      	str	r1, [sp, #48]	; 0x30
 801af1e:	e77e      	b.n	801ae1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801af20:	20026eb8 	.word	0x20026eb8
 801af24:	0007fff8 	.word	0x0007fff8
 801af28:	08d2      	lsrs	r2, r2, #3
 801af2a:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801af2e:	ea4e 0ccc 	orr.w	ip, lr, ip, lsl #3
 801af32:	e7d9      	b.n	801aee8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e4>
 801af34:	b015      	add	sp, #84	; 0x54
 801af36:	ecbd 8b08 	vpop	{d8-d11}
 801af3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af3e:	bf00      	nop

0801af40 <CRC_Lock>:
 801af40:	b530      	push	{r4, r5, lr}
 801af42:	4a1d      	ldr	r2, [pc, #116]	; (801afb8 <CRC_Lock+0x78>)
 801af44:	6813      	ldr	r3, [r2, #0]
 801af46:	f023 0301 	bic.w	r3, r3, #1
 801af4a:	6013      	str	r3, [r2, #0]
 801af4c:	4b1b      	ldr	r3, [pc, #108]	; (801afbc <CRC_Lock+0x7c>)
 801af4e:	681a      	ldr	r2, [r3, #0]
 801af50:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801af54:	4022      	ands	r2, r4
 801af56:	f24c 2540 	movw	r5, #49728	; 0xc240
 801af5a:	42aa      	cmp	r2, r5
 801af5c:	d005      	beq.n	801af6a <CRC_Lock+0x2a>
 801af5e:	681b      	ldr	r3, [r3, #0]
 801af60:	f24c 2270 	movw	r2, #49776	; 0xc270
 801af64:	4023      	ands	r3, r4
 801af66:	4293      	cmp	r3, r2
 801af68:	d11d      	bne.n	801afa6 <CRC_Lock+0x66>
 801af6a:	4b15      	ldr	r3, [pc, #84]	; (801afc0 <CRC_Lock+0x80>)
 801af6c:	681b      	ldr	r3, [r3, #0]
 801af6e:	b9d3      	cbnz	r3, 801afa6 <CRC_Lock+0x66>
 801af70:	4a14      	ldr	r2, [pc, #80]	; (801afc4 <CRC_Lock+0x84>)
 801af72:	6813      	ldr	r3, [r2, #0]
 801af74:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801af78:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 801af7c:	d006      	beq.n	801af8c <CRC_Lock+0x4c>
 801af7e:	6813      	ldr	r3, [r2, #0]
 801af80:	f240 4283 	movw	r2, #1155	; 0x483
 801af84:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801af88:	4293      	cmp	r3, r2
 801af8a:	d10c      	bne.n	801afa6 <CRC_Lock+0x66>
 801af8c:	4b0e      	ldr	r3, [pc, #56]	; (801afc8 <CRC_Lock+0x88>)
 801af8e:	2201      	movs	r2, #1
 801af90:	601a      	str	r2, [r3, #0]
 801af92:	681a      	ldr	r2, [r3, #0]
 801af94:	2a00      	cmp	r2, #0
 801af96:	d1fc      	bne.n	801af92 <CRC_Lock+0x52>
 801af98:	4b0c      	ldr	r3, [pc, #48]	; (801afcc <CRC_Lock+0x8c>)
 801af9a:	6018      	str	r0, [r3, #0]
 801af9c:	6818      	ldr	r0, [r3, #0]
 801af9e:	1a43      	subs	r3, r0, r1
 801afa0:	4258      	negs	r0, r3
 801afa2:	4158      	adcs	r0, r3
 801afa4:	bd30      	pop	{r4, r5, pc}
 801afa6:	4b0a      	ldr	r3, [pc, #40]	; (801afd0 <CRC_Lock+0x90>)
 801afa8:	2201      	movs	r2, #1
 801afaa:	601a      	str	r2, [r3, #0]
 801afac:	681a      	ldr	r2, [r3, #0]
 801afae:	2a00      	cmp	r2, #0
 801afb0:	d1fc      	bne.n	801afac <CRC_Lock+0x6c>
 801afb2:	4b08      	ldr	r3, [pc, #32]	; (801afd4 <CRC_Lock+0x94>)
 801afb4:	e7f1      	b.n	801af9a <CRC_Lock+0x5a>
 801afb6:	bf00      	nop
 801afb8:	e0002000 	.word	0xe0002000
 801afbc:	e000ed00 	.word	0xe000ed00
 801afc0:	e0042000 	.word	0xe0042000
 801afc4:	5c001000 	.word	0x5c001000
 801afc8:	58024c08 	.word	0x58024c08
 801afcc:	58024c00 	.word	0x58024c00
 801afd0:	40023008 	.word	0x40023008
 801afd4:	40023000 	.word	0x40023000

0801afd8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801afd8:	6101      	str	r1, [r0, #16]
 801afda:	4770      	bx	lr

0801afdc <_ZN8touchgfx8Gestures4tickEv>:
 801afdc:	7b83      	ldrb	r3, [r0, #14]
 801afde:	b14b      	cbz	r3, 801aff4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801afe0:	8903      	ldrh	r3, [r0, #8]
 801afe2:	3301      	adds	r3, #1
 801afe4:	b29b      	uxth	r3, r3
 801afe6:	2b07      	cmp	r3, #7
 801afe8:	8103      	strh	r3, [r0, #8]
 801afea:	bf81      	itttt	hi
 801afec:	2300      	movhi	r3, #0
 801afee:	8143      	strhhi	r3, [r0, #10]
 801aff0:	8183      	strhhi	r3, [r0, #12]
 801aff2:	7383      	strbhi	r3, [r0, #14]
 801aff4:	4770      	bx	lr
	...

0801aff8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801aff8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801affc:	4604      	mov	r4, r0
 801affe:	8880      	ldrh	r0, [r0, #4]
 801b000:	f8ad 0006 	strh.w	r0, [sp, #6]
 801b004:	4698      	mov	r8, r3
 801b006:	eba8 0000 	sub.w	r0, r8, r0
 801b00a:	4b1c      	ldr	r3, [pc, #112]	; (801b07c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801b00c:	9300      	str	r3, [sp, #0]
 801b00e:	b280      	uxth	r0, r0
 801b010:	2300      	movs	r3, #0
 801b012:	f88d 3004 	strb.w	r3, [sp, #4]
 801b016:	b203      	sxth	r3, r0
 801b018:	2b00      	cmp	r3, #0
 801b01a:	bfb8      	it	lt
 801b01c:	4240      	neglt	r0, r0
 801b01e:	4617      	mov	r7, r2
 801b020:	8aa2      	ldrh	r2, [r4, #20]
 801b022:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801b026:	f8ad 800a 	strh.w	r8, [sp, #10]
 801b02a:	bfb8      	it	lt
 801b02c:	b203      	sxthlt	r3, r0
 801b02e:	460e      	mov	r6, r1
 801b030:	4293      	cmp	r3, r2
 801b032:	88e1      	ldrh	r1, [r4, #6]
 801b034:	f8ad 1008 	strh.w	r1, [sp, #8]
 801b038:	f8ad 500c 	strh.w	r5, [sp, #12]
 801b03c:	dc08      	bgt.n	801b050 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801b03e:	1a69      	subs	r1, r5, r1
 801b040:	b289      	uxth	r1, r1
 801b042:	b20b      	sxth	r3, r1
 801b044:	2b00      	cmp	r3, #0
 801b046:	bfbc      	itt	lt
 801b048:	4249      	neglt	r1, r1
 801b04a:	b20b      	sxthlt	r3, r1
 801b04c:	429a      	cmp	r2, r3
 801b04e:	da13      	bge.n	801b078 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801b050:	6920      	ldr	r0, [r4, #16]
 801b052:	6803      	ldr	r3, [r0, #0]
 801b054:	4669      	mov	r1, sp
 801b056:	685b      	ldr	r3, [r3, #4]
 801b058:	4798      	blx	r3
 801b05a:	eba8 0606 	sub.w	r6, r8, r6
 801b05e:	2300      	movs	r3, #0
 801b060:	1bef      	subs	r7, r5, r7
 801b062:	2001      	movs	r0, #1
 801b064:	8123      	strh	r3, [r4, #8]
 801b066:	8166      	strh	r6, [r4, #10]
 801b068:	81a7      	strh	r7, [r4, #12]
 801b06a:	f8a4 8004 	strh.w	r8, [r4, #4]
 801b06e:	80e5      	strh	r5, [r4, #6]
 801b070:	73a0      	strb	r0, [r4, #14]
 801b072:	b004      	add	sp, #16
 801b074:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b078:	2000      	movs	r0, #0
 801b07a:	e7fa      	b.n	801b072 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801b07c:	0801e734 	.word	0x0801e734

0801b080 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801b080:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b082:	461e      	mov	r6, r3
 801b084:	1e4b      	subs	r3, r1, #1
 801b086:	2b01      	cmp	r3, #1
 801b088:	b085      	sub	sp, #20
 801b08a:	4604      	mov	r4, r0
 801b08c:	460d      	mov	r5, r1
 801b08e:	4617      	mov	r7, r2
 801b090:	d84b      	bhi.n	801b12a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801b092:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801b096:	1cd3      	adds	r3, r2, #3
 801b098:	b29b      	uxth	r3, r3
 801b09a:	2b06      	cmp	r3, #6
 801b09c:	d916      	bls.n	801b0cc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801b09e:	f8df c098 	ldr.w	ip, [pc, #152]	; 801b138 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb8>
 801b0a2:	f8cd c004 	str.w	ip, [sp, #4]
 801b0a6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b0aa:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b0ae:	6900      	ldr	r0, [r0, #16]
 801b0b0:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b0b4:	f04f 0c00 	mov.w	ip, #0
 801b0b8:	f88d c008 	strb.w	ip, [sp, #8]
 801b0bc:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b0c0:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b0c4:	6803      	ldr	r3, [r0, #0]
 801b0c6:	a901      	add	r1, sp, #4
 801b0c8:	689b      	ldr	r3, [r3, #8]
 801b0ca:	4798      	blx	r3
 801b0cc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801b0d0:	1cd3      	adds	r3, r2, #3
 801b0d2:	b29b      	uxth	r3, r3
 801b0d4:	2b06      	cmp	r3, #6
 801b0d6:	d916      	bls.n	801b106 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b0d8:	f8df c05c 	ldr.w	ip, [pc, #92]	; 801b138 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb8>
 801b0dc:	f8cd c004 	str.w	ip, [sp, #4]
 801b0e0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b0e4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801b0e8:	6920      	ldr	r0, [r4, #16]
 801b0ea:	f8ad 100c 	strh.w	r1, [sp, #12]
 801b0ee:	f04f 0c01 	mov.w	ip, #1
 801b0f2:	f88d c008 	strb.w	ip, [sp, #8]
 801b0f6:	f8ad 200a 	strh.w	r2, [sp, #10]
 801b0fa:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b0fe:	6803      	ldr	r3, [r0, #0]
 801b100:	a901      	add	r1, sp, #4
 801b102:	689b      	ldr	r3, [r3, #8]
 801b104:	4798      	blx	r3
 801b106:	4b0b      	ldr	r3, [pc, #44]	; (801b134 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb4>)
 801b108:	9301      	str	r3, [sp, #4]
 801b10a:	6920      	ldr	r0, [r4, #16]
 801b10c:	f88d 5008 	strb.w	r5, [sp, #8]
 801b110:	2300      	movs	r3, #0
 801b112:	f8ad 700a 	strh.w	r7, [sp, #10]
 801b116:	f8ad 600c 	strh.w	r6, [sp, #12]
 801b11a:	f8ad 300e 	strh.w	r3, [sp, #14]
 801b11e:	6803      	ldr	r3, [r0, #0]
 801b120:	a901      	add	r1, sp, #4
 801b122:	681b      	ldr	r3, [r3, #0]
 801b124:	4798      	blx	r3
 801b126:	b005      	add	sp, #20
 801b128:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b12a:	2900      	cmp	r1, #0
 801b12c:	d1eb      	bne.n	801b106 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b12e:	80a2      	strh	r2, [r4, #4]
 801b130:	80c6      	strh	r6, [r0, #6]
 801b132:	e7e8      	b.n	801b106 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801b134:	0801e720 	.word	0x0801e720
 801b138:	0801e748 	.word	0x0801e748

0801b13c <__aeabi_atexit>:
 801b13c:	460b      	mov	r3, r1
 801b13e:	4601      	mov	r1, r0
 801b140:	4618      	mov	r0, r3
 801b142:	f000 b853 	b.w	801b1ec <__cxa_atexit>

0801b146 <__cxa_pure_virtual>:
 801b146:	b508      	push	{r3, lr}
 801b148:	f000 f820 	bl	801b18c <_ZSt9terminatev>

0801b14c <_ZdlPvj>:
 801b14c:	f000 b80f 	b.w	801b16e <_ZdlPv>

0801b150 <__cxa_guard_acquire>:
 801b150:	6803      	ldr	r3, [r0, #0]
 801b152:	07db      	lsls	r3, r3, #31
 801b154:	d406      	bmi.n	801b164 <__cxa_guard_acquire+0x14>
 801b156:	7843      	ldrb	r3, [r0, #1]
 801b158:	b103      	cbz	r3, 801b15c <__cxa_guard_acquire+0xc>
 801b15a:	deff      	udf	#255	; 0xff
 801b15c:	2301      	movs	r3, #1
 801b15e:	7043      	strb	r3, [r0, #1]
 801b160:	4618      	mov	r0, r3
 801b162:	4770      	bx	lr
 801b164:	2000      	movs	r0, #0
 801b166:	4770      	bx	lr

0801b168 <__cxa_guard_release>:
 801b168:	2301      	movs	r3, #1
 801b16a:	6003      	str	r3, [r0, #0]
 801b16c:	4770      	bx	lr

0801b16e <_ZdlPv>:
 801b16e:	f000 b88f 	b.w	801b290 <free>

0801b172 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801b172:	b508      	push	{r3, lr}
 801b174:	4780      	blx	r0
 801b176:	f000 f80e 	bl	801b196 <abort>
	...

0801b17c <_ZSt13get_terminatev>:
 801b17c:	4b02      	ldr	r3, [pc, #8]	; (801b188 <_ZSt13get_terminatev+0xc>)
 801b17e:	6818      	ldr	r0, [r3, #0]
 801b180:	f3bf 8f5b 	dmb	ish
 801b184:	4770      	bx	lr
 801b186:	bf00      	nop
 801b188:	20000098 	.word	0x20000098

0801b18c <_ZSt9terminatev>:
 801b18c:	b508      	push	{r3, lr}
 801b18e:	f7ff fff5 	bl	801b17c <_ZSt13get_terminatev>
 801b192:	f7ff ffee 	bl	801b172 <_ZN10__cxxabiv111__terminateEPFvvE>

0801b196 <abort>:
 801b196:	b508      	push	{r3, lr}
 801b198:	2006      	movs	r0, #6
 801b19a:	f000 fc3d 	bl	801ba18 <raise>
 801b19e:	2001      	movs	r0, #1
 801b1a0:	f7e6 fada 	bl	8001758 <_exit>

0801b1a4 <__assert_func>:
 801b1a4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801b1a6:	461c      	mov	r4, r3
 801b1a8:	4b09      	ldr	r3, [pc, #36]	; (801b1d0 <__assert_func+0x2c>)
 801b1aa:	681b      	ldr	r3, [r3, #0]
 801b1ac:	4605      	mov	r5, r0
 801b1ae:	68d8      	ldr	r0, [r3, #12]
 801b1b0:	b152      	cbz	r2, 801b1c8 <__assert_func+0x24>
 801b1b2:	4b08      	ldr	r3, [pc, #32]	; (801b1d4 <__assert_func+0x30>)
 801b1b4:	9100      	str	r1, [sp, #0]
 801b1b6:	e9cd 3201 	strd	r3, r2, [sp, #4]
 801b1ba:	4907      	ldr	r1, [pc, #28]	; (801b1d8 <__assert_func+0x34>)
 801b1bc:	462b      	mov	r3, r5
 801b1be:	4622      	mov	r2, r4
 801b1c0:	f000 f828 	bl	801b214 <fiprintf>
 801b1c4:	f7ff ffe7 	bl	801b196 <abort>
 801b1c8:	4b04      	ldr	r3, [pc, #16]	; (801b1dc <__assert_func+0x38>)
 801b1ca:	461a      	mov	r2, r3
 801b1cc:	e7f2      	b.n	801b1b4 <__assert_func+0x10>
 801b1ce:	bf00      	nop
 801b1d0:	2000009c 	.word	0x2000009c
 801b1d4:	0801fc58 	.word	0x0801fc58
 801b1d8:	0801fc65 	.word	0x0801fc65
 801b1dc:	0801fc93 	.word	0x0801fc93

0801b1e0 <atexit>:
 801b1e0:	2300      	movs	r3, #0
 801b1e2:	4601      	mov	r1, r0
 801b1e4:	461a      	mov	r2, r3
 801b1e6:	4618      	mov	r0, r3
 801b1e8:	f000 bcf2 	b.w	801bbd0 <__register_exitproc>

0801b1ec <__cxa_atexit>:
 801b1ec:	b510      	push	{r4, lr}
 801b1ee:	4c05      	ldr	r4, [pc, #20]	; (801b204 <__cxa_atexit+0x18>)
 801b1f0:	4613      	mov	r3, r2
 801b1f2:	b12c      	cbz	r4, 801b200 <__cxa_atexit+0x14>
 801b1f4:	460a      	mov	r2, r1
 801b1f6:	4601      	mov	r1, r0
 801b1f8:	2002      	movs	r0, #2
 801b1fa:	f000 fce9 	bl	801bbd0 <__register_exitproc>
 801b1fe:	bd10      	pop	{r4, pc}
 801b200:	4620      	mov	r0, r4
 801b202:	e7fc      	b.n	801b1fe <__cxa_atexit+0x12>
 801b204:	0801bbd1 	.word	0x0801bbd1

0801b208 <__errno>:
 801b208:	4b01      	ldr	r3, [pc, #4]	; (801b210 <__errno+0x8>)
 801b20a:	6818      	ldr	r0, [r3, #0]
 801b20c:	4770      	bx	lr
 801b20e:	bf00      	nop
 801b210:	2000009c 	.word	0x2000009c

0801b214 <fiprintf>:
 801b214:	b40e      	push	{r1, r2, r3}
 801b216:	b503      	push	{r0, r1, lr}
 801b218:	4601      	mov	r1, r0
 801b21a:	ab03      	add	r3, sp, #12
 801b21c:	4805      	ldr	r0, [pc, #20]	; (801b234 <fiprintf+0x20>)
 801b21e:	f853 2b04 	ldr.w	r2, [r3], #4
 801b222:	6800      	ldr	r0, [r0, #0]
 801b224:	9301      	str	r3, [sp, #4]
 801b226:	f000 f921 	bl	801b46c <_vfiprintf_r>
 801b22a:	b002      	add	sp, #8
 801b22c:	f85d eb04 	ldr.w	lr, [sp], #4
 801b230:	b003      	add	sp, #12
 801b232:	4770      	bx	lr
 801b234:	2000009c 	.word	0x2000009c

0801b238 <__libc_init_array>:
 801b238:	b570      	push	{r4, r5, r6, lr}
 801b23a:	4e0d      	ldr	r6, [pc, #52]	; (801b270 <__libc_init_array+0x38>)
 801b23c:	4c0d      	ldr	r4, [pc, #52]	; (801b274 <__libc_init_array+0x3c>)
 801b23e:	1ba4      	subs	r4, r4, r6
 801b240:	10a4      	asrs	r4, r4, #2
 801b242:	2500      	movs	r5, #0
 801b244:	42a5      	cmp	r5, r4
 801b246:	d109      	bne.n	801b25c <__libc_init_array+0x24>
 801b248:	4e0b      	ldr	r6, [pc, #44]	; (801b278 <__libc_init_array+0x40>)
 801b24a:	4c0c      	ldr	r4, [pc, #48]	; (801b27c <__libc_init_array+0x44>)
 801b24c:	f000 ffb0 	bl	801c1b0 <_init>
 801b250:	1ba4      	subs	r4, r4, r6
 801b252:	10a4      	asrs	r4, r4, #2
 801b254:	2500      	movs	r5, #0
 801b256:	42a5      	cmp	r5, r4
 801b258:	d105      	bne.n	801b266 <__libc_init_array+0x2e>
 801b25a:	bd70      	pop	{r4, r5, r6, pc}
 801b25c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801b260:	4798      	blx	r3
 801b262:	3501      	adds	r5, #1
 801b264:	e7ee      	b.n	801b244 <__libc_init_array+0xc>
 801b266:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801b26a:	4798      	blx	r3
 801b26c:	3501      	adds	r5, #1
 801b26e:	e7f2      	b.n	801b256 <__libc_init_array+0x1e>
 801b270:	08093bb0 	.word	0x08093bb0
 801b274:	08093bb0 	.word	0x08093bb0
 801b278:	08093bb0 	.word	0x08093bb0
 801b27c:	08093bc4 	.word	0x08093bc4

0801b280 <malloc>:
 801b280:	4b02      	ldr	r3, [pc, #8]	; (801b28c <malloc+0xc>)
 801b282:	4601      	mov	r1, r0
 801b284:	6818      	ldr	r0, [r3, #0]
 801b286:	f000 b86d 	b.w	801b364 <_malloc_r>
 801b28a:	bf00      	nop
 801b28c:	2000009c 	.word	0x2000009c

0801b290 <free>:
 801b290:	4b02      	ldr	r3, [pc, #8]	; (801b29c <free+0xc>)
 801b292:	4601      	mov	r1, r0
 801b294:	6818      	ldr	r0, [r3, #0]
 801b296:	f000 b817 	b.w	801b2c8 <_free_r>
 801b29a:	bf00      	nop
 801b29c:	2000009c 	.word	0x2000009c

0801b2a0 <memcpy>:
 801b2a0:	b510      	push	{r4, lr}
 801b2a2:	1e43      	subs	r3, r0, #1
 801b2a4:	440a      	add	r2, r1
 801b2a6:	4291      	cmp	r1, r2
 801b2a8:	d100      	bne.n	801b2ac <memcpy+0xc>
 801b2aa:	bd10      	pop	{r4, pc}
 801b2ac:	f811 4b01 	ldrb.w	r4, [r1], #1
 801b2b0:	f803 4f01 	strb.w	r4, [r3, #1]!
 801b2b4:	e7f7      	b.n	801b2a6 <memcpy+0x6>

0801b2b6 <memset>:
 801b2b6:	4402      	add	r2, r0
 801b2b8:	4603      	mov	r3, r0
 801b2ba:	4293      	cmp	r3, r2
 801b2bc:	d100      	bne.n	801b2c0 <memset+0xa>
 801b2be:	4770      	bx	lr
 801b2c0:	f803 1b01 	strb.w	r1, [r3], #1
 801b2c4:	e7f9      	b.n	801b2ba <memset+0x4>
	...

0801b2c8 <_free_r>:
 801b2c8:	b538      	push	{r3, r4, r5, lr}
 801b2ca:	4605      	mov	r5, r0
 801b2cc:	2900      	cmp	r1, #0
 801b2ce:	d045      	beq.n	801b35c <_free_r+0x94>
 801b2d0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801b2d4:	1f0c      	subs	r4, r1, #4
 801b2d6:	2b00      	cmp	r3, #0
 801b2d8:	bfb8      	it	lt
 801b2da:	18e4      	addlt	r4, r4, r3
 801b2dc:	f000 feba 	bl	801c054 <__malloc_lock>
 801b2e0:	4a1f      	ldr	r2, [pc, #124]	; (801b360 <_free_r+0x98>)
 801b2e2:	6813      	ldr	r3, [r2, #0]
 801b2e4:	4610      	mov	r0, r2
 801b2e6:	b933      	cbnz	r3, 801b2f6 <_free_r+0x2e>
 801b2e8:	6063      	str	r3, [r4, #4]
 801b2ea:	6014      	str	r4, [r2, #0]
 801b2ec:	4628      	mov	r0, r5
 801b2ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801b2f2:	f000 beb0 	b.w	801c056 <__malloc_unlock>
 801b2f6:	42a3      	cmp	r3, r4
 801b2f8:	d90c      	bls.n	801b314 <_free_r+0x4c>
 801b2fa:	6821      	ldr	r1, [r4, #0]
 801b2fc:	1862      	adds	r2, r4, r1
 801b2fe:	4293      	cmp	r3, r2
 801b300:	bf04      	itt	eq
 801b302:	681a      	ldreq	r2, [r3, #0]
 801b304:	685b      	ldreq	r3, [r3, #4]
 801b306:	6063      	str	r3, [r4, #4]
 801b308:	bf04      	itt	eq
 801b30a:	1852      	addeq	r2, r2, r1
 801b30c:	6022      	streq	r2, [r4, #0]
 801b30e:	6004      	str	r4, [r0, #0]
 801b310:	e7ec      	b.n	801b2ec <_free_r+0x24>
 801b312:	4613      	mov	r3, r2
 801b314:	685a      	ldr	r2, [r3, #4]
 801b316:	b10a      	cbz	r2, 801b31c <_free_r+0x54>
 801b318:	42a2      	cmp	r2, r4
 801b31a:	d9fa      	bls.n	801b312 <_free_r+0x4a>
 801b31c:	6819      	ldr	r1, [r3, #0]
 801b31e:	1858      	adds	r0, r3, r1
 801b320:	42a0      	cmp	r0, r4
 801b322:	d10b      	bne.n	801b33c <_free_r+0x74>
 801b324:	6820      	ldr	r0, [r4, #0]
 801b326:	4401      	add	r1, r0
 801b328:	1858      	adds	r0, r3, r1
 801b32a:	4282      	cmp	r2, r0
 801b32c:	6019      	str	r1, [r3, #0]
 801b32e:	d1dd      	bne.n	801b2ec <_free_r+0x24>
 801b330:	6810      	ldr	r0, [r2, #0]
 801b332:	6852      	ldr	r2, [r2, #4]
 801b334:	605a      	str	r2, [r3, #4]
 801b336:	4401      	add	r1, r0
 801b338:	6019      	str	r1, [r3, #0]
 801b33a:	e7d7      	b.n	801b2ec <_free_r+0x24>
 801b33c:	d902      	bls.n	801b344 <_free_r+0x7c>
 801b33e:	230c      	movs	r3, #12
 801b340:	602b      	str	r3, [r5, #0]
 801b342:	e7d3      	b.n	801b2ec <_free_r+0x24>
 801b344:	6820      	ldr	r0, [r4, #0]
 801b346:	1821      	adds	r1, r4, r0
 801b348:	428a      	cmp	r2, r1
 801b34a:	bf04      	itt	eq
 801b34c:	6811      	ldreq	r1, [r2, #0]
 801b34e:	6852      	ldreq	r2, [r2, #4]
 801b350:	6062      	str	r2, [r4, #4]
 801b352:	bf04      	itt	eq
 801b354:	1809      	addeq	r1, r1, r0
 801b356:	6021      	streq	r1, [r4, #0]
 801b358:	605c      	str	r4, [r3, #4]
 801b35a:	e7c7      	b.n	801b2ec <_free_r+0x24>
 801b35c:	bd38      	pop	{r3, r4, r5, pc}
 801b35e:	bf00      	nop
 801b360:	20026fcc 	.word	0x20026fcc

0801b364 <_malloc_r>:
 801b364:	b570      	push	{r4, r5, r6, lr}
 801b366:	1ccd      	adds	r5, r1, #3
 801b368:	f025 0503 	bic.w	r5, r5, #3
 801b36c:	3508      	adds	r5, #8
 801b36e:	2d0c      	cmp	r5, #12
 801b370:	bf38      	it	cc
 801b372:	250c      	movcc	r5, #12
 801b374:	2d00      	cmp	r5, #0
 801b376:	4606      	mov	r6, r0
 801b378:	db01      	blt.n	801b37e <_malloc_r+0x1a>
 801b37a:	42a9      	cmp	r1, r5
 801b37c:	d903      	bls.n	801b386 <_malloc_r+0x22>
 801b37e:	230c      	movs	r3, #12
 801b380:	6033      	str	r3, [r6, #0]
 801b382:	2000      	movs	r0, #0
 801b384:	bd70      	pop	{r4, r5, r6, pc}
 801b386:	f000 fe65 	bl	801c054 <__malloc_lock>
 801b38a:	4a21      	ldr	r2, [pc, #132]	; (801b410 <_malloc_r+0xac>)
 801b38c:	6814      	ldr	r4, [r2, #0]
 801b38e:	4621      	mov	r1, r4
 801b390:	b991      	cbnz	r1, 801b3b8 <_malloc_r+0x54>
 801b392:	4c20      	ldr	r4, [pc, #128]	; (801b414 <_malloc_r+0xb0>)
 801b394:	6823      	ldr	r3, [r4, #0]
 801b396:	b91b      	cbnz	r3, 801b3a0 <_malloc_r+0x3c>
 801b398:	4630      	mov	r0, r6
 801b39a:	f000 fb05 	bl	801b9a8 <_sbrk_r>
 801b39e:	6020      	str	r0, [r4, #0]
 801b3a0:	4629      	mov	r1, r5
 801b3a2:	4630      	mov	r0, r6
 801b3a4:	f000 fb00 	bl	801b9a8 <_sbrk_r>
 801b3a8:	1c43      	adds	r3, r0, #1
 801b3aa:	d124      	bne.n	801b3f6 <_malloc_r+0x92>
 801b3ac:	230c      	movs	r3, #12
 801b3ae:	6033      	str	r3, [r6, #0]
 801b3b0:	4630      	mov	r0, r6
 801b3b2:	f000 fe50 	bl	801c056 <__malloc_unlock>
 801b3b6:	e7e4      	b.n	801b382 <_malloc_r+0x1e>
 801b3b8:	680b      	ldr	r3, [r1, #0]
 801b3ba:	1b5b      	subs	r3, r3, r5
 801b3bc:	d418      	bmi.n	801b3f0 <_malloc_r+0x8c>
 801b3be:	2b0b      	cmp	r3, #11
 801b3c0:	d90f      	bls.n	801b3e2 <_malloc_r+0x7e>
 801b3c2:	600b      	str	r3, [r1, #0]
 801b3c4:	50cd      	str	r5, [r1, r3]
 801b3c6:	18cc      	adds	r4, r1, r3
 801b3c8:	4630      	mov	r0, r6
 801b3ca:	f000 fe44 	bl	801c056 <__malloc_unlock>
 801b3ce:	f104 000b 	add.w	r0, r4, #11
 801b3d2:	1d23      	adds	r3, r4, #4
 801b3d4:	f020 0007 	bic.w	r0, r0, #7
 801b3d8:	1ac3      	subs	r3, r0, r3
 801b3da:	d0d3      	beq.n	801b384 <_malloc_r+0x20>
 801b3dc:	425a      	negs	r2, r3
 801b3de:	50e2      	str	r2, [r4, r3]
 801b3e0:	e7d0      	b.n	801b384 <_malloc_r+0x20>
 801b3e2:	428c      	cmp	r4, r1
 801b3e4:	684b      	ldr	r3, [r1, #4]
 801b3e6:	bf16      	itet	ne
 801b3e8:	6063      	strne	r3, [r4, #4]
 801b3ea:	6013      	streq	r3, [r2, #0]
 801b3ec:	460c      	movne	r4, r1
 801b3ee:	e7eb      	b.n	801b3c8 <_malloc_r+0x64>
 801b3f0:	460c      	mov	r4, r1
 801b3f2:	6849      	ldr	r1, [r1, #4]
 801b3f4:	e7cc      	b.n	801b390 <_malloc_r+0x2c>
 801b3f6:	1cc4      	adds	r4, r0, #3
 801b3f8:	f024 0403 	bic.w	r4, r4, #3
 801b3fc:	42a0      	cmp	r0, r4
 801b3fe:	d005      	beq.n	801b40c <_malloc_r+0xa8>
 801b400:	1a21      	subs	r1, r4, r0
 801b402:	4630      	mov	r0, r6
 801b404:	f000 fad0 	bl	801b9a8 <_sbrk_r>
 801b408:	3001      	adds	r0, #1
 801b40a:	d0cf      	beq.n	801b3ac <_malloc_r+0x48>
 801b40c:	6025      	str	r5, [r4, #0]
 801b40e:	e7db      	b.n	801b3c8 <_malloc_r+0x64>
 801b410:	20026fcc 	.word	0x20026fcc
 801b414:	20026fd0 	.word	0x20026fd0

0801b418 <__sfputc_r>:
 801b418:	6893      	ldr	r3, [r2, #8]
 801b41a:	3b01      	subs	r3, #1
 801b41c:	2b00      	cmp	r3, #0
 801b41e:	b410      	push	{r4}
 801b420:	6093      	str	r3, [r2, #8]
 801b422:	da08      	bge.n	801b436 <__sfputc_r+0x1e>
 801b424:	6994      	ldr	r4, [r2, #24]
 801b426:	42a3      	cmp	r3, r4
 801b428:	db01      	blt.n	801b42e <__sfputc_r+0x16>
 801b42a:	290a      	cmp	r1, #10
 801b42c:	d103      	bne.n	801b436 <__sfputc_r+0x1e>
 801b42e:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b432:	f000 bb0d 	b.w	801ba50 <__swbuf_r>
 801b436:	6813      	ldr	r3, [r2, #0]
 801b438:	1c58      	adds	r0, r3, #1
 801b43a:	6010      	str	r0, [r2, #0]
 801b43c:	7019      	strb	r1, [r3, #0]
 801b43e:	4608      	mov	r0, r1
 801b440:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b444:	4770      	bx	lr

0801b446 <__sfputs_r>:
 801b446:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b448:	4606      	mov	r6, r0
 801b44a:	460f      	mov	r7, r1
 801b44c:	4614      	mov	r4, r2
 801b44e:	18d5      	adds	r5, r2, r3
 801b450:	42ac      	cmp	r4, r5
 801b452:	d101      	bne.n	801b458 <__sfputs_r+0x12>
 801b454:	2000      	movs	r0, #0
 801b456:	e007      	b.n	801b468 <__sfputs_r+0x22>
 801b458:	463a      	mov	r2, r7
 801b45a:	f814 1b01 	ldrb.w	r1, [r4], #1
 801b45e:	4630      	mov	r0, r6
 801b460:	f7ff ffda 	bl	801b418 <__sfputc_r>
 801b464:	1c43      	adds	r3, r0, #1
 801b466:	d1f3      	bne.n	801b450 <__sfputs_r+0xa>
 801b468:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801b46c <_vfiprintf_r>:
 801b46c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b470:	460c      	mov	r4, r1
 801b472:	b09d      	sub	sp, #116	; 0x74
 801b474:	4617      	mov	r7, r2
 801b476:	461d      	mov	r5, r3
 801b478:	4606      	mov	r6, r0
 801b47a:	b118      	cbz	r0, 801b484 <_vfiprintf_r+0x18>
 801b47c:	6983      	ldr	r3, [r0, #24]
 801b47e:	b90b      	cbnz	r3, 801b484 <_vfiprintf_r+0x18>
 801b480:	f000 fcfa 	bl	801be78 <__sinit>
 801b484:	4b7c      	ldr	r3, [pc, #496]	; (801b678 <_vfiprintf_r+0x20c>)
 801b486:	429c      	cmp	r4, r3
 801b488:	d158      	bne.n	801b53c <_vfiprintf_r+0xd0>
 801b48a:	6874      	ldr	r4, [r6, #4]
 801b48c:	89a3      	ldrh	r3, [r4, #12]
 801b48e:	0718      	lsls	r0, r3, #28
 801b490:	d55e      	bpl.n	801b550 <_vfiprintf_r+0xe4>
 801b492:	6923      	ldr	r3, [r4, #16]
 801b494:	2b00      	cmp	r3, #0
 801b496:	d05b      	beq.n	801b550 <_vfiprintf_r+0xe4>
 801b498:	2300      	movs	r3, #0
 801b49a:	9309      	str	r3, [sp, #36]	; 0x24
 801b49c:	2320      	movs	r3, #32
 801b49e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801b4a2:	2330      	movs	r3, #48	; 0x30
 801b4a4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801b4a8:	9503      	str	r5, [sp, #12]
 801b4aa:	f04f 0b01 	mov.w	fp, #1
 801b4ae:	46b8      	mov	r8, r7
 801b4b0:	4645      	mov	r5, r8
 801b4b2:	f815 3b01 	ldrb.w	r3, [r5], #1
 801b4b6:	b10b      	cbz	r3, 801b4bc <_vfiprintf_r+0x50>
 801b4b8:	2b25      	cmp	r3, #37	; 0x25
 801b4ba:	d154      	bne.n	801b566 <_vfiprintf_r+0xfa>
 801b4bc:	ebb8 0a07 	subs.w	sl, r8, r7
 801b4c0:	d00b      	beq.n	801b4da <_vfiprintf_r+0x6e>
 801b4c2:	4653      	mov	r3, sl
 801b4c4:	463a      	mov	r2, r7
 801b4c6:	4621      	mov	r1, r4
 801b4c8:	4630      	mov	r0, r6
 801b4ca:	f7ff ffbc 	bl	801b446 <__sfputs_r>
 801b4ce:	3001      	adds	r0, #1
 801b4d0:	f000 80c2 	beq.w	801b658 <_vfiprintf_r+0x1ec>
 801b4d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b4d6:	4453      	add	r3, sl
 801b4d8:	9309      	str	r3, [sp, #36]	; 0x24
 801b4da:	f898 3000 	ldrb.w	r3, [r8]
 801b4de:	2b00      	cmp	r3, #0
 801b4e0:	f000 80ba 	beq.w	801b658 <_vfiprintf_r+0x1ec>
 801b4e4:	2300      	movs	r3, #0
 801b4e6:	f04f 32ff 	mov.w	r2, #4294967295
 801b4ea:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801b4ee:	9304      	str	r3, [sp, #16]
 801b4f0:	9307      	str	r3, [sp, #28]
 801b4f2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801b4f6:	931a      	str	r3, [sp, #104]	; 0x68
 801b4f8:	46a8      	mov	r8, r5
 801b4fa:	2205      	movs	r2, #5
 801b4fc:	f818 1b01 	ldrb.w	r1, [r8], #1
 801b500:	485e      	ldr	r0, [pc, #376]	; (801b67c <_vfiprintf_r+0x210>)
 801b502:	f7e4 fe75 	bl	80001f0 <memchr>
 801b506:	9b04      	ldr	r3, [sp, #16]
 801b508:	bb78      	cbnz	r0, 801b56a <_vfiprintf_r+0xfe>
 801b50a:	06d9      	lsls	r1, r3, #27
 801b50c:	bf44      	itt	mi
 801b50e:	2220      	movmi	r2, #32
 801b510:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801b514:	071a      	lsls	r2, r3, #28
 801b516:	bf44      	itt	mi
 801b518:	222b      	movmi	r2, #43	; 0x2b
 801b51a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801b51e:	782a      	ldrb	r2, [r5, #0]
 801b520:	2a2a      	cmp	r2, #42	; 0x2a
 801b522:	d02a      	beq.n	801b57a <_vfiprintf_r+0x10e>
 801b524:	9a07      	ldr	r2, [sp, #28]
 801b526:	46a8      	mov	r8, r5
 801b528:	2000      	movs	r0, #0
 801b52a:	250a      	movs	r5, #10
 801b52c:	4641      	mov	r1, r8
 801b52e:	f811 3b01 	ldrb.w	r3, [r1], #1
 801b532:	3b30      	subs	r3, #48	; 0x30
 801b534:	2b09      	cmp	r3, #9
 801b536:	d969      	bls.n	801b60c <_vfiprintf_r+0x1a0>
 801b538:	b360      	cbz	r0, 801b594 <_vfiprintf_r+0x128>
 801b53a:	e024      	b.n	801b586 <_vfiprintf_r+0x11a>
 801b53c:	4b50      	ldr	r3, [pc, #320]	; (801b680 <_vfiprintf_r+0x214>)
 801b53e:	429c      	cmp	r4, r3
 801b540:	d101      	bne.n	801b546 <_vfiprintf_r+0xda>
 801b542:	68b4      	ldr	r4, [r6, #8]
 801b544:	e7a2      	b.n	801b48c <_vfiprintf_r+0x20>
 801b546:	4b4f      	ldr	r3, [pc, #316]	; (801b684 <_vfiprintf_r+0x218>)
 801b548:	429c      	cmp	r4, r3
 801b54a:	bf08      	it	eq
 801b54c:	68f4      	ldreq	r4, [r6, #12]
 801b54e:	e79d      	b.n	801b48c <_vfiprintf_r+0x20>
 801b550:	4621      	mov	r1, r4
 801b552:	4630      	mov	r0, r6
 801b554:	f000 face 	bl	801baf4 <__swsetup_r>
 801b558:	2800      	cmp	r0, #0
 801b55a:	d09d      	beq.n	801b498 <_vfiprintf_r+0x2c>
 801b55c:	f04f 30ff 	mov.w	r0, #4294967295
 801b560:	b01d      	add	sp, #116	; 0x74
 801b562:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b566:	46a8      	mov	r8, r5
 801b568:	e7a2      	b.n	801b4b0 <_vfiprintf_r+0x44>
 801b56a:	4a44      	ldr	r2, [pc, #272]	; (801b67c <_vfiprintf_r+0x210>)
 801b56c:	1a80      	subs	r0, r0, r2
 801b56e:	fa0b f000 	lsl.w	r0, fp, r0
 801b572:	4318      	orrs	r0, r3
 801b574:	9004      	str	r0, [sp, #16]
 801b576:	4645      	mov	r5, r8
 801b578:	e7be      	b.n	801b4f8 <_vfiprintf_r+0x8c>
 801b57a:	9a03      	ldr	r2, [sp, #12]
 801b57c:	1d11      	adds	r1, r2, #4
 801b57e:	6812      	ldr	r2, [r2, #0]
 801b580:	9103      	str	r1, [sp, #12]
 801b582:	2a00      	cmp	r2, #0
 801b584:	db01      	blt.n	801b58a <_vfiprintf_r+0x11e>
 801b586:	9207      	str	r2, [sp, #28]
 801b588:	e004      	b.n	801b594 <_vfiprintf_r+0x128>
 801b58a:	4252      	negs	r2, r2
 801b58c:	f043 0302 	orr.w	r3, r3, #2
 801b590:	9207      	str	r2, [sp, #28]
 801b592:	9304      	str	r3, [sp, #16]
 801b594:	f898 3000 	ldrb.w	r3, [r8]
 801b598:	2b2e      	cmp	r3, #46	; 0x2e
 801b59a:	d10e      	bne.n	801b5ba <_vfiprintf_r+0x14e>
 801b59c:	f898 3001 	ldrb.w	r3, [r8, #1]
 801b5a0:	2b2a      	cmp	r3, #42	; 0x2a
 801b5a2:	d138      	bne.n	801b616 <_vfiprintf_r+0x1aa>
 801b5a4:	9b03      	ldr	r3, [sp, #12]
 801b5a6:	1d1a      	adds	r2, r3, #4
 801b5a8:	681b      	ldr	r3, [r3, #0]
 801b5aa:	9203      	str	r2, [sp, #12]
 801b5ac:	2b00      	cmp	r3, #0
 801b5ae:	bfb8      	it	lt
 801b5b0:	f04f 33ff 	movlt.w	r3, #4294967295
 801b5b4:	f108 0802 	add.w	r8, r8, #2
 801b5b8:	9305      	str	r3, [sp, #20]
 801b5ba:	4d33      	ldr	r5, [pc, #204]	; (801b688 <_vfiprintf_r+0x21c>)
 801b5bc:	f898 1000 	ldrb.w	r1, [r8]
 801b5c0:	2203      	movs	r2, #3
 801b5c2:	4628      	mov	r0, r5
 801b5c4:	f7e4 fe14 	bl	80001f0 <memchr>
 801b5c8:	b140      	cbz	r0, 801b5dc <_vfiprintf_r+0x170>
 801b5ca:	2340      	movs	r3, #64	; 0x40
 801b5cc:	1b40      	subs	r0, r0, r5
 801b5ce:	fa03 f000 	lsl.w	r0, r3, r0
 801b5d2:	9b04      	ldr	r3, [sp, #16]
 801b5d4:	4303      	orrs	r3, r0
 801b5d6:	f108 0801 	add.w	r8, r8, #1
 801b5da:	9304      	str	r3, [sp, #16]
 801b5dc:	f898 1000 	ldrb.w	r1, [r8]
 801b5e0:	482a      	ldr	r0, [pc, #168]	; (801b68c <_vfiprintf_r+0x220>)
 801b5e2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801b5e6:	2206      	movs	r2, #6
 801b5e8:	f108 0701 	add.w	r7, r8, #1
 801b5ec:	f7e4 fe00 	bl	80001f0 <memchr>
 801b5f0:	2800      	cmp	r0, #0
 801b5f2:	d037      	beq.n	801b664 <_vfiprintf_r+0x1f8>
 801b5f4:	4b26      	ldr	r3, [pc, #152]	; (801b690 <_vfiprintf_r+0x224>)
 801b5f6:	bb1b      	cbnz	r3, 801b640 <_vfiprintf_r+0x1d4>
 801b5f8:	9b03      	ldr	r3, [sp, #12]
 801b5fa:	3307      	adds	r3, #7
 801b5fc:	f023 0307 	bic.w	r3, r3, #7
 801b600:	3308      	adds	r3, #8
 801b602:	9303      	str	r3, [sp, #12]
 801b604:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b606:	444b      	add	r3, r9
 801b608:	9309      	str	r3, [sp, #36]	; 0x24
 801b60a:	e750      	b.n	801b4ae <_vfiprintf_r+0x42>
 801b60c:	fb05 3202 	mla	r2, r5, r2, r3
 801b610:	2001      	movs	r0, #1
 801b612:	4688      	mov	r8, r1
 801b614:	e78a      	b.n	801b52c <_vfiprintf_r+0xc0>
 801b616:	2300      	movs	r3, #0
 801b618:	f108 0801 	add.w	r8, r8, #1
 801b61c:	9305      	str	r3, [sp, #20]
 801b61e:	4619      	mov	r1, r3
 801b620:	250a      	movs	r5, #10
 801b622:	4640      	mov	r0, r8
 801b624:	f810 2b01 	ldrb.w	r2, [r0], #1
 801b628:	3a30      	subs	r2, #48	; 0x30
 801b62a:	2a09      	cmp	r2, #9
 801b62c:	d903      	bls.n	801b636 <_vfiprintf_r+0x1ca>
 801b62e:	2b00      	cmp	r3, #0
 801b630:	d0c3      	beq.n	801b5ba <_vfiprintf_r+0x14e>
 801b632:	9105      	str	r1, [sp, #20]
 801b634:	e7c1      	b.n	801b5ba <_vfiprintf_r+0x14e>
 801b636:	fb05 2101 	mla	r1, r5, r1, r2
 801b63a:	2301      	movs	r3, #1
 801b63c:	4680      	mov	r8, r0
 801b63e:	e7f0      	b.n	801b622 <_vfiprintf_r+0x1b6>
 801b640:	ab03      	add	r3, sp, #12
 801b642:	9300      	str	r3, [sp, #0]
 801b644:	4622      	mov	r2, r4
 801b646:	4b13      	ldr	r3, [pc, #76]	; (801b694 <_vfiprintf_r+0x228>)
 801b648:	a904      	add	r1, sp, #16
 801b64a:	4630      	mov	r0, r6
 801b64c:	f3af 8000 	nop.w
 801b650:	f1b0 3fff 	cmp.w	r0, #4294967295
 801b654:	4681      	mov	r9, r0
 801b656:	d1d5      	bne.n	801b604 <_vfiprintf_r+0x198>
 801b658:	89a3      	ldrh	r3, [r4, #12]
 801b65a:	065b      	lsls	r3, r3, #25
 801b65c:	f53f af7e 	bmi.w	801b55c <_vfiprintf_r+0xf0>
 801b660:	9809      	ldr	r0, [sp, #36]	; 0x24
 801b662:	e77d      	b.n	801b560 <_vfiprintf_r+0xf4>
 801b664:	ab03      	add	r3, sp, #12
 801b666:	9300      	str	r3, [sp, #0]
 801b668:	4622      	mov	r2, r4
 801b66a:	4b0a      	ldr	r3, [pc, #40]	; (801b694 <_vfiprintf_r+0x228>)
 801b66c:	a904      	add	r1, sp, #16
 801b66e:	4630      	mov	r0, r6
 801b670:	f000 f888 	bl	801b784 <_printf_i>
 801b674:	e7ec      	b.n	801b650 <_vfiprintf_r+0x1e4>
 801b676:	bf00      	nop
 801b678:	0801fcf0 	.word	0x0801fcf0
 801b67c:	0801fc98 	.word	0x0801fc98
 801b680:	0801fd10 	.word	0x0801fd10
 801b684:	0801fcd0 	.word	0x0801fcd0
 801b688:	0801fc9e 	.word	0x0801fc9e
 801b68c:	0801fca2 	.word	0x0801fca2
 801b690:	00000000 	.word	0x00000000
 801b694:	0801b447 	.word	0x0801b447

0801b698 <_printf_common>:
 801b698:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b69c:	4691      	mov	r9, r2
 801b69e:	461f      	mov	r7, r3
 801b6a0:	688a      	ldr	r2, [r1, #8]
 801b6a2:	690b      	ldr	r3, [r1, #16]
 801b6a4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801b6a8:	4293      	cmp	r3, r2
 801b6aa:	bfb8      	it	lt
 801b6ac:	4613      	movlt	r3, r2
 801b6ae:	f8c9 3000 	str.w	r3, [r9]
 801b6b2:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801b6b6:	4606      	mov	r6, r0
 801b6b8:	460c      	mov	r4, r1
 801b6ba:	b112      	cbz	r2, 801b6c2 <_printf_common+0x2a>
 801b6bc:	3301      	adds	r3, #1
 801b6be:	f8c9 3000 	str.w	r3, [r9]
 801b6c2:	6823      	ldr	r3, [r4, #0]
 801b6c4:	0699      	lsls	r1, r3, #26
 801b6c6:	bf42      	ittt	mi
 801b6c8:	f8d9 3000 	ldrmi.w	r3, [r9]
 801b6cc:	3302      	addmi	r3, #2
 801b6ce:	f8c9 3000 	strmi.w	r3, [r9]
 801b6d2:	6825      	ldr	r5, [r4, #0]
 801b6d4:	f015 0506 	ands.w	r5, r5, #6
 801b6d8:	d107      	bne.n	801b6ea <_printf_common+0x52>
 801b6da:	f104 0a19 	add.w	sl, r4, #25
 801b6de:	68e3      	ldr	r3, [r4, #12]
 801b6e0:	f8d9 2000 	ldr.w	r2, [r9]
 801b6e4:	1a9b      	subs	r3, r3, r2
 801b6e6:	42ab      	cmp	r3, r5
 801b6e8:	dc28      	bgt.n	801b73c <_printf_common+0xa4>
 801b6ea:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 801b6ee:	6822      	ldr	r2, [r4, #0]
 801b6f0:	3300      	adds	r3, #0
 801b6f2:	bf18      	it	ne
 801b6f4:	2301      	movne	r3, #1
 801b6f6:	0692      	lsls	r2, r2, #26
 801b6f8:	d42d      	bmi.n	801b756 <_printf_common+0xbe>
 801b6fa:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801b6fe:	4639      	mov	r1, r7
 801b700:	4630      	mov	r0, r6
 801b702:	47c0      	blx	r8
 801b704:	3001      	adds	r0, #1
 801b706:	d020      	beq.n	801b74a <_printf_common+0xb2>
 801b708:	6823      	ldr	r3, [r4, #0]
 801b70a:	68e5      	ldr	r5, [r4, #12]
 801b70c:	f8d9 2000 	ldr.w	r2, [r9]
 801b710:	f003 0306 	and.w	r3, r3, #6
 801b714:	2b04      	cmp	r3, #4
 801b716:	bf08      	it	eq
 801b718:	1aad      	subeq	r5, r5, r2
 801b71a:	68a3      	ldr	r3, [r4, #8]
 801b71c:	6922      	ldr	r2, [r4, #16]
 801b71e:	bf0c      	ite	eq
 801b720:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801b724:	2500      	movne	r5, #0
 801b726:	4293      	cmp	r3, r2
 801b728:	bfc4      	itt	gt
 801b72a:	1a9b      	subgt	r3, r3, r2
 801b72c:	18ed      	addgt	r5, r5, r3
 801b72e:	f04f 0900 	mov.w	r9, #0
 801b732:	341a      	adds	r4, #26
 801b734:	454d      	cmp	r5, r9
 801b736:	d11a      	bne.n	801b76e <_printf_common+0xd6>
 801b738:	2000      	movs	r0, #0
 801b73a:	e008      	b.n	801b74e <_printf_common+0xb6>
 801b73c:	2301      	movs	r3, #1
 801b73e:	4652      	mov	r2, sl
 801b740:	4639      	mov	r1, r7
 801b742:	4630      	mov	r0, r6
 801b744:	47c0      	blx	r8
 801b746:	3001      	adds	r0, #1
 801b748:	d103      	bne.n	801b752 <_printf_common+0xba>
 801b74a:	f04f 30ff 	mov.w	r0, #4294967295
 801b74e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b752:	3501      	adds	r5, #1
 801b754:	e7c3      	b.n	801b6de <_printf_common+0x46>
 801b756:	18e1      	adds	r1, r4, r3
 801b758:	1c5a      	adds	r2, r3, #1
 801b75a:	2030      	movs	r0, #48	; 0x30
 801b75c:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801b760:	4422      	add	r2, r4
 801b762:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801b766:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801b76a:	3302      	adds	r3, #2
 801b76c:	e7c5      	b.n	801b6fa <_printf_common+0x62>
 801b76e:	2301      	movs	r3, #1
 801b770:	4622      	mov	r2, r4
 801b772:	4639      	mov	r1, r7
 801b774:	4630      	mov	r0, r6
 801b776:	47c0      	blx	r8
 801b778:	3001      	adds	r0, #1
 801b77a:	d0e6      	beq.n	801b74a <_printf_common+0xb2>
 801b77c:	f109 0901 	add.w	r9, r9, #1
 801b780:	e7d8      	b.n	801b734 <_printf_common+0x9c>
	...

0801b784 <_printf_i>:
 801b784:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801b788:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 801b78c:	460c      	mov	r4, r1
 801b78e:	7e09      	ldrb	r1, [r1, #24]
 801b790:	b085      	sub	sp, #20
 801b792:	296e      	cmp	r1, #110	; 0x6e
 801b794:	4617      	mov	r7, r2
 801b796:	4606      	mov	r6, r0
 801b798:	4698      	mov	r8, r3
 801b79a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b79c:	f000 80b3 	beq.w	801b906 <_printf_i+0x182>
 801b7a0:	d822      	bhi.n	801b7e8 <_printf_i+0x64>
 801b7a2:	2963      	cmp	r1, #99	; 0x63
 801b7a4:	d036      	beq.n	801b814 <_printf_i+0x90>
 801b7a6:	d80a      	bhi.n	801b7be <_printf_i+0x3a>
 801b7a8:	2900      	cmp	r1, #0
 801b7aa:	f000 80b9 	beq.w	801b920 <_printf_i+0x19c>
 801b7ae:	2958      	cmp	r1, #88	; 0x58
 801b7b0:	f000 8083 	beq.w	801b8ba <_printf_i+0x136>
 801b7b4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801b7b8:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 801b7bc:	e032      	b.n	801b824 <_printf_i+0xa0>
 801b7be:	2964      	cmp	r1, #100	; 0x64
 801b7c0:	d001      	beq.n	801b7c6 <_printf_i+0x42>
 801b7c2:	2969      	cmp	r1, #105	; 0x69
 801b7c4:	d1f6      	bne.n	801b7b4 <_printf_i+0x30>
 801b7c6:	6820      	ldr	r0, [r4, #0]
 801b7c8:	6813      	ldr	r3, [r2, #0]
 801b7ca:	0605      	lsls	r5, r0, #24
 801b7cc:	f103 0104 	add.w	r1, r3, #4
 801b7d0:	d52a      	bpl.n	801b828 <_printf_i+0xa4>
 801b7d2:	681b      	ldr	r3, [r3, #0]
 801b7d4:	6011      	str	r1, [r2, #0]
 801b7d6:	2b00      	cmp	r3, #0
 801b7d8:	da03      	bge.n	801b7e2 <_printf_i+0x5e>
 801b7da:	222d      	movs	r2, #45	; 0x2d
 801b7dc:	425b      	negs	r3, r3
 801b7de:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 801b7e2:	486f      	ldr	r0, [pc, #444]	; (801b9a0 <_printf_i+0x21c>)
 801b7e4:	220a      	movs	r2, #10
 801b7e6:	e039      	b.n	801b85c <_printf_i+0xd8>
 801b7e8:	2973      	cmp	r1, #115	; 0x73
 801b7ea:	f000 809d 	beq.w	801b928 <_printf_i+0x1a4>
 801b7ee:	d808      	bhi.n	801b802 <_printf_i+0x7e>
 801b7f0:	296f      	cmp	r1, #111	; 0x6f
 801b7f2:	d020      	beq.n	801b836 <_printf_i+0xb2>
 801b7f4:	2970      	cmp	r1, #112	; 0x70
 801b7f6:	d1dd      	bne.n	801b7b4 <_printf_i+0x30>
 801b7f8:	6823      	ldr	r3, [r4, #0]
 801b7fa:	f043 0320 	orr.w	r3, r3, #32
 801b7fe:	6023      	str	r3, [r4, #0]
 801b800:	e003      	b.n	801b80a <_printf_i+0x86>
 801b802:	2975      	cmp	r1, #117	; 0x75
 801b804:	d017      	beq.n	801b836 <_printf_i+0xb2>
 801b806:	2978      	cmp	r1, #120	; 0x78
 801b808:	d1d4      	bne.n	801b7b4 <_printf_i+0x30>
 801b80a:	2378      	movs	r3, #120	; 0x78
 801b80c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801b810:	4864      	ldr	r0, [pc, #400]	; (801b9a4 <_printf_i+0x220>)
 801b812:	e055      	b.n	801b8c0 <_printf_i+0x13c>
 801b814:	6813      	ldr	r3, [r2, #0]
 801b816:	1d19      	adds	r1, r3, #4
 801b818:	681b      	ldr	r3, [r3, #0]
 801b81a:	6011      	str	r1, [r2, #0]
 801b81c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801b820:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801b824:	2301      	movs	r3, #1
 801b826:	e08c      	b.n	801b942 <_printf_i+0x1be>
 801b828:	681b      	ldr	r3, [r3, #0]
 801b82a:	6011      	str	r1, [r2, #0]
 801b82c:	f010 0f40 	tst.w	r0, #64	; 0x40
 801b830:	bf18      	it	ne
 801b832:	b21b      	sxthne	r3, r3
 801b834:	e7cf      	b.n	801b7d6 <_printf_i+0x52>
 801b836:	6813      	ldr	r3, [r2, #0]
 801b838:	6825      	ldr	r5, [r4, #0]
 801b83a:	1d18      	adds	r0, r3, #4
 801b83c:	6010      	str	r0, [r2, #0]
 801b83e:	0628      	lsls	r0, r5, #24
 801b840:	d501      	bpl.n	801b846 <_printf_i+0xc2>
 801b842:	681b      	ldr	r3, [r3, #0]
 801b844:	e002      	b.n	801b84c <_printf_i+0xc8>
 801b846:	0668      	lsls	r0, r5, #25
 801b848:	d5fb      	bpl.n	801b842 <_printf_i+0xbe>
 801b84a:	881b      	ldrh	r3, [r3, #0]
 801b84c:	4854      	ldr	r0, [pc, #336]	; (801b9a0 <_printf_i+0x21c>)
 801b84e:	296f      	cmp	r1, #111	; 0x6f
 801b850:	bf14      	ite	ne
 801b852:	220a      	movne	r2, #10
 801b854:	2208      	moveq	r2, #8
 801b856:	2100      	movs	r1, #0
 801b858:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801b85c:	6865      	ldr	r5, [r4, #4]
 801b85e:	60a5      	str	r5, [r4, #8]
 801b860:	2d00      	cmp	r5, #0
 801b862:	f2c0 8095 	blt.w	801b990 <_printf_i+0x20c>
 801b866:	6821      	ldr	r1, [r4, #0]
 801b868:	f021 0104 	bic.w	r1, r1, #4
 801b86c:	6021      	str	r1, [r4, #0]
 801b86e:	2b00      	cmp	r3, #0
 801b870:	d13d      	bne.n	801b8ee <_printf_i+0x16a>
 801b872:	2d00      	cmp	r5, #0
 801b874:	f040 808e 	bne.w	801b994 <_printf_i+0x210>
 801b878:	4665      	mov	r5, ip
 801b87a:	2a08      	cmp	r2, #8
 801b87c:	d10b      	bne.n	801b896 <_printf_i+0x112>
 801b87e:	6823      	ldr	r3, [r4, #0]
 801b880:	07db      	lsls	r3, r3, #31
 801b882:	d508      	bpl.n	801b896 <_printf_i+0x112>
 801b884:	6923      	ldr	r3, [r4, #16]
 801b886:	6862      	ldr	r2, [r4, #4]
 801b888:	429a      	cmp	r2, r3
 801b88a:	bfde      	ittt	le
 801b88c:	2330      	movle	r3, #48	; 0x30
 801b88e:	f805 3c01 	strble.w	r3, [r5, #-1]
 801b892:	f105 35ff 	addle.w	r5, r5, #4294967295
 801b896:	ebac 0305 	sub.w	r3, ip, r5
 801b89a:	6123      	str	r3, [r4, #16]
 801b89c:	f8cd 8000 	str.w	r8, [sp]
 801b8a0:	463b      	mov	r3, r7
 801b8a2:	aa03      	add	r2, sp, #12
 801b8a4:	4621      	mov	r1, r4
 801b8a6:	4630      	mov	r0, r6
 801b8a8:	f7ff fef6 	bl	801b698 <_printf_common>
 801b8ac:	3001      	adds	r0, #1
 801b8ae:	d14d      	bne.n	801b94c <_printf_i+0x1c8>
 801b8b0:	f04f 30ff 	mov.w	r0, #4294967295
 801b8b4:	b005      	add	sp, #20
 801b8b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801b8ba:	4839      	ldr	r0, [pc, #228]	; (801b9a0 <_printf_i+0x21c>)
 801b8bc:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 801b8c0:	6813      	ldr	r3, [r2, #0]
 801b8c2:	6821      	ldr	r1, [r4, #0]
 801b8c4:	1d1d      	adds	r5, r3, #4
 801b8c6:	681b      	ldr	r3, [r3, #0]
 801b8c8:	6015      	str	r5, [r2, #0]
 801b8ca:	060a      	lsls	r2, r1, #24
 801b8cc:	d50b      	bpl.n	801b8e6 <_printf_i+0x162>
 801b8ce:	07ca      	lsls	r2, r1, #31
 801b8d0:	bf44      	itt	mi
 801b8d2:	f041 0120 	orrmi.w	r1, r1, #32
 801b8d6:	6021      	strmi	r1, [r4, #0]
 801b8d8:	b91b      	cbnz	r3, 801b8e2 <_printf_i+0x15e>
 801b8da:	6822      	ldr	r2, [r4, #0]
 801b8dc:	f022 0220 	bic.w	r2, r2, #32
 801b8e0:	6022      	str	r2, [r4, #0]
 801b8e2:	2210      	movs	r2, #16
 801b8e4:	e7b7      	b.n	801b856 <_printf_i+0xd2>
 801b8e6:	064d      	lsls	r5, r1, #25
 801b8e8:	bf48      	it	mi
 801b8ea:	b29b      	uxthmi	r3, r3
 801b8ec:	e7ef      	b.n	801b8ce <_printf_i+0x14a>
 801b8ee:	4665      	mov	r5, ip
 801b8f0:	fbb3 f1f2 	udiv	r1, r3, r2
 801b8f4:	fb02 3311 	mls	r3, r2, r1, r3
 801b8f8:	5cc3      	ldrb	r3, [r0, r3]
 801b8fa:	f805 3d01 	strb.w	r3, [r5, #-1]!
 801b8fe:	460b      	mov	r3, r1
 801b900:	2900      	cmp	r1, #0
 801b902:	d1f5      	bne.n	801b8f0 <_printf_i+0x16c>
 801b904:	e7b9      	b.n	801b87a <_printf_i+0xf6>
 801b906:	6813      	ldr	r3, [r2, #0]
 801b908:	6825      	ldr	r5, [r4, #0]
 801b90a:	6961      	ldr	r1, [r4, #20]
 801b90c:	1d18      	adds	r0, r3, #4
 801b90e:	6010      	str	r0, [r2, #0]
 801b910:	0628      	lsls	r0, r5, #24
 801b912:	681b      	ldr	r3, [r3, #0]
 801b914:	d501      	bpl.n	801b91a <_printf_i+0x196>
 801b916:	6019      	str	r1, [r3, #0]
 801b918:	e002      	b.n	801b920 <_printf_i+0x19c>
 801b91a:	066a      	lsls	r2, r5, #25
 801b91c:	d5fb      	bpl.n	801b916 <_printf_i+0x192>
 801b91e:	8019      	strh	r1, [r3, #0]
 801b920:	2300      	movs	r3, #0
 801b922:	6123      	str	r3, [r4, #16]
 801b924:	4665      	mov	r5, ip
 801b926:	e7b9      	b.n	801b89c <_printf_i+0x118>
 801b928:	6813      	ldr	r3, [r2, #0]
 801b92a:	1d19      	adds	r1, r3, #4
 801b92c:	6011      	str	r1, [r2, #0]
 801b92e:	681d      	ldr	r5, [r3, #0]
 801b930:	6862      	ldr	r2, [r4, #4]
 801b932:	2100      	movs	r1, #0
 801b934:	4628      	mov	r0, r5
 801b936:	f7e4 fc5b 	bl	80001f0 <memchr>
 801b93a:	b108      	cbz	r0, 801b940 <_printf_i+0x1bc>
 801b93c:	1b40      	subs	r0, r0, r5
 801b93e:	6060      	str	r0, [r4, #4]
 801b940:	6863      	ldr	r3, [r4, #4]
 801b942:	6123      	str	r3, [r4, #16]
 801b944:	2300      	movs	r3, #0
 801b946:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801b94a:	e7a7      	b.n	801b89c <_printf_i+0x118>
 801b94c:	6923      	ldr	r3, [r4, #16]
 801b94e:	462a      	mov	r2, r5
 801b950:	4639      	mov	r1, r7
 801b952:	4630      	mov	r0, r6
 801b954:	47c0      	blx	r8
 801b956:	3001      	adds	r0, #1
 801b958:	d0aa      	beq.n	801b8b0 <_printf_i+0x12c>
 801b95a:	6823      	ldr	r3, [r4, #0]
 801b95c:	079b      	lsls	r3, r3, #30
 801b95e:	d413      	bmi.n	801b988 <_printf_i+0x204>
 801b960:	68e0      	ldr	r0, [r4, #12]
 801b962:	9b03      	ldr	r3, [sp, #12]
 801b964:	4298      	cmp	r0, r3
 801b966:	bfb8      	it	lt
 801b968:	4618      	movlt	r0, r3
 801b96a:	e7a3      	b.n	801b8b4 <_printf_i+0x130>
 801b96c:	2301      	movs	r3, #1
 801b96e:	464a      	mov	r2, r9
 801b970:	4639      	mov	r1, r7
 801b972:	4630      	mov	r0, r6
 801b974:	47c0      	blx	r8
 801b976:	3001      	adds	r0, #1
 801b978:	d09a      	beq.n	801b8b0 <_printf_i+0x12c>
 801b97a:	3501      	adds	r5, #1
 801b97c:	68e3      	ldr	r3, [r4, #12]
 801b97e:	9a03      	ldr	r2, [sp, #12]
 801b980:	1a9b      	subs	r3, r3, r2
 801b982:	42ab      	cmp	r3, r5
 801b984:	dcf2      	bgt.n	801b96c <_printf_i+0x1e8>
 801b986:	e7eb      	b.n	801b960 <_printf_i+0x1dc>
 801b988:	2500      	movs	r5, #0
 801b98a:	f104 0919 	add.w	r9, r4, #25
 801b98e:	e7f5      	b.n	801b97c <_printf_i+0x1f8>
 801b990:	2b00      	cmp	r3, #0
 801b992:	d1ac      	bne.n	801b8ee <_printf_i+0x16a>
 801b994:	7803      	ldrb	r3, [r0, #0]
 801b996:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801b99a:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801b99e:	e76c      	b.n	801b87a <_printf_i+0xf6>
 801b9a0:	0801fca9 	.word	0x0801fca9
 801b9a4:	0801fcba 	.word	0x0801fcba

0801b9a8 <_sbrk_r>:
 801b9a8:	b538      	push	{r3, r4, r5, lr}
 801b9aa:	4c06      	ldr	r4, [pc, #24]	; (801b9c4 <_sbrk_r+0x1c>)
 801b9ac:	2300      	movs	r3, #0
 801b9ae:	4605      	mov	r5, r0
 801b9b0:	4608      	mov	r0, r1
 801b9b2:	6023      	str	r3, [r4, #0]
 801b9b4:	f7e5 ff48 	bl	8001848 <_sbrk>
 801b9b8:	1c43      	adds	r3, r0, #1
 801b9ba:	d102      	bne.n	801b9c2 <_sbrk_r+0x1a>
 801b9bc:	6823      	ldr	r3, [r4, #0]
 801b9be:	b103      	cbz	r3, 801b9c2 <_sbrk_r+0x1a>
 801b9c0:	602b      	str	r3, [r5, #0]
 801b9c2:	bd38      	pop	{r3, r4, r5, pc}
 801b9c4:	20027468 	.word	0x20027468

0801b9c8 <_raise_r>:
 801b9c8:	291f      	cmp	r1, #31
 801b9ca:	b538      	push	{r3, r4, r5, lr}
 801b9cc:	4604      	mov	r4, r0
 801b9ce:	460d      	mov	r5, r1
 801b9d0:	d904      	bls.n	801b9dc <_raise_r+0x14>
 801b9d2:	2316      	movs	r3, #22
 801b9d4:	6003      	str	r3, [r0, #0]
 801b9d6:	f04f 30ff 	mov.w	r0, #4294967295
 801b9da:	bd38      	pop	{r3, r4, r5, pc}
 801b9dc:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801b9de:	b112      	cbz	r2, 801b9e6 <_raise_r+0x1e>
 801b9e0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801b9e4:	b94b      	cbnz	r3, 801b9fa <_raise_r+0x32>
 801b9e6:	4620      	mov	r0, r4
 801b9e8:	f000 f830 	bl	801ba4c <_getpid_r>
 801b9ec:	462a      	mov	r2, r5
 801b9ee:	4601      	mov	r1, r0
 801b9f0:	4620      	mov	r0, r4
 801b9f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801b9f6:	f000 b817 	b.w	801ba28 <_kill_r>
 801b9fa:	2b01      	cmp	r3, #1
 801b9fc:	d00a      	beq.n	801ba14 <_raise_r+0x4c>
 801b9fe:	1c59      	adds	r1, r3, #1
 801ba00:	d103      	bne.n	801ba0a <_raise_r+0x42>
 801ba02:	2316      	movs	r3, #22
 801ba04:	6003      	str	r3, [r0, #0]
 801ba06:	2001      	movs	r0, #1
 801ba08:	e7e7      	b.n	801b9da <_raise_r+0x12>
 801ba0a:	2400      	movs	r4, #0
 801ba0c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801ba10:	4628      	mov	r0, r5
 801ba12:	4798      	blx	r3
 801ba14:	2000      	movs	r0, #0
 801ba16:	e7e0      	b.n	801b9da <_raise_r+0x12>

0801ba18 <raise>:
 801ba18:	4b02      	ldr	r3, [pc, #8]	; (801ba24 <raise+0xc>)
 801ba1a:	4601      	mov	r1, r0
 801ba1c:	6818      	ldr	r0, [r3, #0]
 801ba1e:	f7ff bfd3 	b.w	801b9c8 <_raise_r>
 801ba22:	bf00      	nop
 801ba24:	2000009c 	.word	0x2000009c

0801ba28 <_kill_r>:
 801ba28:	b538      	push	{r3, r4, r5, lr}
 801ba2a:	4c07      	ldr	r4, [pc, #28]	; (801ba48 <_kill_r+0x20>)
 801ba2c:	2300      	movs	r3, #0
 801ba2e:	4605      	mov	r5, r0
 801ba30:	4608      	mov	r0, r1
 801ba32:	4611      	mov	r1, r2
 801ba34:	6023      	str	r3, [r4, #0]
 801ba36:	f7e5 fe7f 	bl	8001738 <_kill>
 801ba3a:	1c43      	adds	r3, r0, #1
 801ba3c:	d102      	bne.n	801ba44 <_kill_r+0x1c>
 801ba3e:	6823      	ldr	r3, [r4, #0]
 801ba40:	b103      	cbz	r3, 801ba44 <_kill_r+0x1c>
 801ba42:	602b      	str	r3, [r5, #0]
 801ba44:	bd38      	pop	{r3, r4, r5, pc}
 801ba46:	bf00      	nop
 801ba48:	20027468 	.word	0x20027468

0801ba4c <_getpid_r>:
 801ba4c:	f7e5 be6c 	b.w	8001728 <_getpid>

0801ba50 <__swbuf_r>:
 801ba50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ba52:	460e      	mov	r6, r1
 801ba54:	4614      	mov	r4, r2
 801ba56:	4605      	mov	r5, r0
 801ba58:	b118      	cbz	r0, 801ba62 <__swbuf_r+0x12>
 801ba5a:	6983      	ldr	r3, [r0, #24]
 801ba5c:	b90b      	cbnz	r3, 801ba62 <__swbuf_r+0x12>
 801ba5e:	f000 fa0b 	bl	801be78 <__sinit>
 801ba62:	4b21      	ldr	r3, [pc, #132]	; (801bae8 <__swbuf_r+0x98>)
 801ba64:	429c      	cmp	r4, r3
 801ba66:	d12a      	bne.n	801babe <__swbuf_r+0x6e>
 801ba68:	686c      	ldr	r4, [r5, #4]
 801ba6a:	69a3      	ldr	r3, [r4, #24]
 801ba6c:	60a3      	str	r3, [r4, #8]
 801ba6e:	89a3      	ldrh	r3, [r4, #12]
 801ba70:	071a      	lsls	r2, r3, #28
 801ba72:	d52e      	bpl.n	801bad2 <__swbuf_r+0x82>
 801ba74:	6923      	ldr	r3, [r4, #16]
 801ba76:	b363      	cbz	r3, 801bad2 <__swbuf_r+0x82>
 801ba78:	6923      	ldr	r3, [r4, #16]
 801ba7a:	6820      	ldr	r0, [r4, #0]
 801ba7c:	1ac0      	subs	r0, r0, r3
 801ba7e:	6963      	ldr	r3, [r4, #20]
 801ba80:	b2f6      	uxtb	r6, r6
 801ba82:	4283      	cmp	r3, r0
 801ba84:	4637      	mov	r7, r6
 801ba86:	dc04      	bgt.n	801ba92 <__swbuf_r+0x42>
 801ba88:	4621      	mov	r1, r4
 801ba8a:	4628      	mov	r0, r5
 801ba8c:	f000 f98a 	bl	801bda4 <_fflush_r>
 801ba90:	bb28      	cbnz	r0, 801bade <__swbuf_r+0x8e>
 801ba92:	68a3      	ldr	r3, [r4, #8]
 801ba94:	3b01      	subs	r3, #1
 801ba96:	60a3      	str	r3, [r4, #8]
 801ba98:	6823      	ldr	r3, [r4, #0]
 801ba9a:	1c5a      	adds	r2, r3, #1
 801ba9c:	6022      	str	r2, [r4, #0]
 801ba9e:	701e      	strb	r6, [r3, #0]
 801baa0:	6963      	ldr	r3, [r4, #20]
 801baa2:	3001      	adds	r0, #1
 801baa4:	4283      	cmp	r3, r0
 801baa6:	d004      	beq.n	801bab2 <__swbuf_r+0x62>
 801baa8:	89a3      	ldrh	r3, [r4, #12]
 801baaa:	07db      	lsls	r3, r3, #31
 801baac:	d519      	bpl.n	801bae2 <__swbuf_r+0x92>
 801baae:	2e0a      	cmp	r6, #10
 801bab0:	d117      	bne.n	801bae2 <__swbuf_r+0x92>
 801bab2:	4621      	mov	r1, r4
 801bab4:	4628      	mov	r0, r5
 801bab6:	f000 f975 	bl	801bda4 <_fflush_r>
 801baba:	b190      	cbz	r0, 801bae2 <__swbuf_r+0x92>
 801babc:	e00f      	b.n	801bade <__swbuf_r+0x8e>
 801babe:	4b0b      	ldr	r3, [pc, #44]	; (801baec <__swbuf_r+0x9c>)
 801bac0:	429c      	cmp	r4, r3
 801bac2:	d101      	bne.n	801bac8 <__swbuf_r+0x78>
 801bac4:	68ac      	ldr	r4, [r5, #8]
 801bac6:	e7d0      	b.n	801ba6a <__swbuf_r+0x1a>
 801bac8:	4b09      	ldr	r3, [pc, #36]	; (801baf0 <__swbuf_r+0xa0>)
 801baca:	429c      	cmp	r4, r3
 801bacc:	bf08      	it	eq
 801bace:	68ec      	ldreq	r4, [r5, #12]
 801bad0:	e7cb      	b.n	801ba6a <__swbuf_r+0x1a>
 801bad2:	4621      	mov	r1, r4
 801bad4:	4628      	mov	r0, r5
 801bad6:	f000 f80d 	bl	801baf4 <__swsetup_r>
 801bada:	2800      	cmp	r0, #0
 801badc:	d0cc      	beq.n	801ba78 <__swbuf_r+0x28>
 801bade:	f04f 37ff 	mov.w	r7, #4294967295
 801bae2:	4638      	mov	r0, r7
 801bae4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801bae6:	bf00      	nop
 801bae8:	0801fcf0 	.word	0x0801fcf0
 801baec:	0801fd10 	.word	0x0801fd10
 801baf0:	0801fcd0 	.word	0x0801fcd0

0801baf4 <__swsetup_r>:
 801baf4:	4b32      	ldr	r3, [pc, #200]	; (801bbc0 <__swsetup_r+0xcc>)
 801baf6:	b570      	push	{r4, r5, r6, lr}
 801baf8:	681d      	ldr	r5, [r3, #0]
 801bafa:	4606      	mov	r6, r0
 801bafc:	460c      	mov	r4, r1
 801bafe:	b125      	cbz	r5, 801bb0a <__swsetup_r+0x16>
 801bb00:	69ab      	ldr	r3, [r5, #24]
 801bb02:	b913      	cbnz	r3, 801bb0a <__swsetup_r+0x16>
 801bb04:	4628      	mov	r0, r5
 801bb06:	f000 f9b7 	bl	801be78 <__sinit>
 801bb0a:	4b2e      	ldr	r3, [pc, #184]	; (801bbc4 <__swsetup_r+0xd0>)
 801bb0c:	429c      	cmp	r4, r3
 801bb0e:	d10f      	bne.n	801bb30 <__swsetup_r+0x3c>
 801bb10:	686c      	ldr	r4, [r5, #4]
 801bb12:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801bb16:	b29a      	uxth	r2, r3
 801bb18:	0715      	lsls	r5, r2, #28
 801bb1a:	d42c      	bmi.n	801bb76 <__swsetup_r+0x82>
 801bb1c:	06d0      	lsls	r0, r2, #27
 801bb1e:	d411      	bmi.n	801bb44 <__swsetup_r+0x50>
 801bb20:	2209      	movs	r2, #9
 801bb22:	6032      	str	r2, [r6, #0]
 801bb24:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801bb28:	81a3      	strh	r3, [r4, #12]
 801bb2a:	f04f 30ff 	mov.w	r0, #4294967295
 801bb2e:	e03e      	b.n	801bbae <__swsetup_r+0xba>
 801bb30:	4b25      	ldr	r3, [pc, #148]	; (801bbc8 <__swsetup_r+0xd4>)
 801bb32:	429c      	cmp	r4, r3
 801bb34:	d101      	bne.n	801bb3a <__swsetup_r+0x46>
 801bb36:	68ac      	ldr	r4, [r5, #8]
 801bb38:	e7eb      	b.n	801bb12 <__swsetup_r+0x1e>
 801bb3a:	4b24      	ldr	r3, [pc, #144]	; (801bbcc <__swsetup_r+0xd8>)
 801bb3c:	429c      	cmp	r4, r3
 801bb3e:	bf08      	it	eq
 801bb40:	68ec      	ldreq	r4, [r5, #12]
 801bb42:	e7e6      	b.n	801bb12 <__swsetup_r+0x1e>
 801bb44:	0751      	lsls	r1, r2, #29
 801bb46:	d512      	bpl.n	801bb6e <__swsetup_r+0x7a>
 801bb48:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801bb4a:	b141      	cbz	r1, 801bb5e <__swsetup_r+0x6a>
 801bb4c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801bb50:	4299      	cmp	r1, r3
 801bb52:	d002      	beq.n	801bb5a <__swsetup_r+0x66>
 801bb54:	4630      	mov	r0, r6
 801bb56:	f7ff fbb7 	bl	801b2c8 <_free_r>
 801bb5a:	2300      	movs	r3, #0
 801bb5c:	6363      	str	r3, [r4, #52]	; 0x34
 801bb5e:	89a3      	ldrh	r3, [r4, #12]
 801bb60:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801bb64:	81a3      	strh	r3, [r4, #12]
 801bb66:	2300      	movs	r3, #0
 801bb68:	6063      	str	r3, [r4, #4]
 801bb6a:	6923      	ldr	r3, [r4, #16]
 801bb6c:	6023      	str	r3, [r4, #0]
 801bb6e:	89a3      	ldrh	r3, [r4, #12]
 801bb70:	f043 0308 	orr.w	r3, r3, #8
 801bb74:	81a3      	strh	r3, [r4, #12]
 801bb76:	6923      	ldr	r3, [r4, #16]
 801bb78:	b94b      	cbnz	r3, 801bb8e <__swsetup_r+0x9a>
 801bb7a:	89a3      	ldrh	r3, [r4, #12]
 801bb7c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801bb80:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801bb84:	d003      	beq.n	801bb8e <__swsetup_r+0x9a>
 801bb86:	4621      	mov	r1, r4
 801bb88:	4630      	mov	r0, r6
 801bb8a:	f000 fa23 	bl	801bfd4 <__smakebuf_r>
 801bb8e:	89a2      	ldrh	r2, [r4, #12]
 801bb90:	f012 0301 	ands.w	r3, r2, #1
 801bb94:	d00c      	beq.n	801bbb0 <__swsetup_r+0xbc>
 801bb96:	2300      	movs	r3, #0
 801bb98:	60a3      	str	r3, [r4, #8]
 801bb9a:	6963      	ldr	r3, [r4, #20]
 801bb9c:	425b      	negs	r3, r3
 801bb9e:	61a3      	str	r3, [r4, #24]
 801bba0:	6923      	ldr	r3, [r4, #16]
 801bba2:	b953      	cbnz	r3, 801bbba <__swsetup_r+0xc6>
 801bba4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801bba8:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 801bbac:	d1ba      	bne.n	801bb24 <__swsetup_r+0x30>
 801bbae:	bd70      	pop	{r4, r5, r6, pc}
 801bbb0:	0792      	lsls	r2, r2, #30
 801bbb2:	bf58      	it	pl
 801bbb4:	6963      	ldrpl	r3, [r4, #20]
 801bbb6:	60a3      	str	r3, [r4, #8]
 801bbb8:	e7f2      	b.n	801bba0 <__swsetup_r+0xac>
 801bbba:	2000      	movs	r0, #0
 801bbbc:	e7f7      	b.n	801bbae <__swsetup_r+0xba>
 801bbbe:	bf00      	nop
 801bbc0:	2000009c 	.word	0x2000009c
 801bbc4:	0801fcf0 	.word	0x0801fcf0
 801bbc8:	0801fd10 	.word	0x0801fd10
 801bbcc:	0801fcd0 	.word	0x0801fcd0

0801bbd0 <__register_exitproc>:
 801bbd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801bbd4:	4d2c      	ldr	r5, [pc, #176]	; (801bc88 <__register_exitproc+0xb8>)
 801bbd6:	682c      	ldr	r4, [r5, #0]
 801bbd8:	4607      	mov	r7, r0
 801bbda:	460e      	mov	r6, r1
 801bbdc:	4691      	mov	r9, r2
 801bbde:	4698      	mov	r8, r3
 801bbe0:	b934      	cbnz	r4, 801bbf0 <__register_exitproc+0x20>
 801bbe2:	4b2a      	ldr	r3, [pc, #168]	; (801bc8c <__register_exitproc+0xbc>)
 801bbe4:	4c2a      	ldr	r4, [pc, #168]	; (801bc90 <__register_exitproc+0xc0>)
 801bbe6:	602c      	str	r4, [r5, #0]
 801bbe8:	b113      	cbz	r3, 801bbf0 <__register_exitproc+0x20>
 801bbea:	681b      	ldr	r3, [r3, #0]
 801bbec:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801bbf0:	6863      	ldr	r3, [r4, #4]
 801bbf2:	2b1f      	cmp	r3, #31
 801bbf4:	dd3d      	ble.n	801bc72 <__register_exitproc+0xa2>
 801bbf6:	4b27      	ldr	r3, [pc, #156]	; (801bc94 <__register_exitproc+0xc4>)
 801bbf8:	b91b      	cbnz	r3, 801bc02 <__register_exitproc+0x32>
 801bbfa:	f04f 30ff 	mov.w	r0, #4294967295
 801bbfe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801bc02:	208c      	movs	r0, #140	; 0x8c
 801bc04:	f7ff fb3c 	bl	801b280 <malloc>
 801bc08:	4604      	mov	r4, r0
 801bc0a:	2800      	cmp	r0, #0
 801bc0c:	d0f5      	beq.n	801bbfa <__register_exitproc+0x2a>
 801bc0e:	2300      	movs	r3, #0
 801bc10:	682a      	ldr	r2, [r5, #0]
 801bc12:	6002      	str	r2, [r0, #0]
 801bc14:	6043      	str	r3, [r0, #4]
 801bc16:	6028      	str	r0, [r5, #0]
 801bc18:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 801bc1c:	b30f      	cbz	r7, 801bc62 <__register_exitproc+0x92>
 801bc1e:	f44f 7084 	mov.w	r0, #264	; 0x108
 801bc22:	f7ff fb2d 	bl	801b280 <malloc>
 801bc26:	2800      	cmp	r0, #0
 801bc28:	d0e7      	beq.n	801bbfa <__register_exitproc+0x2a>
 801bc2a:	2300      	movs	r3, #0
 801bc2c:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801bc30:	f8c0 3104 	str.w	r3, [r0, #260]	; 0x104
 801bc34:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801bc38:	6862      	ldr	r2, [r4, #4]
 801bc3a:	f840 9022 	str.w	r9, [r0, r2, lsl #2]
 801bc3e:	2301      	movs	r3, #1
 801bc40:	4093      	lsls	r3, r2
 801bc42:	eb00 0182 	add.w	r1, r0, r2, lsl #2
 801bc46:	f8d0 2100 	ldr.w	r2, [r0, #256]	; 0x100
 801bc4a:	431a      	orrs	r2, r3
 801bc4c:	2f02      	cmp	r7, #2
 801bc4e:	f8c0 2100 	str.w	r2, [r0, #256]	; 0x100
 801bc52:	f8c1 8080 	str.w	r8, [r1, #128]	; 0x80
 801bc56:	bf02      	ittt	eq
 801bc58:	f8d0 2104 	ldreq.w	r2, [r0, #260]	; 0x104
 801bc5c:	4313      	orreq	r3, r2
 801bc5e:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801bc62:	6863      	ldr	r3, [r4, #4]
 801bc64:	1c5a      	adds	r2, r3, #1
 801bc66:	3302      	adds	r3, #2
 801bc68:	6062      	str	r2, [r4, #4]
 801bc6a:	2000      	movs	r0, #0
 801bc6c:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 801bc70:	e7c5      	b.n	801bbfe <__register_exitproc+0x2e>
 801bc72:	2f00      	cmp	r7, #0
 801bc74:	d0f5      	beq.n	801bc62 <__register_exitproc+0x92>
 801bc76:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801bc7a:	2800      	cmp	r0, #0
 801bc7c:	d1dc      	bne.n	801bc38 <__register_exitproc+0x68>
 801bc7e:	4b05      	ldr	r3, [pc, #20]	; (801bc94 <__register_exitproc+0xc4>)
 801bc80:	2b00      	cmp	r3, #0
 801bc82:	d0ba      	beq.n	801bbfa <__register_exitproc+0x2a>
 801bc84:	e7cb      	b.n	801bc1e <__register_exitproc+0x4e>
 801bc86:	bf00      	nop
 801bc88:	20027168 	.word	0x20027168
 801bc8c:	0801fccc 	.word	0x0801fccc
 801bc90:	200270dc 	.word	0x200270dc
 801bc94:	0801b281 	.word	0x0801b281

0801bc98 <__sflush_r>:
 801bc98:	898a      	ldrh	r2, [r1, #12]
 801bc9a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801bc9e:	4605      	mov	r5, r0
 801bca0:	0710      	lsls	r0, r2, #28
 801bca2:	460c      	mov	r4, r1
 801bca4:	d458      	bmi.n	801bd58 <__sflush_r+0xc0>
 801bca6:	684b      	ldr	r3, [r1, #4]
 801bca8:	2b00      	cmp	r3, #0
 801bcaa:	dc05      	bgt.n	801bcb8 <__sflush_r+0x20>
 801bcac:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801bcae:	2b00      	cmp	r3, #0
 801bcb0:	dc02      	bgt.n	801bcb8 <__sflush_r+0x20>
 801bcb2:	2000      	movs	r0, #0
 801bcb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801bcb8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801bcba:	2e00      	cmp	r6, #0
 801bcbc:	d0f9      	beq.n	801bcb2 <__sflush_r+0x1a>
 801bcbe:	2300      	movs	r3, #0
 801bcc0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801bcc4:	682f      	ldr	r7, [r5, #0]
 801bcc6:	6a21      	ldr	r1, [r4, #32]
 801bcc8:	602b      	str	r3, [r5, #0]
 801bcca:	d032      	beq.n	801bd32 <__sflush_r+0x9a>
 801bccc:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801bcce:	89a3      	ldrh	r3, [r4, #12]
 801bcd0:	075a      	lsls	r2, r3, #29
 801bcd2:	d505      	bpl.n	801bce0 <__sflush_r+0x48>
 801bcd4:	6863      	ldr	r3, [r4, #4]
 801bcd6:	1ac0      	subs	r0, r0, r3
 801bcd8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801bcda:	b10b      	cbz	r3, 801bce0 <__sflush_r+0x48>
 801bcdc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801bcde:	1ac0      	subs	r0, r0, r3
 801bce0:	2300      	movs	r3, #0
 801bce2:	4602      	mov	r2, r0
 801bce4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801bce6:	6a21      	ldr	r1, [r4, #32]
 801bce8:	4628      	mov	r0, r5
 801bcea:	47b0      	blx	r6
 801bcec:	1c43      	adds	r3, r0, #1
 801bcee:	89a3      	ldrh	r3, [r4, #12]
 801bcf0:	d106      	bne.n	801bd00 <__sflush_r+0x68>
 801bcf2:	6829      	ldr	r1, [r5, #0]
 801bcf4:	291d      	cmp	r1, #29
 801bcf6:	d848      	bhi.n	801bd8a <__sflush_r+0xf2>
 801bcf8:	4a29      	ldr	r2, [pc, #164]	; (801bda0 <__sflush_r+0x108>)
 801bcfa:	40ca      	lsrs	r2, r1
 801bcfc:	07d6      	lsls	r6, r2, #31
 801bcfe:	d544      	bpl.n	801bd8a <__sflush_r+0xf2>
 801bd00:	2200      	movs	r2, #0
 801bd02:	6062      	str	r2, [r4, #4]
 801bd04:	04d9      	lsls	r1, r3, #19
 801bd06:	6922      	ldr	r2, [r4, #16]
 801bd08:	6022      	str	r2, [r4, #0]
 801bd0a:	d504      	bpl.n	801bd16 <__sflush_r+0x7e>
 801bd0c:	1c42      	adds	r2, r0, #1
 801bd0e:	d101      	bne.n	801bd14 <__sflush_r+0x7c>
 801bd10:	682b      	ldr	r3, [r5, #0]
 801bd12:	b903      	cbnz	r3, 801bd16 <__sflush_r+0x7e>
 801bd14:	6560      	str	r0, [r4, #84]	; 0x54
 801bd16:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801bd18:	602f      	str	r7, [r5, #0]
 801bd1a:	2900      	cmp	r1, #0
 801bd1c:	d0c9      	beq.n	801bcb2 <__sflush_r+0x1a>
 801bd1e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801bd22:	4299      	cmp	r1, r3
 801bd24:	d002      	beq.n	801bd2c <__sflush_r+0x94>
 801bd26:	4628      	mov	r0, r5
 801bd28:	f7ff face 	bl	801b2c8 <_free_r>
 801bd2c:	2000      	movs	r0, #0
 801bd2e:	6360      	str	r0, [r4, #52]	; 0x34
 801bd30:	e7c0      	b.n	801bcb4 <__sflush_r+0x1c>
 801bd32:	2301      	movs	r3, #1
 801bd34:	4628      	mov	r0, r5
 801bd36:	47b0      	blx	r6
 801bd38:	1c41      	adds	r1, r0, #1
 801bd3a:	d1c8      	bne.n	801bcce <__sflush_r+0x36>
 801bd3c:	682b      	ldr	r3, [r5, #0]
 801bd3e:	2b00      	cmp	r3, #0
 801bd40:	d0c5      	beq.n	801bcce <__sflush_r+0x36>
 801bd42:	2b1d      	cmp	r3, #29
 801bd44:	d001      	beq.n	801bd4a <__sflush_r+0xb2>
 801bd46:	2b16      	cmp	r3, #22
 801bd48:	d101      	bne.n	801bd4e <__sflush_r+0xb6>
 801bd4a:	602f      	str	r7, [r5, #0]
 801bd4c:	e7b1      	b.n	801bcb2 <__sflush_r+0x1a>
 801bd4e:	89a3      	ldrh	r3, [r4, #12]
 801bd50:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801bd54:	81a3      	strh	r3, [r4, #12]
 801bd56:	e7ad      	b.n	801bcb4 <__sflush_r+0x1c>
 801bd58:	690f      	ldr	r7, [r1, #16]
 801bd5a:	2f00      	cmp	r7, #0
 801bd5c:	d0a9      	beq.n	801bcb2 <__sflush_r+0x1a>
 801bd5e:	0793      	lsls	r3, r2, #30
 801bd60:	680e      	ldr	r6, [r1, #0]
 801bd62:	bf08      	it	eq
 801bd64:	694b      	ldreq	r3, [r1, #20]
 801bd66:	600f      	str	r7, [r1, #0]
 801bd68:	bf18      	it	ne
 801bd6a:	2300      	movne	r3, #0
 801bd6c:	eba6 0807 	sub.w	r8, r6, r7
 801bd70:	608b      	str	r3, [r1, #8]
 801bd72:	f1b8 0f00 	cmp.w	r8, #0
 801bd76:	dd9c      	ble.n	801bcb2 <__sflush_r+0x1a>
 801bd78:	4643      	mov	r3, r8
 801bd7a:	463a      	mov	r2, r7
 801bd7c:	6a21      	ldr	r1, [r4, #32]
 801bd7e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801bd80:	4628      	mov	r0, r5
 801bd82:	47b0      	blx	r6
 801bd84:	2800      	cmp	r0, #0
 801bd86:	dc06      	bgt.n	801bd96 <__sflush_r+0xfe>
 801bd88:	89a3      	ldrh	r3, [r4, #12]
 801bd8a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801bd8e:	81a3      	strh	r3, [r4, #12]
 801bd90:	f04f 30ff 	mov.w	r0, #4294967295
 801bd94:	e78e      	b.n	801bcb4 <__sflush_r+0x1c>
 801bd96:	4407      	add	r7, r0
 801bd98:	eba8 0800 	sub.w	r8, r8, r0
 801bd9c:	e7e9      	b.n	801bd72 <__sflush_r+0xda>
 801bd9e:	bf00      	nop
 801bda0:	20400001 	.word	0x20400001

0801bda4 <_fflush_r>:
 801bda4:	b538      	push	{r3, r4, r5, lr}
 801bda6:	690b      	ldr	r3, [r1, #16]
 801bda8:	4605      	mov	r5, r0
 801bdaa:	460c      	mov	r4, r1
 801bdac:	b1db      	cbz	r3, 801bde6 <_fflush_r+0x42>
 801bdae:	b118      	cbz	r0, 801bdb8 <_fflush_r+0x14>
 801bdb0:	6983      	ldr	r3, [r0, #24]
 801bdb2:	b90b      	cbnz	r3, 801bdb8 <_fflush_r+0x14>
 801bdb4:	f000 f860 	bl	801be78 <__sinit>
 801bdb8:	4b0c      	ldr	r3, [pc, #48]	; (801bdec <_fflush_r+0x48>)
 801bdba:	429c      	cmp	r4, r3
 801bdbc:	d109      	bne.n	801bdd2 <_fflush_r+0x2e>
 801bdbe:	686c      	ldr	r4, [r5, #4]
 801bdc0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801bdc4:	b17b      	cbz	r3, 801bde6 <_fflush_r+0x42>
 801bdc6:	4621      	mov	r1, r4
 801bdc8:	4628      	mov	r0, r5
 801bdca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801bdce:	f7ff bf63 	b.w	801bc98 <__sflush_r>
 801bdd2:	4b07      	ldr	r3, [pc, #28]	; (801bdf0 <_fflush_r+0x4c>)
 801bdd4:	429c      	cmp	r4, r3
 801bdd6:	d101      	bne.n	801bddc <_fflush_r+0x38>
 801bdd8:	68ac      	ldr	r4, [r5, #8]
 801bdda:	e7f1      	b.n	801bdc0 <_fflush_r+0x1c>
 801bddc:	4b05      	ldr	r3, [pc, #20]	; (801bdf4 <_fflush_r+0x50>)
 801bdde:	429c      	cmp	r4, r3
 801bde0:	bf08      	it	eq
 801bde2:	68ec      	ldreq	r4, [r5, #12]
 801bde4:	e7ec      	b.n	801bdc0 <_fflush_r+0x1c>
 801bde6:	2000      	movs	r0, #0
 801bde8:	bd38      	pop	{r3, r4, r5, pc}
 801bdea:	bf00      	nop
 801bdec:	0801fcf0 	.word	0x0801fcf0
 801bdf0:	0801fd10 	.word	0x0801fd10
 801bdf4:	0801fcd0 	.word	0x0801fcd0

0801bdf8 <std>:
 801bdf8:	2300      	movs	r3, #0
 801bdfa:	b510      	push	{r4, lr}
 801bdfc:	4604      	mov	r4, r0
 801bdfe:	e9c0 3300 	strd	r3, r3, [r0]
 801be02:	6083      	str	r3, [r0, #8]
 801be04:	8181      	strh	r1, [r0, #12]
 801be06:	6643      	str	r3, [r0, #100]	; 0x64
 801be08:	81c2      	strh	r2, [r0, #14]
 801be0a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801be0e:	6183      	str	r3, [r0, #24]
 801be10:	4619      	mov	r1, r3
 801be12:	2208      	movs	r2, #8
 801be14:	305c      	adds	r0, #92	; 0x5c
 801be16:	f7ff fa4e 	bl	801b2b6 <memset>
 801be1a:	4b05      	ldr	r3, [pc, #20]	; (801be30 <std+0x38>)
 801be1c:	6263      	str	r3, [r4, #36]	; 0x24
 801be1e:	4b05      	ldr	r3, [pc, #20]	; (801be34 <std+0x3c>)
 801be20:	62a3      	str	r3, [r4, #40]	; 0x28
 801be22:	4b05      	ldr	r3, [pc, #20]	; (801be38 <std+0x40>)
 801be24:	62e3      	str	r3, [r4, #44]	; 0x2c
 801be26:	4b05      	ldr	r3, [pc, #20]	; (801be3c <std+0x44>)
 801be28:	6224      	str	r4, [r4, #32]
 801be2a:	6323      	str	r3, [r4, #48]	; 0x30
 801be2c:	bd10      	pop	{r4, pc}
 801be2e:	bf00      	nop
 801be30:	0801c059 	.word	0x0801c059
 801be34:	0801c07b 	.word	0x0801c07b
 801be38:	0801c0b3 	.word	0x0801c0b3
 801be3c:	0801c0d7 	.word	0x0801c0d7

0801be40 <_cleanup_r>:
 801be40:	4901      	ldr	r1, [pc, #4]	; (801be48 <_cleanup_r+0x8>)
 801be42:	f000 b885 	b.w	801bf50 <_fwalk_reent>
 801be46:	bf00      	nop
 801be48:	0801bda5 	.word	0x0801bda5

0801be4c <__sfmoreglue>:
 801be4c:	b570      	push	{r4, r5, r6, lr}
 801be4e:	1e4a      	subs	r2, r1, #1
 801be50:	2568      	movs	r5, #104	; 0x68
 801be52:	4355      	muls	r5, r2
 801be54:	460e      	mov	r6, r1
 801be56:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801be5a:	f7ff fa83 	bl	801b364 <_malloc_r>
 801be5e:	4604      	mov	r4, r0
 801be60:	b140      	cbz	r0, 801be74 <__sfmoreglue+0x28>
 801be62:	2100      	movs	r1, #0
 801be64:	e9c0 1600 	strd	r1, r6, [r0]
 801be68:	300c      	adds	r0, #12
 801be6a:	60a0      	str	r0, [r4, #8]
 801be6c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801be70:	f7ff fa21 	bl	801b2b6 <memset>
 801be74:	4620      	mov	r0, r4
 801be76:	bd70      	pop	{r4, r5, r6, pc}

0801be78 <__sinit>:
 801be78:	6983      	ldr	r3, [r0, #24]
 801be7a:	b510      	push	{r4, lr}
 801be7c:	4604      	mov	r4, r0
 801be7e:	bb33      	cbnz	r3, 801bece <__sinit+0x56>
 801be80:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 801be84:	6503      	str	r3, [r0, #80]	; 0x50
 801be86:	4b12      	ldr	r3, [pc, #72]	; (801bed0 <__sinit+0x58>)
 801be88:	4a12      	ldr	r2, [pc, #72]	; (801bed4 <__sinit+0x5c>)
 801be8a:	681b      	ldr	r3, [r3, #0]
 801be8c:	6282      	str	r2, [r0, #40]	; 0x28
 801be8e:	4298      	cmp	r0, r3
 801be90:	bf04      	itt	eq
 801be92:	2301      	moveq	r3, #1
 801be94:	6183      	streq	r3, [r0, #24]
 801be96:	f000 f81f 	bl	801bed8 <__sfp>
 801be9a:	6060      	str	r0, [r4, #4]
 801be9c:	4620      	mov	r0, r4
 801be9e:	f000 f81b 	bl	801bed8 <__sfp>
 801bea2:	60a0      	str	r0, [r4, #8]
 801bea4:	4620      	mov	r0, r4
 801bea6:	f000 f817 	bl	801bed8 <__sfp>
 801beaa:	2200      	movs	r2, #0
 801beac:	60e0      	str	r0, [r4, #12]
 801beae:	2104      	movs	r1, #4
 801beb0:	6860      	ldr	r0, [r4, #4]
 801beb2:	f7ff ffa1 	bl	801bdf8 <std>
 801beb6:	2201      	movs	r2, #1
 801beb8:	2109      	movs	r1, #9
 801beba:	68a0      	ldr	r0, [r4, #8]
 801bebc:	f7ff ff9c 	bl	801bdf8 <std>
 801bec0:	2202      	movs	r2, #2
 801bec2:	2112      	movs	r1, #18
 801bec4:	68e0      	ldr	r0, [r4, #12]
 801bec6:	f7ff ff97 	bl	801bdf8 <std>
 801beca:	2301      	movs	r3, #1
 801becc:	61a3      	str	r3, [r4, #24]
 801bece:	bd10      	pop	{r4, pc}
 801bed0:	0801fc94 	.word	0x0801fc94
 801bed4:	0801be41 	.word	0x0801be41

0801bed8 <__sfp>:
 801bed8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801beda:	4b1b      	ldr	r3, [pc, #108]	; (801bf48 <__sfp+0x70>)
 801bedc:	681e      	ldr	r6, [r3, #0]
 801bede:	69b3      	ldr	r3, [r6, #24]
 801bee0:	4607      	mov	r7, r0
 801bee2:	b913      	cbnz	r3, 801beea <__sfp+0x12>
 801bee4:	4630      	mov	r0, r6
 801bee6:	f7ff ffc7 	bl	801be78 <__sinit>
 801beea:	3648      	adds	r6, #72	; 0x48
 801beec:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801bef0:	3b01      	subs	r3, #1
 801bef2:	d503      	bpl.n	801befc <__sfp+0x24>
 801bef4:	6833      	ldr	r3, [r6, #0]
 801bef6:	b133      	cbz	r3, 801bf06 <__sfp+0x2e>
 801bef8:	6836      	ldr	r6, [r6, #0]
 801befa:	e7f7      	b.n	801beec <__sfp+0x14>
 801befc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801bf00:	b16d      	cbz	r5, 801bf1e <__sfp+0x46>
 801bf02:	3468      	adds	r4, #104	; 0x68
 801bf04:	e7f4      	b.n	801bef0 <__sfp+0x18>
 801bf06:	2104      	movs	r1, #4
 801bf08:	4638      	mov	r0, r7
 801bf0a:	f7ff ff9f 	bl	801be4c <__sfmoreglue>
 801bf0e:	6030      	str	r0, [r6, #0]
 801bf10:	2800      	cmp	r0, #0
 801bf12:	d1f1      	bne.n	801bef8 <__sfp+0x20>
 801bf14:	230c      	movs	r3, #12
 801bf16:	603b      	str	r3, [r7, #0]
 801bf18:	4604      	mov	r4, r0
 801bf1a:	4620      	mov	r0, r4
 801bf1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801bf1e:	4b0b      	ldr	r3, [pc, #44]	; (801bf4c <__sfp+0x74>)
 801bf20:	6665      	str	r5, [r4, #100]	; 0x64
 801bf22:	e9c4 5500 	strd	r5, r5, [r4]
 801bf26:	60a5      	str	r5, [r4, #8]
 801bf28:	e9c4 3503 	strd	r3, r5, [r4, #12]
 801bf2c:	e9c4 5505 	strd	r5, r5, [r4, #20]
 801bf30:	2208      	movs	r2, #8
 801bf32:	4629      	mov	r1, r5
 801bf34:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801bf38:	f7ff f9bd 	bl	801b2b6 <memset>
 801bf3c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801bf40:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801bf44:	e7e9      	b.n	801bf1a <__sfp+0x42>
 801bf46:	bf00      	nop
 801bf48:	0801fc94 	.word	0x0801fc94
 801bf4c:	ffff0001 	.word	0xffff0001

0801bf50 <_fwalk_reent>:
 801bf50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801bf54:	4680      	mov	r8, r0
 801bf56:	4689      	mov	r9, r1
 801bf58:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801bf5c:	2600      	movs	r6, #0
 801bf5e:	b914      	cbnz	r4, 801bf66 <_fwalk_reent+0x16>
 801bf60:	4630      	mov	r0, r6
 801bf62:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801bf66:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 801bf6a:	3f01      	subs	r7, #1
 801bf6c:	d501      	bpl.n	801bf72 <_fwalk_reent+0x22>
 801bf6e:	6824      	ldr	r4, [r4, #0]
 801bf70:	e7f5      	b.n	801bf5e <_fwalk_reent+0xe>
 801bf72:	89ab      	ldrh	r3, [r5, #12]
 801bf74:	2b01      	cmp	r3, #1
 801bf76:	d907      	bls.n	801bf88 <_fwalk_reent+0x38>
 801bf78:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801bf7c:	3301      	adds	r3, #1
 801bf7e:	d003      	beq.n	801bf88 <_fwalk_reent+0x38>
 801bf80:	4629      	mov	r1, r5
 801bf82:	4640      	mov	r0, r8
 801bf84:	47c8      	blx	r9
 801bf86:	4306      	orrs	r6, r0
 801bf88:	3568      	adds	r5, #104	; 0x68
 801bf8a:	e7ee      	b.n	801bf6a <_fwalk_reent+0x1a>

0801bf8c <__swhatbuf_r>:
 801bf8c:	b570      	push	{r4, r5, r6, lr}
 801bf8e:	460e      	mov	r6, r1
 801bf90:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801bf94:	2900      	cmp	r1, #0
 801bf96:	b096      	sub	sp, #88	; 0x58
 801bf98:	4614      	mov	r4, r2
 801bf9a:	461d      	mov	r5, r3
 801bf9c:	da07      	bge.n	801bfae <__swhatbuf_r+0x22>
 801bf9e:	2300      	movs	r3, #0
 801bfa0:	602b      	str	r3, [r5, #0]
 801bfa2:	89b3      	ldrh	r3, [r6, #12]
 801bfa4:	061a      	lsls	r2, r3, #24
 801bfa6:	d410      	bmi.n	801bfca <__swhatbuf_r+0x3e>
 801bfa8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801bfac:	e00e      	b.n	801bfcc <__swhatbuf_r+0x40>
 801bfae:	466a      	mov	r2, sp
 801bfb0:	f000 f8b8 	bl	801c124 <_fstat_r>
 801bfb4:	2800      	cmp	r0, #0
 801bfb6:	dbf2      	blt.n	801bf9e <__swhatbuf_r+0x12>
 801bfb8:	9a01      	ldr	r2, [sp, #4]
 801bfba:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801bfbe:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801bfc2:	425a      	negs	r2, r3
 801bfc4:	415a      	adcs	r2, r3
 801bfc6:	602a      	str	r2, [r5, #0]
 801bfc8:	e7ee      	b.n	801bfa8 <__swhatbuf_r+0x1c>
 801bfca:	2340      	movs	r3, #64	; 0x40
 801bfcc:	2000      	movs	r0, #0
 801bfce:	6023      	str	r3, [r4, #0]
 801bfd0:	b016      	add	sp, #88	; 0x58
 801bfd2:	bd70      	pop	{r4, r5, r6, pc}

0801bfd4 <__smakebuf_r>:
 801bfd4:	898b      	ldrh	r3, [r1, #12]
 801bfd6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801bfd8:	079d      	lsls	r5, r3, #30
 801bfda:	4606      	mov	r6, r0
 801bfdc:	460c      	mov	r4, r1
 801bfde:	d507      	bpl.n	801bff0 <__smakebuf_r+0x1c>
 801bfe0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801bfe4:	6023      	str	r3, [r4, #0]
 801bfe6:	6123      	str	r3, [r4, #16]
 801bfe8:	2301      	movs	r3, #1
 801bfea:	6163      	str	r3, [r4, #20]
 801bfec:	b002      	add	sp, #8
 801bfee:	bd70      	pop	{r4, r5, r6, pc}
 801bff0:	ab01      	add	r3, sp, #4
 801bff2:	466a      	mov	r2, sp
 801bff4:	f7ff ffca 	bl	801bf8c <__swhatbuf_r>
 801bff8:	9900      	ldr	r1, [sp, #0]
 801bffa:	4605      	mov	r5, r0
 801bffc:	4630      	mov	r0, r6
 801bffe:	f7ff f9b1 	bl	801b364 <_malloc_r>
 801c002:	b948      	cbnz	r0, 801c018 <__smakebuf_r+0x44>
 801c004:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c008:	059a      	lsls	r2, r3, #22
 801c00a:	d4ef      	bmi.n	801bfec <__smakebuf_r+0x18>
 801c00c:	f023 0303 	bic.w	r3, r3, #3
 801c010:	f043 0302 	orr.w	r3, r3, #2
 801c014:	81a3      	strh	r3, [r4, #12]
 801c016:	e7e3      	b.n	801bfe0 <__smakebuf_r+0xc>
 801c018:	4b0d      	ldr	r3, [pc, #52]	; (801c050 <__smakebuf_r+0x7c>)
 801c01a:	62b3      	str	r3, [r6, #40]	; 0x28
 801c01c:	89a3      	ldrh	r3, [r4, #12]
 801c01e:	6020      	str	r0, [r4, #0]
 801c020:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801c024:	81a3      	strh	r3, [r4, #12]
 801c026:	9b00      	ldr	r3, [sp, #0]
 801c028:	6163      	str	r3, [r4, #20]
 801c02a:	9b01      	ldr	r3, [sp, #4]
 801c02c:	6120      	str	r0, [r4, #16]
 801c02e:	b15b      	cbz	r3, 801c048 <__smakebuf_r+0x74>
 801c030:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801c034:	4630      	mov	r0, r6
 801c036:	f000 f887 	bl	801c148 <_isatty_r>
 801c03a:	b128      	cbz	r0, 801c048 <__smakebuf_r+0x74>
 801c03c:	89a3      	ldrh	r3, [r4, #12]
 801c03e:	f023 0303 	bic.w	r3, r3, #3
 801c042:	f043 0301 	orr.w	r3, r3, #1
 801c046:	81a3      	strh	r3, [r4, #12]
 801c048:	89a3      	ldrh	r3, [r4, #12]
 801c04a:	431d      	orrs	r5, r3
 801c04c:	81a5      	strh	r5, [r4, #12]
 801c04e:	e7cd      	b.n	801bfec <__smakebuf_r+0x18>
 801c050:	0801be41 	.word	0x0801be41

0801c054 <__malloc_lock>:
 801c054:	4770      	bx	lr

0801c056 <__malloc_unlock>:
 801c056:	4770      	bx	lr

0801c058 <__sread>:
 801c058:	b510      	push	{r4, lr}
 801c05a:	460c      	mov	r4, r1
 801c05c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c060:	f000 f894 	bl	801c18c <_read_r>
 801c064:	2800      	cmp	r0, #0
 801c066:	bfab      	itete	ge
 801c068:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801c06a:	89a3      	ldrhlt	r3, [r4, #12]
 801c06c:	181b      	addge	r3, r3, r0
 801c06e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801c072:	bfac      	ite	ge
 801c074:	6563      	strge	r3, [r4, #84]	; 0x54
 801c076:	81a3      	strhlt	r3, [r4, #12]
 801c078:	bd10      	pop	{r4, pc}

0801c07a <__swrite>:
 801c07a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c07e:	461f      	mov	r7, r3
 801c080:	898b      	ldrh	r3, [r1, #12]
 801c082:	05db      	lsls	r3, r3, #23
 801c084:	4605      	mov	r5, r0
 801c086:	460c      	mov	r4, r1
 801c088:	4616      	mov	r6, r2
 801c08a:	d505      	bpl.n	801c098 <__swrite+0x1e>
 801c08c:	2302      	movs	r3, #2
 801c08e:	2200      	movs	r2, #0
 801c090:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c094:	f000 f868 	bl	801c168 <_lseek_r>
 801c098:	89a3      	ldrh	r3, [r4, #12]
 801c09a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801c09e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801c0a2:	81a3      	strh	r3, [r4, #12]
 801c0a4:	4632      	mov	r2, r6
 801c0a6:	463b      	mov	r3, r7
 801c0a8:	4628      	mov	r0, r5
 801c0aa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801c0ae:	f000 b817 	b.w	801c0e0 <_write_r>

0801c0b2 <__sseek>:
 801c0b2:	b510      	push	{r4, lr}
 801c0b4:	460c      	mov	r4, r1
 801c0b6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c0ba:	f000 f855 	bl	801c168 <_lseek_r>
 801c0be:	1c43      	adds	r3, r0, #1
 801c0c0:	89a3      	ldrh	r3, [r4, #12]
 801c0c2:	bf15      	itete	ne
 801c0c4:	6560      	strne	r0, [r4, #84]	; 0x54
 801c0c6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801c0ca:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801c0ce:	81a3      	strheq	r3, [r4, #12]
 801c0d0:	bf18      	it	ne
 801c0d2:	81a3      	strhne	r3, [r4, #12]
 801c0d4:	bd10      	pop	{r4, pc}

0801c0d6 <__sclose>:
 801c0d6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c0da:	f000 b813 	b.w	801c104 <_close_r>
	...

0801c0e0 <_write_r>:
 801c0e0:	b538      	push	{r3, r4, r5, lr}
 801c0e2:	4c07      	ldr	r4, [pc, #28]	; (801c100 <_write_r+0x20>)
 801c0e4:	4605      	mov	r5, r0
 801c0e6:	4608      	mov	r0, r1
 801c0e8:	4611      	mov	r1, r2
 801c0ea:	2200      	movs	r2, #0
 801c0ec:	6022      	str	r2, [r4, #0]
 801c0ee:	461a      	mov	r2, r3
 801c0f0:	f7e5 fb59 	bl	80017a6 <_write>
 801c0f4:	1c43      	adds	r3, r0, #1
 801c0f6:	d102      	bne.n	801c0fe <_write_r+0x1e>
 801c0f8:	6823      	ldr	r3, [r4, #0]
 801c0fa:	b103      	cbz	r3, 801c0fe <_write_r+0x1e>
 801c0fc:	602b      	str	r3, [r5, #0]
 801c0fe:	bd38      	pop	{r3, r4, r5, pc}
 801c100:	20027468 	.word	0x20027468

0801c104 <_close_r>:
 801c104:	b538      	push	{r3, r4, r5, lr}
 801c106:	4c06      	ldr	r4, [pc, #24]	; (801c120 <_close_r+0x1c>)
 801c108:	2300      	movs	r3, #0
 801c10a:	4605      	mov	r5, r0
 801c10c:	4608      	mov	r0, r1
 801c10e:	6023      	str	r3, [r4, #0]
 801c110:	f7e5 fb65 	bl	80017de <_close>
 801c114:	1c43      	adds	r3, r0, #1
 801c116:	d102      	bne.n	801c11e <_close_r+0x1a>
 801c118:	6823      	ldr	r3, [r4, #0]
 801c11a:	b103      	cbz	r3, 801c11e <_close_r+0x1a>
 801c11c:	602b      	str	r3, [r5, #0]
 801c11e:	bd38      	pop	{r3, r4, r5, pc}
 801c120:	20027468 	.word	0x20027468

0801c124 <_fstat_r>:
 801c124:	b538      	push	{r3, r4, r5, lr}
 801c126:	4c07      	ldr	r4, [pc, #28]	; (801c144 <_fstat_r+0x20>)
 801c128:	2300      	movs	r3, #0
 801c12a:	4605      	mov	r5, r0
 801c12c:	4608      	mov	r0, r1
 801c12e:	4611      	mov	r1, r2
 801c130:	6023      	str	r3, [r4, #0]
 801c132:	f7e5 fb60 	bl	80017f6 <_fstat>
 801c136:	1c43      	adds	r3, r0, #1
 801c138:	d102      	bne.n	801c140 <_fstat_r+0x1c>
 801c13a:	6823      	ldr	r3, [r4, #0]
 801c13c:	b103      	cbz	r3, 801c140 <_fstat_r+0x1c>
 801c13e:	602b      	str	r3, [r5, #0]
 801c140:	bd38      	pop	{r3, r4, r5, pc}
 801c142:	bf00      	nop
 801c144:	20027468 	.word	0x20027468

0801c148 <_isatty_r>:
 801c148:	b538      	push	{r3, r4, r5, lr}
 801c14a:	4c06      	ldr	r4, [pc, #24]	; (801c164 <_isatty_r+0x1c>)
 801c14c:	2300      	movs	r3, #0
 801c14e:	4605      	mov	r5, r0
 801c150:	4608      	mov	r0, r1
 801c152:	6023      	str	r3, [r4, #0]
 801c154:	f7e5 fb5f 	bl	8001816 <_isatty>
 801c158:	1c43      	adds	r3, r0, #1
 801c15a:	d102      	bne.n	801c162 <_isatty_r+0x1a>
 801c15c:	6823      	ldr	r3, [r4, #0]
 801c15e:	b103      	cbz	r3, 801c162 <_isatty_r+0x1a>
 801c160:	602b      	str	r3, [r5, #0]
 801c162:	bd38      	pop	{r3, r4, r5, pc}
 801c164:	20027468 	.word	0x20027468

0801c168 <_lseek_r>:
 801c168:	b538      	push	{r3, r4, r5, lr}
 801c16a:	4c07      	ldr	r4, [pc, #28]	; (801c188 <_lseek_r+0x20>)
 801c16c:	4605      	mov	r5, r0
 801c16e:	4608      	mov	r0, r1
 801c170:	4611      	mov	r1, r2
 801c172:	2200      	movs	r2, #0
 801c174:	6022      	str	r2, [r4, #0]
 801c176:	461a      	mov	r2, r3
 801c178:	f7e5 fb58 	bl	800182c <_lseek>
 801c17c:	1c43      	adds	r3, r0, #1
 801c17e:	d102      	bne.n	801c186 <_lseek_r+0x1e>
 801c180:	6823      	ldr	r3, [r4, #0]
 801c182:	b103      	cbz	r3, 801c186 <_lseek_r+0x1e>
 801c184:	602b      	str	r3, [r5, #0]
 801c186:	bd38      	pop	{r3, r4, r5, pc}
 801c188:	20027468 	.word	0x20027468

0801c18c <_read_r>:
 801c18c:	b538      	push	{r3, r4, r5, lr}
 801c18e:	4c07      	ldr	r4, [pc, #28]	; (801c1ac <_read_r+0x20>)
 801c190:	4605      	mov	r5, r0
 801c192:	4608      	mov	r0, r1
 801c194:	4611      	mov	r1, r2
 801c196:	2200      	movs	r2, #0
 801c198:	6022      	str	r2, [r4, #0]
 801c19a:	461a      	mov	r2, r3
 801c19c:	f7e5 fae6 	bl	800176c <_read>
 801c1a0:	1c43      	adds	r3, r0, #1
 801c1a2:	d102      	bne.n	801c1aa <_read_r+0x1e>
 801c1a4:	6823      	ldr	r3, [r4, #0]
 801c1a6:	b103      	cbz	r3, 801c1aa <_read_r+0x1e>
 801c1a8:	602b      	str	r3, [r5, #0]
 801c1aa:	bd38      	pop	{r3, r4, r5, pc}
 801c1ac:	20027468 	.word	0x20027468

0801c1b0 <_init>:
 801c1b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c1b2:	bf00      	nop
 801c1b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801c1b6:	bc08      	pop	{r3}
 801c1b8:	469e      	mov	lr, r3
 801c1ba:	4770      	bx	lr

0801c1bc <_fini>:
 801c1bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c1be:	bf00      	nop
 801c1c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801c1c2:	bc08      	pop	{r3}
 801c1c4:	469e      	mov	lr, r3
 801c1c6:	4770      	bx	lr
